{"index":"<h1>\n<span class=\"directive\">package</span> neko</h1>\n<table class=\"table table-condensed\"><tbody>\n<tr>\n<td width=\"200\"><a href=\"net/index\">net</a></td>\n<td></td>\n</tr>\n<tr>\n<td width=\"200\"><a href=\"vm/index\">vm</a></td>\n<td></td>\n</tr>\n<tr>\n<td width=\"200\"><a href=\"zip/index\">zip</a></td>\n<td></td>\n</tr>\n<tr>\n<td width=\"200\"><a href=\"boot\">Boot</a></td>\n<td></td>\n</tr>\n<tr>\n<td width=\"200\"><a href=\"lib\">Lib</a></td>\n<td></td>\n</tr>\n<tr>\n<td width=\"200\"><a href=\"nativearray\">NativeArray</a></td>\n<td></td>\n</tr>\n<tr>\n<td width=\"200\"><a href=\"nativestring\">NativeString</a></td>\n<td></td>\n</tr>\n<tr>\n<td width=\"200\"><a href=\"nativexml\">NativeXml</a></td>\n<td></td>\n</tr>\n<tr>\n<td width=\"200\"><a href=\"random\">Random</a></td>\n<td></td>\n</tr>\n<tr>\n<td width=\"200\"><a href=\"web\">Web</a></td>\n<td><p>This class is used for accessing the local Web server and the current client request and informations.</p></td>\n</tr>\n<tr>\n<td width=\"200\"><a href=\"xml\">Xml</a></td>\n<td></td>\n</tr>\n<tr>\n<td width=\"200\"><a href=\"xmltype\">XmlType</a></td>\n<td></td>\n</tr>\n</tbody></table><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/neko/\" class=\"_attribution-link\">http://api.haxe.org/neko/</a>\n  </p>\n</div>\n","nativexml":"<h1>typedef NativeXml </h1>\n<p>package neko</p> <p> alias for <a class=\"type\" title=\"\" href=\"xml\">Xml</a> </p> <p class=\"availability\">Available on macro, neko</p> <div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/neko/NativeXml.html\" class=\"_attribution-link\">http://api.haxe.org/neko/NativeXml.html</a>\n  </p>\n</div>\n","random":"<h1> class Random </h1>\n<p>package neko</p> <p class=\"availability\">Available on macro, neko</p>     <h2 class=\"section\">Constructor</h2>  \n<h3 id=\"new\"><code><a href=\"#new\">new</a> ()</code></h3>\n  <h2 class=\"section\">Methods</h2>  \n<h3 id=\"float\"><code><a href=\"#float\">float</a> ():<a class=\"type\" title=\"The standard Float type, this is a double-precision IEEE 64bit float.\" href=\"http://api.haxe.org/Float.html\">Float</a></code></h3>\n \n<h3 id=\"int\"><code><a href=\"#int\">int</a> (max:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a>):<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a></code></h3>\n \n<h3 id=\"setSeed\"><code><a href=\"#setSeed\">setSeed</a> (s:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a>):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n<div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/neko/Random.html\" class=\"_attribution-link\">http://api.haxe.org/neko/Random.html</a>\n  </p>\n</div>\n","nativestring":"<h1> class NativeString </h1>\n<p>package neko</p> <p class=\"availability\">Available on macro, neko</p>     <h2 class=\"section\">Static methods</h2>  \n<h3 id=\"alloc\"><code><span class=\"label\">static</span> <span class=\"label\">inline</span> <a href=\"#alloc\">alloc</a> (size:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a>):<a class=\"type\" title=\"\" href=\"nativestring\">NativeString</a></code></h3>\n \n<h3 id=\"length\"><code><span class=\"label\">static</span> <span class=\"label\">inline</span> <a href=\"#length\">length</a> (s:<a class=\"type\" title=\"\" href=\"nativestring\">NativeString</a>):<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a></code></h3>\n \n<h3 id=\"ofString\"><code><span class=\"label\">static</span> <span class=\"label\">inline</span> <a href=\"#ofString\">ofString</a> (s:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>):<a class=\"type\" title=\"\" href=\"nativestring\">NativeString</a></code></h3>\n \n<h3 id=\"toString\"><code><span class=\"label\">static</span> <span class=\"label\">inline</span> <a href=\"#toString\">toString</a> (s:<a class=\"type\" title=\"\" href=\"nativestring\">NativeString</a>):<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a></code></h3>\n<div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/neko/NativeString.html\" class=\"_attribution-link\">http://api.haxe.org/neko/NativeString.html</a>\n  </p>\n</div>\n","net/poll":"<h1> class Poll </h1>\n<p>package neko.net</p> <p class=\"availability\">Available on macro, neko</p>     <h2 class=\"section\">Constructor</h2>  \n<h3 id=\"new\"><code><a href=\"#new\">new</a> (n:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a>)</code></h3>\n  <h2 class=\"section\">Fields</h2>  \n<h3 id=\"readIndexes\"><code> <a href=\"#readIndexes\">readIndexes</a>:<a class=\"type\" title=\"ArrayAccess is used to indicate a class that can be accessed using brackets.\" href=\"http://api.haxe.org/ArrayAccess.html\">ArrayAccess</a>&lt;<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a>&gt;</code></h3>\n \n<h3 id=\"writeIndexes\"><code> <a href=\"#writeIndexes\">writeIndexes</a>:<a class=\"type\" title=\"ArrayAccess is used to indicate a class that can be accessed using brackets.\" href=\"http://api.haxe.org/ArrayAccess.html\">ArrayAccess</a>&lt;<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a>&gt;</code></h3>\n  <h2 class=\"section\">Methods</h2>  \n<h3 id=\"events\"><code><a href=\"#events\">events</a> (?t:<a class=\"type\" title=\"The standard Float type, this is a double-precision IEEE 64bit float.\" href=\"http://api.haxe.org/Float.html\">Float</a>):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n \n<h3 id=\"poll\"><code><a href=\"#poll\">poll</a> (a:<a class=\"type\" title=\"An Array is a storage for values.\" href=\"http://api.haxe.org/Array.html\">Array</a>&lt;<a class=\"type\" title=\"A TCP socket class : allow you to both connect to a given server and exchange messages or start your own server and wait for connections.\" href=\"http://api.haxe.org/sys/net/Socket.html\">Socket</a>&gt;, ?t:<a class=\"type\" title=\"The standard Float type, this is a double-precision IEEE 64bit float.\" href=\"http://api.haxe.org/Float.html\">Float</a>):<a class=\"type\" title=\"An Array is a storage for values.\" href=\"http://api.haxe.org/Array.html\">Array</a>&lt;<a class=\"type\" title=\"A TCP socket class : allow you to both connect to a given server and exchange messages or start your own server and wait for connections.\" href=\"http://api.haxe.org/sys/net/Socket.html\">Socket</a>&gt;</code></h3>\n \n<h3 id=\"prepare\"><code><a href=\"#prepare\">prepare</a> (read:<a class=\"type\" title=\"An Array is a storage for values.\" href=\"http://api.haxe.org/Array.html\">Array</a>&lt;<a class=\"type\" title=\"A TCP socket class : allow you to both connect to a given server and exchange messages or start your own server and wait for connections.\" href=\"http://api.haxe.org/sys/net/Socket.html\">Socket</a>&gt;, write:<a class=\"type\" title=\"An Array is a storage for values.\" href=\"http://api.haxe.org/Array.html\">Array</a>&lt;<a class=\"type\" title=\"A TCP socket class : allow you to both connect to a given server and exchange messages or start your own server and wait for connections.\" href=\"http://api.haxe.org/sys/net/Socket.html\">Socket</a>&gt;):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n<div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/neko/net/Poll.html\" class=\"_attribution-link\">http://api.haxe.org/neko/net/Poll.html</a>\n  </p>\n</div>\n","web":"<h1> class Web </h1>\n<p>package neko</p> <p class=\"availability\">Available on macro, neko</p>   <div class=\"indent\"> <p>This class is used for accessing the local Web server and the current client request and informations.</p> </div>  <h2 class=\"section\">Static fields</h2>  \n<h3 id=\"isModNeko\"><code><span class=\"label\">static</span> <span class=\"label\">read only</span> <a href=\"#isModNeko\">isModNeko</a>:<a class=\"type\" title=\"The standard Boolean type, which can either be true or false.\" href=\"http://api.haxe.org/Bool.html\">Bool</a></code></h3>\n \n<h3 id=\"isTora\"><code><span class=\"label\">static</span> <span class=\"label\">read only</span> <a href=\"#isTora\">isTora</a>:<a class=\"type\" title=\"The standard Boolean type, which can either be true or false.\" href=\"http://api.haxe.org/Bool.html\">Bool</a></code></h3>\n  <h2 class=\"section\">Static methods</h2>  \n<h3 id=\"cacheModule\"><code><span class=\"label\">static</span> <a href=\"#cacheModule\">cacheModule</a> (f:<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a> â€‘&gt; <a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a>):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n<p>Set the main entry point function used to handle requests. Setting it back to null will disable code caching.</p> \n<h3 id=\"flush\"><code><span class=\"label\">static</span> <a href=\"#flush\">flush</a> ():<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n<p>Flush the data sent to the client. By default on Apache, outgoing data is buffered so this can be useful for displaying some long operation progress.</p> \n<h3 id=\"getAuthorization\"><code><span class=\"label\">static</span> <a href=\"#getAuthorization\">getAuthorization</a> ():{user:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>, pass:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>}</code></h3>\n<p>Returns an object with the authorization sent by the client (Basic scheme only).</p> \n<h3 id=\"getClientHeader\"><code><span class=\"label\">static</span> <a href=\"#getClientHeader\">getClientHeader</a> (k:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>):<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a></code></h3>\n<p>Retrieve a client header value sent with the request.</p> \n<h3 id=\"getClientHeaders\"><code><span class=\"label\">static</span> <a href=\"#getClientHeaders\">getClientHeaders</a> ():<a class=\"type\" title=\"A linked-list of elements.\" href=\"http://api.haxe.org/List.html\">List</a>&lt;{value:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>, header:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>}&gt;</code></h3>\n<p>Retrieve all the client headers.</p> \n<h3 id=\"getClientIP\"><code><span class=\"label\">static</span> <a href=\"#getClientIP\">getClientIP</a> ():<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a></code></h3>\n<p>Surprisingly returns the client IP address.</p> \n<h3 id=\"getCookies\"><code><span class=\"label\">static</span> <a href=\"#getCookies\">getCookies</a> ():<a class=\"type\" title=\"Map allows key to value mapping for arbitrary value types, and many key types.\" href=\"http://api.haxe.org/Map.html\">Map</a>&lt;<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>, <a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>&gt;</code></h3>\n<p>Returns an hashtable of all Cookies sent by the client. Modifying the hashtable will not modify the cookie, use setCookie instead.</p> \n<h3 id=\"getCwd\"><code><span class=\"label\">static</span> <a href=\"#getCwd\">getCwd</a> ():<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a></code></h3>\n<p>Get the current script directory in the local filesystem.</p> \n<h3 id=\"getHostName\"><code><span class=\"label\">static</span> <a href=\"#getHostName\">getHostName</a> ():<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a></code></h3>\n<p>Returns the local server host name</p> \n<h3 id=\"getMethod\"><code><span class=\"label\">static</span> <a href=\"#getMethod\">getMethod</a> ():<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a></code></h3>\n<p>Get the HTTP method used by the client. This api requires Neko 1.7.1+</p> \n<h3 id=\"getMultipart\"><code><span class=\"label\">static</span> <a href=\"#getMultipart\">getMultipart</a> (maxSize:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a>):<a class=\"type\" title=\"Map allows key to value mapping for arbitrary value types, and many key types.\" href=\"http://api.haxe.org/Map.html\">Map</a>&lt;<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>, <a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>&gt;</code></h3>\n<p>Get the multipart parameters as an hashtable. The data cannot exceed the maximum size specified.</p> \n<h3 id=\"getParamValues\"><code><span class=\"label\">static</span> <a href=\"#getParamValues\">getParamValues</a> (param:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>):<a class=\"type\" title=\"An Array is a storage for values.\" href=\"http://api.haxe.org/Array.html\">Array</a>&lt;<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>&gt;</code></h3>\n<p>Returns an Array of Strings built using GET / POST values. If you have in your URL the parameters [a[]=foo;a[]=hello;a[5]=bar;a[3]=baz] then [neko.Web.getParamValues(\"a\")] will return [[\"foo\",\"hello\",null,\"baz\",null,\"bar\"]]</p> \n<h3 id=\"getParams\"><code><span class=\"label\">static</span> <a href=\"#getParams\">getParams</a> ():<a class=\"type\" title=\"StringMap allows mapping of String keys to arbitrary values.\" href=\"http://api.haxe.org/haxe/ds/StringMap.html\">StringMap</a>&lt;<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>&gt;</code></h3>\n<p>Returns the GET and POST parameters.</p> \n<h3 id=\"getParamsString\"><code><span class=\"label\">static</span> <a href=\"#getParamsString\">getParamsString</a> ():<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a></code></h3>\n<p>Returns all the GET parameters String</p> \n<h3 id=\"getPostData\"><code><span class=\"label\">static</span> <a href=\"#getPostData\">getPostData</a> ():<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a></code></h3>\n<p>Returns all the POST data. POST Data is always parsed as being application/x-www-form-urlencoded and is stored into the getParams hashtable. POST Data is maximimized to 256K unless the content type is multipart/form-data. In that case, you will have to use [getMultipart] or [parseMultipart] methods.</p> \n<h3 id=\"getURI\"><code><span class=\"label\">static</span> <a href=\"#getURI\">getURI</a> ():<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a></code></h3>\n<p>Returns the original request URL (before any server internal redirections)</p> \n<h3 id=\"logMessage\"><code><span class=\"label\">static</span> <a href=\"#logMessage\">logMessage</a> (msg:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n<p>Write a message into the web server log file. This api requires Neko 1.7.1+</p> \n<h3 id=\"parseMultipart\"><code><span class=\"label\">static</span> <a href=\"#parseMultipart\">parseMultipart</a> (onPart:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a> â€‘&gt; <a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a> â€‘&gt; <a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a>, onData:<a class=\"type\" title=\"\" href=\"http://api.haxe.org/haxe/io/Bytes.html\">Bytes</a> â€‘&gt; <a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a> â€‘&gt; <a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a> â€‘&gt; <a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a>):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n<p>Parse the multipart data. Call [onPart] when a new part is found with the part name and the filename if present and [onData] when some part data is readed. You can this way directly save the data on hard drive in the case of a file upload.</p> \n<h3 id=\"redirect\"><code><span class=\"label\">static</span> <a href=\"#redirect\">redirect</a> (url:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n<p>Tell the client to redirect to the given url (\"Location\" header)</p> \n<h3 id=\"setCookie\"><code><span class=\"label\">static</span> <a href=\"#setCookie\">setCookie</a> (key:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>, value:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>, ?expire:<a class=\"type\" title=\"The Date class provides a basic structure for date and time related information.\" href=\"http://api.haxe.org/Date.html\">Date</a>, ?domain:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>, ?path:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>, ?secure:<a class=\"type\" title=\"The standard Boolean type, which can either be true or false.\" href=\"http://api.haxe.org/Bool.html\">Bool</a>, ?httpOnly:<a class=\"type\" title=\"The standard Boolean type, which can either be true or false.\" href=\"http://api.haxe.org/Bool.html\">Bool</a>):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n<p>Set a Cookie value in the HTTP headers. Same remark as setHeader.</p> \n<h3 id=\"setHeader\"><code><span class=\"label\">static</span> <a href=\"#setHeader\">setHeader</a> (h:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>, v:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n<p>Set an output header value. If some data have been printed, the headers have already been sent so this will raise an exception.</p> \n<h3 id=\"setReturnCode\"><code><span class=\"label\">static</span> <a href=\"#setReturnCode\">setReturnCode</a> (r:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a>):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n<p>Set the HTTP return code. Same remark as setHeader.</p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/neko/Web.html\" class=\"_attribution-link\">http://api.haxe.org/neko/Web.html</a>\n  </p>\n</div>\n","xml":"<h1> class Xml </h1>\n<p>package neko</p> \n<p>defined in neko.NativeXml</p>\n<p class=\"availability\">Available on macro, neko</p>     <h2 class=\"section\">Fields</h2>  \n<h3 id=\"nodeName\"><code> <a href=\"#nodeName\">nodeName</a>:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a></code></h3>\n \n<h3 id=\"nodeType\"><code> <span class=\"label\">read only</span> <a href=\"#nodeType\">nodeType</a>:<a class=\"type\" title=\"\" href=\"xmltype\">XmlType</a></code></h3>\n \n<h3 id=\"nodeValue\"><code> <a href=\"#nodeValue\">nodeValue</a>:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a></code></h3>\n \n<h3 id=\"parent\"><code> <span class=\"label\">read only</span> <a href=\"#parent\">parent</a>:<a class=\"type\" title=\"\" href=\"xml\">Xml</a></code></h3>\n  <h2 class=\"section\">Methods</h2>  \n<h3 id=\"addChild\"><code><a href=\"#addChild\">addChild</a> (x:<a class=\"type\" title=\"\" href=\"xml\">Xml</a>):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n \n<h3 id=\"attributes\"><code><a href=\"#attributes\">attributes</a> ():<a class=\"type\" title=\"An Iterator is a structure that permits iteration over elements of type T.\" href=\"http://api.haxe.org/Iterator.html\">Iterator</a>&lt;<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>&gt;</code></h3>\n \n<h3 id=\"elements\"><code><a href=\"#elements\">elements</a> ():<a class=\"type\" title=\"An Iterator is a structure that permits iteration over elements of type T.\" href=\"http://api.haxe.org/Iterator.html\">Iterator</a>&lt;<a class=\"type\" title=\"\" href=\"xml\">Xml</a>&gt;</code></h3>\n \n<h3 id=\"elementsNamed\"><code><a href=\"#elementsNamed\">elementsNamed</a> (name:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>):<a class=\"type\" title=\"An Iterator is a structure that permits iteration over elements of type T.\" href=\"http://api.haxe.org/Iterator.html\">Iterator</a>&lt;<a class=\"type\" title=\"\" href=\"xml\">Xml</a>&gt;</code></h3>\n \n<h3 id=\"exists\"><code><a href=\"#exists\">exists</a> (att:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>):<a class=\"type\" title=\"The standard Boolean type, which can either be true or false.\" href=\"http://api.haxe.org/Bool.html\">Bool</a></code></h3>\n \n<h3 id=\"firstChild\"><code><a href=\"#firstChild\">firstChild</a> ():<a class=\"type\" title=\"\" href=\"xml\">Xml</a></code></h3>\n \n<h3 id=\"firstElement\"><code><a href=\"#firstElement\">firstElement</a> ():<a class=\"type\" title=\"\" href=\"xml\">Xml</a></code></h3>\n \n<h3 id=\"get\"><code><a href=\"#get\">get</a> (att:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>):<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a></code></h3>\n \n<h3 id=\"insertChild\"><code><a href=\"#insertChild\">insertChild</a> (x:<a class=\"type\" title=\"\" href=\"xml\">Xml</a>, pos:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a>):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n \n<h3 id=\"iterator\"><code><a href=\"#iterator\">iterator</a> ():<a class=\"type\" title=\"An Iterator is a structure that permits iteration over elements of type T.\" href=\"http://api.haxe.org/Iterator.html\">Iterator</a>&lt;<a class=\"type\" title=\"\" href=\"xml\">Xml</a>&gt;</code></h3>\n \n<h3 id=\"remove\"><code><a href=\"#remove\">remove</a> (att:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n \n<h3 id=\"removeChild\"><code><a href=\"#removeChild\">removeChild</a> (x:<a class=\"type\" title=\"\" href=\"xml\">Xml</a>):<a class=\"type\" title=\"The standard Boolean type, which can either be true or false.\" href=\"http://api.haxe.org/Bool.html\">Bool</a></code></h3>\n \n<h3 id=\"set\"><code><a href=\"#set\">set</a> (att:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>, value:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n \n<h3 id=\"toString\"><code><a href=\"#toString\">toString</a> ():<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a></code></h3>\n  <h2 class=\"section\">Static fields</h2>  \n<h3 id=\"CData\"><code><span class=\"label\">static</span> <span class=\"label\">read only</span> <a href=\"#CData\">CData</a>:<a class=\"type\" title=\"\" href=\"xmltype\">XmlType</a></code></h3>\n \n<h3 id=\"Comment\"><code><span class=\"label\">static</span> <span class=\"label\">read only</span> <a href=\"#Comment\">Comment</a>:<a class=\"type\" title=\"\" href=\"xmltype\">XmlType</a></code></h3>\n \n<h3 id=\"DocType\"><code><span class=\"label\">static</span> <span class=\"label\">read only</span> <a href=\"#DocType\">DocType</a>:<a class=\"type\" title=\"\" href=\"xmltype\">XmlType</a></code></h3>\n \n<h3 id=\"Document\"><code><span class=\"label\">static</span> <span class=\"label\">read only</span> <a href=\"#Document\">Document</a>:<a class=\"type\" title=\"\" href=\"xmltype\">XmlType</a></code></h3>\n \n<h3 id=\"Element\"><code><span class=\"label\">static</span> <span class=\"label\">read only</span> <a href=\"#Element\">Element</a>:<a class=\"type\" title=\"\" href=\"xmltype\">XmlType</a></code></h3>\n \n<h3 id=\"PCData\"><code><span class=\"label\">static</span> <span class=\"label\">read only</span> <a href=\"#PCData\">PCData</a>:<a class=\"type\" title=\"\" href=\"xmltype\">XmlType</a></code></h3>\n \n<h3 id=\"ProcessingInstruction\"><code><span class=\"label\">static</span> <span class=\"label\">read only</span> <a href=\"#ProcessingInstruction\">ProcessingInstruction</a>:<a class=\"type\" title=\"\" href=\"xmltype\">XmlType</a></code></h3>\n  <h2 class=\"section\">Static methods</h2>  \n<h3 id=\"createCData\"><code><span class=\"label\">static</span> <a href=\"#createCData\">createCData</a> (data:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>):<a class=\"type\" title=\"\" href=\"xml\">Xml</a></code></h3>\n \n<h3 id=\"createComment\"><code><span class=\"label\">static</span> <a href=\"#createComment\">createComment</a> (data:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>):<a class=\"type\" title=\"\" href=\"xml\">Xml</a></code></h3>\n \n<h3 id=\"createDocType\"><code><span class=\"label\">static</span> <a href=\"#createDocType\">createDocType</a> (data:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>):<a class=\"type\" title=\"\" href=\"xml\">Xml</a></code></h3>\n \n<h3 id=\"createDocument\"><code><span class=\"label\">static</span> <a href=\"#createDocument\">createDocument</a> ():<a class=\"type\" title=\"\" href=\"xml\">Xml</a></code></h3>\n \n<h3 id=\"createElement\"><code><span class=\"label\">static</span> <a href=\"#createElement\">createElement</a> (name:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>):<a class=\"type\" title=\"\" href=\"xml\">Xml</a></code></h3>\n \n<h3 id=\"createPCData\"><code><span class=\"label\">static</span> <a href=\"#createPCData\">createPCData</a> (data:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>):<a class=\"type\" title=\"\" href=\"xml\">Xml</a></code></h3>\n \n<h3 id=\"createProcessingInstruction\"><code><span class=\"label\">static</span> <a href=\"#createProcessingInstruction\">createProcessingInstruction</a> (data:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>):<a class=\"type\" title=\"\" href=\"xml\">Xml</a></code></h3>\n \n<h3 id=\"parse\"><code><span class=\"label\">static</span> <a href=\"#parse\">parse</a> (str:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>):<a class=\"type\" title=\"\" href=\"xml\">Xml</a></code></h3>\n<div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/neko/Xml.html\" class=\"_attribution-link\">http://api.haxe.org/neko/Xml.html</a>\n  </p>\n</div>\n","vm/deque":"<h1> class Deque&lt;<span class=\"type\">T</span>&gt; </h1>\n<p>package neko.vm</p> <p class=\"availability\">Available on macro, neko</p>     <h2 class=\"section\">Constructor</h2>  \n<h3 id=\"new\"><code><a href=\"#new\">new</a> ()</code></h3>\n  <h2 class=\"section\">Methods</h2>  \n<h3 id=\"add\"><code><a href=\"#add\">add</a> (i:<span class=\"type\">T</span>):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n \n<h3 id=\"pop\"><code><a href=\"#pop\">pop</a> (block:<a class=\"type\" title=\"The standard Boolean type, which can either be true or false.\" href=\"http://api.haxe.org/Bool.html\">Bool</a>):<a class=\"type\" title=\"&lt;code&gt;&lt;a href=\" . href=\"http://api.haxe.org/Null.html\">Null</a>&lt;<span class=\"type\">T</span>&gt;</code></h3>\n \n<h3 id=\"push\"><code><a href=\"#push\">push</a> (i:<span class=\"type\">T</span>):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n<div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/neko/vm/Deque.html\" class=\"_attribution-link\">http://api.haxe.org/neko/vm/Deque.html</a>\n  </p>\n</div>\n","vm/gc":"<h1> class Gc </h1>\n<p>package neko.vm</p> <p class=\"availability\">Available on macro, neko</p>     <h2 class=\"section\">Static methods</h2>  \n<h3 id=\"run\"><code><span class=\"label\">static</span> <a href=\"#run\">run</a> (major:<a class=\"type\" title=\"The standard Boolean type, which can either be true or false.\" href=\"http://api.haxe.org/Bool.html\">Bool</a>):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n \n<h3 id=\"stats\"><code><span class=\"label\">static</span> <a href=\"#stats\">stats</a> ():{heap:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a>, free:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a>}</code></h3>\n<div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/neko/vm/Gc.html\" class=\"_attribution-link\">http://api.haxe.org/neko/vm/Gc.html</a>\n  </p>\n</div>\n","vm/loaderhandle":"<h1>enum LoaderHandle </h1>\n<p>package neko.vm</p>\n\n<p>defined in neko.vm.Loader</p>\n<p class=\"availability\">Available on macro, neko</p> <div class=\"indent\"> <p>The Neko object that implements the loader.</p> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/neko/vm/LoaderHandle.html\" class=\"_attribution-link\">http://api.haxe.org/neko/vm/LoaderHandle.html</a>\n  </p>\n</div>\n","vm/mutex":"<h1> class Mutex </h1>\n<p>package neko.vm</p> <p class=\"availability\">Available on macro, neko</p>     <h2 class=\"section\">Constructor</h2>  \n<h3 id=\"new\"><code><a href=\"#new\">new</a> ()</code></h3>\n  <h2 class=\"section\">Methods</h2>  \n<h3 id=\"acquire\"><code><a href=\"#acquire\">acquire</a> ():<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n \n<h3 id=\"release\"><code><a href=\"#release\">release</a> ():<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n \n<h3 id=\"tryAcquire\"><code><a href=\"#tryAcquire\">tryAcquire</a> ():<a class=\"type\" title=\"The standard Boolean type, which can either be true or false.\" href=\"http://api.haxe.org/Bool.html\">Bool</a></code></h3>\n<div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/neko/vm/Mutex.html\" class=\"_attribution-link\">http://api.haxe.org/neko/vm/Mutex.html</a>\n  </p>\n</div>\n","nativearray":"<h1> class NativeArray&lt;<span class=\"type\">T</span>&gt; </h1>\n<p>package neko</p> <p class=\"availability\">Available on macro, neko</p>     <h2 class=\"section\">Static methods</h2>  \n<h3 id=\"alloc\"><code><span class=\"label\">static</span> <span class=\"label\">inline</span> <a href=\"#alloc\">alloc</a>&lt;<span class=\"type\">T</span>&gt; (length:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a>):<a class=\"type\" title=\"\" href=\"nativearray\">NativeArray</a>&lt;<span class=\"type\">T</span>&gt;</code></h3>\n \n<h3 id=\"blit\"><code><span class=\"label\">static</span> <span class=\"label\">inline</span> <a href=\"#blit\">blit</a>&lt;<span class=\"type\">T</span>&gt; (dst:<a class=\"type\" title=\"\" href=\"nativearray\">NativeArray</a>&lt;<span class=\"type\">T</span>&gt;, dstPos:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a>, src:<a class=\"type\" title=\"\" href=\"nativearray\">NativeArray</a>&lt;<span class=\"type\">T</span>&gt;, srcPos:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a>, length:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a>):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n \n<h3 id=\"length\"><code><span class=\"label\">static</span> <span class=\"label\">inline</span> <a href=\"#length\">length</a> (a:<a class=\"type\" title=\"\" href=\"nativearray\">NativeArray</a>&lt;<a class=\"type\" title=\"Dynamic is a special type which is compatible with all other types.\" href=\"http://api.haxe.org/Dynamic.html\">Dynamic</a>&gt;):<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a></code></h3>\n \n<h3 id=\"ofArrayCopy\"><code><span class=\"label\">static</span> <span class=\"label\">inline</span> <a href=\"#ofArrayCopy\">ofArrayCopy</a>&lt;<span class=\"type\">T</span>&gt; (a:<a class=\"type\" title=\"An Array is a storage for values.\" href=\"http://api.haxe.org/Array.html\">Array</a>&lt;<span class=\"type\">T</span>&gt;):<a class=\"type\" title=\"\" href=\"nativearray\">NativeArray</a>&lt;<span class=\"type\">T</span>&gt;</code></h3>\n \n<h3 id=\"ofArrayRef\"><code><span class=\"label\">static</span> <span class=\"label\">inline</span> <a href=\"#ofArrayRef\">ofArrayRef</a>&lt;<span class=\"type\">T</span>&gt; (a:<a class=\"type\" title=\"An Array is a storage for values.\" href=\"http://api.haxe.org/Array.html\">Array</a>&lt;<span class=\"type\">T</span>&gt;):<a class=\"type\" title=\"\" href=\"nativearray\">NativeArray</a>&lt;<span class=\"type\">T</span>&gt;</code></h3>\n \n<h3 id=\"sub\"><code><span class=\"label\">static</span> <span class=\"label\">inline</span> <a href=\"#sub\">sub</a>&lt;<span class=\"type\">T</span>&gt; (a:<a class=\"type\" title=\"\" href=\"nativearray\">NativeArray</a>&lt;<span class=\"type\">T</span>&gt;, pos:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a>, len:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a>):<a class=\"type\" title=\"\" href=\"nativearray\">NativeArray</a>&lt;<span class=\"type\">T</span>&gt;</code></h3>\n \n<h3 id=\"toArray\"><code><span class=\"label\">static</span> <span class=\"label\">inline</span> <a href=\"#toArray\">toArray</a>&lt;<span class=\"type\">T</span>&gt; (a:<a class=\"type\" title=\"\" href=\"nativearray\">NativeArray</a>&lt;<span class=\"type\">T</span>&gt;):<a class=\"type\" title=\"An Array is a storage for values.\" href=\"http://api.haxe.org/Array.html\">Array</a>&lt;<span class=\"type\">T</span>&gt;</code></h3>\n<div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/neko/NativeArray.html\" class=\"_attribution-link\">http://api.haxe.org/neko/NativeArray.html</a>\n  </p>\n</div>\n","net/proxydetect":"<h1> class ProxyDetect </h1>\n<p>package neko.net</p> <p class=\"availability\">Available on macro, neko</p>     <h2 class=\"section\">Static methods</h2>  \n<h3 id=\"detect\"><code><span class=\"label\">static</span> <a href=\"#detect\">detect</a> ():<a class=\"type\" title=\"\" href=\"proxysettings\">ProxySettings</a></code></h3>\n<div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/neko/net/ProxyDetect.html\" class=\"_attribution-link\">http://api.haxe.org/neko/net/ProxyDetect.html</a>\n  </p>\n</div>\n","net/threadremotingserver":"<h1> class ThreadRemotingServer </h1>\n<p>package neko.net</p> <p> extends <a class=\"type\" title=\"\" href=\"threadserver\">ThreadServer</a>&lt;<a class=\"type\" title=\"\" href=\"http://api.haxe.org/haxe/remoting/SocketConnection.html\">SocketConnection</a>, <a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>&gt; </p> <p class=\"availability\">Available on macro, neko</p>     <h2 class=\"section\">Constructor</h2>  \n<h3 id=\"new\"><code><a href=\"#new\">new</a> (?domains:<a class=\"type\" title=\"An Array is a storage for values.\" href=\"http://api.haxe.org/Array.html\">Array</a>&lt;<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>&gt;)</code></h3>\n  <h2 class=\"section\">Methods</h2>  \n<h3 id=\"initClientApi\"><code><span class=\"label\">dynamic</span> <a href=\"#initClientApi\">initClientApi</a> (cnx:<a class=\"type\" title=\"\" href=\"http://api.haxe.org/haxe/remoting/SocketConnection.html\">SocketConnection</a>, ctx:<a class=\"type\" title=\"\" href=\"http://api.haxe.org/haxe/remoting/Context.html\">Context</a>):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n \n<h3 id=\"makePolicyFile\"><code><span class=\"label\">dynamic</span> <a href=\"#makePolicyFile\">makePolicyFile</a> ():<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a></code></h3>\n \n<h3 id=\"onXml\"><code><span class=\"label\">dynamic</span> <a href=\"#onXml\">onXml</a> (cnx:<a class=\"type\" title=\"\" href=\"http://api.haxe.org/haxe/remoting/SocketConnection.html\">SocketConnection</a>, data:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n<div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/neko/net/ThreadRemotingServer.html\" class=\"_attribution-link\">http://api.haxe.org/neko/net/ThreadRemotingServer.html</a>\n  </p>\n</div>\n","boot":"<h1> class Boot </h1>\n<p>package neko</p> <p class=\"availability\">Available on macro, neko</p>   <div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/neko/Boot.html\" class=\"_attribution-link\">http://api.haxe.org/neko/Boot.html</a>\n  </p>\n</div>\n","xmltype":"<h1>enum XmlType </h1>\n<p>package neko</p>\n\n<p>defined in neko.NativeXml</p>\n<p class=\"availability\">Available on macro, neko</p> <div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/neko/XmlType.html\" class=\"_attribution-link\">http://api.haxe.org/neko/XmlType.html</a>\n  </p>\n</div>\n","net/proxysettings":"<h1>typedef ProxySettings </h1>\n<p>package neko.net</p> \n<p>defined in neko.net.ProxyDetect</p>\n<p class=\"availability\">Available on macro, neko</p>  <h2 class=\"section\">Properties</h2>  \n<h3 id=\"port\"><code> <a href=\"#port\">port</a>:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a></code></h3>\n \n<h3 id=\"host\"><code> <a href=\"#host\">host</a>:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a></code></h3>\n \n<h3 id=\"auth\"><code> <a href=\"#auth\">auth</a>:{user:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>, pass:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>}</code></h3>\n<div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/neko/net/ProxySettings.html\" class=\"_attribution-link\">http://api.haxe.org/neko/net/ProxySettings.html</a>\n  </p>\n</div>\n","vm/thread":"<h1> class Thread </h1>\n<p>package neko.vm</p> <p class=\"availability\">Available on macro, neko</p>     <h2 class=\"section\">Methods</h2>  \n<h3 id=\"sendMessage\"><code><a href=\"#sendMessage\">sendMessage</a> (msg:<a class=\"type\" title=\"Dynamic is a special type which is compatible with all other types.\" href=\"http://api.haxe.org/Dynamic.html\">Dynamic</a>):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n<p>Send a message to the thread queue. This message can be readed by using [readMessage].</p>  <h2 class=\"section\">Static methods</h2>  \n<h3 id=\"create\"><code><span class=\"label\">static</span> <a href=\"#create\">create</a> (callb:<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a> â€‘&gt; <a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a>):<a class=\"type\" title=\"\" href=\"thread\">Thread</a></code></h3>\n<p>Creates a new thread that will execute the [callb] function, then exit.</p> \n<h3 id=\"current\"><code><span class=\"label\">static</span> <a href=\"#current\">current</a> ():<a class=\"type\" title=\"\" href=\"thread\">Thread</a></code></h3>\n<p>Returns the current thread.</p> \n<h3 id=\"readMessage\"><code><span class=\"label\">static</span> <a href=\"#readMessage\">readMessage</a> (block:<a class=\"type\" title=\"The standard Boolean type, which can either be true or false.\" href=\"http://api.haxe.org/Bool.html\">Bool</a>):<a class=\"type\" title=\"Dynamic is a special type which is compatible with all other types.\" href=\"http://api.haxe.org/Dynamic.html\">Dynamic</a></code></h3>\n<p>Reads a message from the thread queue. If [block] is true, the function blocks until a message is available. If [block] is false, the function returns [null] if no message is available.</p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/neko/vm/Thread.html\" class=\"_attribution-link\">http://api.haxe.org/neko/vm/Thread.html</a>\n  </p>\n</div>\n","vm/loader":"<h1> class Loader </h1>\n<p>package neko.vm</p> <p class=\"availability\">Available on macro, neko</p>   <div class=\"indent\"> <p>Loaders can be used to dynamically load Neko primitives stored in NDLL libraries.</p> <p>Loaders can be used to dynamically load other Neko modules (.n bytecode files). Modules are referenced by names. To lookup the corresponding bytecode file, the default loader first look in its cache, then eventually adds the .n extension to the name and lookup the bytecode in its path.</p> <p>Loaders can be used for sandbox security. When a Module is loaded with a given Loader, this loader can manager the module security by filtering which primitives can be loaded by this module or by rewrapping them at loading-time with custom securized versions. Loaders are inherited in loaded submodules.</p> </div>  <h2 class=\"section\">Constructor</h2>  \n<h3 id=\"new\"><code><a href=\"#new\">new</a> (l:<a class=\"type\" title=\"The Neko object that implements the loader.\" href=\"loaderhandle\">LoaderHandle</a>)</code></h3>\n  <h2 class=\"section\">Fields</h2>  \n<h3 id=\"l\"><code> <a href=\"#l\">l</a>:<a class=\"type\" title=\"The Neko object that implements the loader.\" href=\"loaderhandle\">LoaderHandle</a></code></h3>\n<p>The abstract handle.</p>  <h2 class=\"section\">Methods</h2>  \n<h3 id=\"addPath\"><code><a href=\"#addPath\">addPath</a> (s:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n<p>Adds a directory to the search path. See [getPath]</p> \n<h3 id=\"backupCache\"><code><a href=\"#backupCache\">backupCache</a> (c:<a class=\"type\" title=\"Dynamic is a special type which is compatible with all other types.\" href=\"http://api.haxe.org/Dynamic.html\">Dynamic</a>):<a class=\"type\" title=\"Dynamic is a special type which is compatible with all other types.\" href=\"http://api.haxe.org/Dynamic.html\">Dynamic</a></code></h3>\n<p>Change the cache value and returns the old value. This can be used to backup the loader cache and restore it later.</p> \n<h3 id=\"getCache\"><code><a href=\"#getCache\">getCache</a> ():<a class=\"type\" title=\"Map allows key to value mapping for arbitrary value types, and many key types.\" href=\"http://api.haxe.org/Map.html\">Map</a>&lt;<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>, <a class=\"type\" title=\"A Neko Module represent a execution unit for the Neko Virtual Machine.\" href=\"module\">Module</a>&gt;</code></h3>\n<p>The default loader contains a cache of already loaded modules. It's ensuring that the same module does not get loaded twice when circular references are occuring. The same module can eventually be loaded twice but with different names, for example with two relative paths reprensenting the same file, since the cache is done on a by-name basic.</p> \n<h3 id=\"getPath\"><code><a href=\"#getPath\">getPath</a> ():<a class=\"type\" title=\"An Array is a storage for values.\" href=\"http://api.haxe.org/Array.html\">Array</a>&lt;<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>&gt;</code></h3>\n<p>The default loader contains a search path in its [path] field. It's a linked list of Neko strings that is a parsed version of the [NEKOPATH]. This path is used to lookup for modules and libraries.</p> \n<h3 id=\"loadModule\"><code><a href=\"#loadModule\">loadModule</a> (modName:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>, ?loader:<a class=\"type\" title=\"Loaders can be used to dynamically load Neko primitives stored in NDLL libraries.\" href=\"loader\">Loader</a>):<a class=\"type\" title=\"A Neko Module represent a execution unit for the Neko Virtual Machine.\" href=\"module\">Module</a></code></h3>\n<p>Loads a Module with the given name. If [loader] is defined, this will be this Module loader, else this loader will be inherited. When loaded this way, the module is directly executed.</p> \n<h3 id=\"loadPrimitive\"><code><a href=\"#loadPrimitive\">loadPrimitive</a> (prim:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>, nargs:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a>):<a class=\"type\" title=\"Dynamic is a special type which is compatible with all other types.\" href=\"http://api.haxe.org/Dynamic.html\">Dynamic</a></code></h3>\n<p>Loads a neko primitive. By default, the name is of the form [library@method]. The primitive might not be used directly in Haxe since some of the Neko values needs an object wrapper in Haxe.</p> \n<h3 id=\"setCache\"><code><a href=\"#setCache\">setCache</a> (name:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>, m:<a class=\"type\" title=\"A Neko Module represent a execution unit for the Neko Virtual Machine.\" href=\"module\">Module</a>):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n<p>Set a module in the loader cache.</p>  <h2 class=\"section\">Static methods</h2>  \n<h3 id=\"local\"><code><span class=\"label\">static</span> <a href=\"#local\">local</a> ():<a class=\"type\" title=\"Loaders can be used to dynamically load Neko primitives stored in NDLL libraries.\" href=\"loader\">Loader</a></code></h3>\n<p>Returns the local Loader. This is the loader that was used to load the module in which the code is defined.</p> \n<h3 id=\"make\"><code><span class=\"label\">static</span> <a href=\"#make\">make</a> (loadPrim:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a> â€‘&gt; <a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a> â€‘&gt; <a class=\"type\" title=\"Dynamic is a special type which is compatible with all other types.\" href=\"http://api.haxe.org/Dynamic.html\">Dynamic</a>, loadModule:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a> â€‘&gt; <a class=\"type\" title=\"Loaders can be used to dynamically load Neko primitives stored in NDLL libraries.\" href=\"loader\">Loader</a> â€‘&gt; <a class=\"type\" title=\"A Neko Module represent a execution unit for the Neko Virtual Machine.\" href=\"module\">Module</a>):<a class=\"type\" title=\"Loaders can be used to dynamically load Neko primitives stored in NDLL libraries.\" href=\"loader\">Loader</a></code></h3>\n<p>Creates a loader using two methods. This loader will not have an accessible cache or path, although you can implement such mecanism in the methods body.</p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/neko/vm/Loader.html\" class=\"_attribution-link\">http://api.haxe.org/neko/vm/Loader.html</a>\n  </p>\n</div>\n","lib":"<h1> class Lib </h1>\n<p>package neko</p> <p class=\"availability\">Available on macro, neko</p>     <h2 class=\"section\">Static methods</h2>  \n<h3 id=\"bytesReference\"><code><span class=\"label\">static</span> <span class=\"label\">inline</span> <a href=\"#bytesReference\">bytesReference</a> (s:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>):<a class=\"type\" title=\"\" href=\"http://api.haxe.org/haxe/io/Bytes.html\">Bytes</a></code></h3>\n<p>Returns bytes referencing the content of a string.</p> \n<h3 id=\"getClasses\"><code><span class=\"label\">static</span> <a href=\"#getClasses\">getClasses</a> ():<a class=\"type\" title=\"Dynamic is a special type which is compatible with all other types.\" href=\"http://api.haxe.org/Dynamic.html\">Dynamic</a></code></h3>\n<p>Returns an object containing all compiled packages and classes.</p> \n<h3 id=\"haxeToNeko\"><code><span class=\"label\">static</span> <a href=\"#haxeToNeko\">haxeToNeko</a> (v:<a class=\"type\" title=\"Dynamic is a special type which is compatible with all other types.\" href=\"http://api.haxe.org/Dynamic.html\">Dynamic</a>):<a class=\"type\" title=\"Dynamic is a special type which is compatible with all other types.\" href=\"http://api.haxe.org/Dynamic.html\">Dynamic</a></code></h3>\n<p>Converts a Haxe value to its Neko equivalent. Used to unwrap String and Arrays Objects into raw Neko values.</p> \n<h3 id=\"load\"><code><span class=\"label\">static</span> <a href=\"#load\">load</a> (lib:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>, prim:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>, nargs:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a>):<a class=\"type\" title=\"Dynamic is a special type which is compatible with all other types.\" href=\"http://api.haxe.org/Dynamic.html\">Dynamic</a></code></h3>\n<p>Load and return a Neko primitive from a NDLL library.</p> \n<h3 id=\"loadLazy\"><code><span class=\"label\">static</span> <a href=\"#loadLazy\">loadLazy</a> (lib:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>, prim:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>, nargs:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a>):<a class=\"type\" title=\"Dynamic is a special type which is compatible with all other types.\" href=\"http://api.haxe.org/Dynamic.html\">Dynamic</a></code></h3>\n \n<h3 id=\"localUnserialize\"><code><span class=\"label\">static</span> <a href=\"#localUnserialize\">localUnserialize</a> (s:<a class=\"type\" title=\"\" href=\"http://api.haxe.org/haxe/io/Bytes.html\">Bytes</a>):<a class=\"type\" title=\"Dynamic is a special type which is compatible with all other types.\" href=\"http://api.haxe.org/Dynamic.html\">Dynamic</a></code></h3>\n<p>Unserialize a string using native Neko serialization. See [serialize]. This function assume that all the serialized data was serialized with current module, even if the module name was different. This can happen if you are unserializing some data into mod_neko that was serialized on a different server using a different file path.</p> \n<h3 id=\"nekoToHaxe\"><code><span class=\"label\">static</span> <a href=\"#nekoToHaxe\">nekoToHaxe</a> (v:<a class=\"type\" title=\"Dynamic is a special type which is compatible with all other types.\" href=\"http://api.haxe.org/Dynamic.html\">Dynamic</a>):<a class=\"type\" title=\"Dynamic is a special type which is compatible with all other types.\" href=\"http://api.haxe.org/Dynamic.html\">Dynamic</a></code></h3>\n<p>Converts a Neko value to its Haxe equivalent. Used for wrapping String and Arrays raw values into Haxe Objects.</p> \n<h3 id=\"print\"><code><span class=\"label\">static</span> <a href=\"#print\">print</a> (v:<a class=\"type\" title=\"Dynamic is a special type which is compatible with all other types.\" href=\"http://api.haxe.org/Dynamic.html\">Dynamic</a>):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n<p>Print the specified value on the default output.</p> \n<h3 id=\"println\"><code><span class=\"label\">static</span> <a href=\"#println\">println</a> (v:<a class=\"type\" title=\"Dynamic is a special type which is compatible with all other types.\" href=\"http://api.haxe.org/Dynamic.html\">Dynamic</a>):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n<p>Print the specified value on the default output followed by a newline character.</p> \n<h3 id=\"rethrow\"><code><span class=\"label\">static</span> <a href=\"#rethrow\">rethrow</a> (e:<a class=\"type\" title=\"Dynamic is a special type which is compatible with all other types.\" href=\"http://api.haxe.org/Dynamic.html\">Dynamic</a>):<a class=\"type\" title=\"Dynamic is a special type which is compatible with all other types.\" href=\"http://api.haxe.org/Dynamic.html\">Dynamic</a></code></h3>\n<p>Rethrow an exception. This is useful when manually filtering an exception in order to keep the previous exception stack.</p> \n<h3 id=\"serialize\"><code><span class=\"label\">static</span> <a href=\"#serialize\">serialize</a> (v:<a class=\"type\" title=\"Dynamic is a special type which is compatible with all other types.\" href=\"http://api.haxe.org/Dynamic.html\">Dynamic</a>):<a class=\"type\" title=\"\" href=\"http://api.haxe.org/haxe/io/Bytes.html\">Bytes</a></code></h3>\n<p>Serialize using native Neko serialization. This will return a Binary string that can be stored for long term usage. The serialized data is optimized for speed and not for size.</p> \n<h3 id=\"stringReference\"><code><span class=\"label\">static</span> <span class=\"label\">inline</span> <a href=\"#stringReference\">stringReference</a> (b:<a class=\"type\" title=\"\" href=\"http://api.haxe.org/haxe/io/Bytes.html\">Bytes</a>):<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a></code></h3>\n<p>Returns a string referencing the data contains in bytes.</p> \n<h3 id=\"unserialize\"><code><span class=\"label\">static</span> <a href=\"#unserialize\">unserialize</a> (s:<a class=\"type\" title=\"\" href=\"http://api.haxe.org/haxe/io/Bytes.html\">Bytes</a>):<a class=\"type\" title=\"Dynamic is a special type which is compatible with all other types.\" href=\"http://api.haxe.org/Dynamic.html\">Dynamic</a></code></h3>\n<p>Unserialize a string using native Neko serialization. See [serialize].</p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/neko/Lib.html\" class=\"_attribution-link\">http://api.haxe.org/neko/Lib.html</a>\n  </p>\n</div>\n","net/serverloop":"<h1> class ServerLoop&lt;<span class=\"type\">ClientData</span>&gt; </h1>\n<p>package neko.net</p> <p class=\"availability\">Available on macro, neko</p>   <div class=\"indent\"> <p>This class enables you to quickly create a custom server that can serve several clients in parallel. This server is using a single thread and process so the server itself processing is not parallel. Non-blocking sockets are used to ensure that a slow client does not block the others.</p> </div>  <h2 class=\"section\">Constructor</h2>  \n<h3 id=\"new\"><code><a href=\"#new\">new</a> (?newData:<a class=\"type\" title=\"A TCP socket class : allow you to both connect to a given server and exchange messages or start your own server and wait for connections.\" href=\"http://api.haxe.org/sys/net/Socket.html\">Socket</a> â€‘&gt; <span class=\"type\">ClientData</span>)</code></h3>\n<p>Creates a server instance. The [newData] methods must return the data associated with the Client.</p>  <h2 class=\"section\">Fields</h2>  \n<h3 id=\"clients\"><code> <a href=\"#clients\">clients</a>:<a class=\"type\" title=\"A linked-list of elements.\" href=\"http://api.haxe.org/List.html\">List</a>&lt;<span class=\"type\">ClientData</span>&gt;</code></h3>\n \n<h3 id=\"listenCount\"><code> <a href=\"#listenCount\">listenCount</a>:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a></code></h3>\n<p>This is the value of number client requests that the server socket listen for. By default this number is 10 but can be increased for servers supporting a large number of simultaneous requests.</p> \n<h3 id=\"updateTime\"><code> <a href=\"#updateTime\">updateTime</a>:<a class=\"type\" title=\"The standard Float type, this is a double-precision IEEE 64bit float.\" href=\"http://api.haxe.org/Float.html\">Float</a></code></h3>\n<p>See [update].</p>  <h2 class=\"section\">Methods</h2>  \n<h3 id=\"clientDisconnected\"><code><a href=\"#clientDisconnected\">clientDisconnected</a> (d:<span class=\"type\">ClientData</span>):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n<p>This method is called after a client has been disconnected.</p> \n<h3 id=\"clientWrite\"><code><a href=\"#clientWrite\">clientWrite</a> (s:<a class=\"type\" title=\"A TCP socket class : allow you to both connect to a given server and exchange messages or start your own server and wait for connections.\" href=\"http://api.haxe.org/sys/net/Socket.html\">Socket</a>, buf:<a class=\"type\" title=\"\" href=\"http://api.haxe.org/haxe/io/Bytes.html\">Bytes</a>, pos:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a>, len:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a>):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n<p>This method can be used instead of writing directly to the socket. It ensures that all the data is correctly sent. If an error occurs while sending the data, no exception will occur but the client will be gracefully disconnected.</p> \n<h3 id=\"closeConnection\"><code><a href=\"#closeConnection\">closeConnection</a> (s:<a class=\"type\" title=\"A TCP socket class : allow you to both connect to a given server and exchange messages or start your own server and wait for connections.\" href=\"http://api.haxe.org/sys/net/Socket.html\">Socket</a>):<a class=\"type\" title=\"The standard Boolean type, which can either be true or false.\" href=\"http://api.haxe.org/Bool.html\">Bool</a></code></h3>\n<p>Closes the client connection and removes it from the client List.</p> \n<h3 id=\"onError\"><code><a href=\"#onError\">onError</a> (e:<a class=\"type\" title=\"Dynamic is a special type which is compatible with all other types.\" href=\"http://api.haxe.org/Dynamic.html\">Dynamic</a>):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n<p>Called when an error occured. This enable you to log the error somewhere. By default the error is displayed using [trace].</p> \n<h3 id=\"processClientData\"><code><a href=\"#processClientData\">processClientData</a> (d:<span class=\"type\">ClientData</span>, buf:<a class=\"type\" title=\"\" href=\"http://api.haxe.org/haxe/io/Bytes.html\">Bytes</a>, bufpos:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a>, buflen:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a>):<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a></code></h3>\n<p>This method is called when some data has been readed into a Client buffer. If the data can be handled, then you can return the number of bytes handled that needs to be removed from the buffer. It the data can't be handled (some part of the message is missing for example), returns 0.</p> \n<h3 id=\"run\"><code><a href=\"#run\">run</a> (host:<a class=\"type\" title=\"A given IP host name.\" href=\"http://api.haxe.org/sys/net/Host.html\">Host</a>, port:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a>):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n<p>Run the server. This function should never return.</p> \n<h3 id=\"update\"><code><a href=\"#update\">update</a> ():<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n<p>The [update] method is called after each socket event has been processed or when [updateTime] has been reached. It can be used to perform time-regular tasks such as pings. By default [updateTime] is set to one second.</p>  <h2 class=\"section\">Static fields</h2>  \n<h3 id=\"DEFAULT_BUFSIZE\"><code><span class=\"label\">static</span> <a href=\"#DEFAULT_BUFSIZE\">DEFAULT_BUFSIZE</a>:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a><span> = 128</span> </code></h3>\n<p>Each client has an associated buffer. This is the initial buffer size which is set to 128 bytes by default.</p> \n<h3 id=\"MAX_BUFSIZE\"><code><span class=\"label\">static</span> <a href=\"#MAX_BUFSIZE\">MAX_BUFSIZE</a>:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a><span> = (1&lt;&lt;16)</span> </code></h3>\n<p>Each client has an associated buffer. This is the maximum buffer size which is set to 64K by default. When that size is reached and some data can't be processed, the client is disconnected.</p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/neko/net/ServerLoop.html\" class=\"_attribution-link\">http://api.haxe.org/neko/net/ServerLoop.html</a>\n  </p>\n</div>\n","net/threadserver":"<h1> class ThreadServer&lt;<span class=\"type\">Client</span>, <span class=\"type\">Message</span>&gt; </h1>\n<p>package neko.net</p> <p class=\"availability\">Available on macro, neko</p> <p> <span class=\"muted\">extended by</span> <a class=\"type\" title=\"\" href=\"threadremotingserver\">ThreadRemotingServer</a> </p>     <h2 class=\"section\">Constructor</h2>  \n<h3 id=\"new\"><code><a href=\"#new\">new</a> ()</code></h3>\n  <h2 class=\"section\">Fields</h2>  \n<h3 id=\"connectLag\"><code> <a href=\"#connectLag\">connectLag</a>:<a class=\"type\" title=\"The standard Float type, this is a double-precision IEEE 64bit float.\" href=\"http://api.haxe.org/Float.html\">Float</a></code></h3>\n \n<h3 id=\"errorOutput\"><code> <a href=\"#errorOutput\">errorOutput</a>:<a class=\"type\" title=\"An Output is an abstract write.\" href=\"http://api.haxe.org/haxe/io/Output.html\">Output</a></code></h3>\n \n<h3 id=\"initialBufferSize\"><code> <a href=\"#initialBufferSize\">initialBufferSize</a>:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a></code></h3>\n \n<h3 id=\"listen\"><code> <a href=\"#listen\">listen</a>:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a></code></h3>\n \n<h3 id=\"maxBufferSize\"><code> <a href=\"#maxBufferSize\">maxBufferSize</a>:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a></code></h3>\n \n<h3 id=\"maxSockPerThread\"><code> <a href=\"#maxSockPerThread\">maxSockPerThread</a>:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a></code></h3>\n \n<h3 id=\"messageHeaderSize\"><code> <a href=\"#messageHeaderSize\">messageHeaderSize</a>:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a></code></h3>\n \n<h3 id=\"nthreads\"><code> <a href=\"#nthreads\">nthreads</a>:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a></code></h3>\n \n<h3 id=\"updateTime\"><code> <a href=\"#updateTime\">updateTime</a>:<a class=\"type\" title=\"The standard Float type, this is a double-precision IEEE 64bit float.\" href=\"http://api.haxe.org/Float.html\">Float</a></code></h3>\n  <h2 class=\"section\">Methods</h2>  \n<h3 id=\"addSocket\"><code><a href=\"#addSocket\">addSocket</a> (s:<a class=\"type\" title=\"A TCP socket class : allow you to both connect to a given server and exchange messages or start your own server and wait for connections.\" href=\"http://api.haxe.org/sys/net/Socket.html\">Socket</a>):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n \n<h3 id=\"afterEvent\"><code><span class=\"label\">dynamic</span> <a href=\"#afterEvent\">afterEvent</a> ():<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n \n<h3 id=\"clientConnected\"><code><span class=\"label\">dynamic</span> <a href=\"#clientConnected\">clientConnected</a> (s:<a class=\"type\" title=\"A TCP socket class : allow you to both connect to a given server and exchange messages or start your own server and wait for connections.\" href=\"http://api.haxe.org/sys/net/Socket.html\">Socket</a>):<span class=\"type\">Client</span> </code></h3>\n \n<h3 id=\"clientDisconnected\"><code><span class=\"label\">dynamic</span> <a href=\"#clientDisconnected\">clientDisconnected</a> (c:<span class=\"type\">Client</span>):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n \n<h3 id=\"clientMessage\"><code><span class=\"label\">dynamic</span> <a href=\"#clientMessage\">clientMessage</a> (c:<span class=\"type\">Client</span>, msg:<span class=\"type\">Message</span>):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n \n<h3 id=\"onError\"><code><span class=\"label\">dynamic</span> <a href=\"#onError\">onError</a> (e:<a class=\"type\" title=\"Dynamic is a special type which is compatible with all other types.\" href=\"http://api.haxe.org/Dynamic.html\">Dynamic</a>, stack:<a class=\"type\" title=\"An Array is a storage for values.\" href=\"http://api.haxe.org/Array.html\">Array</a>&lt;<a class=\"type\" title=\"Elements return by &lt;code&gt;&lt;a href=\" .. href=\"http://api.haxe.org/haxe/StackItem.html\">StackItem</a>&gt;):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n \n<h3 id=\"readClientMessage\"><code><span class=\"label\">dynamic</span> <a href=\"#readClientMessage\">readClientMessage</a> (c:<span class=\"type\">Client</span>, buf:<a class=\"type\" title=\"\" href=\"http://api.haxe.org/haxe/io/Bytes.html\">Bytes</a>, pos:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a>, len:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a>):{msg:<span class=\"type\">Message</span>, bytes:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a>}</code></h3>\n \n<h3 id=\"run\"><code><a href=\"#run\">run</a> (host:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>, port:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a>):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n \n<h3 id=\"sendData\"><code><a href=\"#sendData\">sendData</a> (s:<a class=\"type\" title=\"A TCP socket class : allow you to both connect to a given server and exchange messages or start your own server and wait for connections.\" href=\"http://api.haxe.org/sys/net/Socket.html\">Socket</a>, data:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n \n<h3 id=\"stopClient\"><code><a href=\"#stopClient\">stopClient</a> (s:<a class=\"type\" title=\"A TCP socket class : allow you to both connect to a given server and exchange messages or start your own server and wait for connections.\" href=\"http://api.haxe.org/sys/net/Socket.html\">Socket</a>):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n \n<h3 id=\"update\"><code><span class=\"label\">dynamic</span> <a href=\"#update\">update</a> ():<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n \n<h3 id=\"work\"><code><a href=\"#work\">work</a> (f:<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a> â€‘&gt; <a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a>):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n<div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/neko/net/ThreadServer.html\" class=\"_attribution-link\">http://api.haxe.org/neko/net/ThreadServer.html</a>\n  </p>\n</div>\n","vm/modulehandle":"<h1>enum ModuleHandle </h1>\n<p>package neko.vm</p>\n\n<p>defined in neko.vm.Module</p>\n<p class=\"availability\">Available on macro, neko</p> <div class=\"indent\"> <p>The abstract Neko module handle.</p> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/neko/vm/ModuleHandle.html\" class=\"_attribution-link\">http://api.haxe.org/neko/vm/ModuleHandle.html</a>\n  </p>\n</div>\n","vm/threadhandle":"<h1>enum ThreadHandle </h1>\n<p>package neko.vm</p>\n\n<p>defined in neko.vm.Thread</p>\n<p class=\"availability\">Available on macro, neko</p> <div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/neko/vm/ThreadHandle.html\" class=\"_attribution-link\">http://api.haxe.org/neko/vm/ThreadHandle.html</a>\n  </p>\n</div>\n","vm/tls":"<h1> class Tls&lt;<span class=\"type\">T</span>&gt; </h1>\n<p>package neko.vm</p> <p class=\"availability\">Available on macro, neko</p>     <h2 class=\"section\">Constructor</h2>  \n<h3 id=\"new\"><code><a href=\"#new\">new</a> ()</code></h3>\n  <h2 class=\"section\">Fields</h2>  \n<h3 id=\"value\"><code> <a href=\"#value\">value</a>:<span class=\"type\">T</span> </code></h3>\n<div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/neko/vm/Tls.html\" class=\"_attribution-link\">http://api.haxe.org/neko/vm/Tls.html</a>\n  </p>\n</div>\n","vm/ui":"<h1> class Ui </h1>\n<p>package neko.vm</p> <p class=\"availability\">Available on neko</p>     <h2 class=\"section\">Static methods</h2>  \n<h3 id=\"isMainThread\"><code><span class=\"label\">static</span> <a href=\"#isMainThread\">isMainThread</a> ():<a class=\"type\" title=\"The standard Boolean type, which can either be true or false.\" href=\"http://api.haxe.org/Bool.html\">Bool</a></code></h3>\n \n<h3 id=\"loop\"><code><span class=\"label\">static</span> <a href=\"#loop\">loop</a> ():<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n \n<h3 id=\"stopLoop\"><code><span class=\"label\">static</span> <a href=\"#stopLoop\">stopLoop</a> ():<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n \n<h3 id=\"sync\"><code><span class=\"label\">static</span> <a href=\"#sync\">sync</a> (f:<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a> â€‘&gt; <a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a>):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n \n<h3 id=\"syncResult\"><code><span class=\"label\">static</span> <a href=\"#syncResult\">syncResult</a>&lt;<span class=\"type\">T</span>&gt; (f:<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a> â€‘&gt; <span class=\"type\">T</span>):<span class=\"type\">T</span> </code></h3>\n<div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/neko/vm/Ui.html\" class=\"_attribution-link\">http://api.haxe.org/neko/vm/Ui.html</a>\n  </p>\n</div>\n","zip/compress":"<h1>typedef Compress </h1>\n<p>package neko.zip</p> <p> alias for <a class=\"type\" title=\"\" href=\"http://api.haxe.org/haxe/zip/Compress.html\">Compress</a> </p> <p class=\"availability\">Available on macro, neko</p> <div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/neko/zip/Compress.html\" class=\"_attribution-link\">http://api.haxe.org/neko/zip/Compress.html</a>\n  </p>\n</div>\n","zip/flush":"<h1>typedef Flush </h1>\n<p>package neko.zip</p> <p> alias for <a class=\"type\" title=\"\" href=\"http://api.haxe.org/haxe/zip/FlushMode.html\">FlushMode</a> </p> <p class=\"availability\">Available on macro, neko</p> <div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/neko/zip/Flush.html\" class=\"_attribution-link\">http://api.haxe.org/neko/zip/Flush.html</a>\n  </p>\n</div>\n","zip/uncompress":"<h1>typedef Uncompress </h1>\n<p>package neko.zip</p> <p> alias for <a class=\"type\" title=\"\" href=\"http://api.haxe.org/haxe/zip/Uncompress.html\">Uncompress</a> </p> <p class=\"availability\">Available on macro, neko</p> <div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/neko/zip/Uncompress.html\" class=\"_attribution-link\">http://api.haxe.org/neko/zip/Uncompress.html</a>\n  </p>\n</div>\n","vm/module":"<h1> class Module </h1>\n<p>package neko.vm</p> <p class=\"availability\">Available on macro, neko</p>   <div class=\"indent\"> <p>A Neko Module represent a execution unit for the Neko Virtual Machine. Each compiled [.n] bytecode file is a module once loaded by the NekoVM.</p> </div>  <h2 class=\"section\">Constructor</h2>  \n<h3 id=\"new\"><code><a href=\"#new\">new</a> (m:<a class=\"type\" title=\"The abstract Neko module handle.\" href=\"modulehandle\">ModuleHandle</a>)</code></h3>\n  <h2 class=\"section\">Fields</h2>  \n<h3 id=\"m\"><code> <a href=\"#m\">m</a>:<a class=\"type\" title=\"The abstract Neko module handle.\" href=\"modulehandle\">ModuleHandle</a></code></h3>\n<p>The abstract handle.</p> \n<h3 id=\"name\"><code> <a href=\"#name\">name</a>:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a></code></h3>\n  <h2 class=\"section\">Methods</h2>  \n<h3 id=\"codeSize\"><code><a href=\"#codeSize\">codeSize</a> ():<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a></code></h3>\n<p>Returns the codeSize of the Module.</p> \n<h3 id=\"execute\"><code><a href=\"#execute\">execute</a> ():<a class=\"type\" title=\"Dynamic is a special type which is compatible with all other types.\" href=\"http://api.haxe.org/Dynamic.html\">Dynamic</a></code></h3>\n<p>Execute a module and returns its result (the latest evaluated expression). A module can be executed several times but its globals are only initialized once the first time the Module is loaded.</p> \n<h3 id=\"exportsTable\"><code><a href=\"#exportsTable\">exportsTable</a> ():<a class=\"type\" title=\"Dynamic is a special type which is compatible with all other types.\" href=\"http://api.haxe.org/Dynamic.html\">Dynamic</a></code></h3>\n<p>The raw export table.</p> \n<h3 id=\"getExports\"><code><a href=\"#getExports\">getExports</a> ():<a class=\"type\" title=\"Map allows key to value mapping for arbitrary value types, and many key types.\" href=\"http://api.haxe.org/Map.html\">Map</a>&lt;<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>, <a class=\"type\" title=\"Dynamic is a special type which is compatible with all other types.\" href=\"http://api.haxe.org/Dynamic.html\">Dynamic</a>&gt;</code></h3>\n<p>Each Module has an export table which can be useful to transfert values between modules.</p> \n<h3 id=\"getGlobal\"><code><a href=\"#getGlobal\">getGlobal</a> (n:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a>):<a class=\"type\" title=\"Dynamic is a special type which is compatible with all other types.\" href=\"http://api.haxe.org/Dynamic.html\">Dynamic</a></code></h3>\n<p>Get a Module global value.</p> \n<h3 id=\"globalsCount\"><code><a href=\"#globalsCount\">globalsCount</a> ():<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a></code></h3>\n<p>Returns the number of globals in this Module global table.</p> \n<h3 id=\"loader\"><code><a href=\"#loader\">loader</a> ():<a class=\"type\" title=\"Loaders can be used to dynamically load Neko primitives stored in NDLL libraries.\" href=\"loader\">Loader</a></code></h3>\n<p>Returns the Loader that this Module was loaded with.s</p> \n<h3 id=\"setExport\"><code><a href=\"#setExport\">setExport</a> (name:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>, value:<a class=\"type\" title=\"Dynamic is a special type which is compatible with all other types.\" href=\"http://api.haxe.org/Dynamic.html\">Dynamic</a>):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n<p>Set a value in the Module export table.</p> \n<h3 id=\"setGlobal\"><code><a href=\"#setGlobal\">setGlobal</a> (n:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a>, v:<a class=\"type\" title=\"Dynamic is a special type which is compatible with all other types.\" href=\"http://api.haxe.org/Dynamic.html\">Dynamic</a>):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n<p>Set a Module global value.</p> \n<h3 id=\"toString\"><code><a href=\"#toString\">toString</a> ():<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a></code></h3>\n  <h2 class=\"section\">Static methods</h2>  \n<h3 id=\"local\"><code><span class=\"label\">static</span> <a href=\"#local\">local</a> ():<a class=\"type\" title=\"A Neko Module represent a execution unit for the Neko Virtual Machine.\" href=\"module\">Module</a></code></h3>\n<p>Returns the local Module, which is the one in which this method is included.</p> \n<h3 id=\"read\"><code><span class=\"label\">static</span> <a href=\"#read\">read</a> (i:<a class=\"type\" title=\"An Input is an abstract reader.\" href=\"http://api.haxe.org/haxe/io/Input.html\">Input</a>, l:<a class=\"type\" title=\"Loaders can be used to dynamically load Neko primitives stored in NDLL libraries.\" href=\"loader\">Loader</a>):<a class=\"type\" title=\"A Neko Module represent a execution unit for the Neko Virtual Machine.\" href=\"module\">Module</a></code></h3>\n<p>Reads a module from an Input by using the given Loader. The module is initialized but has not yet been executed.</p> \n<h3 id=\"readBytes\"><code><span class=\"label\">static</span> <a href=\"#readBytes\">readBytes</a> (b:<a class=\"type\" title=\"\" href=\"http://api.haxe.org/haxe/io/Bytes.html\">Bytes</a>, loader:<a class=\"type\" title=\"Loaders can be used to dynamically load Neko primitives stored in NDLL libraries.\" href=\"loader\">Loader</a>):<a class=\"type\" title=\"A Neko Module represent a execution unit for the Neko Virtual Machine.\" href=\"module\">Module</a></code></h3>\n<p>Reads a module from Bytes using the given Loader. The module is initialized but has not yet been executed.</p> \n<h3 id=\"readGlobalsNames\"><code><span class=\"label\">static</span> <a href=\"#readGlobalsNames\">readGlobalsNames</a> (i:<a class=\"type\" title=\"An Input is an abstract reader.\" href=\"http://api.haxe.org/haxe/io/Input.html\">Input</a>):<a class=\"type\" title=\"An Array is a storage for values.\" href=\"http://api.haxe.org/Array.html\">Array</a>&lt;<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>&gt;</code></h3>\n<p>Extract the globals names from the given module</p> \n<h3 id=\"readPath\"><code><span class=\"label\">static</span> <a href=\"#readPath\">readPath</a> (name:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>, path:<a class=\"type\" title=\"An Array is a storage for values.\" href=\"http://api.haxe.org/Array.html\">Array</a>&lt;<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>&gt;, loader:<a class=\"type\" title=\"Loaders can be used to dynamically load Neko primitives stored in NDLL libraries.\" href=\"loader\">Loader</a>):<a class=\"type\" title=\"A Neko Module represent a execution unit for the Neko Virtual Machine.\" href=\"module\">Module</a></code></h3>\n<p>Reads a module from a name and using the specified seach path and loader. The module is initialized but has not yet been executed.</p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/neko/vm/Module.html\" class=\"_attribution-link\">http://api.haxe.org/neko/vm/Module.html</a>\n  </p>\n</div>\n","vm/lock":"<h1> class Lock </h1>\n<p>package neko.vm</p> <p class=\"availability\">Available on macro, neko</p>     <h2 class=\"section\">Constructor</h2>  \n<h3 id=\"new\"><code><a href=\"#new\">new</a> ()</code></h3>\n  <h2 class=\"section\">Methods</h2>  \n<h3 id=\"release\"><code><a href=\"#release\">release</a> ():<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n \n<h3 id=\"wait\"><code><a href=\"#wait\">wait</a> (?timeout:<a class=\"type\" title=\"The standard Float type, this is a double-precision IEEE 64bit float.\" href=\"http://api.haxe.org/Float.html\">Float</a>):<a class=\"type\" title=\"The standard Boolean type, which can either be true or false.\" href=\"http://api.haxe.org/Bool.html\">Bool</a></code></h3>\n<div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/neko/vm/Lock.html\" class=\"_attribution-link\">http://api.haxe.org/neko/vm/Lock.html</a>\n  </p>\n</div>\n"}