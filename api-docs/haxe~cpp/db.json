{"index":"<h1>\n<span class=\"directive\">package</span> cpp</h1>\n<table class=\"table table-condensed\"><tbody>\n<tr>\n<td width=\"200\"><a href=\"abi/index\">abi</a></td>\n<td></td>\n</tr>\n<tr>\n<td width=\"200\"><a href=\"cppia/index\">cppia</a></td>\n<td></td>\n</tr>\n<tr>\n<td width=\"200\"><a href=\"link/index\">link</a></td>\n<td></td>\n</tr>\n<tr>\n<td width=\"200\"><a href=\"net/index\">net</a></td>\n<td></td>\n</tr>\n<tr>\n<td width=\"200\"><a href=\"rtti/index\">rtti</a></td>\n<td></td>\n</tr>\n<tr>\n<td width=\"200\"><a href=\"vm/index\">vm</a></td>\n<td></td>\n</tr>\n<tr>\n<td width=\"200\"><a href=\"zip/index\">zip</a></td>\n<td></td>\n</tr>\n<tr>\n<td width=\"200\"><a href=\"arraybase\">ArrayBase</a></td>\n<td></td>\n</tr>\n<tr>\n<td width=\"200\"><a href=\"callable\">Callable</a></td>\n<td></td>\n</tr>\n<tr>\n<td width=\"200\"><a href=\"castcharstar\">CastCharStar</a></td>\n<td></td>\n</tr>\n<tr>\n<td width=\"200\"><a href=\"char\">Char</a></td>\n<td></td>\n</tr>\n<tr>\n<td width=\"200\"><a href=\"constcharstar\">ConstCharStar</a></td>\n<td></td>\n</tr>\n<tr>\n<td width=\"200\"><a href=\"constpointer\">ConstPointer</a></td>\n<td></td>\n</tr>\n<tr>\n<td width=\"200\"><a href=\"fastiterator\">FastIterator</a></td>\n<td></td>\n</tr>\n<tr>\n<td width=\"200\"><a href=\"float32\">Float32</a></td>\n<td></td>\n</tr>\n<tr>\n<td width=\"200\"><a href=\"float64\">Float64</a></td>\n<td></td>\n</tr>\n<tr>\n<td width=\"200\"><a href=\"function\">Function</a></td>\n<td></td>\n</tr>\n<tr>\n<td width=\"200\"><a href=\"hxobjectptr\">HxObjectPtr</a></td>\n<td></td>\n</tr>\n<tr>\n<td width=\"200\"><a href=\"int16\">Int16</a></td>\n<td></td>\n</tr>\n<tr>\n<td width=\"200\"><a href=\"int32\">Int32</a></td>\n<td></td>\n</tr>\n<tr>\n<td width=\"200\"><a href=\"int64\">Int64</a></td>\n<td></td>\n</tr>\n<tr>\n<td width=\"200\"><a href=\"int8\">Int8</a></td>\n<td></td>\n</tr>\n<tr>\n<td width=\"200\"><a href=\"lib\">Lib</a></td>\n<td></td>\n</tr>\n<tr>\n<td width=\"200\"><a href=\"nativearray\">NativeArray</a></td>\n<td></td>\n</tr>\n<tr>\n<td width=\"200\"><a href=\"nativestring\">NativeString</a></td>\n<td></td>\n</tr>\n<tr>\n<td width=\"200\"><a href=\"nativexml\">NativeXml</a></td>\n<td></td>\n</tr>\n<tr>\n<td width=\"200\"><a href=\"object\">Object</a></td>\n<td></td>\n</tr>\n<tr>\n<td width=\"200\"><a href=\"pointer\">Pointer</a></td>\n<td></td>\n</tr>\n<tr>\n<td width=\"200\"><a href=\"prime\">Prime</a></td>\n<td></td>\n</tr>\n<tr>\n<td width=\"200\"><a href=\"random\">Random</a></td>\n<td></td>\n</tr>\n<tr>\n<td width=\"200\"><a href=\"rawconstpointer\">RawConstPointer</a></td>\n<td></td>\n</tr>\n<tr>\n<td width=\"200\"><a href=\"rawpointer\">RawPointer</a></td>\n<td></td>\n</tr>\n<tr>\n<td width=\"200\"><a href=\"uint16\">UInt16</a></td>\n<td></td>\n</tr>\n<tr>\n<td width=\"200\"><a href=\"uint32\">UInt32</a></td>\n<td></td>\n</tr>\n<tr>\n<td width=\"200\"><a href=\"uint64\">UInt64</a></td>\n<td></td>\n</tr>\n<tr>\n<td width=\"200\"><a href=\"uint8\">UInt8</a></td>\n<td></td>\n</tr>\n<tr>\n<td width=\"200\"><a href=\"void\">Void</a></td>\n<td></td>\n</tr>\n<tr>\n<td width=\"200\"><a href=\"xml\">Xml</a></td>\n<td></td>\n</tr>\n<tr>\n<td width=\"200\"><a href=\"xmltype\">XmlType</a></td>\n<td></td>\n</tr>\n</tbody></table><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/cpp/\" class=\"_attribution-link\">http://api.haxe.org/cpp/</a>\n  </p>\n</div>\n","arraybase":"<h1> class ArrayBase </h1>\n<p>package cpp</p> <p class=\"availability\">Available on cpp</p>     <h2 class=\"section\">Fields</h2>  \n<h3 id=\"length\"><code> <span class=\"label\">read only</span> <a href=\"#length\">length</a>:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a></code></h3>\n  <h2 class=\"section\">Methods</h2>  \n<h3 id=\"getBase\"><code><a href=\"#getBase\">getBase</a> ():<a class=\"type\" title=\"\" href=\"rawpointer\">RawPointer</a>&lt;<a class=\"type\" title=\"\" href=\"char\">Char</a>&gt;</code></h3>\n \n<h3 id=\"getByteCount\"><code><a href=\"#getByteCount\">getByteCount</a> ():<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a></code></h3>\n \n<h3 id=\"getElementSize\"><code><a href=\"#getElementSize\">getElementSize</a> ():<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a></code></h3>\n<div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/cpp/ArrayBase.html\" class=\"_attribution-link\">http://api.haxe.org/cpp/ArrayBase.html</a>\n  </p>\n</div>\n","int64":"<h1>abstract Int64(<a class=\"type\" title=\"\" href=\"int64\">Int64</a>) </h1>\n<p>package cpp</p> <p> from <a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a> to <a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a> </p>\n<p class=\"availability\">Available on cpp</p> <div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/cpp/Int64.html\" class=\"_attribution-link\">http://api.haxe.org/cpp/Int64.html</a>\n  </p>\n</div>\n","callable":"<h1>typedef Callable&lt;<span class=\"type\">T</span>&gt; </h1>\n<p>package cpp</p> <p> alias for <a class=\"type\" title=\"\" href=\"function\">Function</a>&lt;<span class=\"type\">T</span>, <a class=\"type\" title=\"\" href=\"abi/abi\">Abi</a>&gt; </p> <p class=\"availability\">Available on cpp</p> <div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/cpp/Callable.html\" class=\"_attribution-link\">http://api.haxe.org/cpp/Callable.html</a>\n  </p>\n</div>\n","castcharstar":"<h1>abstract CastCharStar(<a class=\"type\" title=\"\" href=\"rawpointer\">RawPointer</a>&lt;<a class=\"type\" title=\"\" href=\"char\">Char</a>&gt;) </h1>\n<p>package cpp</p> <p> to <a class=\"type\" title=\"\" href=\"rawpointer\">RawPointer</a>&lt;<a class=\"type\" title=\"\" href=\"char\">Char</a>&gt; </p>\n<p class=\"availability\">Available on cpp</p>  <h2 class=\"section\">Methods</h2>  \n<h3 id=\"toPointer\"><code><span class=\"label\">inline</span> <a href=\"#toPointer\">toPointer</a> ():<a class=\"type\" title=\"\" href=\"rawpointer\">RawPointer</a>&lt;<a class=\"type\" title=\"\" href=\"char\">Char</a>&gt;</code></h3>\n  <h2 class=\"section\">Static methods</h2>  \n<h3 id=\"fromString\"><code><span class=\"label\">static</span> <span class=\"label\">inline</span> <a href=\"#fromString\">fromString</a> (s:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>):<a class=\"type\" title=\"\" href=\"castcharstar\">CastCharStar</a></code></h3>\n<div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/cpp/CastCharStar.html\" class=\"_attribution-link\">http://api.haxe.org/cpp/CastCharStar.html</a>\n  </p>\n</div>\n","char":"<h1>abstract Char(<a class=\"type\" title=\"\" href=\"char\">Char</a>) </h1>\n<p>package cpp</p> <p> from <a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a> to <a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a> </p>\n<p class=\"availability\">Available on cpp</p> <div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/cpp/Char.html\" class=\"_attribution-link\">http://api.haxe.org/cpp/Char.html</a>\n  </p>\n</div>\n","constcharstar":"<h1>abstract ConstCharStar(<a class=\"type\" title=\"\" href=\"rawconstpointer\">RawConstPointer</a>&lt;<a class=\"type\" title=\"\" href=\"char\">Char</a>&gt;) </h1>\n<p>package cpp</p> <p> to <a class=\"type\" title=\"\" href=\"rawconstpointer\">RawConstPointer</a>&lt;<a class=\"type\" title=\"\" href=\"char\">Char</a>&gt; </p>\n<p class=\"availability\">Available on cpp</p>  <h2 class=\"section\">Methods</h2>  \n<h3 id=\"toPointer\"><code><span class=\"label\">inline</span> <a href=\"#toPointer\">toPointer</a> ():<a class=\"type\" title=\"\" href=\"rawconstpointer\">RawConstPointer</a>&lt;<a class=\"type\" title=\"\" href=\"char\">Char</a>&gt;</code></h3>\n \n<h3 id=\"toString\"><code><span class=\"label\">inline</span> <a href=\"#toString\">toString</a> ():<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a></code></h3>\n  <h2 class=\"section\">Static methods</h2>  \n<h3 id=\"fromString\"><code><span class=\"label\">static</span> <span class=\"label\">inline</span> <a href=\"#fromString\">fromString</a> (s:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>):<a class=\"type\" title=\"\" href=\"constcharstar\">ConstCharStar</a></code></h3>\n<div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/cpp/ConstCharStar.html\" class=\"_attribution-link\">http://api.haxe.org/cpp/ConstCharStar.html</a>\n  </p>\n</div>\n","fastiterator":"<h1> class FastIterator&lt;<span class=\"type\">T</span>&gt; </h1>\n<p>package cpp</p> <p class=\"availability\">Available on cpp</p>     <h2 class=\"section\">Methods</h2>  \n<h3 id=\"hasNext\"><code><a href=\"#hasNext\">hasNext</a> ():<a class=\"type\" title=\"The standard Boolean type, which can either be true or false.\" href=\"http://api.haxe.org/Bool.html\">Bool</a></code></h3>\n \n<h3 id=\"next\"><code><a href=\"#next\">next</a> ():<span class=\"type\">T</span> </code></h3>\n<div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/cpp/FastIterator.html\" class=\"_attribution-link\">http://api.haxe.org/cpp/FastIterator.html</a>\n  </p>\n</div>\n","float32":"<h1>abstract Float32(<a class=\"type\" title=\"\" href=\"float32\">Float32</a>) </h1>\n<p>package cpp</p> <p> from <a class=\"type\" title=\"The standard Float type, this is a double-precision IEEE 64bit float.\" href=\"http://api.haxe.org/Float.html\">Float</a> to <a class=\"type\" title=\"The standard Float type, this is a double-precision IEEE 64bit float.\" href=\"http://api.haxe.org/Float.html\">Float</a> </p>\n<p class=\"availability\">Available on cpp</p> <div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/cpp/Float32.html\" class=\"_attribution-link\">http://api.haxe.org/cpp/Float32.html</a>\n  </p>\n</div>\n","float64":"<h1>abstract Float64(<a class=\"type\" title=\"\" href=\"float64\">Float64</a>) </h1>\n<p>package cpp</p> <p> from <a class=\"type\" title=\"The standard Float type, this is a double-precision IEEE 64bit float.\" href=\"http://api.haxe.org/Float.html\">Float</a> to <a class=\"type\" title=\"The standard Float type, this is a double-precision IEEE 64bit float.\" href=\"http://api.haxe.org/Float.html\">Float</a> </p>\n<p class=\"availability\">Available on cpp</p> <div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/cpp/Float64.html\" class=\"_attribution-link\">http://api.haxe.org/cpp/Float64.html</a>\n  </p>\n</div>\n","hxobjectptr":"<h1> class HxObjectPtr </h1>\n<p>package cpp</p> \n<p>defined in cpp.Object</p>\n<p class=\"availability\">Available on cpp</p>     <h2 class=\"section\">Static methods</h2>  \n<h3 id=\"fromDynamic\"><code><span class=\"label\">static</span> <a href=\"#fromDynamic\">fromDynamic</a> (x:<a class=\"type\" title=\"Dynamic is a special type which is compatible with all other types.\" href=\"http://api.haxe.org/Dynamic.html\">Dynamic</a>):<a class=\"type\" title=\"\" href=\"object\">Object</a></code></h3>\n \n<h3 id=\"toDynamic\"><code><span class=\"label\">static</span> <a href=\"#toDynamic\">toDynamic</a> (x:<a class=\"type\" title=\"\" href=\"object\">Object</a>):<a class=\"type\" title=\"Dynamic is a special type which is compatible with all other types.\" href=\"http://api.haxe.org/Dynamic.html\">Dynamic</a></code></h3>\n<div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/cpp/HxObjectPtr.html\" class=\"_attribution-link\">http://api.haxe.org/cpp/HxObjectPtr.html</a>\n  </p>\n</div>\n","int16":"<h1>abstract Int16(<a class=\"type\" title=\"\" href=\"int16\">Int16</a>) </h1>\n<p>package cpp</p> <p> from <a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a> to <a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a> </p>\n<p class=\"availability\">Available on cpp</p> <div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/cpp/Int16.html\" class=\"_attribution-link\">http://api.haxe.org/cpp/Int16.html</a>\n  </p>\n</div>\n","int32":"<h1>abstract Int32(<a class=\"type\" title=\"\" href=\"int32\">Int32</a>) </h1>\n<p>package cpp</p> <p> from <a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a> to <a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a> </p>\n<p class=\"availability\">Available on cpp</p> <div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/cpp/Int32.html\" class=\"_attribution-link\">http://api.haxe.org/cpp/Int32.html</a>\n  </p>\n</div>\n","constpointer":"<h1> class ConstPointer&lt;<span class=\"type\">T</span>&gt; </h1>\n<p>package cpp</p> <p class=\"availability\">Available on cpp</p> <p> <span class=\"muted\">extended by</span> <a class=\"type\" title=\"\" href=\"pointer\">Pointer</a> </p>     <h2 class=\"section\">Fields</h2>  \n<h3 id=\"ptr\"><code> <a href=\"#ptr\">ptr</a>:<span class=\"type\">T</span> </code></h3>\n \n<h3 id=\"raw\"><code> <span class=\"label\">read only</span> <span class=\"label\">write only</span> <a href=\"#raw\">raw</a>:<a class=\"type\" title=\"\" href=\"rawconstpointer\">RawConstPointer</a>&lt;<span class=\"type\">T</span>&gt;</code></h3>\n \n<h3 id=\"value\"><code> <span class=\"label\">read only</span> <a href=\"#value\">value</a>:<span class=\"type\">T</span> </code></h3>\n  <h2 class=\"section\">Methods</h2>  \n<h3 id=\"add\"><code><a href=\"#add\">add</a> (inT:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a>):<a class=\"type\" title=\"\" href=\"constpointer\">ConstPointer</a>&lt;<span class=\"type\">T</span>&gt;</code></h3>\n \n<h3 id=\"at\"><code><a href=\"#at\">at</a> (inIndex:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a>):<span class=\"type\">T</span> </code></h3>\n \n<h3 id=\"dec\"><code><a href=\"#dec\">dec</a> ():<a class=\"type\" title=\"\" href=\"constpointer\">ConstPointer</a>&lt;<span class=\"type\">T</span>&gt;</code></h3>\n \n<h3 id=\"geq\"><code><a href=\"#geq\">geq</a> (inOther:<a class=\"type\" title=\"\" href=\"pointer\">Pointer</a>&lt;<span class=\"type\">T</span>&gt;):<a class=\"type\" title=\"The standard Boolean type, which can either be true or false.\" href=\"http://api.haxe.org/Bool.html\">Bool</a></code></h3>\n \n<h3 id=\"get_value\"><code><a href=\"#get_value\">get_value</a> ():<span class=\"type\">T</span> </code></h3>\n \n<h3 id=\"gt\"><code><a href=\"#gt\">gt</a> (inOther:<a class=\"type\" title=\"\" href=\"pointer\">Pointer</a>&lt;<span class=\"type\">T</span>&gt;):<a class=\"type\" title=\"The standard Boolean type, which can either be true or false.\" href=\"http://api.haxe.org/Bool.html\">Bool</a></code></h3>\n \n<h3 id=\"inc\"><code><a href=\"#inc\">inc</a> ():<a class=\"type\" title=\"\" href=\"constpointer\">ConstPointer</a>&lt;<span class=\"type\">T</span>&gt;</code></h3>\n \n<h3 id=\"incBy\"><code><a href=\"#incBy\">incBy</a> (inT:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a>):<a class=\"type\" title=\"\" href=\"constpointer\">ConstPointer</a>&lt;<span class=\"type\">T</span>&gt;</code></h3>\n \n<h3 id=\"leq\"><code><a href=\"#leq\">leq</a> (inOther:<a class=\"type\" title=\"\" href=\"pointer\">Pointer</a>&lt;<span class=\"type\">T</span>&gt;):<a class=\"type\" title=\"The standard Boolean type, which can either be true or false.\" href=\"http://api.haxe.org/Bool.html\">Bool</a></code></h3>\n \n<h3 id=\"lt\"><code><a href=\"#lt\">lt</a> (inOther:<a class=\"type\" title=\"\" href=\"pointer\">Pointer</a>&lt;<span class=\"type\">T</span>&gt;):<a class=\"type\" title=\"The standard Boolean type, which can either be true or false.\" href=\"http://api.haxe.org/Bool.html\">Bool</a></code></h3>\n \n<h3 id=\"postIncVal\"><code><a href=\"#postIncVal\">postIncVal</a> ():<span class=\"type\">T</span> </code></h3>\n \n<h3 id=\"rawCast\"><code><a href=\"#rawCast\">rawCast</a>&lt;<span class=\"type\">Other</span>&gt; ():<a class=\"type\" title=\"\" href=\"rawpointer\">RawPointer</a>&lt;<span class=\"type\">Other</span>&gt;</code></h3>\n \n<h3 id=\"reinterpret\"><code><a href=\"#reinterpret\">reinterpret</a>&lt;<span class=\"type\">Other</span>&gt; ():<a class=\"type\" title=\"\" href=\"pointer\">Pointer</a>&lt;<span class=\"type\">Other</span>&gt;</code></h3>\n  <h2 class=\"section\">Static methods</h2>  \n<h3 id=\"fromPointer\"><code><span class=\"label\">static</span> <a href=\"#fromPointer\">fromPointer</a>&lt;<span class=\"type\">T</span>&gt; (inNativePointer:<a class=\"type\" title=\"Dynamic is a special type which is compatible with all other types.\" href=\"http://api.haxe.org/Dynamic.html\">Dynamic</a>):<a class=\"type\" title=\"\" href=\"constpointer\">ConstPointer</a>&lt;<span class=\"type\">T</span>&gt;</code></h3>\n \n<h3 id=\"fromRaw\"><code><span class=\"label\">static</span> <a href=\"#fromRaw\">fromRaw</a>&lt;<span class=\"type\">T</span>&gt; (ptr:<a class=\"type\" title=\"\" href=\"rawconstpointer\">RawConstPointer</a>&lt;<span class=\"type\">T</span>&gt;):<a class=\"type\" title=\"\" href=\"constpointer\">ConstPointer</a>&lt;<span class=\"type\">T</span>&gt;</code></h3>\n<div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/cpp/ConstPointer.html\" class=\"_attribution-link\">http://api.haxe.org/cpp/ConstPointer.html</a>\n  </p>\n</div>\n","int8":"<h1>abstract Int8(<a class=\"type\" title=\"\" href=\"int8\">Int8</a>) </h1>\n<p>package cpp</p> <p> from <a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a> to <a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a> </p>\n<p class=\"availability\">Available on cpp</p> <div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/cpp/Int8.html\" class=\"_attribution-link\">http://api.haxe.org/cpp/Int8.html</a>\n  </p>\n</div>\n","nativearray":"<h1> class NativeArray </h1>\n<p>package cpp</p> <p class=\"availability\">Available on cpp</p>     <h2 class=\"section\">Static methods</h2>  \n<h3 id=\"address\"><code><span class=\"label\">static</span> <span class=\"label\">inline</span> <a href=\"#address\">address</a>&lt;<span class=\"type\">T</span>&gt; (inArray:<a class=\"type\" title=\"An Array is a storage for values.\" href=\"http://api.haxe.org/Array.html\">Array</a>&lt;<span class=\"type\">T</span>&gt;, inIndex:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a>):<a class=\"type\" title=\"\" href=\"pointer\">Pointer</a>&lt;<span class=\"type\">T</span>&gt;</code></h3>\n \n<h3 id=\"blit\"><code><span class=\"label\">static</span> <span class=\"label\">inline</span> <a href=\"#blit\">blit</a>&lt;<span class=\"type\">T</span>&gt; (ioDestArray:<a class=\"type\" title=\"An Array is a storage for values.\" href=\"http://api.haxe.org/Array.html\">Array</a>&lt;<span class=\"type\">T</span>&gt;, inDestElement:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a>, inSourceArray:<a class=\"type\" title=\"An Array is a storage for values.\" href=\"http://api.haxe.org/Array.html\">Array</a>&lt;<span class=\"type\">T</span>&gt;, inSourceElement:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a>, inElementCount:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a>):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n \n<h3 id=\"getBase\"><code><span class=\"label\">static</span> <span class=\"label\">inline</span> <a href=\"#getBase\">getBase</a> (inArray:<a class=\"type\" title=\"An Array is a storage for values.\" href=\"http://api.haxe.org/Array.html\">Array</a>&lt;<a class=\"type\" title=\"Dynamic is a special type which is compatible with all other types.\" href=\"http://api.haxe.org/Dynamic.html\">Dynamic</a>&gt;):<a class=\"type\" title=\"\" href=\"arraybase\">ArrayBase</a></code></h3>\n \n<h3 id=\"memcmp\"><code><span class=\"label\">static</span> <span class=\"label\">inline</span> <a href=\"#memcmp\">memcmp</a>&lt;<span class=\"type\">T</span>&gt; (inArrayA:<a class=\"type\" title=\"An Array is a storage for values.\" href=\"http://api.haxe.org/Array.html\">Array</a>&lt;<span class=\"type\">T</span>&gt;, inArrayB:<a class=\"type\" title=\"An Array is a storage for values.\" href=\"http://api.haxe.org/Array.html\">Array</a>&lt;<span class=\"type\">T</span>&gt;):<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a></code></h3>\n \n<h3 id=\"setData\"><code><span class=\"label\">static</span> <span class=\"label\">inline</span> <a href=\"#setData\">setData</a>&lt;<span class=\"type\">T</span>&gt; (inArray:<a class=\"type\" title=\"An Array is a storage for values.\" href=\"http://api.haxe.org/Array.html\">Array</a>&lt;<span class=\"type\">T</span>&gt;, inData:<a class=\"type\" title=\"\" href=\"pointer\">Pointer</a>&lt;<span class=\"type\">T</span>&gt;, inElementCount:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a>):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n \n<h3 id=\"setSize\"><code><span class=\"label\">static</span> <span class=\"label\">inline</span> <a href=\"#setSize\">setSize</a>&lt;<span class=\"type\">T</span>&gt; (ioArray:<a class=\"type\" title=\"An Array is a storage for values.\" href=\"http://api.haxe.org/Array.html\">Array</a>&lt;<span class=\"type\">T</span>&gt;, inSize:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a>):<a class=\"type\" title=\"An Array is a storage for values.\" href=\"http://api.haxe.org/Array.html\">Array</a>&lt;<span class=\"type\">T</span>&gt;</code></h3>\n \n<h3 id=\"setUnmanagedData\"><code><span class=\"label\">static</span> <span class=\"label\">inline</span> <a href=\"#setUnmanagedData\">setUnmanagedData</a>&lt;<span class=\"type\">T</span>&gt; (inArray:<a class=\"type\" title=\"An Array is a storage for values.\" href=\"http://api.haxe.org/Array.html\">Array</a>&lt;<span class=\"type\">T</span>&gt;, inData:<a class=\"type\" title=\"\" href=\"pointer\">Pointer</a>&lt;<span class=\"type\">T</span>&gt;, inElementCount:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a>):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n \n<h3 id=\"unsafeGet\"><code><span class=\"label\">static</span> <span class=\"label\">inline</span> <a href=\"#unsafeGet\">unsafeGet</a>&lt;<span class=\"type\">T</span>&gt; (inDestArray:<a class=\"type\" title=\"An Array is a storage for values.\" href=\"http://api.haxe.org/Array.html\">Array</a>&lt;<span class=\"type\">T</span>&gt;, inIndex:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a>):<span class=\"type\">T</span> </code></h3>\n \n<h3 id=\"unsafeSet\"><code><span class=\"label\">static</span> <span class=\"label\">inline</span> <a href=\"#unsafeSet\">unsafeSet</a>&lt;<span class=\"type\">T</span>&gt; (ioDestArray:<a class=\"type\" title=\"An Array is a storage for values.\" href=\"http://api.haxe.org/Array.html\">Array</a>&lt;<span class=\"type\">T</span>&gt;, inIndex:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a>, inValue:<span class=\"type\">T</span>):<span class=\"type\">T</span> </code></h3>\n \n<h3 id=\"zero\"><code><span class=\"label\">static</span> <span class=\"label\">inline</span> <a href=\"#zero\">zero</a>&lt;<span class=\"type\">T</span>&gt; (ioDestArray:<a class=\"type\" title=\"An Array is a storage for values.\" href=\"http://api.haxe.org/Array.html\">Array</a>&lt;<span class=\"type\">T</span>&gt;, ?inFirst:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a>, ?inElements:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a>):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n<div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/cpp/NativeArray.html\" class=\"_attribution-link\">http://api.haxe.org/cpp/NativeArray.html</a>\n  </p>\n</div>\n","nativestring":"<h1> class NativeString </h1>\n<p>package cpp</p> <p class=\"availability\">Available on cpp</p>     <h2 class=\"section\">Static methods</h2>  \n<h3 id=\"c_str\"><code><span class=\"label\">static</span> <span class=\"label\">inline</span> <a href=\"#c_str\">c_str</a> (inString:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>):<a class=\"type\" title=\"\" href=\"constpointer\">ConstPointer</a>&lt;<a class=\"type\" title=\"\" href=\"char\">Char</a>&gt;</code></h3>\n \n<h3 id=\"fromPointer\"><code><span class=\"label\">static</span> <span class=\"label\">inline</span> <a href=\"#fromPointer\">fromPointer</a> (inPtr:<a class=\"type\" title=\"\" href=\"constpointer\">ConstPointer</a>&lt;<a class=\"type\" title=\"\" href=\"char\">Char</a>&gt;):<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a></code></h3>\n \n<h3 id=\"raw\"><code><span class=\"label\">static</span> <span class=\"label\">inline</span> <a href=\"#raw\">raw</a> (inString:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>):<a class=\"type\" title=\"\" href=\"rawconstpointer\">RawConstPointer</a>&lt;<a class=\"type\" title=\"\" href=\"char\">Char</a>&gt;</code></h3>\n<div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/cpp/NativeString.html\" class=\"_attribution-link\">http://api.haxe.org/cpp/NativeString.html</a>\n  </p>\n</div>\n","nativexml":"<h1>typedef NativeXml </h1>\n<p>package cpp</p> <p> alias for <a class=\"type\" title=\"\" href=\"xml\">Xml</a> </p> <p class=\"availability\">Available on cpp</p> <div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/cpp/NativeXml.html\" class=\"_attribution-link\">http://api.haxe.org/cpp/NativeXml.html</a>\n  </p>\n</div>\n","object":"<h1>abstract Object(<a class=\"type\" title=\"\" href=\"hxobjectptr\">HxObjectPtr</a>) </h1>\n<p>package cpp</p> \n<p class=\"availability\">Available on cpp</p>  <h2 class=\"section\">Methods</h2>  \n<h3 id=\"to\"><code><span class=\"label\">inline</span> <a href=\"#to\">to</a> ():<a class=\"type\" title=\"Dynamic is a special type which is compatible with all other types.\" href=\"http://api.haxe.org/Dynamic.html\">Dynamic</a></code></h3>\n  <h2 class=\"section\">Static methods</h2>  \n<h3 id=\"from\"><code><span class=\"label\">static</span> <span class=\"label\">inline</span> <a href=\"#from\">from</a> (x:<a class=\"type\" title=\"Dynamic is a special type which is compatible with all other types.\" href=\"http://api.haxe.org/Dynamic.html\">Dynamic</a>):<a class=\"type\" title=\"\" href=\"object\">Object</a></code></h3>\n<div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/cpp/Object.html\" class=\"_attribution-link\">http://api.haxe.org/cpp/Object.html</a>\n  </p>\n</div>\n","lib":"<h1> class Lib </h1>\n<p>package cpp</p> <p class=\"availability\">Available on cpp</p>     <h2 class=\"section\">Static methods</h2>  \n<h3 id=\"_loadPrime\"><code><span class=\"label\">static</span> <a href=\"#_loadPrime\">_loadPrime</a> (lib:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>, prim:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>, signature:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>, quietFail:<a class=\"type\" title=\"The standard Boolean type, which can either be true or false.\" href=\"http://api.haxe.org/Bool.html\">Bool</a> = false):<a class=\"type\" title=\"Dynamic is a special type which is compatible with all other types.\" href=\"http://api.haxe.org/Dynamic.html\">Dynamic</a></code></h3>\n \n<h3 id=\"bytesReference\"><code><span class=\"label\">static</span> <span class=\"label\">inline</span> <a href=\"#bytesReference\">bytesReference</a> (s:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>):<a class=\"type\" title=\"\" href=\"http://api.haxe.org/haxe/io/Bytes.html\">Bytes</a></code></h3>\n<p>Returns bytes referencing the content of a string.</p> <pre><code>  Use with extreme caution - changing constant strings will crash.\n  Changing one string can cause others to change unexpectedly.\n  Only really safe if you are using it read-only or if it comes from stringReference above\n</code></pre> \n<h3 id=\"getBinDirectory\"><code><span class=\"label\">static</span> <a href=\"#getBinDirectory\">getBinDirectory</a> ():<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a></code></h3>\n \n<h3 id=\"getDllExtension\"><code><span class=\"label\">static</span> <a href=\"#getDllExtension\">getDllExtension</a> ():<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a></code></h3>\n \n<h3 id=\"haxeToNeko\"><code><span class=\"label\">static</span> <a href=\"#haxeToNeko\">haxeToNeko</a> (v:<a class=\"type\" title=\"Dynamic is a special type which is compatible with all other types.\" href=\"http://api.haxe.org/Dynamic.html\">Dynamic</a>):<a class=\"type\" title=\"Dynamic is a special type which is compatible with all other types.\" href=\"http://api.haxe.org/Dynamic.html\">Dynamic</a></code></h3>\n<p>This function is used to make porting from neko to cpp easy. It does not need to do anything because the c-code can work with any Dynamic</p> \n<h3 id=\"load\"><code><span class=\"label\">static</span> <a href=\"#load\">load</a> (lib:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>, prim:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>, nargs:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a>):<a class=\"type\" title=\"Dynamic is a special type which is compatible with all other types.\" href=\"http://api.haxe.org/Dynamic.html\">Dynamic</a></code></h3>\n<p>Load and return a Cpp primitive from a DLL library.</p> \n<h3 id=\"loadLazy\"><code><span class=\"label\">static</span> <a href=\"#loadLazy\">loadLazy</a> (lib:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>, prim:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>, nargs:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a>):<a class=\"type\" title=\"Dynamic is a special type which is compatible with all other types.\" href=\"http://api.haxe.org/Dynamic.html\">Dynamic</a></code></h3>\n<p>Tries to load, and always returns a valid function, but the function may throw if called.</p> \n<h3 id=\"nekoToHaxe\"><code><span class=\"label\">static</span> <a href=\"#nekoToHaxe\">nekoToHaxe</a> (v:<a class=\"type\" title=\"Dynamic is a special type which is compatible with all other types.\" href=\"http://api.haxe.org/Dynamic.html\">Dynamic</a>):<a class=\"type\" title=\"Dynamic is a special type which is compatible with all other types.\" href=\"http://api.haxe.org/Dynamic.html\">Dynamic</a></code></h3>\n<p>This function is used to make porting from neko to cpp easy. It does not need to do anything because the c-code can work with any Dynamic</p> \n<h3 id=\"print\"><code><span class=\"label\">static</span> <a href=\"#print\">print</a> (v:<a class=\"type\" title=\"Dynamic is a special type which is compatible with all other types.\" href=\"http://api.haxe.org/Dynamic.html\">Dynamic</a>):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n<p>Print the specified value on the default output.</p> \n<h3 id=\"println\"><code><span class=\"label\">static</span> <a href=\"#println\">println</a> (v:<a class=\"type\" title=\"Dynamic is a special type which is compatible with all other types.\" href=\"http://api.haxe.org/Dynamic.html\">Dynamic</a>):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n<p>Print the specified value on the default output followed by a newline character.</p> \n<h3 id=\"pushDllSearchPath\"><code><span class=\"label\">static</span> <a href=\"#pushDllSearchPath\">pushDllSearchPath</a> (inPath:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n \n<h3 id=\"rethrow\"><code><span class=\"label\">static</span> <a href=\"#rethrow\">rethrow</a> (inExp:<a class=\"type\" title=\"Dynamic is a special type which is compatible with all other types.\" href=\"http://api.haxe.org/Dynamic.html\">Dynamic</a>):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n \n<h3 id=\"setFloatFormat\"><code><span class=\"label\">static</span> <a href=\"#setFloatFormat\">setFloatFormat</a> (inFormat:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n \n<h3 id=\"stringReference\"><code><span class=\"label\">static</span> <a href=\"#stringReference\">stringReference</a> (inBytes:<a class=\"type\" title=\"\" href=\"http://api.haxe.org/haxe/io/Bytes.html\">Bytes</a>):<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a></code></h3>\n \n<h3 id=\"unloadAllLibraries\"><code><span class=\"label\">static</span> <a href=\"#unloadAllLibraries\">unloadAllLibraries</a> ():<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a></code></h3>\n<p>Unloaded all dynamic libraries in reverse order of loading. Returns the number of libraries unloaded.</p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/cpp/Lib.html\" class=\"_attribution-link\">http://api.haxe.org/cpp/Lib.html</a>\n  </p>\n</div>\n","pointer":"<h1> class Pointer&lt;<span class=\"type\">T</span>&gt; </h1>\n<p>package cpp</p> <p> extends <a class=\"type\" title=\"\" href=\"constpointer\">ConstPointer</a>&lt;<span class=\"type\">T</span>&gt; </p> <p class=\"availability\">Available on cpp</p>     <h2 class=\"section\">Fields</h2>  \n<h3 id=\"ref\"><code> <a href=\"#ref\">ref</a>:<span class=\"type\">T</span> </code></h3>\n  <h2 class=\"section\">Methods</h2>  \n<h3 id=\"destroy\"><code><a href=\"#destroy\">destroy</a> ():<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n \n<h3 id=\"destroyArray\"><code><a href=\"#destroyArray\">destroyArray</a> ():<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n \n<h3 id=\"get_raw\"><code><a href=\"#get_raw\">get_raw</a> ():<a class=\"type\" title=\"\" href=\"rawpointer\">RawPointer</a>&lt;<span class=\"type\">T</span>&gt;</code></h3>\n \n<h3 id=\"get_ref\"><code><a href=\"#get_ref\">get_ref</a> ():<span class=\"type\">T</span> </code></h3>\n \n<h3 id=\"postIncRef\"><code><a href=\"#postIncRef\">postIncRef</a> ():<span class=\"type\">T</span> </code></h3>\n \n<h3 id=\"set_ref\"><code><a href=\"#set_ref\">set_ref</a> (t:<span class=\"type\">T</span>):<span class=\"type\">T</span> </code></h3>\n  <h2 class=\"section\">Static methods</h2>  \n<h3 id=\"addressOf\"><code><span class=\"label\">static</span> <a href=\"#addressOf\">addressOf</a>&lt;<span class=\"type\">T</span>&gt; (inVariable:<span class=\"type\">T</span>):<a class=\"type\" title=\"\" href=\"pointer\">Pointer</a>&lt;<span class=\"type\">T</span>&gt;</code></h3>\n \n<h3 id=\"arrayElem\"><code><span class=\"label\">static</span> <a href=\"#arrayElem\">arrayElem</a>&lt;<span class=\"type\">T</span>&gt; (array:<a class=\"type\" title=\"An Array is a storage for values.\" href=\"http://api.haxe.org/Array.html\">Array</a>&lt;<span class=\"type\">T</span>&gt;, inElem:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a>):<a class=\"type\" title=\"\" href=\"pointer\">Pointer</a>&lt;<span class=\"type\">T</span>&gt;</code></h3>\n \n<h3 id=\"fromHandle\"><code><span class=\"label\">static</span> <a href=\"#fromHandle\">fromHandle</a>&lt;<span class=\"type\">T</span>&gt; (inHandle:<a class=\"type\" title=\"Dynamic is a special type which is compatible with all other types.\" href=\"http://api.haxe.org/Dynamic.html\">Dynamic</a>, ?inKind:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>):<a class=\"type\" title=\"\" href=\"pointer\">Pointer</a>&lt;<span class=\"type\">T</span>&gt;</code></h3>\n \n<h3 id=\"fromPointer\"><code><span class=\"label\">static</span> <a href=\"#fromPointer\">fromPointer</a>&lt;<span class=\"type\">T</span>&gt; (inNativePointer:<a class=\"type\" title=\"Dynamic is a special type which is compatible with all other types.\" href=\"http://api.haxe.org/Dynamic.html\">Dynamic</a>):<a class=\"type\" title=\"\" href=\"pointer\">Pointer</a>&lt;<span class=\"type\">T</span>&gt;</code></h3>\n \n<h3 id=\"fromRaw\"><code><span class=\"label\">static</span> <a href=\"#fromRaw\">fromRaw</a>&lt;<span class=\"type\">T</span>&gt; (ptr:<a class=\"type\" title=\"\" href=\"rawpointer\">RawPointer</a>&lt;<span class=\"type\">T</span>&gt;):<a class=\"type\" title=\"\" href=\"pointer\">Pointer</a>&lt;<span class=\"type\">T</span>&gt;</code></h3>\n<div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/cpp/Pointer.html\" class=\"_attribution-link\">http://api.haxe.org/cpp/Pointer.html</a>\n  </p>\n</div>\n","prime":"<h1> class Prime </h1>\n<p>package cpp</p> <p class=\"availability\">Available on cpp</p>     <h2 class=\"section\">Static methods</h2>  \n<h3 id=\"_loadPrime\"><code><span class=\"label\">static</span> <a href=\"#_loadPrime\">_loadPrime</a> (lib:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>, prim:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>, signature:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>, quietFail:<a class=\"type\" title=\"The standard Boolean type, which can either be true or false.\" href=\"http://api.haxe.org/Bool.html\">Bool</a> = false):<a class=\"type\" title=\"Dynamic is a special type which is compatible with all other types.\" href=\"http://api.haxe.org/Dynamic.html\">Dynamic</a></code></h3>\n \n<h3 id=\"load\"><code><span class=\"label\">static</span> <a href=\"#load\">load</a> (inModule:<a class=\"type\" title=\"Dynamic is a special type which is compatible with all other types.\" href=\"http://api.haxe.org/Dynamic.html\">Dynamic</a>, inName:<a class=\"type\" title=\"Dynamic is a special type which is compatible with all other types.\" href=\"http://api.haxe.org/Dynamic.html\">Dynamic</a>, inSig:<a class=\"type\" title=\"Dynamic is a special type which is compatible with all other types.\" href=\"http://api.haxe.org/Dynamic.html\">Dynamic</a>, inAllowFail:<a class=\"type\" title=\"Dynamic is a special type which is compatible with all other types.\" href=\"http://api.haxe.org/Dynamic.html\">Dynamic</a>):<a class=\"type\" title=\"Dynamic is a special type which is compatible with all other types.\" href=\"http://api.haxe.org/Dynamic.html\">Dynamic</a></code></h3>\n \n<h3 id=\"nekoInit\"><code><span class=\"label\">static</span> <a href=\"#nekoInit\">nekoInit</a> (inModuleName:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>):<a class=\"type\" title=\"The standard Boolean type, which can either be true or false.\" href=\"http://api.haxe.org/Bool.html\">Bool</a></code></h3>\n<div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/cpp/Prime.html\" class=\"_attribution-link\">http://api.haxe.org/cpp/Prime.html</a>\n  </p>\n</div>\n","random":"<h1> class Random </h1>\n<p>package cpp</p> <p class=\"availability\">Available on cpp</p>     <h2 class=\"section\">Constructor</h2>  \n<h3 id=\"new\"><code><a href=\"#new\">new</a> ()</code></h3>\n  <h2 class=\"section\">Methods</h2>  \n<h3 id=\"float\"><code><a href=\"#float\">float</a> ():<a class=\"type\" title=\"The standard Float type, this is a double-precision IEEE 64bit float.\" href=\"http://api.haxe.org/Float.html\">Float</a></code></h3>\n \n<h3 id=\"int\"><code><a href=\"#int\">int</a> (max:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a>):<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a></code></h3>\n \n<h3 id=\"setSeed\"><code><a href=\"#setSeed\">setSeed</a> (s:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a>):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n<div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/cpp/Random.html\" class=\"_attribution-link\">http://api.haxe.org/cpp/Random.html</a>\n  </p>\n</div>\n","rawconstpointer":"<h1> class RawConstPointer&lt;<span class=\"type\">T</span>&gt; </h1>\n<p>package cpp</p> <p class=\"availability\">Available on cpp</p> <p> <span class=\"muted\">extended by</span> <a class=\"type\" title=\"\" href=\"rawpointer\">RawPointer</a> </p>   <div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/cpp/RawConstPointer.html\" class=\"_attribution-link\">http://api.haxe.org/cpp/RawConstPointer.html</a>\n  </p>\n</div>\n","rawpointer":"<h1> class RawPointer&lt;<span class=\"type\">T</span>&gt; </h1>\n<p>package cpp</p> <p> extends <a class=\"type\" title=\"\" href=\"rawconstpointer\">RawConstPointer</a>&lt;<span class=\"type\">T</span>&gt; </p> <p class=\"availability\">Available on cpp</p>   <div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/cpp/RawPointer.html\" class=\"_attribution-link\">http://api.haxe.org/cpp/RawPointer.html</a>\n  </p>\n</div>\n","uint16":"<h1>abstract UInt16(<a class=\"type\" title=\"\" href=\"uint16\">UInt16</a>) </h1>\n<p>package cpp</p> <p> from <a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a> to <a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a> </p>\n<p class=\"availability\">Available on cpp</p> <div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/cpp/UInt16.html\" class=\"_attribution-link\">http://api.haxe.org/cpp/UInt16.html</a>\n  </p>\n</div>\n","uint32":"<h1>abstract UInt32(<a class=\"type\" title=\"\" href=\"uint32\">UInt32</a>) </h1>\n<p>package cpp</p> <p> from <a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a> to <a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a> </p>\n<p class=\"availability\">Available on cpp</p> <div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/cpp/UInt32.html\" class=\"_attribution-link\">http://api.haxe.org/cpp/UInt32.html</a>\n  </p>\n</div>\n","uint64":"<h1>abstract UInt64(<a class=\"type\" title=\"\" href=\"uint64\">UInt64</a>) </h1>\n<p>package cpp</p> <p> from <a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a> to <a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a> </p>\n<p class=\"availability\">Available on cpp</p> <div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/cpp/UInt64.html\" class=\"_attribution-link\">http://api.haxe.org/cpp/UInt64.html</a>\n  </p>\n</div>\n","uint8":"<h1>abstract UInt8(<a class=\"type\" title=\"\" href=\"uint8\">UInt8</a>) </h1>\n<p>package cpp</p> <p> from <a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a> to <a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a> </p>\n<p class=\"availability\">Available on cpp</p> <div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/cpp/UInt8.html\" class=\"_attribution-link\">http://api.haxe.org/cpp/UInt8.html</a>\n  </p>\n</div>\n","void":"<h1> class Void </h1>\n<p>package cpp</p> <p class=\"availability\">Available on cpp</p>   <div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/cpp/Void.html\" class=\"_attribution-link\">http://api.haxe.org/cpp/Void.html</a>\n  </p>\n</div>\n","xmltype":"<h1>enum XmlType </h1>\n<p>package cpp</p>\n\n<p>defined in cpp.NativeXml</p>\n<p class=\"availability\">Available on cpp</p> <div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/cpp/XmlType.html\" class=\"_attribution-link\">http://api.haxe.org/cpp/XmlType.html</a>\n  </p>\n</div>\n","abi/abi":"<h1> class Abi </h1>\n<p>package cpp.abi</p> <p class=\"availability\">Available on cpp</p> <p> <span class=\"muted\">extended by</span> <a class=\"type\" title=\"\" href=\"cdecl\">CDecl</a>, <a class=\"type\" title=\"\" href=\"fastcall\">FastCall</a>, <a class=\"type\" title=\"\" href=\"stdcall\">StdCall</a>, <a class=\"type\" title=\"\" href=\"thiscall\">ThisCall</a>, <a class=\"type\" title=\"\" href=\"winapi\">Winapi</a> </p>   <div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/cpp/abi/Abi.html\" class=\"_attribution-link\">http://api.haxe.org/cpp/abi/Abi.html</a>\n  </p>\n</div>\n","abi/cdecl":"<h1> class CDecl </h1>\n<p>package cpp.abi</p> <p> extends <a class=\"type\" title=\"\" href=\"abi\">Abi</a> </p> <p class=\"availability\">Available on cpp</p>   <div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/cpp/abi/CDecl.html\" class=\"_attribution-link\">http://api.haxe.org/cpp/abi/CDecl.html</a>\n  </p>\n</div>\n","abi/fastcall":"<h1> class FastCall </h1>\n<p>package cpp.abi</p> <p> extends <a class=\"type\" title=\"\" href=\"abi\">Abi</a> </p> <p class=\"availability\">Available on cpp</p>   <div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/cpp/abi/FastCall.html\" class=\"_attribution-link\">http://api.haxe.org/cpp/abi/FastCall.html</a>\n  </p>\n</div>\n","abi/stdcall":"<h1> class StdCall </h1>\n<p>package cpp.abi</p> <p> extends <a class=\"type\" title=\"\" href=\"abi\">Abi</a> </p> <p class=\"availability\">Available on cpp</p>   <div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/cpp/abi/StdCall.html\" class=\"_attribution-link\">http://api.haxe.org/cpp/abi/StdCall.html</a>\n  </p>\n</div>\n","abi/thiscall":"<h1> class ThisCall </h1>\n<p>package cpp.abi</p> <p> extends <a class=\"type\" title=\"\" href=\"abi\">Abi</a> </p> <p class=\"availability\">Available on cpp</p>   <div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/cpp/abi/ThisCall.html\" class=\"_attribution-link\">http://api.haxe.org/cpp/abi/ThisCall.html</a>\n  </p>\n</div>\n","abi/winapi":"<h1> class Winapi </h1>\n<p>package cpp.abi</p> <p> extends <a class=\"type\" title=\"\" href=\"abi\">Abi</a> </p> <p class=\"availability\">Available on cpp</p>   <div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/cpp/abi/Winapi.html\" class=\"_attribution-link\">http://api.haxe.org/cpp/abi/Winapi.html</a>\n  </p>\n</div>\n","link/staticmysql":"<h1> class StaticMysql </h1>\n<p>package cpp.link</p> <p class=\"availability\">Available on cpp</p>   <div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/cpp/link/StaticMysql.html\" class=\"_attribution-link\">http://api.haxe.org/cpp/link/StaticMysql.html</a>\n  </p>\n</div>\n","xml":"<h1> class Xml </h1>\n<p>package cpp</p> \n<p>defined in cpp.NativeXml</p>\n<p class=\"availability\">Available on cpp</p>     <h2 class=\"section\">Fields</h2>  \n<h3 id=\"nodeName\"><code> <a href=\"#nodeName\">nodeName</a>:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a></code></h3>\n \n<h3 id=\"nodeType\"><code> <span class=\"label\">read only</span> <a href=\"#nodeType\">nodeType</a>:<a class=\"type\" title=\"\" href=\"xmltype\">XmlType</a></code></h3>\n \n<h3 id=\"nodeValue\"><code> <a href=\"#nodeValue\">nodeValue</a>:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a></code></h3>\n \n<h3 id=\"parent\"><code> <span class=\"label\">read only</span> <a href=\"#parent\">parent</a>:<a class=\"type\" title=\"\" href=\"xml\">Xml</a></code></h3>\n  <h2 class=\"section\">Methods</h2>  \n<h3 id=\"addChild\"><code><a href=\"#addChild\">addChild</a> (x:<a class=\"type\" title=\"\" href=\"xml\">Xml</a>):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n \n<h3 id=\"attributes\"><code><a href=\"#attributes\">attributes</a> ():<a class=\"type\" title=\"An Iterator is a structure that permits iteration over elements of type T.\" href=\"http://api.haxe.org/Iterator.html\">Iterator</a>&lt;<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>&gt;</code></h3>\n \n<h3 id=\"elements\"><code><a href=\"#elements\">elements</a> ():<a class=\"type\" title=\"An Iterator is a structure that permits iteration over elements of type T.\" href=\"http://api.haxe.org/Iterator.html\">Iterator</a>&lt;<a class=\"type\" title=\"\" href=\"xml\">Xml</a>&gt;</code></h3>\n \n<h3 id=\"elementsNamed\"><code><a href=\"#elementsNamed\">elementsNamed</a> (name:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>):<a class=\"type\" title=\"An Iterator is a structure that permits iteration over elements of type T.\" href=\"http://api.haxe.org/Iterator.html\">Iterator</a>&lt;<a class=\"type\" title=\"\" href=\"xml\">Xml</a>&gt;</code></h3>\n \n<h3 id=\"exists\"><code><a href=\"#exists\">exists</a> (att:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>):<a class=\"type\" title=\"The standard Boolean type, which can either be true or false.\" href=\"http://api.haxe.org/Bool.html\">Bool</a></code></h3>\n \n<h3 id=\"firstChild\"><code><a href=\"#firstChild\">firstChild</a> ():<a class=\"type\" title=\"\" href=\"xml\">Xml</a></code></h3>\n \n<h3 id=\"firstElement\"><code><a href=\"#firstElement\">firstElement</a> ():<a class=\"type\" title=\"\" href=\"xml\">Xml</a></code></h3>\n \n<h3 id=\"get\"><code><a href=\"#get\">get</a> (att:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>):<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a></code></h3>\n \n<h3 id=\"insertChild\"><code><a href=\"#insertChild\">insertChild</a> (x:<a class=\"type\" title=\"\" href=\"xml\">Xml</a>, pos:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a>):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n \n<h3 id=\"iterator\"><code><a href=\"#iterator\">iterator</a> ():<a class=\"type\" title=\"An Iterator is a structure that permits iteration over elements of type T.\" href=\"http://api.haxe.org/Iterator.html\">Iterator</a>&lt;<a class=\"type\" title=\"\" href=\"xml\">Xml</a>&gt;</code></h3>\n \n<h3 id=\"remove\"><code><a href=\"#remove\">remove</a> (att:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n \n<h3 id=\"removeChild\"><code><a href=\"#removeChild\">removeChild</a> (x:<a class=\"type\" title=\"\" href=\"xml\">Xml</a>):<a class=\"type\" title=\"The standard Boolean type, which can either be true or false.\" href=\"http://api.haxe.org/Bool.html\">Bool</a></code></h3>\n \n<h3 id=\"set\"><code><a href=\"#set\">set</a> (att:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>, value:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n \n<h3 id=\"toString\"><code><a href=\"#toString\">toString</a> ():<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a></code></h3>\n  <h2 class=\"section\">Static fields</h2>  \n<h3 id=\"CData\"><code><span class=\"label\">static</span> <span class=\"label\">read only</span> <a href=\"#CData\">CData</a>:<a class=\"type\" title=\"\" href=\"xmltype\">XmlType</a></code></h3>\n \n<h3 id=\"Comment\"><code><span class=\"label\">static</span> <span class=\"label\">read only</span> <a href=\"#Comment\">Comment</a>:<a class=\"type\" title=\"\" href=\"xmltype\">XmlType</a></code></h3>\n \n<h3 id=\"DocType\"><code><span class=\"label\">static</span> <span class=\"label\">read only</span> <a href=\"#DocType\">DocType</a>:<a class=\"type\" title=\"\" href=\"xmltype\">XmlType</a></code></h3>\n \n<h3 id=\"Document\"><code><span class=\"label\">static</span> <span class=\"label\">read only</span> <a href=\"#Document\">Document</a>:<a class=\"type\" title=\"\" href=\"xmltype\">XmlType</a></code></h3>\n \n<h3 id=\"Element\"><code><span class=\"label\">static</span> <span class=\"label\">read only</span> <a href=\"#Element\">Element</a>:<a class=\"type\" title=\"\" href=\"xmltype\">XmlType</a></code></h3>\n \n<h3 id=\"PCData\"><code><span class=\"label\">static</span> <span class=\"label\">read only</span> <a href=\"#PCData\">PCData</a>:<a class=\"type\" title=\"\" href=\"xmltype\">XmlType</a></code></h3>\n \n<h3 id=\"ProcessingInstruction\"><code><span class=\"label\">static</span> <span class=\"label\">read only</span> <a href=\"#ProcessingInstruction\">ProcessingInstruction</a>:<a class=\"type\" title=\"\" href=\"xmltype\">XmlType</a></code></h3>\n  <h2 class=\"section\">Static methods</h2>  \n<h3 id=\"createCData\"><code><span class=\"label\">static</span> <a href=\"#createCData\">createCData</a> (data:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>):<a class=\"type\" title=\"\" href=\"xml\">Xml</a></code></h3>\n \n<h3 id=\"createComment\"><code><span class=\"label\">static</span> <a href=\"#createComment\">createComment</a> (data:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>):<a class=\"type\" title=\"\" href=\"xml\">Xml</a></code></h3>\n \n<h3 id=\"createDocType\"><code><span class=\"label\">static</span> <a href=\"#createDocType\">createDocType</a> (data:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>):<a class=\"type\" title=\"\" href=\"xml\">Xml</a></code></h3>\n \n<h3 id=\"createDocument\"><code><span class=\"label\">static</span> <a href=\"#createDocument\">createDocument</a> ():<a class=\"type\" title=\"\" href=\"xml\">Xml</a></code></h3>\n \n<h3 id=\"createElement\"><code><span class=\"label\">static</span> <a href=\"#createElement\">createElement</a> (name:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>):<a class=\"type\" title=\"\" href=\"xml\">Xml</a></code></h3>\n \n<h3 id=\"createPCData\"><code><span class=\"label\">static</span> <a href=\"#createPCData\">createPCData</a> (data:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>):<a class=\"type\" title=\"\" href=\"xml\">Xml</a></code></h3>\n \n<h3 id=\"createProcessingInstruction\"><code><span class=\"label\">static</span> <a href=\"#createProcessingInstruction\">createProcessingInstruction</a> (data:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>):<a class=\"type\" title=\"\" href=\"xml\">Xml</a></code></h3>\n \n<h3 id=\"parse\"><code><span class=\"label\">static</span> <a href=\"#parse\">parse</a> (str:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>):<a class=\"type\" title=\"\" href=\"xml\">Xml</a></code></h3>\n<div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/cpp/Xml.html\" class=\"_attribution-link\">http://api.haxe.org/cpp/Xml.html</a>\n  </p>\n</div>\n","link/staticregexp":"<h1> class StaticRegexp </h1>\n<p>package cpp.link</p> <p class=\"availability\">Available on cpp</p>   <div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/cpp/link/StaticRegexp.html\" class=\"_attribution-link\">http://api.haxe.org/cpp/link/StaticRegexp.html</a>\n  </p>\n</div>\n","link/staticsqlite":"<h1> class StaticSqlite </h1>\n<p>package cpp.link</p> <p class=\"availability\">Available on cpp</p>   <div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/cpp/link/StaticSqlite.html\" class=\"_attribution-link\">http://api.haxe.org/cpp/link/StaticSqlite.html</a>\n  </p>\n</div>\n","link/staticstd":"<h1> class StaticStd </h1>\n<p>package cpp.link</p> <p class=\"availability\">Available on cpp</p>   <div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/cpp/link/StaticStd.html\" class=\"_attribution-link\">http://api.haxe.org/cpp/link/StaticStd.html</a>\n  </p>\n</div>\n","link/staticzlib":"<h1> class StaticZlib </h1>\n<p>package cpp.link</p> <p class=\"availability\">Available on cpp</p>   <div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/cpp/link/StaticZlib.html\" class=\"_attribution-link\">http://api.haxe.org/cpp/link/StaticZlib.html</a>\n  </p>\n</div>\n","vm/deque":"<h1> class Deque&lt;<span class=\"type\">T</span>&gt; </h1>\n<p>package cpp.vm</p> <p class=\"availability\">Available on cpp</p>     <h2 class=\"section\">Constructor</h2>  \n<h3 id=\"new\"><code><a href=\"#new\">new</a> ()</code></h3>\n  <h2 class=\"section\">Methods</h2>  \n<h3 id=\"add\"><code><a href=\"#add\">add</a> (i:<span class=\"type\">T</span>):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n \n<h3 id=\"pop\"><code><a href=\"#pop\">pop</a> (block:<a class=\"type\" title=\"The standard Boolean type, which can either be true or false.\" href=\"http://api.haxe.org/Bool.html\">Bool</a>):<a class=\"type\" title=\"&lt;code&gt;&lt;a href=\" . href=\"http://api.haxe.org/Null.html\">Null</a>&lt;<span class=\"type\">T</span>&gt;</code></h3>\n \n<h3 id=\"push\"><code><a href=\"#push\">push</a> (i:<span class=\"type\">T</span>):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n<div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/cpp/vm/Deque.html\" class=\"_attribution-link\">http://api.haxe.org/cpp/vm/Deque.html</a>\n  </p>\n</div>\n","vm/executiontrace":"<h1> class ExecutionTrace </h1>\n<p>package cpp.vm</p> <p class=\"availability\">Available on cpp</p>     <h2 class=\"section\">Static methods</h2>  \n<h3 id=\"traceFunctions\"><code><span class=\"label\">static</span> <a href=\"#traceFunctions\">traceFunctions</a> ():<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n \n<h3 id=\"traceLines\"><code><span class=\"label\">static</span> <a href=\"#traceLines\">traceLines</a> ():<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n \n<h3 id=\"traceOff\"><code><span class=\"label\">static</span> <a href=\"#traceOff\">traceOff</a> ():<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n<div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/cpp/vm/ExecutionTrace.html\" class=\"_attribution-link\">http://api.haxe.org/cpp/vm/ExecutionTrace.html</a>\n  </p>\n</div>\n","vm/lock":"<h1> class Lock </h1>\n<p>package cpp.vm</p> <p class=\"availability\">Available on cpp</p>     <h2 class=\"section\">Constructor</h2>  \n<h3 id=\"new\"><code><a href=\"#new\">new</a> ()</code></h3>\n  <h2 class=\"section\">Methods</h2>  \n<h3 id=\"release\"><code><a href=\"#release\">release</a> ():<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n \n<h3 id=\"wait\"><code><a href=\"#wait\">wait</a> (timeout:<a class=\"type\" title=\"The standard Float type, this is a double-precision IEEE 64bit float.\" href=\"http://api.haxe.org/Float.html\">Float</a> = -1):<a class=\"type\" title=\"The standard Boolean type, which can either be true or false.\" href=\"http://api.haxe.org/Bool.html\">Bool</a></code></h3>\n<div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/cpp/vm/Lock.html\" class=\"_attribution-link\">http://api.haxe.org/cpp/vm/Lock.html</a>\n  </p>\n</div>\n","vm/mutex":"<h1> class Mutex </h1>\n<p>package cpp.vm</p> <p class=\"availability\">Available on cpp</p>     <h2 class=\"section\">Constructor</h2>  \n<h3 id=\"new\"><code><a href=\"#new\">new</a> ()</code></h3>\n  <h2 class=\"section\">Methods</h2>  \n<h3 id=\"acquire\"><code><a href=\"#acquire\">acquire</a> ():<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n \n<h3 id=\"release\"><code><a href=\"#release\">release</a> ():<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n \n<h3 id=\"tryAcquire\"><code><a href=\"#tryAcquire\">tryAcquire</a> ():<a class=\"type\" title=\"The standard Boolean type, which can either be true or false.\" href=\"http://api.haxe.org/Bool.html\">Bool</a></code></h3>\n<div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/cpp/vm/Mutex.html\" class=\"_attribution-link\">http://api.haxe.org/cpp/vm/Mutex.html</a>\n  </p>\n</div>\n","vm/parameter":"<h1> class Parameter </h1>\n<p>package cpp.vm</p> \n<p>defined in cpp.vm.Debugger</p>\n<p class=\"availability\">Available on cpp</p>   <div class=\"indent\"> <p>Parameter describes a function parameter. Instances of this class are embedded in stack frame objects to describe the function parameters that were used in the invocation of the function that defines that stack frame.</p> </div>  <h2 class=\"section\">Constructor</h2>  \n<h3 id=\"new\"><code><a href=\"#new\">new</a> (name:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>, value:<a class=\"type\" title=\"Dynamic is a special type which is compatible with all other types.\" href=\"http://api.haxe.org/Dynamic.html\">Dynamic</a>)</code></h3>\n  <h2 class=\"section\">Fields</h2>  \n<h3 id=\"name\"><code> <span class=\"label\">read only</span> <a href=\"#name\">name</a>:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a></code></h3>\n \n<h3 id=\"value\"><code> <span class=\"label\">read only</span> <a href=\"#value\">value</a>:<a class=\"type\" title=\"Dynamic is a special type which is compatible with all other types.\" href=\"http://api.haxe.org/Dynamic.html\">Dynamic</a></code></h3>\n<div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/cpp/vm/Parameter.html\" class=\"_attribution-link\">http://api.haxe.org/cpp/vm/Parameter.html</a>\n  </p>\n</div>\n","vm/profiler":"<h1> class Profiler </h1>\n<p>package cpp.vm</p> <p class=\"availability\">Available on cpp</p>     <h2 class=\"section\">Static methods</h2>  \n<h3 id=\"start\"><code><span class=\"label\">static</span> <a href=\"#start\">start</a> (?inDumpFile:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n \n<h3 id=\"stop\"><code><span class=\"label\">static</span> <a href=\"#stop\">stop</a> ():<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n<div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/cpp/vm/Profiler.html\" class=\"_attribution-link\">http://api.haxe.org/cpp/vm/Profiler.html</a>\n  </p>\n</div>\n","vm/stackframe":"<h1> class StackFrame </h1>\n<p>package cpp.vm</p> \n<p>defined in cpp.vm.Debugger</p>\n<p class=\"availability\">Available on cpp</p>   <div class=\"indent\"> <p>StackFrame describes one call stack frame.</p> </div>  <h2 class=\"section\">Constructor</h2>  \n<h3 id=\"new\"><code><a href=\"#new\">new</a> (fileName:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>, lineNumber:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a>, className:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>, functionName:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>)</code></h3>\n  <h2 class=\"section\">Fields</h2>  \n<h3 id=\"className\"><code> <span class=\"label\">read only</span> <a href=\"#className\">className</a>:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a></code></h3>\n \n<h3 id=\"fileName\"><code> <span class=\"label\">read only</span> <a href=\"#fileName\">fileName</a>:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a></code></h3>\n \n<h3 id=\"functionName\"><code> <span class=\"label\">read only</span> <a href=\"#functionName\">functionName</a>:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a></code></h3>\n \n<h3 id=\"lineNumber\"><code> <span class=\"label\">read only</span> <a href=\"#lineNumber\">lineNumber</a>:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a></code></h3>\n \n<h3 id=\"parameters\"><code> <span class=\"label\">read only</span> <a href=\"#parameters\">parameters</a>:<a class=\"type\" title=\"An Array is a storage for values.\" href=\"http://api.haxe.org/Array.html\">Array</a>&lt;<a class=\"type\" title=\"Parameter describes a function parameter.\" href=\"parameter\">Parameter</a>&gt;</code></h3>\n<div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/cpp/vm/StackFrame.html\" class=\"_attribution-link\">http://api.haxe.org/cpp/vm/StackFrame.html</a>\n  </p>\n</div>\n","vm/thread":"<h1> class Thread </h1>\n<p>package cpp.vm</p> <p class=\"availability\">Available on cpp</p>     <h2 class=\"section\">Fields</h2>  \n<h3 id=\"handle\"><code> <span class=\"label\">read only</span> <a href=\"#handle\">handle</a>:<a class=\"type\" title=\"\" href=\"threadhandle\">ThreadHandle</a></code></h3>\n  <h2 class=\"section\">Methods</h2>  \n<h3 id=\"sendMessage\"><code><a href=\"#sendMessage\">sendMessage</a> (msg:<a class=\"type\" title=\"Dynamic is a special type which is compatible with all other types.\" href=\"http://api.haxe.org/Dynamic.html\">Dynamic</a>):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n<p>Send a message to the thread queue. This message can be readed by using [readMessage].</p>  <h2 class=\"section\">Static methods</h2>  \n<h3 id=\"create\"><code><span class=\"label\">static</span> <a href=\"#create\">create</a> (callb:<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a> ‑&gt; <a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a>):<a class=\"type\" title=\"\" href=\"thread\">Thread</a></code></h3>\n<p>Creates a new thread that will execute the [callb] function, then exit.</p> \n<h3 id=\"current\"><code><span class=\"label\">static</span> <a href=\"#current\">current</a> ():<a class=\"type\" title=\"\" href=\"thread\">Thread</a></code></h3>\n<p>Returns the current thread.</p> \n<h3 id=\"readMessage\"><code><span class=\"label\">static</span> <a href=\"#readMessage\">readMessage</a> (block:<a class=\"type\" title=\"The standard Boolean type, which can either be true or false.\" href=\"http://api.haxe.org/Bool.html\">Bool</a>):<a class=\"type\" title=\"Dynamic is a special type which is compatible with all other types.\" href=\"http://api.haxe.org/Dynamic.html\">Dynamic</a></code></h3>\n<p>Reads a message from the thread queue. If [block] is true, the function blocks until a message is available. If [block] is false, the function returns [null] if no message is available.</p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/cpp/vm/Thread.html\" class=\"_attribution-link\">http://api.haxe.org/cpp/vm/Thread.html</a>\n  </p>\n</div>\n","vm/threadhandle":"<h1>typedef ThreadHandle </h1>\n<p>package cpp.vm</p> <p> alias for <a class=\"type\" title=\"Dynamic is a special type which is compatible with all other types.\" href=\"http://api.haxe.org/Dynamic.html\">Dynamic</a> </p> \n<p>defined in cpp.vm.Thread</p>\n<p class=\"availability\">Available on cpp</p> <div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/cpp/vm/ThreadHandle.html\" class=\"_attribution-link\">http://api.haxe.org/cpp/vm/ThreadHandle.html</a>\n  </p>\n</div>\n","vm/threadinfo":"<h1> class ThreadInfo </h1>\n<p>package cpp.vm</p> \n<p>defined in cpp.vm.Debugger</p>\n<p class=\"availability\">Available on cpp</p>   <div class=\"indent\"> <p>ThreadInfo describes the state of a single thread.</p> </div>  <h2 class=\"section\">Constructor</h2>  \n<h3 id=\"new\"><code><a href=\"#new\">new</a> (number:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a>, status:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a>, breakpoint:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a> = -1, criticalErrorDescription:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>)</code></h3>\n  <h2 class=\"section\">Fields</h2>  \n<h3 id=\"breakpoint\"><code> <span class=\"label\">read only</span> <a href=\"#breakpoint\">breakpoint</a>:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a></code></h3>\n \n<h3 id=\"criticalErrorDescription\"><code> <span class=\"label\">read only</span> <a href=\"#criticalErrorDescription\">criticalErrorDescription</a>:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a></code></h3>\n \n<h3 id=\"number\"><code> <span class=\"label\">read only</span> <a href=\"#number\">number</a>:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a></code></h3>\n \n<h3 id=\"stack\"><code> <span class=\"label\">read only</span> <a href=\"#stack\">stack</a>:<a class=\"type\" title=\"An Array is a storage for values.\" href=\"http://api.haxe.org/Array.html\">Array</a>&lt;<a class=\"type\" title=\"StackFrame describes one call stack frame.\" href=\"stackframe\">StackFrame</a>&gt;</code></h3>\n \n<h3 id=\"status\"><code> <span class=\"label\">read only</span> <a href=\"#status\">status</a>:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a></code></h3>\n  <h2 class=\"section\">Static fields</h2>  \n<h3 id=\"STATUS_RUNNING\"><code><span class=\"label\">static</span> <span class=\"label\">inline</span> <span class=\"label\">read only</span> <a href=\"#STATUS_RUNNING\">STATUS_RUNNING</a>:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a><span> = 1</span> </code></h3>\n \n<h3 id=\"STATUS_STOPPED_BREAKPOINT\"><code><span class=\"label\">static</span> <span class=\"label\">inline</span> <span class=\"label\">read only</span> <a href=\"#STATUS_STOPPED_BREAKPOINT\">STATUS_STOPPED_BREAKPOINT</a>:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a><span> = 3</span> </code></h3>\n \n<h3 id=\"STATUS_STOPPED_BREAK_IMMEDIATE\"><code><span class=\"label\">static</span> <span class=\"label\">inline</span> <span class=\"label\">read only</span> <a href=\"#STATUS_STOPPED_BREAK_IMMEDIATE\">STATUS_STOPPED_BREAK_IMMEDIATE</a>:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a><span> = 2</span> </code></h3>\n \n<h3 id=\"STATUS_STOPPED_CRITICAL_ERROR\"><code><span class=\"label\">static</span> <span class=\"label\">inline</span> <span class=\"label\">read only</span> <a href=\"#STATUS_STOPPED_CRITICAL_ERROR\">STATUS_STOPPED_CRITICAL_ERROR</a>:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a><span> = 5</span> </code></h3>\n \n<h3 id=\"STATUS_STOPPED_UNCAUGHT_EXCEPTION\"><code><span class=\"label\">static</span> <span class=\"label\">inline</span> <span class=\"label\">read only</span> <a href=\"#STATUS_STOPPED_UNCAUGHT_EXCEPTION\">STATUS_STOPPED_UNCAUGHT_EXCEPTION</a>:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a><span> = 4</span> </code></h3>\n<div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/cpp/vm/ThreadInfo.html\" class=\"_attribution-link\">http://api.haxe.org/cpp/vm/ThreadInfo.html</a>\n  </p>\n</div>\n","vm/tls":"<h1> class Tls&lt;<span class=\"type\">T</span>&gt; </h1>\n<p>package cpp.vm</p> <p class=\"availability\">Available on cpp</p>     <h2 class=\"section\">Constructor</h2>  \n<h3 id=\"new\"><code><a href=\"#new\">new</a> ()</code></h3>\n  <h2 class=\"section\">Fields</h2>  \n<h3 id=\"value\"><code> <a href=\"#value\">value</a>:<span class=\"type\">T</span> </code></h3>\n<div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/cpp/vm/Tls.html\" class=\"_attribution-link\">http://api.haxe.org/cpp/vm/Tls.html</a>\n  </p>\n</div>\n","vm/unsafe":"<h1> class Unsafe </h1>\n<p>package cpp.vm</p> <p class=\"availability\">Available on cpp</p>     <h2 class=\"section\">Static methods</h2>  \n<h3 id=\"unsafeSet\"><code><span class=\"label\">static</span> <span class=\"label\">inline</span> <a href=\"#unsafeSet\">unsafeSet</a> (outForced:<a class=\"type\" title=\"Dynamic is a special type which is compatible with all other types.\" href=\"http://api.haxe.org/Dynamic.html\">Dynamic</a>, inValue:<a class=\"type\" title=\"Dynamic is a special type which is compatible with all other types.\" href=\"http://api.haxe.org/Dynamic.html\">Dynamic</a>):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n<div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/cpp/vm/Unsafe.html\" class=\"_attribution-link\">http://api.haxe.org/cpp/vm/Unsafe.html</a>\n  </p>\n</div>\n","function":"<h1> class Function&lt;<span class=\"type\">T</span>, <span class=\"type\">ABI</span>&gt; </h1>\n<p>package cpp</p> <p class=\"availability\">Available on cpp</p>     <h2 class=\"section\">Constructor</h2>  \n<h3 id=\"new\"><code><a href=\"#new\">new</a> (d:<a class=\"type\" title=\"Dynamic is a special type which is compatible with all other types.\" href=\"http://api.haxe.org/Dynamic.html\">Dynamic</a>)</code></h3>\n  <h2 class=\"section\">Fields</h2>  \n<h3 id=\"call\"><code> <span class=\"label\">read only</span> <a href=\"#call\">call</a>:<span class=\"type\">T</span> </code></h3>\n  <h2 class=\"section\">Methods</h2>  \n<h3 id=\"geq\"><code><a href=\"#geq\">geq</a> (inOther:<a class=\"type\" title=\"\" href=\"function\">Function</a>&lt;<span class=\"type\">T</span>, <span class=\"type\">ABI</span>&gt;):<a class=\"type\" title=\"The standard Boolean type, which can either be true or false.\" href=\"http://api.haxe.org/Bool.html\">Bool</a></code></h3>\n \n<h3 id=\"gt\"><code><a href=\"#gt\">gt</a> (inOther:<a class=\"type\" title=\"\" href=\"function\">Function</a>&lt;<span class=\"type\">T</span>, <span class=\"type\">ABI</span>&gt;):<a class=\"type\" title=\"The standard Boolean type, which can either be true or false.\" href=\"http://api.haxe.org/Bool.html\">Bool</a></code></h3>\n \n<h3 id=\"leq\"><code><a href=\"#leq\">leq</a> (inOther:<a class=\"type\" title=\"\" href=\"function\">Function</a>&lt;<span class=\"type\">T</span>, <span class=\"type\">ABI</span>&gt;):<a class=\"type\" title=\"The standard Boolean type, which can either be true or false.\" href=\"http://api.haxe.org/Bool.html\">Bool</a></code></h3>\n \n<h3 id=\"lt\"><code><a href=\"#lt\">lt</a> (inOther:<a class=\"type\" title=\"\" href=\"function\">Function</a>&lt;<span class=\"type\">T</span>, <span class=\"type\">ABI</span>&gt;):<a class=\"type\" title=\"The standard Boolean type, which can either be true or false.\" href=\"http://api.haxe.org/Bool.html\">Bool</a></code></h3>\n  <h2 class=\"section\">Static methods</h2>  \n<h3 id=\"fromStaticFunction\"><code><span class=\"label\">static</span> <a href=\"#fromStaticFunction\">fromStaticFunction</a>&lt;<span class=\"type\">T</span>&gt; (inStaticFunction:<span class=\"type\">T</span>):<a class=\"type\" title=\"\" href=\"callable\">Callable</a>&lt;<span class=\"type\">T</span>&gt;</code></h3>\n \n<h3 id=\"getProcAddress\"><code><span class=\"label\">static</span> <a href=\"#getProcAddress\">getProcAddress</a>&lt;<span class=\"type\">T</span>, <span class=\"type\">ABI</span>&gt; (inModule:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>, inFunction:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>):<a class=\"type\" title=\"\" href=\"function\">Function</a>&lt;<span class=\"type\">T</span>, <span class=\"type\">ABI</span>&gt;</code></h3>\n<div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/cpp/Function.html\" class=\"_attribution-link\">http://api.haxe.org/cpp/Function.html</a>\n  </p>\n</div>\n","vm/gc":"<h1> class Gc </h1>\n<p>package cpp.vm</p> <p class=\"availability\">Available on cpp</p>     <h2 class=\"section\">Static fields</h2>  \n<h3 id=\"MEM_INFO_CURRENT\"><code><span class=\"label\">static</span> <span class=\"label\">inline</span> <span class=\"label\">read only</span> <a href=\"#MEM_INFO_CURRENT\">MEM_INFO_CURRENT</a>:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a><span> = 2</span> </code></h3>\n \n<h3 id=\"MEM_INFO_LARGE\"><code><span class=\"label\">static</span> <span class=\"label\">inline</span> <span class=\"label\">read only</span> <a href=\"#MEM_INFO_LARGE\">MEM_INFO_LARGE</a>:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a><span> = 3</span> </code></h3>\n \n<h3 id=\"MEM_INFO_RESERVED\"><code><span class=\"label\">static</span> <span class=\"label\">inline</span> <span class=\"label\">read only</span> <a href=\"#MEM_INFO_RESERVED\">MEM_INFO_RESERVED</a>:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a><span> = 1</span> </code></h3>\n \n<h3 id=\"MEM_INFO_USAGE\"><code><span class=\"label\">static</span> <span class=\"label\">inline</span> <span class=\"label\">read only</span> <a href=\"#MEM_INFO_USAGE\">MEM_INFO_USAGE</a>:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a><span> = 0</span> </code></h3>\n  <h2 class=\"section\">Static methods</h2>  \n<h3 id=\"compact\"><code><span class=\"label\">static</span> <a href=\"#compact\">compact</a> ():<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n \n<h3 id=\"doNotKill\"><code><span class=\"label\">static</span> <a href=\"#doNotKill\">doNotKill</a> (inObject:<a class=\"type\" title=\"Dynamic is a special type which is compatible with all other types.\" href=\"http://api.haxe.org/Dynamic.html\">Dynamic</a>):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n \n<h3 id=\"enable\"><code><span class=\"label\">static</span> <a href=\"#enable\">enable</a> (inEnable:<a class=\"type\" title=\"The standard Boolean type, which can either be true or false.\" href=\"http://api.haxe.org/Bool.html\">Bool</a>):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n \n<h3 id=\"enterGCFreeZone\"><code><span class=\"label\">static</span> <a href=\"#enterGCFreeZone\">enterGCFreeZone</a> ():<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n \n<h3 id=\"exitGCFreeZone\"><code><span class=\"label\">static</span> <a href=\"#exitGCFreeZone\">exitGCFreeZone</a> ():<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n \n<h3 id=\"getNextZombie\"><code><span class=\"label\">static</span> <a href=\"#getNextZombie\">getNextZombie</a> ():<a class=\"type\" title=\"Dynamic is a special type which is compatible with all other types.\" href=\"http://api.haxe.org/Dynamic.html\">Dynamic</a></code></h3>\n \n<h3 id=\"memInfo\"><code><span class=\"label\">static</span> <a href=\"#memInfo\">memInfo</a> (inWhatInfo:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a>):<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a></code></h3>\n \n<h3 id=\"memUsage\"><code><span class=\"label\">static</span> <a href=\"#memUsage\">memUsage</a> ():<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a></code></h3>\n \n<h3 id=\"run\"><code><span class=\"label\">static</span> <a href=\"#run\">run</a> (major:<a class=\"type\" title=\"The standard Boolean type, which can either be true or false.\" href=\"http://api.haxe.org/Bool.html\">Bool</a>):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n \n<h3 id=\"safePoint\"><code><span class=\"label\">static</span> <a href=\"#safePoint\">safePoint</a> ():<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n \n<h3 id=\"setFinalizer\"><code><span class=\"label\">static</span> <span class=\"label\">inline</span> <a href=\"#setFinalizer\">setFinalizer</a>&lt;<span class=\"type\">T</span>&gt; (inObject:<span class=\"type\">T</span>, inFinalizer:<a class=\"type\" title=\"\" href=\"../callable\">Callable</a>&lt;<span class=\"type\">T</span> ‑&gt; <a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a>&gt;):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n \n<h3 id=\"trace\"><code><span class=\"label\">static</span> <a href=\"#trace\">trace</a> (sought:<a class=\"type\" title=\"An abstract type that represents a Class.\" href=\"http://api.haxe.org/Class.html\">Class</a>&lt;<a class=\"type\" title=\"Dynamic is a special type which is compatible with all other types.\" href=\"http://api.haxe.org/Dynamic.html\">Dynamic</a>&gt;, printInstances:<a class=\"type\" title=\"The standard Boolean type, which can either be true or false.\" href=\"http://api.haxe.org/Bool.html\">Bool</a> = true):<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a></code></h3>\n \n<h3 id=\"versionCheck\"><code><span class=\"label\">static</span> <a href=\"#versionCheck\">versionCheck</a> ():<a class=\"type\" title=\"The standard Boolean type, which can either be true or false.\" href=\"http://api.haxe.org/Bool.html\">Bool</a></code></h3>\n<div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/cpp/vm/Gc.html\" class=\"_attribution-link\">http://api.haxe.org/cpp/vm/Gc.html</a>\n  </p>\n</div>\n","vm/weakref":"<h1> class WeakRef&lt;<span class=\"type\">T</span>&gt; </h1>\n<p>package cpp.vm</p> <p class=\"availability\">Available on cpp</p>     <h2 class=\"section\">Constructor</h2>  \n<h3 id=\"new\"><code><a href=\"#new\">new</a> (inObject:<span class=\"type\">T</span>, inHard:<a class=\"type\" title=\"The standard Boolean type, which can either be true or false.\" href=\"http://api.haxe.org/Bool.html\">Bool</a> = false)</code></h3>\n  <h2 class=\"section\">Methods</h2>  \n<h3 id=\"get\"><code><a href=\"#get\">get</a> ():<span class=\"type\">T</span> </code></h3>\n \n<h3 id=\"set\"><code><a href=\"#set\">set</a> (inObject:<span class=\"type\">T</span>):<span class=\"type\">T</span> </code></h3>\n \n<h3 id=\"toString\"><code><a href=\"#toString\">toString</a> ():<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a></code></h3>\n<div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/cpp/vm/WeakRef.html\" class=\"_attribution-link\">http://api.haxe.org/cpp/vm/WeakRef.html</a>\n  </p>\n</div>\n","vm/debugger":"<h1> class Debugger </h1>\n<p>package cpp.vm</p> <p class=\"availability\">Available on cpp</p>   <div class=\"indent\"> <p>This class wraps the hxcpp C++ implementation to provide a Haxe interface to the low level debugging features</p> </div>  <h2 class=\"section\">Static fields</h2>  \n<h3 id=\"NONEXISTENT_VALUE\"><code><span class=\"label\">static</span> <a href=\"#NONEXISTENT_VALUE\">NONEXISTENT_VALUE</a>:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a><span> = '???'</span> </code></h3>\n \n<h3 id=\"STEP_INTO\"><code><span class=\"label\">static</span> <span class=\"label\">inline</span> <span class=\"label\">read only</span> <a href=\"#STEP_INTO\">STEP_INTO</a>:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a><span> = 1</span> </code></h3>\n \n<h3 id=\"STEP_OUT\"><code><span class=\"label\">static</span> <span class=\"label\">inline</span> <span class=\"label\">read only</span> <a href=\"#STEP_OUT\">STEP_OUT</a>:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a><span> = 3</span> </code></h3>\n \n<h3 id=\"STEP_OVER\"><code><span class=\"label\">static</span> <span class=\"label\">inline</span> <span class=\"label\">read only</span> <a href=\"#STEP_OVER\">STEP_OVER</a>:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a><span> = 2</span> </code></h3>\n \n<h3 id=\"THREAD_CREATED\"><code><span class=\"label\">static</span> <span class=\"label\">inline</span> <span class=\"label\">read only</span> <a href=\"#THREAD_CREATED\">THREAD_CREATED</a>:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a><span> = 1</span> </code></h3>\n \n<h3 id=\"THREAD_NOT_STOPPED\"><code><span class=\"label\">static</span> <a href=\"#THREAD_NOT_STOPPED\">THREAD_NOT_STOPPED</a>:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a><span> = '???'</span> </code></h3>\n \n<h3 id=\"THREAD_STARTED\"><code><span class=\"label\">static</span> <span class=\"label\">inline</span> <span class=\"label\">read only</span> <a href=\"#THREAD_STARTED\">THREAD_STARTED</a>:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a><span> = 3</span> </code></h3>\n \n<h3 id=\"THREAD_STOPPED\"><code><span class=\"label\">static</span> <span class=\"label\">inline</span> <span class=\"label\">read only</span> <a href=\"#THREAD_STOPPED\">THREAD_STOPPED</a>:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a><span> = 4</span> </code></h3>\n \n<h3 id=\"THREAD_TERMINATED\"><code><span class=\"label\">static</span> <span class=\"label\">inline</span> <span class=\"label\">read only</span> <a href=\"#THREAD_TERMINATED\">THREAD_TERMINATED</a>:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a><span> = 2</span> </code></h3>\n  <h2 class=\"section\">Static methods</h2>  \n<h3 id=\"addClassFunctionBreakpoint\"><code><span class=\"label\">static</span> <a href=\"#addClassFunctionBreakpoint\">addClassFunctionBreakpoint</a> (className:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>, functionName:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>):<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a></code></h3>\n<p>Adds a new class:function breakpoint. The breakpoint number of the newly added breakpoint is returned.</p> \n<h3 id=\"addFileLineBreakpoint\"><code><span class=\"label\">static</span> <a href=\"#addFileLineBreakpoint\">addFileLineBreakpoint</a> (file:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>, line:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a>):<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a></code></h3>\n<p>Adds a new file:line breakpoint. The breakpoint number of the newly added breakpoint is returned.</p> \n<h3 id=\"breakNow\"><code><span class=\"label\">static</span> <a href=\"#breakNow\">breakNow</a> (wait:<a class=\"type\" title=\"The standard Boolean type, which can either be true or false.\" href=\"http://api.haxe.org/Bool.html\">Bool</a> = true):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n<p>Breaks all threads except the debugger thread (which should be the same as the calling thread!).</p> <p>If [wait] is true, waits up to 2 seconds for all threads to be broken. Threads which are in blocking system calls and cannot break after 2 seconds remain running when this function returns.</p> \n<h3 id=\"continueThreads\"><code><span class=\"label\">static</span> <a href=\"#continueThreads\">continueThreads</a> (specialThreadNumber:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a>, continueCount:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a>):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n<p>Continue execution of all stopped threads. If specialThreadNumber is a valid thread number, then it will be continued past [continueCount] breakpoints instead of just 1 like all of the other threads.</p> \n<h3 id=\"deleteBreakpoint\"><code><span class=\"label\">static</span> <a href=\"#deleteBreakpoint\">deleteBreakpoint</a> (number:<a class=\"type\" title=\"&lt;code&gt;&lt;a href=\" . href=\"http://api.haxe.org/Null.html\">Null</a>&lt;<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a>&gt;):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n<p>Deletes a breakpoint, or all breakpoints.</p> \n<h3 id=\"enableCurrentThreadDebugging\"><code><span class=\"label\">static</span> <a href=\"#enableCurrentThreadDebugging\">enableCurrentThreadDebugging</a> (enabled:<a class=\"type\" title=\"The standard Boolean type, which can either be true or false.\" href=\"http://api.haxe.org/Bool.html\">Bool</a>):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n<p>This can be called to turn off (and then back on) all stopping of debugged threads temporarily. It should only be used by classes that actually implement the debugger to hide themselves from the debugger as necessary.</p> \n<h3 id=\"getClasses\"><code><span class=\"label\">static</span> <a href=\"#getClasses\">getClasses</a> ():<a class=\"type\" title=\"An Array is a storage for values.\" href=\"http://api.haxe.org/Array.html\">Array</a>&lt;<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>&gt;</code></h3>\n<p>Returns the set of class names of all classes known to the debugger. This is a copy of the original array and could be quite large. The caller should cache this value to avoid multiple copies needing to be made.</p> <p class=\"javadoc\">Returns:</p> <p class=\"indent inline-content\"> the set of class names of all classes known to the debugger. </p> \n<h3 id=\"getCurrentThreadNumber\"><code><span class=\"label\">static</span> <a href=\"#getCurrentThreadNumber\">getCurrentThreadNumber</a> ():<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a></code></h3>\n<p>Returns the thread number of the calling thread.</p> <p class=\"javadoc\">Returns:</p> <p class=\"indent inline-content\"> the thread number of the calling thread. </p> \n<h3 id=\"getFiles\"><code><span class=\"label\">static</span> <a href=\"#getFiles\">getFiles</a> ():<a class=\"type\" title=\"An Array is a storage for values.\" href=\"http://api.haxe.org/Array.html\">Array</a>&lt;<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>&gt;</code></h3>\n<p>Returns the set of source files known to the debugger. This is a copy of the original array and could be quite large. The caller should cache this value to avoid multiple copies needing to be made.</p> <p class=\"javadoc\">Returns:</p> <p class=\"indent inline-content\"> the set of source files known to the debugger. </p> \n<h3 id=\"getFilesFullPath\"><code><span class=\"label\">static</span> <a href=\"#getFilesFullPath\">getFilesFullPath</a> ():<a class=\"type\" title=\"An Array is a storage for values.\" href=\"http://api.haxe.org/Array.html\">Array</a>&lt;<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>&gt;</code></h3>\n<p>Returns the full paths of the set of source files known to the debugger. This is a copy of the original array and could be quite large. It is possible that this set will be empty, in which case the full paths are not known. The index of these files matches the index from \"getFiles\", so the full path for a given short path can be calculated.</p> <p class=\"javadoc\">Returns:</p> <p class=\"indent inline-content\"> the known full paths of the set of source files </p> \n<h3 id=\"getStackVariableValue\"><code><span class=\"label\">static</span> <a href=\"#getStackVariableValue\">getStackVariableValue</a> (threadNumber:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a>, stackFrameNumber:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a>, name:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>, unsafe:<a class=\"type\" title=\"The standard Boolean type, which can either be true or false.\" href=\"http://api.haxe.org/Bool.html\">Bool</a>):<a class=\"type\" title=\"Dynamic is a special type which is compatible with all other types.\" href=\"http://api.haxe.org/Dynamic.html\">Dynamic</a></code></h3>\n<p>Returns the value of a stack variable, or NONEXISTENT_VALUE if the requested value does not exist. If the thread is actively running and unsafe is not true, returns THREAD_NOT_STOPPED.</p> \n<h3 id=\"getStackVariables\"><code><span class=\"label\">static</span> <a href=\"#getStackVariables\">getStackVariables</a> (threadNumber:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a>, stackFrameNumber:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a>, unsafe:<a class=\"type\" title=\"The standard Boolean type, which can either be true or false.\" href=\"http://api.haxe.org/Bool.html\">Bool</a>):<a class=\"type\" title=\"An Array is a storage for values.\" href=\"http://api.haxe.org/Array.html\">Array</a>&lt;<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>&gt;</code></h3>\n<p>Returns the list of local variables (including \"this\", function arguments, and local variables) visible to the given thread at the given stack frame.</p> <p>Returns a list with a single entry, THREAD_NOT_STOPPED, if the thread is not stopped and thus variables cannot be fetched and unsafe is not true.</p> <p class=\"javadoc\">Returns:</p> <p class=\"indent inline-content\"> the list of local variables (including \"this\", function arguments, and local variables) visible to the given thread at the given stack frame. </p> \n<h3 id=\"getThreadInfo\"><code><span class=\"label\">static</span> <a href=\"#getThreadInfo\">getThreadInfo</a> (threadNumber:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a>, unsafe:<a class=\"type\" title=\"The standard Boolean type, which can either be true or false.\" href=\"http://api.haxe.org/Bool.html\">Bool</a>):<a class=\"type\" title=\"ThreadInfo describes the state of a single thread.\" href=\"threadinfo\">ThreadInfo</a></code></h3>\n<p>Returns a ThreadInfo object describing a single thread, or null if there is no such thread or the thread queried about was the debugger thread and unsafe was not true.</p> \n<h3 id=\"getThreadInfos\"><code><span class=\"label\">static</span> <a href=\"#getThreadInfos\">getThreadInfos</a> ():<a class=\"type\" title=\"An Array is a storage for values.\" href=\"http://api.haxe.org/Array.html\">Array</a>&lt;<a class=\"type\" title=\"ThreadInfo describes the state of a single thread.\" href=\"threadinfo\">ThreadInfo</a>&gt;</code></h3>\n<p>Returns a ThreadInfo object describing every thread that existed at the moment that the call was made, except for the debugger thread.</p> \n<h3 id=\"setEventNotificationHandler\"><code><span class=\"label\">static</span> <a href=\"#setEventNotificationHandler\">setEventNotificationHandler</a> (handler:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a> ‑&gt; <a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a> ‑&gt; <a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a> ‑&gt; <a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a> ‑&gt; <a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a> ‑&gt; <a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a> ‑&gt; <a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a> ‑&gt; <a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a>):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n<p>Sets the handler callback to be made when asynchronous events occur, specifically, when threads are created, terminated, started, or stopped. The calling thread becomes the \"debugger\" thread, which means that it will be discluded from any breakpoints and will not be reported on by any thread reporting requests.</p> <p>Be aware that this callback is made asynchronously and possibly by multiple threads simultaneously.</p> <p>Setting this to null prevents further callbacks.</p> <p>Throws a string exception if the program does not support debugging because it was not compiled with the HXCPP_DEBUGGER flag set.</p> <p class=\"javadoc\">Parameters:</p> <p class=\"indent inline-content\"> <code>handler</code> is a function that will be called back by asynchronous thread events. Note that this function is called directly from the thread experiencing the event and the handler should return quickly to avoid blocking the calling thread unnecessarily. The paramaters to handler are: - threadNumber, the thread number of the event - event, one of THREAD_CREATED, THREAD_TERMINATED, <pre><code>THREAD_STARTED, or THREAD_STOPPED\n</code></pre><ul>\n<li>stackFrame, the stack frame number at which the thread is stopped, undefined if event is not THREAD_STOPPED</li>\n<li>className, the class name at which the thread is stopped, undefined if event is not THREAD_STOPPED</li>\n<li>functionName, the function name at which the thread is stopped, undefined if event is not THREAD_STOPPED</li>\n<li>fileName, the file name at which the thread is stopped, undefined if event is not THREAD_STOPPED</li>\n<li>lineNumber, the line number at which the thread is stopped, undefined if event is not THREAD_STOPPED</li>\n</ul> </p>  \n<h3 id=\"setStackVariableValue\"><code><span class=\"label\">static</span> <a href=\"#setStackVariableValue\">setStackVariableValue</a> (threadNumber:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a>, stackFrameNumber:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a>, name:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>, value:<a class=\"type\" title=\"Dynamic is a special type which is compatible with all other types.\" href=\"http://api.haxe.org/Dynamic.html\">Dynamic</a>, unsafe:<a class=\"type\" title=\"The standard Boolean type, which can either be true or false.\" href=\"http://api.haxe.org/Bool.html\">Bool</a>):<a class=\"type\" title=\"Dynamic is a special type which is compatible with all other types.\" href=\"http://api.haxe.org/Dynamic.html\">Dynamic</a></code></h3>\n<p>Sets the value of a stack variable and returns that value. If the variable does not exist, on the stack, this function returns NONEXISTENT_VALUE. If the thread is actively running and unsafe is not true, returns THREAD_NOT_STOPPED, and the value is not set.</p> \n<h3 id=\"stepThread\"><code><span class=\"label\">static</span> <a href=\"#stepThread\">stepThread</a> (threadNumber:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a>, stepType:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a>, stepCount:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a> = 1):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n<p>Single steps the given thread.</p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/cpp/vm/Debugger.html\" class=\"_attribution-link\">http://api.haxe.org/cpp/vm/Debugger.html</a>\n  </p>\n</div>\n","cppia/host":"<h1> class Host </h1>\n<p>package cpp.cppia</p> <p class=\"availability\">Available on cpp</p>     <h2 class=\"section\">Static methods</h2>  \n<h3 id=\"main\"><code><span class=\"label\">static</span> <a href=\"#main\">main</a> ():<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n \n<h3 id=\"run\"><code><span class=\"label\">static</span> <a href=\"#run\">run</a> (source:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n<div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/cpp/cppia/Host.html\" class=\"_attribution-link\">http://api.haxe.org/cpp/cppia/Host.html</a>\n  </p>\n</div>\n","cppia/hostclasses":"<h1> class HostClasses </h1>\n<p>package cpp.cppia</p> <p class=\"availability\">Available on cpp</p>   <div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/cpp/cppia/HostClasses.html\" class=\"_attribution-link\">http://api.haxe.org/cpp/cppia/HostClasses.html</a>\n  </p>\n</div>\n","net/poll":"<h1> class Poll </h1>\n<p>package cpp.net</p> <p class=\"availability\">Available on cpp</p>     <h2 class=\"section\">Constructor</h2>  \n<h3 id=\"new\"><code><a href=\"#new\">new</a> (n:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a>)</code></h3>\n  <h2 class=\"section\">Fields</h2>  \n<h3 id=\"readIndexes\"><code> <a href=\"#readIndexes\">readIndexes</a>:<a class=\"type\" title=\"An Array is a storage for values.\" href=\"http://api.haxe.org/Array.html\">Array</a>&lt;<a class=\"type\" title=\"Dynamic is a special type which is compatible with all other types.\" href=\"http://api.haxe.org/Dynamic.html\">Dynamic</a>&gt;</code></h3>\n \n<h3 id=\"writeIndexes\"><code> <a href=\"#writeIndexes\">writeIndexes</a>:<a class=\"type\" title=\"An Array is a storage for values.\" href=\"http://api.haxe.org/Array.html\">Array</a>&lt;<a class=\"type\" title=\"Dynamic is a special type which is compatible with all other types.\" href=\"http://api.haxe.org/Dynamic.html\">Dynamic</a>&gt;</code></h3>\n  <h2 class=\"section\">Methods</h2>  \n<h3 id=\"events\"><code><a href=\"#events\">events</a> (?t:<a class=\"type\" title=\"The standard Float type, this is a double-precision IEEE 64bit float.\" href=\"http://api.haxe.org/Float.html\">Float</a>):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n \n<h3 id=\"poll\"><code><a href=\"#poll\">poll</a> (a:<a class=\"type\" title=\"An Array is a storage for values.\" href=\"http://api.haxe.org/Array.html\">Array</a>&lt;<a class=\"type\" title=\"A TCP socket class : allow you to both connect to a given server and exchange messages or start your own server and wait for connections.\" href=\"http://api.haxe.org/sys/net/Socket.html\">Socket</a>&gt;, ?t:<a class=\"type\" title=\"The standard Float type, this is a double-precision IEEE 64bit float.\" href=\"http://api.haxe.org/Float.html\">Float</a>):<a class=\"type\" title=\"An Array is a storage for values.\" href=\"http://api.haxe.org/Array.html\">Array</a>&lt;<a class=\"type\" title=\"A TCP socket class : allow you to both connect to a given server and exchange messages or start your own server and wait for connections.\" href=\"http://api.haxe.org/sys/net/Socket.html\">Socket</a>&gt;</code></h3>\n \n<h3 id=\"prepare\"><code><a href=\"#prepare\">prepare</a> (read:<a class=\"type\" title=\"An Array is a storage for values.\" href=\"http://api.haxe.org/Array.html\">Array</a>&lt;<a class=\"type\" title=\"A TCP socket class : allow you to both connect to a given server and exchange messages or start your own server and wait for connections.\" href=\"http://api.haxe.org/sys/net/Socket.html\">Socket</a>&gt;, write:<a class=\"type\" title=\"An Array is a storage for values.\" href=\"http://api.haxe.org/Array.html\">Array</a>&lt;<a class=\"type\" title=\"A TCP socket class : allow you to both connect to a given server and exchange messages or start your own server and wait for connections.\" href=\"http://api.haxe.org/sys/net/Socket.html\">Socket</a>&gt;):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n<div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/cpp/net/Poll.html\" class=\"_attribution-link\">http://api.haxe.org/cpp/net/Poll.html</a>\n  </p>\n</div>\n","zip/compress":"<h1>typedef Compress </h1>\n<p>package cpp.zip</p> <p> alias for <a class=\"type\" title=\"\" href=\"http://api.haxe.org/haxe/zip/Compress.html\">Compress</a> </p> <p class=\"availability\">Available on cpp</p> <div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/cpp/zip/Compress.html\" class=\"_attribution-link\">http://api.haxe.org/cpp/zip/Compress.html</a>\n  </p>\n</div>\n","zip/flush":"<h1>typedef Flush </h1>\n<p>package cpp.zip</p> <p> alias for <a class=\"type\" title=\"\" href=\"http://api.haxe.org/haxe/zip/FlushMode.html\">FlushMode</a> </p> <p class=\"availability\">Available on cpp</p> <div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/cpp/zip/Flush.html\" class=\"_attribution-link\">http://api.haxe.org/cpp/zip/Flush.html</a>\n  </p>\n</div>\n","zip/uncompress":"<h1>typedef Uncompress </h1>\n<p>package cpp.zip</p> <p> alias for <a class=\"type\" title=\"\" href=\"http://api.haxe.org/haxe/zip/Uncompress.html\">Uncompress</a> </p> <p class=\"availability\">Available on cpp</p> <div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/cpp/zip/Uncompress.html\" class=\"_attribution-link\">http://api.haxe.org/cpp/zip/Uncompress.html</a>\n  </p>\n</div>\n","rtti/fieldintegerlookup":"<h1> interface FieldIntegerLookup </h1>\n<p>package cpp.rtti</p> <p class=\"availability\">Available on cpp</p>   <div class=\"indent\"> <p>If you implement this interface, then the backend will generate code that allows fast dynamic access to fields by integer id. This should speed up the CFFI.</p> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/cpp/rtti/FieldIntegerLookup.html\" class=\"_attribution-link\">http://api.haxe.org/cpp/rtti/FieldIntegerLookup.html</a>\n  </p>\n</div>\n","rtti/fieldnumericintegerlookup":"<h1> interface FieldNumericIntegerLookup </h1>\n<p>package cpp.rtti</p> <p class=\"availability\">Available on cpp</p>   <div class=\"indent\"> <p>If you implement this interface, then the backend will generate code that allows fast numeric access to fields by integer id. This should speed up the CFFI.</p> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/cpp/rtti/FieldNumericIntegerLookup.html\" class=\"_attribution-link\">http://api.haxe.org/cpp/rtti/FieldNumericIntegerLookup.html</a>\n  </p>\n</div>\n","net/threadserver":"<h1> class ThreadServer&lt;<span class=\"type\">Client</span>, <span class=\"type\">Message</span>&gt; </h1>\n<p>package cpp.net</p> <p class=\"availability\">Available on cpp</p>     <h2 class=\"section\">Constructor</h2>  \n<h3 id=\"new\"><code><a href=\"#new\">new</a> ()</code></h3>\n  <h2 class=\"section\">Fields</h2>  \n<h3 id=\"connectLag\"><code> <a href=\"#connectLag\">connectLag</a>:<a class=\"type\" title=\"The standard Float type, this is a double-precision IEEE 64bit float.\" href=\"http://api.haxe.org/Float.html\">Float</a></code></h3>\n \n<h3 id=\"errorOutput\"><code> <a href=\"#errorOutput\">errorOutput</a>:<a class=\"type\" title=\"An Output is an abstract write.\" href=\"http://api.haxe.org/haxe/io/Output.html\">Output</a></code></h3>\n \n<h3 id=\"initialBufferSize\"><code> <a href=\"#initialBufferSize\">initialBufferSize</a>:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a></code></h3>\n \n<h3 id=\"listen\"><code> <a href=\"#listen\">listen</a>:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a></code></h3>\n \n<h3 id=\"maxBufferSize\"><code> <a href=\"#maxBufferSize\">maxBufferSize</a>:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a></code></h3>\n \n<h3 id=\"maxSockPerThread\"><code> <a href=\"#maxSockPerThread\">maxSockPerThread</a>:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a></code></h3>\n \n<h3 id=\"messageHeaderSize\"><code> <a href=\"#messageHeaderSize\">messageHeaderSize</a>:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a></code></h3>\n \n<h3 id=\"nthreads\"><code> <a href=\"#nthreads\">nthreads</a>:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a></code></h3>\n \n<h3 id=\"updateTime\"><code> <a href=\"#updateTime\">updateTime</a>:<a class=\"type\" title=\"The standard Float type, this is a double-precision IEEE 64bit float.\" href=\"http://api.haxe.org/Float.html\">Float</a></code></h3>\n  <h2 class=\"section\">Methods</h2>  \n<h3 id=\"addSocket\"><code><a href=\"#addSocket\">addSocket</a> (s:<a class=\"type\" title=\"A TCP socket class : allow you to both connect to a given server and exchange messages or start your own server and wait for connections.\" href=\"http://api.haxe.org/sys/net/Socket.html\">Socket</a>):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n \n<h3 id=\"afterEvent\"><code><span class=\"label\">dynamic</span> <a href=\"#afterEvent\">afterEvent</a> ():<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n \n<h3 id=\"clientConnected\"><code><span class=\"label\">dynamic</span> <a href=\"#clientConnected\">clientConnected</a> (s:<a class=\"type\" title=\"A TCP socket class : allow you to both connect to a given server and exchange messages or start your own server and wait for connections.\" href=\"http://api.haxe.org/sys/net/Socket.html\">Socket</a>):<span class=\"type\">Client</span> </code></h3>\n \n<h3 id=\"clientDisconnected\"><code><span class=\"label\">dynamic</span> <a href=\"#clientDisconnected\">clientDisconnected</a> (c:<span class=\"type\">Client</span>):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n \n<h3 id=\"clientMessage\"><code><span class=\"label\">dynamic</span> <a href=\"#clientMessage\">clientMessage</a> (c:<span class=\"type\">Client</span>, msg:<span class=\"type\">Message</span>):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n \n<h3 id=\"onError\"><code><span class=\"label\">dynamic</span> <a href=\"#onError\">onError</a> (e:<a class=\"type\" title=\"Dynamic is a special type which is compatible with all other types.\" href=\"http://api.haxe.org/Dynamic.html\">Dynamic</a>, stack:<a class=\"type\" title=\"An Array is a storage for values.\" href=\"http://api.haxe.org/Array.html\">Array</a>&lt;<a class=\"type\" title=\"Elements return by &lt;code&gt;&lt;a href=\" .. href=\"http://api.haxe.org/haxe/StackItem.html\">StackItem</a>&gt;):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n \n<h3 id=\"readClientMessage\"><code><span class=\"label\">dynamic</span> <a href=\"#readClientMessage\">readClientMessage</a> (c:<span class=\"type\">Client</span>, buf:<a class=\"type\" title=\"\" href=\"http://api.haxe.org/haxe/io/Bytes.html\">Bytes</a>, pos:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a>, len:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a>):{msg:<span class=\"type\">Message</span>, bytes:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a>}</code></h3>\n \n<h3 id=\"run\"><code><a href=\"#run\">run</a> (host:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>, port:<a class=\"type\" title=\"The standard Int type.\" href=\"http://api.haxe.org/Int.html\">Int</a>):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n \n<h3 id=\"sendData\"><code><a href=\"#sendData\">sendData</a> (s:<a class=\"type\" title=\"A TCP socket class : allow you to both connect to a given server and exchange messages or start your own server and wait for connections.\" href=\"http://api.haxe.org/sys/net/Socket.html\">Socket</a>, data:<a class=\"type\" title=\"The basic String class.\" href=\"http://api.haxe.org/String.html\">String</a>):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n \n<h3 id=\"stopClient\"><code><a href=\"#stopClient\">stopClient</a> (s:<a class=\"type\" title=\"A TCP socket class : allow you to both connect to a given server and exchange messages or start your own server and wait for connections.\" href=\"http://api.haxe.org/sys/net/Socket.html\">Socket</a>):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n \n<h3 id=\"update\"><code><span class=\"label\">dynamic</span> <a href=\"#update\">update</a> ():<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n \n<h3 id=\"work\"><code><a href=\"#work\">work</a> (f:<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a> ‑&gt; <a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a>):<a class=\"type\" title=\"The standard Void type.\" href=\"http://api.haxe.org/Void.html\">Void</a></code></h3>\n<div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2016 Haxe Foundation<br>Licensed under a MIT license.<br>\n    <a href=\"http://api.haxe.org/cpp/net/ThreadServer.html\" class=\"_attribution-link\">http://api.haxe.org/cpp/net/ThreadServer.html</a>\n  </p>\n</div>\n"}