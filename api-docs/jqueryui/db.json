{"index":"<h1>jQuery UI</h1>  <article id=\"post-2\" class=\"post-2 post type-post status-publish format-standard hentry category-widgets\"> <h2 class=\"entry-title\"> <a href=\"accordion\" title=\"Permalink to Accordion Widget\" rel=\"bookmark\">Accordion Widget</a> </h2> <div class=\"entry-summary\"> <p>Convert a pair of headers and content panels into an accordion.</p> </div> </article> <article id=\"post-7\" class=\"post-7 post type-post status-publish format-standard hentry category-effects category-effects-core category-overrides\"> <h2 class=\"entry-title\"> <a href=\"addclass\" title=\"Permalink to .addClass()\" rel=\"bookmark\">.addClass()</a> </h2> <div class=\"entry-summary\"> <p>Adds the specified class(es) to each of the set of matched elements while animating all style changes.</p> </div> </article> <article id=\"post-9\" class=\"post-9 post type-post status-publish format-standard hentry category-widgets\"> <h2 class=\"entry-title\"> <a href=\"autocomplete\" title=\"Permalink to Autocomplete Widget\" rel=\"bookmark\">Autocomplete Widget</a> </h2> <div class=\"entry-summary\"> <p>Autocomplete enables users to quickly find and select from a pre-populated list of values as they type, leveraging searching and filtering.</p> </div> </article> <article id=\"post-11\" class=\"post-11 post type-post status-publish format-standard hentry category-effects\"> <h2 class=\"entry-title\"> <a href=\"blind-effect\" title=\"Permalink to Blind Effect\" rel=\"bookmark\">Blind Effect</a> </h2> <div class=\"entry-summary\"> <p>The blind effect hides or shows an element by wrapping the element in a container, and “pulling the blinds”</p> </div> </article> <article id=\"post-13\" class=\"post-13 post type-post status-publish format-standard hentry category-effects\"> <h2 class=\"entry-title\"> <a href=\"bounce-effect\" title=\"Permalink to Bounce Effect\" rel=\"bookmark\">Bounce Effect</a> </h2> <div class=\"entry-summary\"> <p>The bounce effect bounces an element. When used with hide or show, the last or first bounce will also fade in/out.</p> </div> </article> <article id=\"post-15\" class=\"post-15 post type-post status-publish format-standard hentry category-widgets\"> <h2 class=\"entry-title\"> <a href=\"button\" title=\"Permalink to Button Widget\" rel=\"bookmark\">Button Widget</a> </h2> <div class=\"entry-summary\"> <p>Themeable buttons.</p> </div> </article> <article id=\"post-967\" class=\"post-967 post type-post status-publish format-standard hentry category-widgets\"> <h2 class=\"entry-title\"> <a href=\"buttonset\" title=\"Permalink to Buttonset Widget\" rel=\"bookmark\">Buttonset Widget</a> </h2> <div class=\"entry-summary\"> <p>Themeable button sets.</p> </div> </article> <article id=\"post-17\" class=\"post-17 post type-post status-publish format-standard hentry category-effects\"> <h2 class=\"entry-title\"> <a href=\"clip-effect\" title=\"Permalink to Clip Effect\" rel=\"bookmark\">Clip Effect</a> </h2> <div class=\"entry-summary\"> <p>The clip effect will hide or show an element by clipping the element vertically or horizontally.</p> </div> </article> <article id=\"post-665\" class=\"post-665 page type-page status-publish hentry category-effects category-effects-core\"> <h2 class=\"entry-title\"> <a href=\"color-animation\" title=\"Permalink to Color Animation\" rel=\"bookmark\">Color Animation</a> </h2> <div class=\"entry-summary\"> <p>Animate colors using .animate().</p> </div> </article> <article id=\"post-652\" class=\"post-652 page type-page status-publish hentry category-theming\"> <h2 class=\"entry-title\"> <a href=\"theming/css-framework\" title=\"Permalink to CSS Framework\" rel=\"bookmark\">CSS Framework</a> </h2> <div class=\"entry-summary\"> <p>A list of the class names used by jQuery UI to allow components to be themeable.</p> </div> </article> <article id=\"post-19\" class=\"post-19 post type-post status-publish format-standard hentry category-selectors category-ui-core\"> <h2 class=\"entry-title\"> <a href=\"data-selector\" title=\"Permalink to :data() Selector\" rel=\"bookmark\">:data() Selector</a> </h2> <div class=\"entry-summary\"> <p>Selects elements which have data stored under the specified key.</p> </div> </article> <article id=\"post-21\" class=\"post-21 post type-post status-publish format-standard hentry category-widgets\"> <h2 class=\"entry-title\"> <a href=\"datepicker\" title=\"Permalink to Datepicker Widget\" rel=\"bookmark\">Datepicker Widget</a> </h2> <div class=\"entry-summary\"> <p>Select a date from a popup or inline calendar</p> </div> </article> <article id=\"post-23\" class=\"post-23 post type-post status-publish format-standard hentry category-widgets\"> <h2 class=\"entry-title\"> <a href=\"dialog\" title=\"Permalink to Dialog Widget\" rel=\"bookmark\">Dialog Widget</a> </h2> <div class=\"entry-summary\"> <p>Open content in an interactive overlay.</p> </div> </article> <article id=\"post-25\" class=\"post-25 post type-post status-publish format-standard hentry category-methods category-ui-core\"> <h2 class=\"entry-title\"> <a href=\"disableselection\" title=\"Permalink to .disableSelection()\" rel=\"bookmark\">.disableSelection()</a> </h2> <div class=\"entry-summary\"> <p>Disable selection of text content within the set of matched elements.</p> </div> </article> <article id=\"post-27\" class=\"post-27 post type-post status-publish format-standard hentry category-interactions\"> <h2 class=\"entry-title\"> <a href=\"draggable\" title=\"Permalink to Draggable Widget\" rel=\"bookmark\">Draggable Widget</a> </h2> <div class=\"entry-summary\"> <p>Allow elements to be moved using the mouse.</p> </div> </article> <article id=\"post-29\" class=\"post-29 post type-post status-publish format-standard hentry category-effects\"> <h2 class=\"entry-title\"> <a href=\"drop-effect\" title=\"Permalink to Drop Effect\" rel=\"bookmark\">Drop Effect</a> </h2> <div class=\"entry-summary\"> <p>The drop effect hides or shows an element fading in/out and sliding in a direction.</p> </div> </article> <article id=\"post-31\" class=\"post-31 post type-post status-publish format-standard hentry category-interactions\"> <h2 class=\"entry-title\"> <a href=\"droppable\" title=\"Permalink to Droppable Widget\" rel=\"bookmark\">Droppable Widget</a> </h2> <div class=\"entry-summary\"> <p>Create targets for draggable elements.</p> </div> </article> <article id=\"post-1\" class=\"post-1 page type-page status-publish hentry category-effects category-utilities\"> <h2 class=\"entry-title\"> <a href=\"easings\" title=\"Permalink to Easings\" rel=\"bookmark\">Easings</a> </h2> <div class=\"entry-summary\"> <p>Easing functions specify the speed at which an animation progresses at different points within the animation.</p> </div> </article> <article id=\"post-33\" class=\"post-33 post type-post status-publish format-standard hentry category-effects category-effects-core category-methods\"> <h2 class=\"entry-title\"> <a href=\"effect\" title=\"Permalink to .effect()\" rel=\"bookmark\">.effect()</a> </h2> <div class=\"entry-summary\"> <p>Apply an animation effect to an element.</p> </div> </article> <article id=\"post-35\" class=\"post-35 post type-post status-publish format-standard hentry category-methods category-ui-core\"> <h2 class=\"entry-title\"> <a href=\"enableselection\" title=\"Permalink to .enableSelection()\" rel=\"bookmark\">.enableSelection()</a> </h2> <div class=\"entry-summary\"> <p>Enable selection of text content within the set of matched elements.</p> </div> </article> <article id=\"post-37\" class=\"post-37 post type-post status-publish format-standard hentry category-effects\"> <h2 class=\"entry-title\"> <a href=\"explode-effect\" title=\"Permalink to Explode Effect\" rel=\"bookmark\">Explode Effect</a> </h2> <div class=\"entry-summary\"> <p>The explode effect hides or shows an element by splitting it into pieces.</p> </div> </article> <article id=\"post-39\" class=\"post-39 post type-post status-publish format-standard hentry category-effects\"> <h2 class=\"entry-title\"> <a href=\"fade-effect\" title=\"Permalink to Fade Effect\" rel=\"bookmark\">Fade Effect</a> </h2> <div class=\"entry-summary\"> <p>The fade effect hides or shows an element by fading it.</p> </div> </article> <article id=\"post-41\" class=\"post-41 post type-post status-publish format-standard hentry category-overrides category-methods category-ui-core\"> <h2 class=\"entry-title\"> <a href=\"focus\" title=\"Permalink to .focus()\" rel=\"bookmark\">.focus()</a> </h2> <div class=\"entry-summary\"> <p>Asynchronously set focus to an element.</p> </div> </article> <article id=\"post-43\" class=\"post-43 post type-post status-publish format-standard hentry category-selectors category-ui-core\"> <h2 class=\"entry-title\"> <a href=\"focusable-selector\" title=\"Permalink to :focusable Selector\" rel=\"bookmark\">:focusable Selector</a> </h2> <div class=\"entry-summary\"> <p>Selects elements which can be focused.</p> </div> </article> <article id=\"post-45\" class=\"post-45 post type-post status-publish format-standard hentry category-effects\"> <h2 class=\"entry-title\"> <a href=\"fold-effect\" title=\"Permalink to Fold Effect\" rel=\"bookmark\">Fold Effect</a> </h2> <div class=\"entry-summary\"> <p>The fold effect hides or shows an element by folding it.</p> </div> </article> <article id=\"post-47\" class=\"post-47 post type-post status-publish format-standard hentry category-effects category-effects-core category-overrides category-methods\"> <h2 class=\"entry-title\"> <a href=\"hide\" title=\"Permalink to .hide()\" rel=\"bookmark\">.hide()</a> </h2> <div class=\"entry-summary\"> <p>Hide the matched elements, using custom effects.</p> </div> </article> <article id=\"post-49\" class=\"post-49 post type-post status-publish format-standard hentry category-effects\"> <h2 class=\"entry-title\"> <a href=\"highlight-effect\" title=\"Permalink to Highlight Effect\" rel=\"bookmark\">Highlight Effect</a> </h2> <div class=\"entry-summary\"> <p>The highlight effect hides or shows an element by animating its background color first.</p> </div> </article> <article id=\"post-669\" class=\"post-669 page type-page status-publish hentry category-theming\"> <h2 class=\"entry-title\"> <a href=\"theming/icons\" title=\"Permalink to Icons\" rel=\"bookmark\">Icons</a> </h2> <div class=\"entry-summary\"> <p>A list of the icons provided by jQuery UI.</p> </div> </article> <article id=\"post-664\" class=\"post-664 post type-post status-publish format-standard hentry category-ui-core\"> <h2 class=\"entry-title\"> <a href=\"jquery.ui.keycode\" title=\"Permalink to jQuery.ui.keyCode\" rel=\"bookmark\">jQuery.ui.keyCode</a> </h2> <div class=\"entry-summary\"> <p>A mapping of key code descriptions to their numeric values.</p> </div> </article> <article id=\"post-51\" class=\"post-51 post type-post status-publish format-standard hentry category-utilities category-widgets\"> <h2 class=\"entry-title\"> <a href=\"jquery.widget\" title=\"Permalink to Widget Factory\" rel=\"bookmark\">Widget Factory</a> </h2> <div class=\"entry-summary\"> <p>Create stateful jQuery plugins using the same abstraction as all jQuery UI widgets.</p> </div> </article> <article id=\"post-733\" class=\"post-733 post type-post status-publish format-standard hentry category-utilities category-widgets\"> <h2 class=\"entry-title\"> <a href=\"jquery.widget.bridge\" title=\"Permalink to Widget Plugin Bridge\" rel=\"bookmark\">Widget Plugin Bridge</a> </h2> <div class=\"entry-summary\"> <p>Part of the jQuery Widget Factory is the jQuery.widget.bridge() method. This acts as the middleman between the object created by $.widget() and the jQuery API.</p> </div> </article> <article id=\"post-53\" class=\"post-53 post type-post status-publish format-standard hentry category-widgets\"> <h2 class=\"entry-title\"> <a href=\"menu\" title=\"Permalink to Menu Widget\" rel=\"bookmark\">Menu Widget</a> </h2> <div class=\"entry-summary\"> <p>Themeable menu with mouse and keyboard interactions for navigation.</p> </div> </article> <article id=\"post-107\" class=\"post-107 post type-post status-publish format-standard hentry category-interactions category-utilities\"> <h2 class=\"entry-title\"> <a href=\"mouse\" title=\"Permalink to Mouse Interaction\" rel=\"bookmark\">Mouse Interaction</a> </h2> <div class=\"entry-summary\"> <p>The base interaction layer.</p> </div> </article> <article id=\"post-55\" class=\"post-55 post type-post status-publish format-standard hentry category-overrides category-methods category-utilities\"> <h2 class=\"entry-title\"> <a href=\"position\" title=\"Permalink to .position()\" rel=\"bookmark\">.position()</a> </h2> <div class=\"entry-summary\"> <p>Position an element relative to another.</p> </div> </article> <article id=\"post-57\" class=\"post-57 post type-post status-publish format-standard hentry category-widgets\"> <h2 class=\"entry-title\"> <a href=\"progressbar\" title=\"Permalink to Progressbar Widget\" rel=\"bookmark\">Progressbar Widget</a> </h2> <div class=\"entry-summary\"> <p>Display status of a determinate or indeterminate process.</p> </div> </article> <article id=\"post-59\" class=\"post-59 post type-post status-publish format-standard hentry category-effects\"> <h2 class=\"entry-title\"> <a href=\"puff-effect\" title=\"Permalink to Puff Effect\" rel=\"bookmark\">Puff Effect</a> </h2> <div class=\"entry-summary\"> <p>Creates a puff effect by scaling the element up and hiding it at the same time.</p> </div> </article> <article id=\"post-61\" class=\"post-61 post type-post status-publish format-standard hentry category-effects\"> <h2 class=\"entry-title\"> <a href=\"pulsate-effect\" title=\"Permalink to Pulsate Effect\" rel=\"bookmark\">Pulsate Effect</a> </h2> <div class=\"entry-summary\"> <p>The pulsate effect hides or shows an element by pulsing it in or out.</p> </div> </article> <article id=\"post-63\" class=\"post-63 post type-post status-publish format-standard hentry category-effects category-effects-core category-overrides\"> <h2 class=\"entry-title\"> <a href=\"removeclass\" title=\"Permalink to .removeClass()\" rel=\"bookmark\">.removeClass()</a> </h2> <div class=\"entry-summary\"> <p>Removes the specified class(es) from each of the set of matched elements while animating all style changes.</p> </div> </article> <article id=\"post-65\" class=\"post-65 post type-post status-publish format-standard hentry category-methods category-ui-core\"> <h2 class=\"entry-title\"> <a href=\"removeuniqueid\" title=\"Permalink to .removeUniqueId()\" rel=\"bookmark\">.removeUniqueId()</a> </h2> <div class=\"entry-summary\"> <p>Remove ids that were set by .uniqueId() for the set of matched elements.</p> </div> </article> <article id=\"post-67\" class=\"post-67 post type-post status-publish format-standard hentry category-interactions\"> <h2 class=\"entry-title\"> <a href=\"resizable\" title=\"Permalink to Resizable Widget\" rel=\"bookmark\">Resizable Widget</a> </h2> <div class=\"entry-summary\"> <p>Change the size of an element using the mouse.</p> </div> </article> <article id=\"post-69\" class=\"post-69 post type-post status-publish format-standard hentry category-effects\"> <h2 class=\"entry-title\"> <a href=\"scale-effect\" title=\"Permalink to Scale Effect\" rel=\"bookmark\">Scale Effect</a> </h2> <div class=\"entry-summary\"> <p>Shrink or grow an element by a percentage factor.</p> </div> </article> <article id=\"post-71\" class=\"post-71 post type-post status-publish format-standard hentry category-methods category-ui-core\"> <h2 class=\"entry-title\"> <a href=\"scrollparent\" title=\"Permalink to .scrollParent()\" rel=\"bookmark\">.scrollParent()</a> </h2> <div class=\"entry-summary\"> <p>Get the closest ancestor element that is scrollable.</p> </div> </article> <article id=\"post-73\" class=\"post-73 post type-post status-publish format-standard hentry category-interactions\"> <h2 class=\"entry-title\"> <a href=\"selectable\" title=\"Permalink to Selectable Widget\" rel=\"bookmark\">Selectable Widget</a> </h2> <div class=\"entry-summary\"> <p>Use the mouse to select elements, individually or in a group.</p> </div> </article> <article id=\"post-948\" class=\"post-948 post type-post status-publish format-standard hentry category-widgets\"> <h2 class=\"entry-title\"> <a href=\"selectmenu\" title=\"Permalink to Selectmenu Widget\" rel=\"bookmark\">Selectmenu Widget</a> </h2> <div class=\"entry-summary\"> <p>Duplicates and extends the functionality of a native HTML select element to overcome the limitations of the native control.</p> </div> </article> <article id=\"post-75\" class=\"post-75 post type-post status-publish format-standard hentry category-effects\"> <h2 class=\"entry-title\"> <a href=\"shake-effect\" title=\"Permalink to Shake Effect\" rel=\"bookmark\">Shake Effect</a> </h2> <div class=\"entry-summary\"> <p>Shakes the element multiple times, vertically or horizontally.</p> </div> </article> <article id=\"post-77\" class=\"post-77 post type-post status-publish format-standard hentry category-effects category-effects-core category-overrides category-methods\"> <h2 class=\"entry-title\"> <a href=\"show\" title=\"Permalink to .show()\" rel=\"bookmark\">.show()</a> </h2> <div class=\"entry-summary\"> <p>Display the matched elements, using custom effects.</p> </div> </article> <article id=\"post-79\" class=\"post-79 post type-post status-publish format-standard hentry category-effects\"> <h2 class=\"entry-title\"> <a href=\"size-effect\" title=\"Permalink to Size Effect\" rel=\"bookmark\">Size Effect</a> </h2> <div class=\"entry-summary\"> <p>Resize an element to a specified width and height.</p> </div> </article> <article id=\"post-81\" class=\"post-81 post type-post status-publish format-standard hentry category-effects\"> <h2 class=\"entry-title\"> <a href=\"slide-effect\" title=\"Permalink to Slide Effect\" rel=\"bookmark\">Slide Effect</a> </h2> <div class=\"entry-summary\"> <p>Slides the element out of the viewport.</p> </div> </article> <article id=\"post-83\" class=\"post-83 post type-post status-publish format-standard hentry category-widgets\"> <h2 class=\"entry-title\"> <a href=\"slider\" title=\"Permalink to Slider Widget\" rel=\"bookmark\">Slider Widget</a> </h2> <div class=\"entry-summary\"> <p>Drag a handle to select a numeric value.</p> </div> </article> <article id=\"post-85\" class=\"post-85 post type-post status-publish format-standard hentry category-interactions\"> <h2 class=\"entry-title\"> <a href=\"sortable\" title=\"Permalink to Sortable Widget\" rel=\"bookmark\">Sortable Widget</a> </h2> <div class=\"entry-summary\"> <p>Reorder elements in a list or grid using the mouse.</p> </div> </article> <article id=\"post-87\" class=\"post-87 post type-post status-publish format-standard hentry category-widgets\"> <h2 class=\"entry-title\"> <a href=\"spinner\" title=\"Permalink to Spinner Widget\" rel=\"bookmark\">Spinner Widget</a> </h2> <div class=\"entry-summary\"> <p>Enhance a text input for entering numeric values, with up/down buttons and arrow key handling.</p> </div> </article> <article id=\"post-653\" class=\"post-653 page type-page status-publish hentry category-theming\"> <h2 class=\"entry-title\"> <a href=\"theming/stacking-elements\" title=\"Permalink to Stacking Elements\" rel=\"bookmark\">Stacking Elements</a> </h2> <div class=\"entry-summary\"> <p>A pattern for handling z-index and stacking elements.</p> </div> </article> <article id=\"post-89\" class=\"post-89 post type-post status-publish format-standard hentry category-effects category-effects-core\"> <h2 class=\"entry-title\"> <a href=\"switchclass\" title=\"Permalink to .switchClass()\" rel=\"bookmark\">.switchClass()</a> </h2> <div class=\"entry-summary\"> <p>Adds and removes the specified class(es) to each of the set of matched elements while animating all style changes.</p> </div> </article> <article id=\"post-91\" class=\"post-91 post type-post status-publish format-standard hentry category-selectors category-ui-core\"> <h2 class=\"entry-title\"> <a href=\"tabbable-selector\" title=\"Permalink to :tabbable Selector\" rel=\"bookmark\">:tabbable Selector</a> </h2> <div class=\"entry-summary\"> <p>Selects elements which the user can focus via tabbing.</p> </div> </article> <article id=\"post-93\" class=\"post-93 post type-post status-publish format-standard hentry category-widgets\"> <h2 class=\"entry-title\"> <a href=\"tabs\" title=\"Permalink to Tabs Widget\" rel=\"bookmark\">Tabs Widget</a> </h2> <div class=\"entry-summary\"> <p>A single content area with multiple panels, each associated with a header in a list.</p> </div> </article> <article id=\"post-651\" class=\"post-651 page type-page status-publish hentry\"> <h2 class=\"entry-title\"> <a href=\"https://api.jqueryui.com/theming/\" title=\"Permalink to Theming\" rel=\"bookmark\">Theming</a> </h2>  </article> <article id=\"post-95\" class=\"post-95 post type-post status-publish format-standard hentry category-effects category-effects-core category-overrides category-methods\"> <h2 class=\"entry-title\"> <a href=\"toggle\" title=\"Permalink to .toggle()\" rel=\"bookmark\">.toggle()</a> </h2> <div class=\"entry-summary\"> <p>Display or hide the matched elements, using custom effects.</p> </div> </article> <article id=\"post-97\" class=\"post-97 post type-post status-publish format-standard hentry category-effects category-effects-core category-overrides\"> <h2 class=\"entry-title\"> <a href=\"toggleclass\" title=\"Permalink to .toggleClass()\" rel=\"bookmark\">.toggleClass()</a> </h2> <div class=\"entry-summary\"> <p>Add or remove one or more classes from each element in the set of matched elements, depending on either the class’s presence or the value of the switch argument, while animating all style changes.</p> </div> </article> <article id=\"post-99\" class=\"post-99 post type-post status-publish format-standard hentry category-widgets\"> <h2 class=\"entry-title\"> <a href=\"tooltip\" title=\"Permalink to Tooltip Widget\" rel=\"bookmark\">Tooltip Widget</a> </h2> <div class=\"entry-summary\"> <p>Customizable, themeable tooltips, replacing native tooltips.</p> </div> </article> <article id=\"post-101\" class=\"post-101 post type-post status-publish format-standard hentry category-effects\"> <h2 class=\"entry-title\"> <a href=\"transfer-effect\" title=\"Permalink to Transfer Effect\" rel=\"bookmark\">Transfer Effect</a> </h2> <div class=\"entry-summary\"> <p>Transfers the outline of an element to another element</p> </div> </article> <article id=\"post-103\" class=\"post-103 post type-post status-publish format-standard hentry category-methods category-ui-core\"> <h2 class=\"entry-title\"> <a href=\"uniqueid\" title=\"Permalink to .uniqueId()\" rel=\"bookmark\">.uniqueId()</a> </h2> <div class=\"entry-summary\"> <p>Generate and apply a unique id for the set of matched elements.</p> </div> </article> <article id=\"post-105\" class=\"post-105 post type-post status-publish format-standard hentry category-methods category-ui-core\"> <h2 class=\"entry-title\"> <a href=\"zindex\" title=\"Permalink to .zIndex()\" rel=\"bookmark\">.zIndex()</a> </h2> <div class=\"entry-summary\"> <p>Get the z-index for an element.</p> </div> </article> <div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; The jQuery Foundation and other contributors<br>Licensed under the MIT License.<br>\n    <a href=\"https://api.jqueryui.com/category/all\" class=\"_attribution-link\">https://api.jqueryui.com/category/all</a>\n  </p>\n</div>\n","bounce-effect":"<h1 class=\"entry-title\">Bounce Effect</h1> <div class=\"entry-content\"> <article id=\"bounce1\" class=\"entry effect\"><h2 class=\"section-title\"><span>Bounce Effect</span></h2> <div class=\"entry-wrapper\"> <p class=\"desc\"><strong>Description: </strong> The bounce effect bounces an element. When used with hide or show, the last or first bounce will also fade in/out. </p> <ul class=\"signatures\"><li class=\"signature\"> <h4 class=\"name\">bounce</h4> <ul> <li> <div> <strong>distance</strong> (default: <code>20</code>)</div> <div>Type: <a href=\"http://api.jquery.com/Types/#Number\">Number</a> </div> <div>The distance of the largest \"bounce\" in pixels.</div> </li> <li> <div> <strong>times</strong> (default: <code>5</code>)</div> <div>Type: <a href=\"http://api.jquery.com/Types/#Integer\">Integer</a> </div> <div>The number of times the element will bounce. When used with hide or show, there is an extra \"half\" bounce for the fade in/out.</div> </li> </ul> </li></ul> <section class=\"entry-examples\" id=\"entry-examples\"><h2>Example:</h2>\n<div class=\"entry-example\" id=\"example-0\"> <p>Toggle a div using the bounce effect.</p> <pre class=\"syntaxhighlighter xml\">&lt;!doctype html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"utf-8\"&gt;\n  &lt;title&gt;bounce demo&lt;/title&gt;\n  &lt;link rel=\"stylesheet\" href=\"//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css\"&gt;\n  &lt;style&gt;\n  #toggle {\n    width: 100px;\n    height: 100px;\n    background: #ccc;\n  }\n  &lt;/style&gt;\n  &lt;script src=\"//code.jquery.com/jquery-1.10.2.js\"&gt;&lt;/script&gt;\n  &lt;script src=\"//code.jquery.com/ui/1.11.4/jquery-ui.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n&lt;p&gt;Click anywhere to toggle the box.&lt;/p&gt;\n&lt;div id=\"toggle\"&gt;&lt;/div&gt;\n \n&lt;script&gt;\n$( document ).click(function() {\n  $( \"#toggle\" ).toggle( \"bounce\", { times: 3 }, \"slow\" );\n});\n&lt;/script&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;</pre> <h4>Demo:</h4>  </div></section> </div></article> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; The jQuery Foundation and other contributors<br>Licensed under the MIT License.<br>\n    <a href=\"https://api.jqueryui.com/bounce-effect\" class=\"_attribution-link\">https://api.jqueryui.com/bounce-effect</a>\n  </p>\n</div>\n","draggable":"<h1 class=\"entry-title\">Draggable Widget</h1> <div class=\"entry-content\"> <article id=\"draggable1\" class=\"entry widget\"><h2 class=\"section-title\"> <span>Draggable Widget</span><span class=\"version-details\">version added: 1.0</span> </h2> <div class=\"entry-wrapper\"> <p class=\"desc\"><strong>Description: </strong>Allow elements to be moved using the mouse.</p> <section id=\"quick-nav\"><h2>QuickNav<a href=\"#entry-examples\">Examples</a> </h2>\n<div class=\"quick-nav-section\"> <h3>Options</h3> <div><a href=\"#option-addClasses\">addClasses</a></div> <div><a href=\"#option-appendTo\">appendTo</a></div> <div><a href=\"#option-axis\">axis</a></div> <div><a href=\"#option-cancel\">cancel</a></div> <div><a href=\"#option-connectToSortable\">connectToSortable</a></div> <div><a href=\"#option-containment\">containment</a></div> <div><a href=\"#option-cursor\">cursor</a></div> <div><a href=\"#option-cursorAt\">cursorAt</a></div> <div><a href=\"#option-delay\">delay</a></div> <div><a href=\"#option-disabled\">disabled</a></div> <div><a href=\"#option-distance\">distance</a></div> <div><a href=\"#option-grid\">grid</a></div> <div><a href=\"#option-handle\">handle</a></div> <div><a href=\"#option-helper\">helper</a></div> <div><a href=\"#option-iframeFix\">iframeFix</a></div> <div><a href=\"#option-opacity\">opacity</a></div> <div><a href=\"#option-refreshPositions\">refreshPositions</a></div> <div><a href=\"#option-revert\">revert</a></div> <div><a href=\"#option-revertDuration\">revertDuration</a></div> <div><a href=\"#option-scope\">scope</a></div> <div><a href=\"#option-scroll\">scroll</a></div> <div><a href=\"#option-scrollSensitivity\">scrollSensitivity</a></div> <div><a href=\"#option-scrollSpeed\">scrollSpeed</a></div> <div><a href=\"#option-snap\">snap</a></div> <div><a href=\"#option-snapMode\">snapMode</a></div> <div><a href=\"#option-snapTolerance\">snapTolerance</a></div> <div><a href=\"#option-stack\">stack</a></div> <div><a href=\"#option-zIndex\">zIndex</a></div> </div> <div class=\"quick-nav-section\"> <h3>Methods</h3> <div><a href=\"#method-destroy\">destroy</a></div> <div><a href=\"#method-disable\">disable</a></div> <div><a href=\"#method-enable\">enable</a></div> <div><a href=\"#method-instance\">instance</a></div> <div><a href=\"#method-option\">option</a></div> <div><a href=\"#method-widget\">widget</a></div> </div> <div class=\"quick-nav-section\"> <h3>Events</h3> <div><a href=\"#event-create\">create</a></div> <div><a href=\"#event-drag\">drag</a></div> <div><a href=\"#event-start\">start</a></div> <div><a href=\"#event-stop\">stop</a></div> </div></section><div class=\"longdesc\" id=\"entry-longdesc\"> <p>Make the selected elements draggable by mouse. If you want not just drag, but drag &amp; drop, see the <a href=\"droppable\">jQuery UI Droppable plugin</a>, which provides a drop target for draggables.</p> <h3>Dependencies</h3> <ul> <li><a href=\"https://api.jqueryui.com/category/ui-core/\">UI Core</a></li> <li><a href=\"jquery.widget\">Widget Factory</a></li> <li><a href=\"mouse\">Mouse Interaction</a></li> </ul> </div> <section id=\"options\"><h2>Options</h2>\n<div id=\"option-addClasses\" class=\"api-item first-item\"> <h3>addClasses </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> </div> <div class=\"default\"> <strong>Default: </strong><code>true</code> </div> <div>If set to <code>false</code>, will prevent the <code>ui-draggable</code> class from being added. This may be desired as a performance optimization when calling <code>.draggable()</code> on hundreds of elements.</div> <strong>Code examples:</strong><p>Initialize the draggable with the <code>addClasses</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).draggable({\n  addClasses: false\n});</pre> <p>Get or set the <code>addClasses</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar addClasses = $( \".selector\" ).draggable( \"option\", \"addClasses\" );\n \n// Setter\n$( \".selector\" ).draggable( \"option\", \"addClasses\", false );</pre> </div> <div id=\"option-appendTo\" class=\"api-item\"> <h3>appendTo </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> or <a href=\"http://api.jquery.com/Types/#Element\">Element</a> or <a href=\"http://api.jquery.com/Types/#Selector\">Selector</a> or <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div class=\"default\"> <strong>Default: </strong><code>\"parent\"</code> </div> <div> <p>Which element the draggable helper should be appended to while dragging.</p> <div class=\"warning\"> <strong>Note:</strong> The <code>appendTo</code> option only works when the <a href=\"#option-helper\"><code>helper</code></a> option is set to not use the original element.</div> </div> <strong>Multiple types supported:</strong><ul> <li> <strong>jQuery</strong>: A jQuery object containing the element to append the helper to.</li> <li> <strong>Element</strong>: The element to append the helper to.</li> <li> <strong>Selector</strong>: A selector specifying which element to append the helper to.</li> <li> <strong>String</strong>: The string <code>\"parent\"</code> will cause the helper to be a sibling of the draggable.</li> </ul> <strong>Code examples:</strong><p>Initialize the draggable with the <code>appendTo</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).draggable({\n  appendTo: \"body\"\n});</pre> <p>Get or set the <code>appendTo</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar appendTo = $( \".selector\" ).draggable( \"option\", \"appendTo\" );\n \n// Setter\n$( \".selector\" ).draggable( \"option\", \"appendTo\", \"body\" );</pre> </div> <div id=\"option-axis\" class=\"api-item\"> <h3>axis </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div class=\"default\"> <strong>Default: </strong><code>false</code> </div> <div>Constrains dragging to either the horizontal (x) or vertical (y) axis. Possible values: <code>\"x\"</code>, <code>\"y\"</code>.</div> <strong>Code examples:</strong><p>Initialize the draggable with the <code>axis</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).draggable({\n  axis: \"x\"\n});</pre> <p>Get or set the <code>axis</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar axis = $( \".selector\" ).draggable( \"option\", \"axis\" );\n \n// Setter\n$( \".selector\" ).draggable( \"option\", \"axis\", \"x\" );</pre> </div> <div id=\"option-cancel\" class=\"api-item\"> <h3>cancel </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Selector\">Selector</a> </div> <div class=\"default\"> <strong>Default: </strong><code>\"input,textarea,button,select,option\"</code> </div> <div>Prevents dragging from starting on specified elements.</div> <strong>Code examples:</strong><p>Initialize the draggable with the <code>cancel</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).draggable({\n  cancel: \".title\"\n});</pre> <p>Get or set the <code>cancel</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar cancel = $( \".selector\" ).draggable( \"option\", \"cancel\" );\n \n// Setter\n$( \".selector\" ).draggable( \"option\", \"cancel\", \".title\" );</pre> </div> <div id=\"option-connectToSortable\" class=\"api-item\"> <h3>connectToSortable </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Selector\">Selector</a> </div> <div class=\"default\"> <strong>Default: </strong><code>false</code> </div> <div>Allows the draggable to be dropped onto the specified sortables. If this option is used, a draggable can be dropped onto a sortable list and then becomes part of it. Note: The <a href=\"#option-helper\"><code>helper</code></a> option must be set to <code>\"clone\"</code> in order to work flawlessly. Requires the <a href=\"sortable\">jQuery UI Sortable plugin</a> to be included.</div> <strong>Code examples:</strong><p>Initialize the draggable with the <code>connectToSortable</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).draggable({\n  connectToSortable: \"#my-sortable\"\n});</pre> <p>Get or set the <code>connectToSortable</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar connectToSortable = $( \".selector\" ).draggable( \"option\", \"connectToSortable\" );\n \n// Setter\n$( \".selector\" ).draggable( \"option\", \"connectToSortable\", \"#my-sortable\" );</pre> </div> <div id=\"option-containment\" class=\"api-item\"> <h3>containment </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Selector\">Selector</a> or <a href=\"http://api.jquery.com/Types/#Element\">Element</a> or <a href=\"http://api.jquery.com/Types/#String\">String</a> or <a href=\"http://api.jquery.com/Types/#Array\">Array</a> </div> <div class=\"default\"> <strong>Default: </strong><code>false</code> </div> <div>Constrains dragging to within the bounds of the specified element or region.</div> <strong>Multiple types supported:</strong><ul> <li> <strong>Selector</strong>: The draggable element will be contained to the bounding box of the first element found by the selector. If no element is found, no containment will be set.</li> <li> <strong>Element</strong>: The draggable element will be contained to the bounding box of this element.</li> <li> <strong>String</strong>: Possible values: <code>\"parent\"</code>, <code>\"document\"</code>, <code>\"window\"</code>.</li> <li> <strong>Array</strong>: An array defining a bounding box in the form <code>[ x1, y1, x2, y2 ]</code>.</li> </ul> <strong>Code examples:</strong><p>Initialize the draggable with the <code>containment</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).draggable({\n  containment: \"parent\"\n});</pre> <p>Get or set the <code>containment</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar containment = $( \".selector\" ).draggable( \"option\", \"containment\" );\n \n// Setter\n$( \".selector\" ).draggable( \"option\", \"containment\", \"parent\" );</pre> </div> <div id=\"option-cursor\" class=\"api-item\"> <h3>cursor </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div class=\"default\"> <strong>Default: </strong><code>\"auto\"</code> </div> <div>The CSS cursor during the drag operation.</div> <strong>Code examples:</strong><p>Initialize the draggable with the <code>cursor</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).draggable({\n  cursor: \"crosshair\"\n});</pre> <p>Get or set the <code>cursor</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar cursor = $( \".selector\" ).draggable( \"option\", \"cursor\" );\n \n// Setter\n$( \".selector\" ).draggable( \"option\", \"cursor\", \"crosshair\" );</pre> </div> <div id=\"option-cursorAt\" class=\"api-item\"> <h3>cursorAt </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div class=\"default\"> <strong>Default: </strong><code>false</code> </div> <div>Sets the offset of the dragging helper relative to the mouse cursor. Coordinates can be given as a hash using a combination of one or two keys: <code>{ top, left, right, bottom }</code>.</div> <strong>Code examples:</strong><p>Initialize the draggable with the <code>cursorAt</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).draggable({\n  cursorAt: { left: 5 }\n});</pre> <p>Get or set the <code>cursorAt</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar cursorAt = $( \".selector\" ).draggable( \"option\", \"cursorAt\" );\n \n// Setter\n$( \".selector\" ).draggable( \"option\", \"cursorAt\", { left: 5 } );</pre> </div> <div id=\"option-delay\" class=\"api-item\"> <h3>delay </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Number\">Number</a> </div> <div class=\"default\"> <strong>Default: </strong><code>0</code> </div> <div>Time in milliseconds after mousedown until dragging should start. This option can be used to prevent unwanted drags when clicking on an element.</div> <strong>Code examples:</strong><p>Initialize the draggable with the <code>delay</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).draggable({\n  delay: 300\n});</pre> <p>Get or set the <code>delay</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar delay = $( \".selector\" ).draggable( \"option\", \"delay\" );\n \n// Setter\n$( \".selector\" ).draggable( \"option\", \"delay\", 300 );</pre> </div> <div id=\"option-disabled\" class=\"api-item\"> <h3>disabled </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> </div> <div class=\"default\"> <strong>Default: </strong><code>false</code> </div> <div>Disables the draggable if set to <code>true</code>.</div> <strong>Code examples:</strong><p>Initialize the draggable with the <code>disabled</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).draggable({\n  disabled: true\n});</pre> <p>Get or set the <code>disabled</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar disabled = $( \".selector\" ).draggable( \"option\", \"disabled\" );\n \n// Setter\n$( \".selector\" ).draggable( \"option\", \"disabled\", true );</pre> </div> <div id=\"option-distance\" class=\"api-item\"> <h3>distance </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Number\">Number</a> </div> <div class=\"default\"> <strong>Default: </strong><code>1</code> </div> <div>Distance in pixels after mousedown the mouse must move before dragging should start. This option can be used to prevent unwanted drags when clicking on an element.</div> <strong>Code examples:</strong><p>Initialize the draggable with the <code>distance</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).draggable({\n  distance: 10\n});</pre> <p>Get or set the <code>distance</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar distance = $( \".selector\" ).draggable( \"option\", \"distance\" );\n \n// Setter\n$( \".selector\" ).draggable( \"option\", \"distance\", 10 );</pre> </div> <div id=\"option-grid\" class=\"api-item\"> <h3>grid </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Array\">Array</a> </div> <div class=\"default\"> <strong>Default: </strong><code>false</code> </div> <div>Snaps the dragging helper to a grid, every x and y pixels. The array must be of the form <code>[ x, y ]</code>.</div> <strong>Code examples:</strong><p>Initialize the draggable with the <code>grid</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).draggable({\n  grid: [ 50, 20 ]\n});</pre> <p>Get or set the <code>grid</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar grid = $( \".selector\" ).draggable( \"option\", \"grid\" );\n \n// Setter\n$( \".selector\" ).draggable( \"option\", \"grid\", [ 50, 20 ] );</pre> </div> <div id=\"option-handle\" class=\"api-item\"> <h3>handle </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Selector\">Selector</a> or <a href=\"http://api.jquery.com/Types/#Element\">Element</a> </div> <div class=\"default\"> <strong>Default: </strong><code>false</code> </div> <div>If specified, restricts dragging from starting unless the mousedown occurs on the specified element(s). Only elements that descend from the draggable element are permitted.</div> <strong>Code examples:</strong><p>Initialize the draggable with the <code>handle</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).draggable({\n  handle: \"h2\"\n});</pre> <p>Get or set the <code>handle</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar handle = $( \".selector\" ).draggable( \"option\", \"handle\" );\n \n// Setter\n$( \".selector\" ).draggable( \"option\", \"handle\", \"h2\" );</pre> </div> <div id=\"option-helper\" class=\"api-item\"> <h3>helper </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#String\">String</a> or <a href=\"http://api.jquery.com/Types/#Function\">Function</a>()</div> <div class=\"default\"> <strong>Default: </strong><code>\"original\"</code> </div> <div>Allows for a helper element to be used for dragging display.</div> <strong>Multiple types supported:</strong><ul> <li> <strong>String</strong>: If set to <code>\"clone\"</code>, then the element will be cloned and the clone will be dragged.</li> <li> <strong>Function</strong>: A function that will return a DOMElement to use while dragging.</li> </ul> <strong>Code examples:</strong><p>Initialize the draggable with the <code>helper</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).draggable({\n  helper: \"clone\"\n});</pre> <p>Get or set the <code>helper</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar helper = $( \".selector\" ).draggable( \"option\", \"helper\" );\n \n// Setter\n$( \".selector\" ).draggable( \"option\", \"helper\", \"clone\" );</pre> </div> <div id=\"option-iframeFix\" class=\"api-item\"> <h3>iframeFix </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> or <a href=\"http://api.jquery.com/Types/#Selector\">Selector</a> </div> <div class=\"default\"> <strong>Default: </strong><code>false</code> </div> <div>Prevent iframes from capturing the mousemove events during a drag. Useful in combination with the <a href=\"#option-cursorAt\"><code>cursorAt</code></a> option, or in any case where the mouse cursor may not be over the helper.</div> <strong>Multiple types supported:</strong><ul> <li> <strong>Boolean</strong>: When set to <code>true</code>, transparent overlays will be placed over all iframes on the page.</li> <li> <strong>Selector</strong>: Any iframes matching the selector will be covered by transparent overlays.</li> </ul> <strong>Code examples:</strong><p>Initialize the draggable with the <code>iframeFix</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).draggable({\n  iframeFix: true\n});</pre> <p>Get or set the <code>iframeFix</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar iframeFix = $( \".selector\" ).draggable( \"option\", \"iframeFix\" );\n \n// Setter\n$( \".selector\" ).draggable( \"option\", \"iframeFix\", true );</pre> </div> <div id=\"option-opacity\" class=\"api-item\"> <h3>opacity </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Number\">Number</a> </div> <div class=\"default\"> <strong>Default: </strong><code>false</code> </div> <div>Opacity for the helper while being dragged.</div> <strong>Code examples:</strong><p>Initialize the draggable with the <code>opacity</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).draggable({\n  opacity: 0.35\n});</pre> <p>Get or set the <code>opacity</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar opacity = $( \".selector\" ).draggable( \"option\", \"opacity\" );\n \n// Setter\n$( \".selector\" ).draggable( \"option\", \"opacity\", 0.35 );</pre> </div> <div id=\"option-refreshPositions\" class=\"api-item\"> <h3>refreshPositions </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> </div> <div class=\"default\"> <strong>Default: </strong><code>false</code> </div> <div> If set to <code>true</code>, all droppable positions are calculated on every mousemove. <em>Caution: This solves issues on highly dynamic pages, but dramatically decreases performance.</em> </div> <strong>Code examples:</strong><p>Initialize the draggable with the <code>refreshPositions</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).draggable({\n  refreshPositions: true\n});</pre> <p>Get or set the <code>refreshPositions</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar refreshPositions = $( \".selector\" ).draggable( \"option\", \"refreshPositions\" );\n \n// Setter\n$( \".selector\" ).draggable( \"option\", \"refreshPositions\", true );</pre> </div> <div id=\"option-revert\" class=\"api-item\"> <h3>revert </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> or <a href=\"http://api.jquery.com/Types/#String\">String</a> or <a href=\"http://api.jquery.com/Types/#Function\">Function</a>()</div> <div class=\"default\"> <strong>Default: </strong><code>false</code> </div> <div>Whether the element should revert to its start position when dragging stops.</div> <strong>Multiple types supported:</strong><ul> <li> <strong>Boolean</strong>: If set to <code>true</code> the element will always revert.</li> <li> <strong>String</strong>: If set to <code>\"invalid\"</code>, revert will only occur if the draggable has not been dropped on a droppable. For <code>\"valid\"</code>, it's the other way around.</li> <li> <strong>Function</strong>: A function to determine whether the element should revert to its start position. The function must return <code>true</code> to revert the element.</li> </ul> <strong>Code examples:</strong><p>Initialize the draggable with the <code>revert</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).draggable({\n  revert: true\n});</pre> <p>Get or set the <code>revert</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar revert = $( \".selector\" ).draggable( \"option\", \"revert\" );\n \n// Setter\n$( \".selector\" ).draggable( \"option\", \"revert\", true );</pre> </div> <div id=\"option-revertDuration\" class=\"api-item\"> <h3>revertDuration </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Number\">Number</a> </div> <div class=\"default\"> <strong>Default: </strong><code>500</code> </div> <div>The duration of the revert animation, in milliseconds. Ignored if the <a href=\"#option-revert\"><code>revert</code></a> option is <code>false</code>.</div> <strong>Code examples:</strong><p>Initialize the draggable with the <code>revertDuration</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).draggable({\n  revertDuration: 200\n});</pre> <p>Get or set the <code>revertDuration</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar revertDuration = $( \".selector\" ).draggable( \"option\", \"revertDuration\" );\n \n// Setter\n$( \".selector\" ).draggable( \"option\", \"revertDuration\", 200 );</pre> </div> <div id=\"option-scope\" class=\"api-item\"> <h3>scope </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div class=\"default\"> <strong>Default: </strong><code>\"default\"</code> </div> <div>Used to group sets of draggable and droppable items, in addition to droppable's <a href=\"droppable#option-accept\"><code>accept</code></a> option. A draggable with the same <code>scope</code> value as a droppable will be accepted by the droppable.</div> <strong>Code examples:</strong><p>Initialize the draggable with the <code>scope</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).draggable({\n  scope: \"tasks\"\n});</pre> <p>Get or set the <code>scope</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar scope = $( \".selector\" ).draggable( \"option\", \"scope\" );\n \n// Setter\n$( \".selector\" ).draggable( \"option\", \"scope\", \"tasks\" );</pre> </div> <div id=\"option-scroll\" class=\"api-item\"> <h3>scroll </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> </div> <div class=\"default\"> <strong>Default: </strong><code>true</code> </div> <div>If set to <code>true</code>, container auto-scrolls while dragging.</div> <strong>Code examples:</strong><p>Initialize the draggable with the <code>scroll</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).draggable({\n  scroll: false\n});</pre> <p>Get or set the <code>scroll</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar scroll = $( \".selector\" ).draggable( \"option\", \"scroll\" );\n \n// Setter\n$( \".selector\" ).draggable( \"option\", \"scroll\", false );</pre> </div> <div id=\"option-scrollSensitivity\" class=\"api-item\"> <h3>scrollSensitivity </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Number\">Number</a> </div> <div class=\"default\"> <strong>Default: </strong><code>20</code> </div> <div>Distance in pixels from the edge of the viewport after which the viewport should scroll. Distance is relative to pointer, not the draggable. Ignored if the <a href=\"#option-scroll\"><code>scroll</code></a> option is <code>false</code>.</div> <strong>Code examples:</strong><p>Initialize the draggable with the <code>scrollSensitivity</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).draggable({\n  scrollSensitivity: 100\n});</pre> <p>Get or set the <code>scrollSensitivity</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar scrollSensitivity = $( \".selector\" ).draggable( \"option\", \"scrollSensitivity\" );\n \n// Setter\n$( \".selector\" ).draggable( \"option\", \"scrollSensitivity\", 100 );</pre> </div> <div id=\"option-scrollSpeed\" class=\"api-item\"> <h3>scrollSpeed </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Number\">Number</a> </div> <div class=\"default\"> <strong>Default: </strong><code>20</code> </div> <div>The speed at which the window should scroll once the mouse pointer gets within the <a href=\"#option-scrollSensitivity\"><code>scrollSensitivity</code></a> distance. Ignored if the <a href=\"#option-scroll\"><code>scroll</code></a> option is <code>false</code>.</div> <strong>Code examples:</strong><p>Initialize the draggable with the <code>scrollSpeed</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).draggable({\n  scrollSpeed: 100\n});</pre> <p>Get or set the <code>scrollSpeed</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar scrollSpeed = $( \".selector\" ).draggable( \"option\", \"scrollSpeed\" );\n \n// Setter\n$( \".selector\" ).draggable( \"option\", \"scrollSpeed\", 100 );</pre> </div> <div id=\"option-snap\" class=\"api-item\"> <h3>snap </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> or <a href=\"http://api.jquery.com/Types/#Selector\">Selector</a> </div> <div class=\"default\"> <strong>Default: </strong><code>false</code> </div> <div>Whether the element should snap to other elements.</div> <strong>Multiple types supported:</strong><ul> <li> <strong>Boolean</strong>: When set to <code>true</code>, the element will snap to all other draggable elements.</li> <li> <strong>Selector</strong>: A selector specifying which elements to snap to.</li> </ul> <strong>Code examples:</strong><p>Initialize the draggable with the <code>snap</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).draggable({\n  snap: true\n});</pre> <p>Get or set the <code>snap</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar snap = $( \".selector\" ).draggable( \"option\", \"snap\" );\n \n// Setter\n$( \".selector\" ).draggable( \"option\", \"snap\", true );</pre> </div> <div id=\"option-snapMode\" class=\"api-item\"> <h3>snapMode </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div class=\"default\"> <strong>Default: </strong><code>\"both\"</code> </div> <div>Determines which edges of snap elements the draggable will snap to. Ignored if the <a href=\"#option-snap\"><code>snap</code></a> option is <code>false</code>. Possible values: <code>\"inner\"</code>, <code>\"outer\"</code>, <code>\"both\"</code>.</div> <strong>Code examples:</strong><p>Initialize the draggable with the <code>snapMode</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).draggable({\n  snapMode: \"inner\"\n});</pre> <p>Get or set the <code>snapMode</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar snapMode = $( \".selector\" ).draggable( \"option\", \"snapMode\" );\n \n// Setter\n$( \".selector\" ).draggable( \"option\", \"snapMode\", \"inner\" );</pre> </div> <div id=\"option-snapTolerance\" class=\"api-item\"> <h3>snapTolerance </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Number\">Number</a> </div> <div class=\"default\"> <strong>Default: </strong><code>20</code> </div> <div>The distance in pixels from the snap element edges at which snapping should occur. Ignored if the <a href=\"#option-snap\"><code>snap</code></a> option is <code>false</code>.</div> <strong>Code examples:</strong><p>Initialize the draggable with the <code>snapTolerance</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).draggable({\n  snapTolerance: 30\n});</pre> <p>Get or set the <code>snapTolerance</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar snapTolerance = $( \".selector\" ).draggable( \"option\", \"snapTolerance\" );\n \n// Setter\n$( \".selector\" ).draggable( \"option\", \"snapTolerance\", 30 );</pre> </div> <div id=\"option-stack\" class=\"api-item\"> <h3>stack </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Selector\">Selector</a> </div> <div class=\"default\"> <strong>Default: </strong><code>false</code> </div> <div>Controls the z-index of the set of elements that match the selector, always brings the currently dragged item to the front. Very useful in things like window managers.</div> <strong>Code examples:</strong><p>Initialize the draggable with the <code>stack</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).draggable({\n  stack: \".products\"\n});</pre> <p>Get or set the <code>stack</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar stack = $( \".selector\" ).draggable( \"option\", \"stack\" );\n \n// Setter\n$( \".selector\" ).draggable( \"option\", \"stack\", \".products\" );</pre> </div> <div id=\"option-zIndex\" class=\"api-item\"> <h3>zIndex </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Number\">Number</a> </div> <div class=\"default\"> <strong>Default: </strong><code>false</code> </div> <div>Z-index for the helper while being dragged.</div> <strong>Code examples:</strong><p>Initialize the draggable with the <code>zIndex</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).draggable({\n  zIndex: 100\n});</pre> <p>Get or set the <code>zIndex</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar zIndex = $( \".selector\" ).draggable( \"option\", \"zIndex\" );\n \n// Setter\n$( \".selector\" ).draggable( \"option\", \"zIndex\", 100 );</pre> </div></section><section id=\"methods\"><h2>Methods</h2>\n<div id=\"method-destroy\"><div class=\"api-item first-item\"> <h3>destroy()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Removes the draggable functionality completely. This will return the element back to its pre-init state. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the destroy method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).draggable( \"destroy\" );</pre> </div> </div></div> <div id=\"method-disable\"><div class=\"api-item\"> <h3>disable()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Disables the draggable. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the disable method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).draggable( \"disable\" );</pre> </div> </div></div> <div id=\"method-enable\"><div class=\"api-item\"> <h3>enable()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Enables the draggable. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the enable method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).draggable( \"enable\" );</pre> </div> </div></div> <div id=\"method-instance\"><div class=\"api-item\"> <h3>instance()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#Object\">Object</a></span> </h3> <div> <p>Retrieves the draggable's instance object. If the element does not have an associated instance, <code>undefined</code> is returned.</p> <p>Unlike other widget methods, <code>instance()</code> is safe to call on any element after the draggable plugin has loaded.</p> </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the instance method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).draggable( \"instance\" );</pre> </div> </div></div> <div id=\"method-option\"> <div class=\"api-item\"> <h3>option( optionName )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#Object\">Object</a></span> </h3> <div> <p>Gets the value currently associated with the specified <code>optionName</code>.</p> <p><strong>Note:</strong> For options that have objects as their value, you can get the value of a specific key by using dot notation. For example, <code>\"foo.bar\"</code> would get the value of the <code>bar</code> property on the <code>foo</code> option.</p> </div> <ul><li> <div><strong>optionName</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>The name of the option to get.</div> </li></ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">var isDisabled = $( \".selector\" ).draggable( \"option\", \"disabled\" );</pre> </div> </div> <div class=\"api-item\"> <h3>option()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#PlainObject\">PlainObject</a></span> </h3> <div>Gets an object containing key/value pairs representing the current draggable options hash.</div> <ul><li><div class=\"null-signature\">This signature does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">var options = $( \".selector\" ).draggable( \"option\" );</pre> </div> </div> <div class=\"api-item\"> <h3>option( optionName, value )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> <p>Sets the value of the draggable option associated with the specified <code>optionName</code>.</p> <p><strong>Note:</strong> For options that have objects as their value, you can set the value of just one property by using dot notation for <code>optionName</code>. For example, <code>\"foo.bar\"</code> would update only the <code>bar</code> property of the <code>foo</code> option.</p> </div> <ul> <li> <div><strong>optionName</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>The name of the option to set.</div> </li> <li> <div><strong>value</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>A value to set for the option.</div> </li> </ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).draggable( \"option\", \"disabled\", true );</pre> </div> </div> <div class=\"api-item\"> <h3>option( options )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div>Sets one or more options for the draggable.</div> <ul><li> <div><strong>options</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>A map of option-value pairs to set.</div> </li></ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).draggable( \"option\", { disabled: true } );</pre> </div> </div> </div> <div id=\"method-widget\"><div class=\"api-item\"> <h3>widget()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a></span> </h3> <div> Returns a <code>jQuery</code> object containing the draggable element. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the widget method:</p> <pre class=\"syntaxhighlighter javascript\">var widget = $( \".selector\" ).draggable( \"widget\" );</pre> </div> </div></div></section><section id=\"events\"><h2>Events</h2>\n<div id=\"event-create\" class=\"api-item first-item\"> <h3>create( event, ui )<span class=\"returns\">Type: <code>dragcreate</code></span> </h3> <div> Triggered when the draggable is created. </div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  </li> </ul> <p><em>Note: The <code>ui</code> object is empty but included for consistency with other events.</em></p> <div> <strong>Code examples:</strong><p>Initialize the draggable with the create callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).draggable({\n  create: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the dragcreate event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"dragcreate\", function( event, ui ) {} );</pre> </div> </div> <div id=\"event-drag\" class=\"api-item\"> <h3>drag( event, ui )<span class=\"returns\">Type: <code>drag</code></span> </h3> <div>Triggered while the mouse is moved during the dragging, immediately before the current move happens.</div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  <ul> <li> <div><strong>helper</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The jQuery object representing the helper that's being dragged.</div> </li> <li> <div><strong>position</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>Current CSS position of the helper as <code>{ top, left }</code> object. The values may be changed to modify where the element will be positioned. This is useful for custom containment, snapping, etc.</div> </li> <li> <div><strong>offset</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>Current offset position of the helper as <code>{ top, left }</code> object.</div> </li> </ul> </li> </ul> <div> <strong>Code examples:</strong><p>Initialize the draggable with the drag callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).draggable({\n  drag: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the drag event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"drag\", function( event, ui ) {} );</pre> <p>Constrain movement via <code>ui.position</code>:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).draggable({\n  drag: function( event, ui ) {\n \n    // Keep the left edge of the element\n    // at least 100 pixels from the container\n    ui.position.left = Math.min( 100, ui.position.left );\n  }\n});</pre> </div> </div> <div id=\"event-start\" class=\"api-item\"> <h3>start( event, ui )<span class=\"returns\">Type: <code>dragstart</code></span> </h3> <div>Triggered when dragging starts.</div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  <ul> <li> <div><strong>helper</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The jQuery object representing the helper that's being dragged.</div> </li> <li> <div><strong>position</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>Current CSS position of the helper as <code>{ top, left }</code> object.</div> </li> <li> <div><strong>offset</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>Current offset position of the helper as <code>{ top, left }</code> object.</div> </li> </ul> </li> </ul> <div> <strong>Code examples:</strong><p>Initialize the draggable with the start callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).draggable({\n  start: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the dragstart event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"dragstart\", function( event, ui ) {} );</pre> </div> </div> <div id=\"event-stop\" class=\"api-item\"> <h3>stop( event, ui )<span class=\"returns\">Type: <code>dragstop</code></span> </h3> <div>Triggered when dragging stops.</div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  <ul> <li> <div><strong>helper</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The jQuery object representing the helper that's being dragged.</div> </li> <li> <div><strong>position</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>Current CSS position of the helper as <code>{ top, left }</code> object.</div> </li> <li> <div><strong>offset</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>Current offset position of the helper as <code>{ top, left }</code> object.</div> </li> </ul> </li> </ul> <div> <strong>Code examples:</strong><p>Initialize the draggable with the stop callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).draggable({\n  stop: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the dragstop event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"dragstop\", function( event, ui ) {} );</pre> </div> </div></section><section class=\"entry-examples\" id=\"entry-examples\"><h2>Example:</h2>\n<div class=\"entry-example\" id=\"example-0\"> <p>A simple jQuery UI Draggable</p> <pre class=\"syntaxhighlighter xml\">&lt;!doctype html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"utf-8\"&gt;\n  &lt;title&gt;draggable demo&lt;/title&gt;\n  &lt;link rel=\"stylesheet\" href=\"//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css\"&gt;\n  &lt;style&gt;\n  #draggable {\n    width: 100px;\n    height: 100px;\n    background: #ccc;\n  }\n  &lt;/style&gt;\n  &lt;script src=\"//code.jquery.com/jquery-1.10.2.js\"&gt;&lt;/script&gt;\n  &lt;script src=\"//code.jquery.com/ui/1.11.4/jquery-ui.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n&lt;div id=\"draggable\"&gt;Drag me&lt;/div&gt;\n \n&lt;script&gt;\n$( \"#draggable\" ).draggable();\n&lt;/script&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;</pre> <h4>Demo:</h4>  </div></section> </div></article> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; The jQuery Foundation and other contributors<br>Licensed under the MIT License.<br>\n    <a href=\"https://api.jqueryui.com/draggable\" class=\"_attribution-link\">https://api.jqueryui.com/draggable</a>\n  </p>\n</div>\n","autocomplete":"<h1 class=\"entry-title\">Autocomplete Widget</h1> <div class=\"entry-content\"> <article id=\"autocomplete1\" class=\"entry widget\"><h2 class=\"section-title\"> <span>Autocomplete Widget</span><span class=\"version-details\">version added: 1.8</span> </h2> <div class=\"entry-wrapper\"> <p class=\"desc\"><strong>Description: </strong>Autocomplete enables users to quickly find and select from a pre-populated list of values as they type, leveraging searching and filtering.</p> <section id=\"quick-nav\"><h2>QuickNav<a href=\"#entry-examples\">Examples</a> </h2>\n<div class=\"quick-nav-section\"> <h3>Options</h3> <div><a href=\"#option-appendTo\">appendTo</a></div> <div><a href=\"#option-autoFocus\">autoFocus</a></div> <div><a href=\"#option-delay\">delay</a></div> <div><a href=\"#option-disabled\">disabled</a></div> <div><a href=\"#option-minLength\">minLength</a></div> <div><a href=\"#option-position\">position</a></div> <div><a href=\"#option-source\">source</a></div> </div> <div class=\"quick-nav-section\"> <h3>Methods</h3> <div><a href=\"#method-close\">close</a></div> <div><a href=\"#method-destroy\">destroy</a></div> <div><a href=\"#method-disable\">disable</a></div> <div><a href=\"#method-enable\">enable</a></div> <div><a href=\"#method-instance\">instance</a></div> <div><a href=\"#method-option\">option</a></div> <div><a href=\"#method-search\">search</a></div> <div><a href=\"#method-widget\">widget</a></div> <br><h3>Extension Points</h3> <div><a href=\"#method-_renderItem\">_renderItem</a></div> <div><a href=\"#method-_renderMenu\">_renderMenu</a></div> <div><a href=\"#method-_resizeMenu\">_resizeMenu</a></div> </div> <div class=\"quick-nav-section\"> <h3>Events</h3> <div><a href=\"#event-change\">change</a></div> <div><a href=\"#event-close\">close</a></div> <div><a href=\"#event-create\">create</a></div> <div><a href=\"#event-focus\">focus</a></div> <div><a href=\"#event-open\">open</a></div> <div><a href=\"#event-response\">response</a></div> <div><a href=\"#event-search\">search</a></div> <div><a href=\"#event-select\">select</a></div> </div></section><div class=\"longdesc\" id=\"entry-longdesc\"> <p>Any field that can receive input can be converted into an Autocomplete, namely, <code>&lt;input&gt;</code> elements, <code>&lt;textarea&gt;</code> elements, and elements with the <code>contenteditable</code> attribute.</p> <p>By giving an Autocomplete field focus or entering something into it, the plugin starts searching for entries that match and displays a list of values to choose from. By entering more characters, the user can filter down the list to better matches.</p> <p>This can be used to choose previously selected values, such as entering tags for articles or entering email addresses from an address book. Autocomplete can also be used to populate associated information, such as entering a city name and getting the zip code.</p> <p>You can pull data in from a local or remote source: Local is good for small data sets, e.g., an address book with 50 entries; remote is necessary for big data sets, such as a database with hundreds or millions of entries to select from. To find out more about customizing the data source, see the documentation for the <a href=\"#option-source\"><code>source</code></a> option.</p> <h3>Keyboard interaction</h3> <p>When the menu is open, the following key commands are available:</p> <ul> <li> <code>UP</code>: Move focus to the previous item. If on first item, move focus to the input. If on the input, move focus to last item.</li> <li> <code>DOWN</code>: Move focus to the next item. If on last item, move focus to the input. If on the input, move focus to the first item.</li> <li> <code>ESCAPE</code>: Close the menu.</li> <li> <code>ENTER</code>: Select the currently focused item and close the menu.</li> <li> <code>TAB</code>: Select the currently focused item, close the menu, and move focus to the next focusable element.</li> <li> <code>PAGE UP</code>/<code>PAGE DOWN</code>: Scroll through a page of items (based on height of menu). <em>It's generally a bad idea to display so many items that users need to page.</em> </li> </ul> <p>When the menu is closed, the following key commands are available:</p> <ul> <li> <code>UP</code>/<code>DOWN</code>: Open the menu, if the <a href=\"#option-minLength\"><code>minLength</code></a> has been met.</li> </ul> <div> <h3 id=\"theming\">Theming</h3> <p>The autocomplete widget uses the <a href=\"theming/css-framework\">jQuery UI CSS framework</a> to style its look and feel. If autocomplete specific styling is needed, the following CSS class names can be used:</p> </div> <ul> <li> <code>ui-autocomplete</code>: The <a href=\"menu#theming\">menu</a> used to display matches to the user.</li> <li> <code>ui-autocomplete-input</code>: The input element that the Autocomplete widget was instantiated with.</li> </ul> <h3>Dependencies</h3> <ul> <li><a href=\"https://api.jqueryui.com/category/ui-core/\">UI Core</a></li> <li><a href=\"jquery.widget\">Widget Factory</a></li> <li><a href=\"position\">Position</a></li> <li><a href=\"menu\">Menu</a></li> </ul> </div> <h3>Additional Notes:</h3> <div class=\"longdesc\"><ul> <li> This widget requires some functional CSS, otherwise it won't work. If you build a custom theme, use the widget's specific CSS file as a starting point. </li> <li> This widget manipulates its element's value programmatically, therefore a native <code>change</code> event may not be fired when the element's value changes. </li> </ul></div> <section id=\"options\"><h2>Options</h2>\n<div id=\"option-appendTo\" class=\"api-item first-item\"> <h3>appendTo </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Selector\">Selector</a> </div> <div class=\"default\"> <strong>Default: </strong><code>null</code> </div> <div> <p>Which element the menu should be appended to. When the value is <code>null</code>, the parents of the input field will be checked for a class of <code>ui-front</code>. If an element with the <code>ui-front</code> class is found, the menu will be appended to that element. Regardless of the value, if no element is found, the menu will be appended to the body.</p> <div class=\"warning\"> <strong>Note:</strong> The <code>appendTo</code> option should not be changed while the suggestions menu is open.</div> </div> <strong>Code examples:</strong><p>Initialize the autocomplete with the <code>appendTo</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).autocomplete({\n  appendTo: \"#someElem\"\n});</pre> <p>Get or set the <code>appendTo</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar appendTo = $( \".selector\" ).autocomplete( \"option\", \"appendTo\" );\n \n// Setter\n$( \".selector\" ).autocomplete( \"option\", \"appendTo\", \"#someElem\" );</pre> </div> <div id=\"option-autoFocus\" class=\"api-item\"> <h3>autoFocus </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> </div> <div class=\"default\"> <strong>Default: </strong><code>false</code> </div> <div>If set to <code>true</code> the first item will automatically be focused when the menu is shown.</div> <strong>Code examples:</strong><p>Initialize the autocomplete with the <code>autoFocus</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).autocomplete({\n  autoFocus: true\n});</pre> <p>Get or set the <code>autoFocus</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar autoFocus = $( \".selector\" ).autocomplete( \"option\", \"autoFocus\" );\n \n// Setter\n$( \".selector\" ).autocomplete( \"option\", \"autoFocus\", true );</pre> </div> <div id=\"option-delay\" class=\"api-item\"> <h3>delay </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Integer\">Integer</a> </div> <div class=\"default\"> <strong>Default: </strong><code>300</code> </div> <div>The delay in milliseconds between when a keystroke occurs and when a search is performed. A zero-delay makes sense for local data (more responsive), but can produce a lot of load for remote data, while being less responsive.</div> <strong>Code examples:</strong><p>Initialize the autocomplete with the <code>delay</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).autocomplete({\n  delay: 500\n});</pre> <p>Get or set the <code>delay</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar delay = $( \".selector\" ).autocomplete( \"option\", \"delay\" );\n \n// Setter\n$( \".selector\" ).autocomplete( \"option\", \"delay\", 500 );</pre> </div> <div id=\"option-disabled\" class=\"api-item\"> <h3>disabled </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> </div> <div class=\"default\"> <strong>Default: </strong><code>false</code> </div> <div>Disables the autocomplete if set to <code>true</code>.</div> <strong>Code examples:</strong><p>Initialize the autocomplete with the <code>disabled</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).autocomplete({\n  disabled: true\n});</pre> <p>Get or set the <code>disabled</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar disabled = $( \".selector\" ).autocomplete( \"option\", \"disabled\" );\n \n// Setter\n$( \".selector\" ).autocomplete( \"option\", \"disabled\", true );</pre> </div> <div id=\"option-minLength\" class=\"api-item\"> <h3>minLength </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Integer\">Integer</a> </div> <div class=\"default\"> <strong>Default: </strong><code>1</code> </div> <div>The minimum number of characters a user must type before a search is performed. Zero is useful for local data with just a few items, but a higher value should be used when a single character search could match a few thousand items.</div> <strong>Code examples:</strong><p>Initialize the autocomplete with the <code>minLength</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).autocomplete({\n  minLength: 0\n});</pre> <p>Get or set the <code>minLength</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar minLength = $( \".selector\" ).autocomplete( \"option\", \"minLength\" );\n \n// Setter\n$( \".selector\" ).autocomplete( \"option\", \"minLength\", 0 );</pre> </div> <div id=\"option-position\" class=\"api-item\"> <h3>position </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div class=\"default\"> <strong>Default: </strong><code>{ my: \"left top\", at: \"left bottom\", collision: \"none\" }</code> </div> <div>Identifies the position of the suggestions menu in relation to the associated input element. The <code>of</code> option defaults to the input element, but you can specify another element to position against. You can refer to the <a href=\"position\">jQuery UI Position</a> utility for more details about the various options.</div> <strong>Code examples:</strong><p>Initialize the autocomplete with the <code>position</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).autocomplete({\n  position: { my : \"right top\", at: \"right bottom\" }\n});</pre> <p>Get or set the <code>position</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar position = $( \".selector\" ).autocomplete( \"option\", \"position\" );\n \n// Setter\n$( \".selector\" ).autocomplete( \"option\", \"position\", { my : \"right top\", at: \"right bottom\" } );</pre> </div> <div id=\"option-source\" class=\"api-item\"> <h3>source </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Array\">Array</a> or <a href=\"http://api.jquery.com/Types/#String\">String</a> or <a href=\"http://api.jquery.com/Types/#Function\">Function</a>( <a href=\"http://api.jquery.com/Types/#Object\">Object</a> request, <a href=\"http://api.jquery.com/Types/#Function\">Function</a> response( <a href=\"http://api.jquery.com/Types/#Object\">Object</a> data ) )</div> <div class=\"default\"> <strong>Default: </strong><code>none; must be specified</code> </div> <div> Defines the data to use, must be specified. <p>Independent of the variant you use, the label is always treated as text. If you want the label to be treated as html you can use <a href=\"https://github.com/scottgonzalez/jquery-ui-extensions/blob/master/src/autocomplete/jquery.ui.autocomplete.html.js\">Scott González' html extension</a>. The demos all focus on different variations of the <code>source</code> option - look for one that matches your use case, and check out the code.</p> </div> <strong>Multiple types supported:</strong><ul> <li> <strong>Array</strong>: An array can be used for local data. There are two supported formats: <ul> <li>An array of strings: <code>[ \"Choice1\", \"Choice2\" ]</code> </li> <li>An array of objects with <code>label</code> and <code>value</code> properties: <code>[ { label: \"Choice1\", value: \"value1\" }, ... ]</code> </li> </ul> The label property is displayed in the suggestion menu. The value will be inserted into the input element when a user selects an item. If just one property is specified, it will be used for both, e.g., if you provide only <code>value</code> properties, the value will also be used as the label. </li> <li> <strong>String</strong>: When a string is used, the Autocomplete plugin expects that string to point to a URL resource that will return JSON data. It can be on the same host or on a different one (must provide JSONP). The Autocomplete plugin does not filter the results, instead a query string is added with a <code>term</code> field, which the server-side script should use for filtering the results. For example, if the <code>source</code> option is set to <code>\"http://example.com\"</code> and the user types <code>foo</code>, a GET request would be made to <code>http://example.com?term=foo</code>. The data itself can be in the same format as the local data described above.</li> <li> <strong>Function</strong>: The third variation, a callback, provides the most flexibility and can be used to connect any data source to Autocomplete. The callback gets two arguments: <ul> <li>A <code>request</code> object, with a single <code>term</code> property, which refers to the value currently in the text input. For example, if the user enters <code>\"new yo\"</code> in a city field, the Autocomplete term will equal <code>\"new yo\"</code>.</li> <li>A <code>response</code> callback, which expects a single argument: the data to suggest to the user. This data should be filtered based on the provided term, and can be in any of the formats described above for simple local data. It's important when providing a custom source callback to handle errors during the request. You must always call the <code>response</code> callback even if you encounter an error. This ensures that the widget always has the correct state.</li> </ul> <p>When filtering data locally, you can make use of the built-in <code>$.ui.autocomplete.escapeRegex</code> function. It'll take a single string argument and escape all regex characters, making the result safe to pass to <code>new RegExp()</code>.</p> </li> </ul> <strong>Code examples:</strong><p>Initialize the autocomplete with the <code>source</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).autocomplete({\n  source: [ \"c++\", \"java\", \"php\", \"coldfusion\", \"javascript\", \"asp\", \"ruby\" ]\n});</pre> <p>Get or set the <code>source</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar source = $( \".selector\" ).autocomplete( \"option\", \"source\" );\n \n// Setter\n$( \".selector\" ).autocomplete( \"option\", \"source\", [ \"c++\", \"java\", \"php\", \"coldfusion\", \"javascript\", \"asp\", \"ruby\" ] );</pre> </div></section><section id=\"methods\"><h2>Methods</h2>\n<div id=\"method-close\"><div class=\"api-item first-item\"> <h3>close()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div>Closes the Autocomplete menu. Useful in combination with the <a href=\"#method-search\"><code>search</code></a> method, to close the open menu.</div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the close method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).autocomplete( \"close\" );</pre> </div> </div></div> <div id=\"method-destroy\"><div class=\"api-item\"> <h3>destroy()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Removes the autocomplete functionality completely. This will return the element back to its pre-init state. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the destroy method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).autocomplete( \"destroy\" );</pre> </div> </div></div> <div id=\"method-disable\"><div class=\"api-item\"> <h3>disable()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Disables the autocomplete. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the disable method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).autocomplete( \"disable\" );</pre> </div> </div></div> <div id=\"method-enable\"><div class=\"api-item\"> <h3>enable()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Enables the autocomplete. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the enable method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).autocomplete( \"enable\" );</pre> </div> </div></div> <div id=\"method-instance\"><div class=\"api-item\"> <h3>instance()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#Object\">Object</a></span> </h3> <div> <p>Retrieves the autocomplete's instance object. If the element does not have an associated instance, <code>undefined</code> is returned.</p> <p>Unlike other widget methods, <code>instance()</code> is safe to call on any element after the autocomplete plugin has loaded.</p> </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the instance method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).autocomplete( \"instance\" );</pre> </div> </div></div> <div id=\"method-option\"> <div class=\"api-item\"> <h3>option( optionName )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#Object\">Object</a></span> </h3> <div> <p>Gets the value currently associated with the specified <code>optionName</code>.</p> <p><strong>Note:</strong> For options that have objects as their value, you can get the value of a specific key by using dot notation. For example, <code>\"foo.bar\"</code> would get the value of the <code>bar</code> property on the <code>foo</code> option.</p> </div> <ul><li> <div><strong>optionName</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>The name of the option to get.</div> </li></ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">var isDisabled = $( \".selector\" ).autocomplete( \"option\", \"disabled\" );</pre> </div> </div> <div class=\"api-item\"> <h3>option()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#PlainObject\">PlainObject</a></span> </h3> <div>Gets an object containing key/value pairs representing the current autocomplete options hash.</div> <ul><li><div class=\"null-signature\">This signature does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">var options = $( \".selector\" ).autocomplete( \"option\" );</pre> </div> </div> <div class=\"api-item\"> <h3>option( optionName, value )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> <p>Sets the value of the autocomplete option associated with the specified <code>optionName</code>.</p> <p><strong>Note:</strong> For options that have objects as their value, you can set the value of just one property by using dot notation for <code>optionName</code>. For example, <code>\"foo.bar\"</code> would update only the <code>bar</code> property of the <code>foo</code> option.</p> </div> <ul> <li> <div><strong>optionName</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>The name of the option to set.</div> </li> <li> <div><strong>value</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>A value to set for the option.</div> </li> </ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).autocomplete( \"option\", \"disabled\", true );</pre> </div> </div> <div class=\"api-item\"> <h3>option( options )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div>Sets one or more options for the autocomplete.</div> <ul><li> <div><strong>options</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>A map of option-value pairs to set.</div> </li></ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).autocomplete( \"option\", { disabled: true } );</pre> </div> </div> </div> <div id=\"method-search\"><div class=\"api-item\"> <h3>search( [value ] )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div>Triggers a <a href=\"#event-search\"><code>search</code></a> event and invokes the data source if the event is not canceled. Can be used by a selectbox-like button to open the suggestions when clicked. When invoked with no parameters, the current input's value is used. Can be called with an empty string and <code>minLength: 0</code> to display all items.</div> <ul><li> <div><strong>value</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div>  </li></ul> <div> <strong>Code examples:</strong><p>Invoke the search method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).autocomplete( \"search\", \"\" );</pre> </div> </div></div> <div id=\"method-widget\"><div class=\"api-item\"> <h3>widget()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a></span> </h3> <div>Returns a <code>jQuery</code> object containing the menu element. Although the menu items are constantly created and destroyed, the menu element itself is created during initialization and is constantly reused.</div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the widget method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).autocomplete( \"widget\" );</pre> </div> </div></div></section><section id=\"extension-points\"><h2>Extension Points</h2>\n<p> The autocomplete widget is built with the <a href=\"jquery.widget\">widget factory</a> and can be extended. When extending widgets, you have the ability to override or add to the behavior of existing methods. The following methods are provided as extension points with the same API stability as the <a href=\"#methods\">plugin methods</a> listed above. For more information on widget extensions, see <a href=\"http://learn.jquery.com/jquery-ui/widget-factory/extending-widgets/\">Extending Widgets with the Widget Factory</a>. </p>  <div id=\"method-_renderItem\"><div class=\"api-item first-item\"> <h3>_renderItem( ul, item )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a></span> </h3> <div> <p>Method that controls the creation of each option in the widget's menu. The method must create a new <code>&lt;li&gt;</code> element, append it to the menu, and return it.</p> </div> <ul> <li> <div><strong>ul</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The <code>&lt;ul&gt;</code> element that the newly created <code>&lt;li&gt;</code> element must be appended to.</div> </li> <li> <div><strong>item</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  <ul> <li> <div><strong>label</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>The string to display for the item.</div> </li> <li> <div><strong>value</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>The value to insert into the input when the item is selected.</div> </li> </ul> </li> </ul> <div> <strong>Code examples:</strong><p>Add the item's value as a data attribute on the <code>&lt;li&gt;</code>.</p> <pre class=\"syntaxhighlighter javascript\">_renderItem: function( ul, item ) {\n  return $( \"&lt;li&gt;\" )\n    .attr( \"data-value\", item.value )\n    .append( item.label )\n    .appendTo( ul );\n}</pre> </div> </div></div> <div id=\"method-_renderMenu\"><div class=\"api-item\"> <h3>_renderMenu( ul, items )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Method that controls building the widget's menu. The method is passed an empty <code>&lt;ul&gt;</code> and an array of items that match the user typed term. Creation of the individual <code>&lt;li&gt;</code> elements should be delegated to <code>_renderItemData()</code>, which in turn delegates to the <a href=\"#method-_renderItem\"><code>_renderItem()</code></a> extension point. </div> <ul> <li> <div><strong>ul</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>An empty <code>&lt;ul&gt;</code> element to use as the widget's menu.</div> </li> <li> <div><strong>items</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Array\">Array</a> </div> <div>An Array of items that match the user typed term. Each item is an Object with <code>label</code> and <code>value</code> properties.</div> </li> </ul> <div> <strong>Code examples:</strong><p>Add a CSS class name to the odd menu items.</p> <pre class=\"syntaxhighlighter javascript\">_renderMenu: function( ul, items ) {\n  var that = this;\n  $.each( items, function( index, item ) {\n    that._renderItemData( ul, item );\n  });\n  $( ul ).find( \"li:odd\" ).addClass( \"odd\" );\n}</pre> </div> </div></div> <div id=\"method-_resizeMenu\"><div class=\"api-item\"> <h3>_resizeMenu()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div>Method responsible for sizing the menu before it is displayed. The menu element is available at <code>this.menu.element</code>.</div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Always display the menu as 500 pixels wide.</p> <pre class=\"syntaxhighlighter javascript\">_resizeMenu: function() {\n  this.menu.element.outerWidth( 500 );\n}</pre> </div> </div></div></section><section id=\"events\"><h2>Events</h2>\n<div id=\"event-change\" class=\"api-item first-item\"> <h3>change( event, ui )<span class=\"returns\">Type: <code>autocompletechange</code></span> </h3> <div>Triggered when the field is blurred, if the value has changed.</div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  <ul><li> <div><strong>item</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>The item selected from the menu, if any. Otherwise the property is <code>null</code>.</div> </li></ul> </li> </ul> <div> <strong>Code examples:</strong><p>Initialize the autocomplete with the change callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).autocomplete({\n  change: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the autocompletechange event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"autocompletechange\", function( event, ui ) {} );</pre> </div> </div> <div id=\"event-close\" class=\"api-item\"> <h3>close( event, ui )<span class=\"returns\">Type: <code>autocompleteclose</code></span> </h3> <div>Triggered when the menu is hidden. Not every <code>close</code> event will be accompanied by a <code>change</code> event.</div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  </li> </ul> <p><em>Note: The <code>ui</code> object is empty but included for consistency with other events.</em></p> <div> <strong>Code examples:</strong><p>Initialize the autocomplete with the close callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).autocomplete({\n  close: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the autocompleteclose event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"autocompleteclose\", function( event, ui ) {} );</pre> </div> </div> <div id=\"event-create\" class=\"api-item\"> <h3>create( event, ui )<span class=\"returns\">Type: <code>autocompletecreate</code></span> </h3> <div> Triggered when the autocomplete is created. </div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  </li> </ul> <p><em>Note: The <code>ui</code> object is empty but included for consistency with other events.</em></p> <div> <strong>Code examples:</strong><p>Initialize the autocomplete with the create callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).autocomplete({\n  create: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the autocompletecreate event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"autocompletecreate\", function( event, ui ) {} );</pre> </div> </div> <div id=\"event-focus\" class=\"api-item\"> <h3>focus( event, ui )<span class=\"returns\">Type: <code>autocompletefocus</code></span> </h3> <div> Triggered when focus is moved to an item (not selecting). The default action is to replace the text field's value with the value of the focused item, though only if the event was triggered by a keyboard interaction. <p>Canceling this event prevents the value from being updated, but does not prevent the menu item from being focused.</p> </div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  <ul><li> <div><strong>item</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>The focused item.</div> </li></ul> </li> </ul> <div> <strong>Code examples:</strong><p>Initialize the autocomplete with the focus callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).autocomplete({\n  focus: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the autocompletefocus event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"autocompletefocus\", function( event, ui ) {} );</pre> </div> </div> <div id=\"event-open\" class=\"api-item\"> <h3>open( event, ui )<span class=\"returns\">Type: <code>autocompleteopen</code></span> </h3> <div>Triggered when the suggestion menu is opened or updated.</div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  </li> </ul> <p><em>Note: The <code>ui</code> object is empty but included for consistency with other events.</em></p> <div> <strong>Code examples:</strong><p>Initialize the autocomplete with the open callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).autocomplete({\n  open: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the autocompleteopen event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"autocompleteopen\", function( event, ui ) {} );</pre> </div> </div> <div id=\"event-response\" class=\"api-item\"> <h3>response( event, ui )<span class=\"returns\">Type: <code>autocompleteresponse</code></span> </h3> <div>Triggered after a search completes, before the menu is shown. Useful for local manipulation of suggestion data, where a custom <a href=\"#option-source\"><code>source</code></a> option callback is not required. This event is always triggered when a search completes, even if the menu will not be shown because there are no results or the Autocomplete is disabled.</div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  <ul><li> <div><strong>content</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Array\">Array</a> </div> <div>Contains the response data and can be modified to change the results that will be shown. This data is already normalized, so if you modify the data, make sure to include both <code>value</code> and <code>label</code> properties for each item.</div> </li></ul> </li> </ul> <div> <strong>Code examples:</strong><p>Initialize the autocomplete with the response callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).autocomplete({\n  response: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the autocompleteresponse event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"autocompleteresponse\", function( event, ui ) {} );</pre> </div> </div> <div id=\"event-search\" class=\"api-item\"> <h3>search( event, ui )<span class=\"returns\">Type: <code>autocompletesearch</code></span> </h3> <div>Triggered before a search is performed, after <a href=\"#option-minLength\"><code>minLength</code></a> and <a href=\"#option-delay\"><code>delay</code></a> are met. If canceled, then no request will be started and no items suggested.</div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  </li> </ul> <p><em>Note: The <code>ui</code> object is empty but included for consistency with other events.</em></p> <div> <strong>Code examples:</strong><p>Initialize the autocomplete with the search callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).autocomplete({\n  search: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the autocompletesearch event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"autocompletesearch\", function( event, ui ) {} );</pre> </div> </div> <div id=\"event-select\" class=\"api-item\"> <h3>select( event, ui )<span class=\"returns\">Type: <code>autocompleteselect</code></span> </h3> <div> Triggered when an item is selected from the menu. The default action is to replace the text field's value with the value of the selected item. <p>Canceling this event prevents the value from being updated, but does not prevent the menu from closing.</p> </div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  <ul><li> <div><strong>item</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>An Object with <code>label</code> and <code>value</code> properties for the selected option.</div> </li></ul> </li> </ul> <div> <strong>Code examples:</strong><p>Initialize the autocomplete with the select callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).autocomplete({\n  select: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the autocompleteselect event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"autocompleteselect\", function( event, ui ) {} );</pre> </div> </div></section><section class=\"entry-examples\" id=\"entry-examples\"><h2>Examples:</h2>\n<div class=\"entry-example\" id=\"example-0\"> <p>A simple jQuery UI Autocomplete</p> <pre class=\"syntaxhighlighter xml\">&lt;!doctype html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"utf-8\"&gt;\n  &lt;title&gt;autocomplete demo&lt;/title&gt;\n  &lt;link rel=\"stylesheet\" href=\"//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css\"&gt;\n  &lt;script src=\"//code.jquery.com/jquery-1.10.2.js\"&gt;&lt;/script&gt;\n  &lt;script src=\"//code.jquery.com/ui/1.11.4/jquery-ui.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n&lt;label for=\"autocomplete\"&gt;Select a programming language: &lt;/label&gt;\n&lt;input id=\"autocomplete\"&gt;\n \n&lt;script&gt;\n$( \"#autocomplete\" ).autocomplete({\n  source: [ \"c++\", \"java\", \"php\", \"coldfusion\", \"javascript\", \"asp\", \"ruby\" ]\n});\n&lt;/script&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;</pre> <h4>Demo:</h4>  </div> <div class=\"entry-example\" id=\"example-1\"> <p>Using a custom source callback to match only the beginning of terms</p> <pre class=\"syntaxhighlighter xml\">&lt;!doctype html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"utf-8\"&gt;\n  &lt;title&gt;autocomplete demo&lt;/title&gt;\n  &lt;link rel=\"stylesheet\" href=\"//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css\"&gt;\n  &lt;script src=\"//code.jquery.com/jquery-1.10.2.js\"&gt;&lt;/script&gt;\n  &lt;script src=\"//code.jquery.com/ui/1.11.4/jquery-ui.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n&lt;label for=\"autocomplete\"&gt;Select a programming language: &lt;/label&gt;\n&lt;input id=\"autocomplete\"&gt;\n \n&lt;script&gt;\nvar tags = [ \"c++\", \"java\", \"php\", \"coldfusion\", \"javascript\", \"asp\", \"ruby\" ];\n$( \"#autocomplete\" ).autocomplete({\n  source: function( request, response ) {\n          var matcher = new RegExp( \"^\" + $.ui.autocomplete.escapeRegex( request.term ), \"i\" );\n          response( $.grep( tags, function( item ){\n              return matcher.test( item );\n          }) );\n      }\n});\n&lt;/script&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;</pre> <h4>Demo:</h4>  </div></section> </div></article> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; The jQuery Foundation and other contributors<br>Licensed under the MIT License.<br>\n    <a href=\"https://api.jqueryui.com/autocomplete\" class=\"_attribution-link\">https://api.jqueryui.com/autocomplete</a>\n  </p>\n</div>\n","button":"<h1 class=\"entry-title\">Button Widget</h1> <div class=\"entry-content\"> <article id=\"button1\" class=\"entry widget\"><h2 class=\"section-title\"> <span>Button Widget</span><span class=\"version-details\">version added: 1.8</span> </h2> <div class=\"entry-wrapper\"> <p class=\"desc\"><strong>Description: </strong>Themeable buttons.</p> <section id=\"quick-nav\"><h2>QuickNav<a href=\"#entry-examples\">Examples</a> </h2>\n<div class=\"quick-nav-section\"> <h3>Options</h3> <div><a href=\"#option-disabled\">disabled</a></div> <div><a href=\"#option-icons\">icons</a></div> <div><a href=\"#option-label\">label</a></div> <div><a href=\"#option-text\">text</a></div> </div> <div class=\"quick-nav-section\"> <h3>Methods</h3> <div><a href=\"#method-destroy\">destroy</a></div> <div><a href=\"#method-disable\">disable</a></div> <div><a href=\"#method-enable\">enable</a></div> <div><a href=\"#method-instance\">instance</a></div> <div><a href=\"#method-option\">option</a></div> <div><a href=\"#method-refresh\">refresh</a></div> <div><a href=\"#method-widget\">widget</a></div> </div> <div class=\"quick-nav-section\"> <h3>Events</h3> <div><a href=\"#event-create\">create</a></div> </div></section><div class=\"longdesc\" id=\"entry-longdesc\"> <p>Button enhances standard form elements like buttons, inputs and anchors to themeable buttons with appropriate hover and active styles.</p> <p>In addition to basic push buttons, radio buttons and checkboxes (inputs of type radio and checkbox) can be converted to buttons. Their associated label is styled to appear as the button, while the underlying input is updated on click. For the association to work properly, give the input an <code>id</code> attribute, and refer to that in the label's <code>for</code> attribute. Don't nest the input inside the label, as that <a href=\"http://www.paciellogroup.com/blog/2011/07/html5-accessibility-chops-form-control-labeling/\">causes accessibility problems</a>.</p> <p>In order to group radio buttons, you can use the <a href=\"buttonset\">Buttonset</a> widget, which provides visual groupings of buttons.</p> <p>When using an input of type button, submit or reset, support is limited to plain text labels with no icons.</p> <div> <h3 id=\"theming\">Theming</h3> <p>The button widget uses the <a href=\"theming/css-framework\">jQuery UI CSS framework</a> to style its look and feel. If button specific styling is needed, the following CSS class names can be used:</p> </div> <ul> <li> <code>ui-button</code>: The DOM element that represents the button. This element will additionally have one of the following classes depending on the <a href=\"#option-text\">text</a> and <a href=\"#option-icons\">icons</a> option: <code>ui-button-text-only</code>, <code>ui-button-icon-only</code>, <code>ui-button-icons-only</code>, <code>ui-button-text-icons</code>. <ul> <li> <code>ui-button-icon-primary</code>: The element used to display the button's primary icon. This will only be present if a primary icon is provided in the <a href=\"#option-icons\">icons</a> option. </li> <li> <code>ui-button-text</code>: The container around the textual content of the button. </li> <li> <code>ui-button-icon-secondary</code>: The element used to display the button's secondary icon. This will only be present if a secondary icon is provided in the <a href=\"#option-icons\">icons</a> option. </li> </ul> </li> </ul> <h3>Dependencies</h3> <ul> <li><a href=\"https://api.jqueryui.com/category/ui-core/\">UI Core</a></li> <li><a href=\"jquery.widget\">Widget Factory</a></li> </ul> </div> <h3>Additional Notes:</h3> <div class=\"longdesc\"><ul><li> This widget requires some functional CSS, otherwise it won't work. If you build a custom theme, use the widget's specific CSS file as a starting point. </li></ul></div> <section id=\"options\"><h2>Options</h2>\n<div id=\"option-disabled\" class=\"api-item first-item\"> <h3>disabled </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> </div> <div class=\"default\"> <strong>Default: </strong><code>false</code> </div> <div>Disables the button if set to <code>true</code>.</div> <strong>Code examples:</strong><p>Initialize the button with the <code>disabled</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).button({\n  disabled: true\n});</pre> <p>Get or set the <code>disabled</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar disabled = $( \".selector\" ).button( \"option\", \"disabled\" );\n \n// Setter\n$( \".selector\" ).button( \"option\", \"disabled\", true );</pre> </div> <div id=\"option-icons\" class=\"api-item\"> <h3>icons </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div class=\"default\"> <strong>Default: </strong><code>{ primary: null, secondary: null }</code> </div> <div> <p>Icons to display, with or without text (see <a href=\"#option-text\"><code>text</code></a> option). By default, the primary icon is displayed on the left of the label text and the secondary is displayed on the right. The positioning can be controlled via CSS.</p> <p>The value for the <code>primary</code> and <code>secondary</code> properties must match <a href=\"theming/icons\">an icon class name</a>, e.g., <code>\"ui-icon-gear\"</code>. For using only one icon: <code>icons: { primary: \"ui-icon-locked\" }</code>. For using two icons: <code>icons: { primary: \"ui-icon-gear\", secondary: \"ui-icon-triangle-1-s\" }</code>.</p> <p>When using an input of type button, submit or reset, icons are not supported.</p> </div> <strong>Code examples:</strong><p>Initialize the button with the <code>icons</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).button({\n  icons: { primary: \"ui-icon-gear\", secondary: \"ui-icon-triangle-1-s\" }\n});</pre> <p>Get or set the <code>icons</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar icons = $( \".selector\" ).button( \"option\", \"icons\" );\n \n// Setter\n$( \".selector\" ).button( \"option\", \"icons\", { primary: \"ui-icon-gear\", secondary: \"ui-icon-triangle-1-s\" } );</pre> </div> <div id=\"option-label\" class=\"api-item\"> <h3>label </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div class=\"default\"> <strong>Default: </strong><code>null</code> </div> <div> <p>Text to show in the button. When not specified (<code>null</code>), the element's HTML content is used, or its <code>value</code> attribute if the element is an input element of type submit or reset, or the HTML content of the associated label element if the element is an input of type radio or checkbox.</p> <p>When using an input of type button, submit or reset, support is limited to plain text labels.</p> </div> <strong>Code examples:</strong><p>Initialize the button with the <code>label</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).button({\n  label: \"custom label\"\n});</pre> <p>Get or set the <code>label</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar label = $( \".selector\" ).button( \"option\", \"label\" );\n \n// Setter\n$( \".selector\" ).button( \"option\", \"label\", \"custom label\" );</pre> </div> <div id=\"option-text\" class=\"api-item\"> <h3>text </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> </div> <div class=\"default\"> <strong>Default: </strong><code>true</code> </div> <div>Whether to show the label. When set to <code>false</code> no text will be displayed, but the <a href=\"#option-icons\"><code>icons</code></a> option must be enabled, otherwise the <code>text</code> option will be ignored.</div> <strong>Code examples:</strong><p>Initialize the button with the <code>text</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).button({\n  text: false\n});</pre> <p>Get or set the <code>text</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar text = $( \".selector\" ).button( \"option\", \"text\" );\n \n// Setter\n$( \".selector\" ).button( \"option\", \"text\", false );</pre> </div></section><section id=\"methods\"><h2>Methods</h2>\n<div id=\"method-destroy\"><div class=\"api-item first-item\"> <h3>destroy()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Removes the button functionality completely. This will return the element back to its pre-init state. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the destroy method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).button( \"destroy\" );</pre> </div> </div></div> <div id=\"method-disable\"><div class=\"api-item\"> <h3>disable()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Disables the button. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the disable method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).button( \"disable\" );</pre> </div> </div></div> <div id=\"method-enable\"><div class=\"api-item\"> <h3>enable()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Enables the button. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the enable method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).button( \"enable\" );</pre> </div> </div></div> <div id=\"method-instance\"><div class=\"api-item\"> <h3>instance()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#Object\">Object</a></span> </h3> <div> <p>Retrieves the button's instance object. If the element does not have an associated instance, <code>undefined</code> is returned.</p> <p>Unlike other widget methods, <code>instance()</code> is safe to call on any element after the button plugin has loaded.</p> </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the instance method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).button( \"instance\" );</pre> </div> </div></div> <div id=\"method-option\"> <div class=\"api-item\"> <h3>option( optionName )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#Object\">Object</a></span> </h3> <div> <p>Gets the value currently associated with the specified <code>optionName</code>.</p> <p><strong>Note:</strong> For options that have objects as their value, you can get the value of a specific key by using dot notation. For example, <code>\"foo.bar\"</code> would get the value of the <code>bar</code> property on the <code>foo</code> option.</p> </div> <ul><li> <div><strong>optionName</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>The name of the option to get.</div> </li></ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">var isDisabled = $( \".selector\" ).button( \"option\", \"disabled\" );</pre> </div> </div> <div class=\"api-item\"> <h3>option()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#PlainObject\">PlainObject</a></span> </h3> <div>Gets an object containing key/value pairs representing the current button options hash.</div> <ul><li><div class=\"null-signature\">This signature does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">var options = $( \".selector\" ).button( \"option\" );</pre> </div> </div> <div class=\"api-item\"> <h3>option( optionName, value )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> <p>Sets the value of the button option associated with the specified <code>optionName</code>.</p> <p><strong>Note:</strong> For options that have objects as their value, you can set the value of just one property by using dot notation for <code>optionName</code>. For example, <code>\"foo.bar\"</code> would update only the <code>bar</code> property of the <code>foo</code> option.</p> </div> <ul> <li> <div><strong>optionName</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>The name of the option to set.</div> </li> <li> <div><strong>value</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>A value to set for the option.</div> </li> </ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).button( \"option\", \"disabled\", true );</pre> </div> </div> <div class=\"api-item\"> <h3>option( options )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div>Sets one or more options for the button.</div> <ul><li> <div><strong>options</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>A map of option-value pairs to set.</div> </li></ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).button( \"option\", { disabled: true } );</pre> </div> </div> </div> <div id=\"method-refresh\"><div class=\"api-item\"> <h3>refresh()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div>Refreshes the visual state of the button. Useful for updating button state after the native element's checked or disabled state is changed programmatically.</div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the refresh method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).button( \"refresh\" );</pre> </div> </div></div> <div id=\"method-widget\"><div class=\"api-item\"> <h3>widget()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a></span> </h3> <div> Returns a <code>jQuery</code> object containing the element visually representing the button. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the widget method:</p> <pre class=\"syntaxhighlighter javascript\">var widget = $( \".selector\" ).button( \"widget\" );</pre> </div> </div></div></section><section id=\"events\"><h2>Events</h2>\n<div id=\"event-create\" class=\"api-item first-item\"> <h3>create( event, ui )<span class=\"returns\">Type: <code>buttoncreate</code></span> </h3> <div> Triggered when the button is created. </div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  </li> </ul> <p><em>Note: The <code>ui</code> object is empty but included for consistency with other events.</em></p> <div> <strong>Code examples:</strong><p>Initialize the button with the create callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).button({\n  create: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the buttoncreate event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"buttoncreate\", function( event, ui ) {} );</pre> </div> </div></section><section class=\"entry-examples\" id=\"entry-examples\"><h2>Example:</h2>\n<div class=\"entry-example\" id=\"example-0\"> <p>A simple jQuery UI Button</p> <pre class=\"syntaxhighlighter xml\">&lt;!doctype html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"utf-8\"&gt;\n  &lt;title&gt;button demo&lt;/title&gt;\n  &lt;link rel=\"stylesheet\" href=\"//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css\"&gt;\n  &lt;script src=\"//code.jquery.com/jquery-1.10.2.js\"&gt;&lt;/script&gt;\n  &lt;script src=\"//code.jquery.com/ui/1.11.4/jquery-ui.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n&lt;button&gt;Button label&lt;/button&gt;\n \n&lt;script&gt;\n$( \"button\" ).button();\n&lt;/script&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;</pre> <h4>Demo:</h4>  </div></section> </div></article> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; The jQuery Foundation and other contributors<br>Licensed under the MIT License.<br>\n    <a href=\"https://api.jqueryui.com/button\" class=\"_attribution-link\">https://api.jqueryui.com/button</a>\n  </p>\n</div>\n","disableselection":"<h1 class=\"entry-title\">.disableSelection()</h1> <div class=\"entry-content\"> <article id=\"disableSelection1\" class=\"entry method\"><h2 class=\"section-title\"> <span class=\"name\">.disableSelection()</span><span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a></span> </h2> <div class=\"entry-wrapper\"> <p class=\"desc\"><strong>Description: </strong>Disable selection of text content within the set of matched elements.</p> <ul class=\"signatures\"><li class=\"signature\"> <h4 class=\"name\"> <span class=\"version-details\">version added: 1.6, deprecated: 1.9</span><a id=\"disableSelection\" href=\"#disableSelection\">.disableSelection()</a> </h4> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> </li></ul> <div class=\"longdesc\" id=\"entry-longdesc\"> <p>Disabling text selection is bad. Don't use this.</p> </div> </div></article> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; The jQuery Foundation and other contributors<br>Licensed under the MIT License.<br>\n    <a href=\"https://api.jqueryui.com/disableSelection\" class=\"_attribution-link\">https://api.jqueryui.com/disableSelection</a>\n  </p>\n</div>\n","accordion":"<h1 class=\"entry-title\">Accordion Widget</h1> <div class=\"entry-content\"> <article id=\"accordion1\" class=\"entry widget\"><h2 class=\"section-title\"> <span>Accordion Widget</span><span class=\"version-details\">version added: 1.0</span> </h2> <div class=\"entry-wrapper\"> <p class=\"desc\"><strong>Description: </strong>Convert a pair of headers and content panels into an accordion.</p> <section id=\"quick-nav\"><h2>QuickNav<a href=\"#entry-examples\">Examples</a> </h2>\n<div class=\"quick-nav-section\"> <h3>Options</h3> <div><a href=\"#option-active\">active</a></div> <div><a href=\"#option-animate\">animate</a></div> <div><a href=\"#option-collapsible\">collapsible</a></div> <div><a href=\"#option-disabled\">disabled</a></div> <div><a href=\"#option-event\">event</a></div> <div><a href=\"#option-header\">header</a></div> <div><a href=\"#option-heightStyle\">heightStyle</a></div> <div><a href=\"#option-icons\">icons</a></div> </div> <div class=\"quick-nav-section\"> <h3>Methods</h3> <div><a href=\"#method-destroy\">destroy</a></div> <div><a href=\"#method-disable\">disable</a></div> <div><a href=\"#method-enable\">enable</a></div> <div><a href=\"#method-instance\">instance</a></div> <div><a href=\"#method-option\">option</a></div> <div><a href=\"#method-refresh\">refresh</a></div> <div><a href=\"#method-widget\">widget</a></div> </div> <div class=\"quick-nav-section\"> <h3>Events</h3> <div><a href=\"#event-activate\">activate</a></div> <div><a href=\"#event-beforeActivate\">beforeActivate</a></div> <div><a href=\"#event-create\">create</a></div> </div></section><div class=\"longdesc\" id=\"entry-longdesc\"> <p>The markup of your accordion container needs pairs of headers and content panels:</p> <pre class=\"syntaxhighlighter xml\">&lt;div id=\"accordion\"&gt;\n  &lt;h3&gt;First header&lt;/h3&gt;\n  &lt;div&gt;First content panel&lt;/div&gt;\n  &lt;h3&gt;Second header&lt;/h3&gt;\n  &lt;div&gt;Second content panel&lt;/div&gt;\n&lt;/div&gt;</pre> <p>Accordions support arbitrary markup, but each content panel must always be the next sibling after its associated header. See the <a href=\"#option-header\"><code>header</code></a> option for information on how to use custom markup structures.</p> <p>The panels can be activated programmatically by setting the <a href=\"#option-active\"><code>active</code></a> option.</p> <h3>Keyboard interaction</h3> <p>When focus is on a header, the following key commands are available:</p> <ul> <li> <code>UP</code>/<code>LEFT</code>: Move focus to the previous header. If on first header, moves focus to last header.</li> <li> <code>DOWN</code>/<code>RIGHT</code>: Move focus to the next header. If on last header, moves focus to first header.</li> <li> <code>HOME</code>: Move focus to the first header.</li> <li> <code>END</code>: Move focus to the last header.</li> <li> <code>SPACE</code>/<code>ENTER</code>: Activate panel associated with focused header.</li> </ul> <p>When focus is in a panel:</p> <ul> <li> <code>CTRL</code> + <code>UP</code>: Move focus to associated header.</li> </ul> <div> <h3 id=\"theming\">Theming</h3> <p>The accordion widget uses the <a href=\"theming/css-framework\">jQuery UI CSS framework</a> to style its look and feel. If accordion specific styling is needed, the following CSS class names can be used:</p> </div> <ul> <li> <code>ui-accordion</code>: The outer container of the accordion. <ul> <li> <code>ui-accordion-header</code>: The headers of the accordion. The headers will additionally have a <code>ui-accordion-icons</code> class if they contain <a href=\"#option-icons\"><code>icons</code></a>.</li> <li> <code>ui-accordion-content</code>: The content panels of the accordion.</li> </ul> </li> </ul> <h3>Dependencies</h3> <ul> <li><a href=\"https://api.jqueryui.com/category/ui-core/\">UI Core</a></li> <li><a href=\"jquery.widget\">Widget Factory</a></li> <li> <a href=\"https://api.jqueryui.com/category/effects-core/\">Effects Core</a> (optional; for use with the <a href=\"#option-animate\"><code>animate</code></a> option)</li> </ul> </div> <h3>Additional Notes:</h3> <div class=\"longdesc\"><ul><li> This widget requires some functional CSS, otherwise it won't work. If you build a custom theme, use the widget's specific CSS file as a starting point. </li></ul></div> <section id=\"options\"><h2>Options</h2>\n<div id=\"option-active\" class=\"api-item first-item\"> <h3>active </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> or <a href=\"http://api.jquery.com/Types/#Integer\">Integer</a> </div> <div class=\"default\"> <strong>Default: </strong><code>0</code> </div> <div> Which panel is currently open. </div> <strong>Multiple types supported:</strong><ul> <li> <strong>Boolean</strong>: Setting <code>active</code> to <code>false</code> will collapse all panels. This requires the <a href=\"#option-collapsible\"><code>collapsible</code></a> option to be <code>true</code>.</li> <li> <strong>Integer</strong>: The zero-based index of the panel that is active (open). A negative value selects panels going backward from the last panel.</li> </ul> <strong>Code examples:</strong><p>Initialize the accordion with the <code>active</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).accordion({\n  active: 2\n});</pre> <p>Get or set the <code>active</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar active = $( \".selector\" ).accordion( \"option\", \"active\" );\n \n// Setter\n$( \".selector\" ).accordion( \"option\", \"active\", 2 );</pre> </div> <div id=\"option-animate\" class=\"api-item\"> <h3>animate </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> or <a href=\"http://api.jquery.com/Types/#Number\">Number</a> or <a href=\"http://api.jquery.com/Types/#String\">String</a> or <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div class=\"default\"> <strong>Default: </strong><code>{}</code> </div> <div>If and how to animate changing panels.</div> <strong>Multiple types supported:</strong><ul> <li> <strong>Boolean</strong>: A value of <code>false</code> will disable animations.</li> <li> <strong>Number</strong>: Duration in milliseconds with default easing.</li> <li> <strong>String</strong>: Name of <a href=\"easings\">easing</a> to use with default duration.</li> <li> <strong>Object</strong>: An object containing <code>easing</code> and <code>duration</code> properties to configure animations. <ul> <li>Can also contain a <code>down</code> property with any of the above options.</li> <li>\"Down\" animations occur when the panel being activated has a lower index than the currently active panel.</li> </ul> </li> </ul> <strong>Code examples:</strong><p>Initialize the accordion with the <code>animate</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).accordion({\n  animate: 200\n});</pre> <p>Get or set the <code>animate</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar animate = $( \".selector\" ).accordion( \"option\", \"animate\" );\n \n// Setter\n$( \".selector\" ).accordion( \"option\", \"animate\", 200 );</pre> </div> <div id=\"option-collapsible\" class=\"api-item\"> <h3>collapsible </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> </div> <div class=\"default\"> <strong>Default: </strong><code>false</code> </div> <div>Whether all the sections can be closed at once. Allows collapsing the active section.</div> <strong>Code examples:</strong><p>Initialize the accordion with the <code>collapsible</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).accordion({\n  collapsible: true\n});</pre> <p>Get or set the <code>collapsible</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar collapsible = $( \".selector\" ).accordion( \"option\", \"collapsible\" );\n \n// Setter\n$( \".selector\" ).accordion( \"option\", \"collapsible\", true );</pre> </div> <div id=\"option-disabled\" class=\"api-item\"> <h3>disabled </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> </div> <div class=\"default\"> <strong>Default: </strong><code>false</code> </div> <div>Disables the accordion if set to <code>true</code>.</div> <strong>Code examples:</strong><p>Initialize the accordion with the <code>disabled</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).accordion({\n  disabled: true\n});</pre> <p>Get or set the <code>disabled</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar disabled = $( \".selector\" ).accordion( \"option\", \"disabled\" );\n \n// Setter\n$( \".selector\" ).accordion( \"option\", \"disabled\", true );</pre> </div> <div id=\"option-event\" class=\"api-item\"> <h3>event </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div class=\"default\"> <strong>Default: </strong><code>\"click\"</code> </div> <div>The event that accordion headers will react to in order to activate the associated panel. Multiple events can be specified, separated by a space.</div> <strong>Code examples:</strong><p>Initialize the accordion with the <code>event</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).accordion({\n  event: \"mouseover\"\n});</pre> <p>Get or set the <code>event</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar event = $( \".selector\" ).accordion( \"option\", \"event\" );\n \n// Setter\n$( \".selector\" ).accordion( \"option\", \"event\", \"mouseover\" );</pre> </div> <div id=\"option-header\" class=\"api-item\"> <h3>header </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Selector\">Selector</a> </div> <div class=\"default\"> <strong>Default: </strong><code>\"&gt; li &gt; :first-child,&gt; :not(li):even\"</code> </div> <div> <p>Selector for the header element, applied via <code>.find()</code> on the main accordion element. Content panels must be the sibling immediately after their associated headers.</p> </div> <strong>Code examples:</strong><p>Initialize the accordion with the <code>header</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).accordion({\n  header: \"h3\"\n});</pre> <p>Get or set the <code>header</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar header = $( \".selector\" ).accordion( \"option\", \"header\" );\n \n// Setter\n$( \".selector\" ).accordion( \"option\", \"header\", \"h3\" );</pre> </div> <div id=\"option-heightStyle\" class=\"api-item\"> <h3>heightStyle </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div class=\"default\"> <strong>Default: </strong><code>\"auto\"</code> </div> <div> <p>Controls the height of the accordion and each panel. Possible values:</p> <ul> <li> <code>\"auto\"</code>: All panels will be set to the height of the tallest panel.</li> <li> <code>\"fill\"</code>: Expand to the available height based on the accordion's parent height.</li> <li> <code>\"content\"</code>: Each panel will be only as tall as its content.</li> </ul> </div> <strong>Code examples:</strong><p>Initialize the accordion with the <code>heightStyle</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).accordion({\n  heightStyle: \"fill\"\n});</pre> <p>Get or set the <code>heightStyle</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar heightStyle = $( \".selector\" ).accordion( \"option\", \"heightStyle\" );\n \n// Setter\n$( \".selector\" ).accordion( \"option\", \"heightStyle\", \"fill\" );</pre> </div> <div id=\"option-icons\" class=\"api-item\"> <h3>icons </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div class=\"default\"> <strong>Default: </strong><code>{ \"header\": \"ui-icon-triangle-1-e\", \"activeHeader\": \"ui-icon-triangle-1-s\" }</code> </div> <div> <p>Icons to use for headers, matching <a href=\"theming/icons\">an icon provided by the jQuery UI CSS Framework</a>. Set to <code>false</code> to have no icons displayed.</p> <ul> <li>header (string, default: \"ui-icon-triangle-1-e\")</li> <li>activeHeader (string, default: \"ui-icon-triangle-1-s\")</li> </ul> </div> <strong>Code examples:</strong><p>Initialize the accordion with the <code>icons</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).accordion({\n  icons: { \"header\": \"ui-icon-plus\", \"activeHeader\": \"ui-icon-minus\" }\n});</pre> <p>Get or set the <code>icons</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar icons = $( \".selector\" ).accordion( \"option\", \"icons\" );\n \n// Setter\n$( \".selector\" ).accordion( \"option\", \"icons\", { \"header\": \"ui-icon-plus\", \"activeHeader\": \"ui-icon-minus\" } );</pre> </div></section><section id=\"methods\"><h2>Methods</h2>\n<div id=\"method-destroy\"><div class=\"api-item first-item\"> <h3>destroy()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Removes the accordion functionality completely. This will return the element back to its pre-init state. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the destroy method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).accordion( \"destroy\" );</pre> </div> </div></div> <div id=\"method-disable\"><div class=\"api-item\"> <h3>disable()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Disables the accordion. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the disable method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).accordion( \"disable\" );</pre> </div> </div></div> <div id=\"method-enable\"><div class=\"api-item\"> <h3>enable()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Enables the accordion. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the enable method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).accordion( \"enable\" );</pre> </div> </div></div> <div id=\"method-instance\"><div class=\"api-item\"> <h3>instance()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#Object\">Object</a></span> </h3> <div> <p>Retrieves the accordion's instance object. If the element does not have an associated instance, <code>undefined</code> is returned.</p> <p>Unlike other widget methods, <code>instance()</code> is safe to call on any element after the accordion plugin has loaded.</p> </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the instance method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).accordion( \"instance\" );</pre> </div> </div></div> <div id=\"method-option\"> <div class=\"api-item\"> <h3>option( optionName )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#Object\">Object</a></span> </h3> <div> <p>Gets the value currently associated with the specified <code>optionName</code>.</p> <p><strong>Note:</strong> For options that have objects as their value, you can get the value of a specific key by using dot notation. For example, <code>\"foo.bar\"</code> would get the value of the <code>bar</code> property on the <code>foo</code> option.</p> </div> <ul><li> <div><strong>optionName</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>The name of the option to get.</div> </li></ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">var isDisabled = $( \".selector\" ).accordion( \"option\", \"disabled\" );</pre> </div> </div> <div class=\"api-item\"> <h3>option()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#PlainObject\">PlainObject</a></span> </h3> <div>Gets an object containing key/value pairs representing the current accordion options hash.</div> <ul><li><div class=\"null-signature\">This signature does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">var options = $( \".selector\" ).accordion( \"option\" );</pre> </div> </div> <div class=\"api-item\"> <h3>option( optionName, value )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> <p>Sets the value of the accordion option associated with the specified <code>optionName</code>.</p> <p><strong>Note:</strong> For options that have objects as their value, you can set the value of just one property by using dot notation for <code>optionName</code>. For example, <code>\"foo.bar\"</code> would update only the <code>bar</code> property of the <code>foo</code> option.</p> </div> <ul> <li> <div><strong>optionName</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>The name of the option to set.</div> </li> <li> <div><strong>value</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>A value to set for the option.</div> </li> </ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).accordion( \"option\", \"disabled\", true );</pre> </div> </div> <div class=\"api-item\"> <h3>option( options )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div>Sets one or more options for the accordion.</div> <ul><li> <div><strong>options</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>A map of option-value pairs to set.</div> </li></ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).accordion( \"option\", { disabled: true } );</pre> </div> </div> </div> <div id=\"method-refresh\"><div class=\"api-item\"> <h3>refresh()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div>Process any headers and panels that were added or removed directly in the DOM and recompute the height of the accordion panels. Results depend on the content and the <a href=\"#option-heightStyle\"><code>heightStyle</code></a> option.</div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the refresh method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).accordion( \"refresh\" );</pre> </div> </div></div> <div id=\"method-widget\"><div class=\"api-item\"> <h3>widget()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a></span> </h3> <div> Returns a <code>jQuery</code> object containing the accordion. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the widget method:</p> <pre class=\"syntaxhighlighter javascript\">var widget = $( \".selector\" ).accordion( \"widget\" );</pre> </div> </div></div></section><section id=\"events\"><h2>Events</h2>\n<div id=\"event-activate\" class=\"api-item first-item\"> <h3>activate( event, ui )<span class=\"returns\">Type: <code>accordionactivate</code></span> </h3> <div> <p>Triggered after a panel has been activated (after animation completes). If the accordion was previously collapsed, <code>ui.oldHeader</code> and <code>ui.oldPanel</code> will be empty jQuery objects. If the accordion is collapsing, <code>ui.newHeader</code> and <code>ui.newPanel</code> will be empty jQuery objects.</p> <div class=\"warning\"> <strong>Note:</strong> Since the <code>activate</code> event is only fired on panel activation, it is not fired for the initial panel when the accordion widget is created. If you need a hook for widget creation use the <a href=\"#event-create\"><code>create</code></a> event.</div> </div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  <ul> <li> <div><strong>newHeader</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The header that was just activated.</div> </li> <li> <div><strong>oldHeader</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The header that was just deactivated.</div> </li> <li> <div><strong>newPanel</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The panel that was just activated.</div> </li> <li> <div><strong>oldPanel</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The panel that was just deactivated.</div> </li> </ul> </li> </ul> <div> <strong>Code examples:</strong><p>Initialize the accordion with the activate callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).accordion({\n  activate: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the accordionactivate event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"accordionactivate\", function( event, ui ) {} );</pre> </div> </div> <div id=\"event-beforeActivate\" class=\"api-item\"> <h3>beforeActivate( event, ui )<span class=\"returns\">Type: <code>accordionbeforeactivate</code></span> </h3> <div>Triggered directly before a panel is activated. Can be canceled to prevent the panel from activating. If the accordion is currently collapsed, <code>ui.oldHeader</code> and <code>ui.oldPanel</code> will be empty jQuery objects. If the accordion is collapsing, <code>ui.newHeader</code> and <code>ui.newPanel</code> will be empty jQuery objects.</div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  <ul> <li> <div><strong>newHeader</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The header that is about to be activated.</div> </li> <li> <div><strong>oldHeader</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The header that is about to be deactivated.</div> </li> <li> <div><strong>newPanel</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The panel that is about to be activated.</div> </li> <li> <div><strong>oldPanel</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The panel that is about to be deactivated.</div> </li> </ul> </li> </ul> <div> <strong>Code examples:</strong><p>Initialize the accordion with the beforeActivate callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).accordion({\n  beforeActivate: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the accordionbeforeactivate event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"accordionbeforeactivate\", function( event, ui ) {} );</pre> </div> </div> <div id=\"event-create\" class=\"api-item\"> <h3>create( event, ui )<span class=\"returns\">Type: <code>accordioncreate</code></span> </h3> <div>Triggered when the accordion is created. If the accordion is collapsed, <code>ui.header</code> and <code>ui.panel</code> will be empty jQuery objects.</div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  <ul> <li> <div><strong>header</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The active header.</div> </li> <li> <div><strong>panel</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The active panel.</div> </li> </ul> </li> </ul> <div> <strong>Code examples:</strong><p>Initialize the accordion with the create callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).accordion({\n  create: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the accordioncreate event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"accordioncreate\", function( event, ui ) {} );</pre> </div> </div></section><section class=\"entry-examples\" id=\"entry-examples\"><h2>Example:</h2>\n<div class=\"entry-example\" id=\"example-0\"> <p>A simple jQuery UI Accordion</p> <pre class=\"syntaxhighlighter xml\">&lt;!doctype html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"utf-8\"&gt;\n  &lt;title&gt;accordion demo&lt;/title&gt;\n  &lt;link rel=\"stylesheet\" href=\"//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css\"&gt;\n  &lt;script src=\"//code.jquery.com/jquery-1.10.2.js\"&gt;&lt;/script&gt;\n  &lt;script src=\"//code.jquery.com/ui/1.11.4/jquery-ui.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n&lt;div id=\"accordion\"&gt;\n  &lt;h3&gt;Section 1&lt;/h3&gt;\n  &lt;div&gt;\n    &lt;p&gt;Mauris mauris ante, blandit et, ultrices a, suscipit eget.\n    Integer ut neque. Vivamus nisi metus, molestie vel, gravida in,\n    condimentum sit amet, nunc. Nam a nibh. Donec suscipit eros.\n    Nam mi. Proin viverra leo ut odio.&lt;/p&gt;\n  &lt;/div&gt;\n  &lt;h3&gt;Section 2&lt;/h3&gt;\n  &lt;div&gt;\n    &lt;p&gt;Sed non urna. Phasellus eu ligula. Vestibulum sit amet purus.\n    Vivamus hendrerit, dolor aliquet laoreet, mauris turpis velit,\n    faucibus interdum tellus libero ac justo.&lt;/p&gt;\n  &lt;/div&gt;\n  &lt;h3&gt;Section 3&lt;/h3&gt;\n  &lt;div&gt;\n    &lt;p&gt;Nam enim risus, molestie et, porta ac, aliquam ac, risus.\n    Quisque lobortis.Phasellus pellentesque purus in massa.&lt;/p&gt;\n    &lt;ul&gt;\n      &lt;li&gt;List item one&lt;/li&gt;\n      &lt;li&gt;List item two&lt;/li&gt;\n      &lt;li&gt;List item three&lt;/li&gt;\n    &lt;/ul&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n \n&lt;script&gt;\n$( \"#accordion\" ).accordion();\n&lt;/script&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;</pre> <h4>Demo:</h4>  </div></section> </div></article> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; The jQuery Foundation and other contributors<br>Licensed under the MIT License.<br>\n    <a href=\"https://api.jqueryui.com/accordion\" class=\"_attribution-link\">https://api.jqueryui.com/accordion</a>\n  </p>\n</div>\n","blind-effect":"<h1 class=\"entry-title\">Blind Effect</h1> <div class=\"entry-content\"> <article id=\"blind1\" class=\"entry effect\"><h2 class=\"section-title\"><span>Blind Effect</span></h2> <div class=\"entry-wrapper\"> <p class=\"desc\"><strong>Description: </strong> The blind effect hides or shows an element by wrapping the element in a container, and \"pulling the blinds\" </p> <ul class=\"signatures\"><li class=\"signature\"> <h4 class=\"name\">blind</h4> <ul><li> <div> <strong>direction</strong> (default: <code>\"up\"</code>)</div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div> <p>The direction the blind will be pulled to hide the element, or the direction from which the element will be revealed.</p> <p>Possible Values: <code>up</code>, <code>down</code>, <code>left</code>, <code>right</code>, <code>vertical</code>, <code>horizontal</code>.</p> </div> </li></ul> </li></ul> <div class=\"longdesc\" id=\"entry-longdesc\"> <p>The container has <code>overflow: hidden</code> applied, so height changes affect what's visible.</p> </div> <section class=\"entry-examples\" id=\"entry-examples\"><h2>Example:</h2>\n<div class=\"entry-example\" id=\"example-0\"> <p>Toggle a div using the blind effect.</p> <pre class=\"syntaxhighlighter xml\">&lt;!doctype html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"utf-8\"&gt;\n  &lt;title&gt;blind demo&lt;/title&gt;\n  &lt;link rel=\"stylesheet\" href=\"//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css\"&gt;\n  &lt;style&gt;\n  #toggle {\n    width: 100px;\n    height: 100px;\n    background: #ccc;\n  }\n  &lt;/style&gt;\n  &lt;script src=\"//code.jquery.com/jquery-1.10.2.js\"&gt;&lt;/script&gt;\n  &lt;script src=\"//code.jquery.com/ui/1.11.4/jquery-ui.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n&lt;p&gt;Click anywhere to toggle the box.&lt;/p&gt;\n&lt;div id=\"toggle\"&gt;&lt;/div&gt;\n \n&lt;script&gt;\n$( document ).click(function() {\n  $( \"#toggle\" ).toggle( \"blind\" );\n});\n&lt;/script&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;</pre> <h4>Demo:</h4>  </div></section> </div></article> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; The jQuery Foundation and other contributors<br>Licensed under the MIT License.<br>\n    <a href=\"https://api.jqueryui.com/blind-effect\" class=\"_attribution-link\">https://api.jqueryui.com/blind-effect</a>\n  </p>\n</div>\n","datepicker":"<h1 class=\"entry-title\">Datepicker Widget</h1> <div class=\"entry-content\"> <article id=\"datepicker1\" class=\"entry widget\"><h2 class=\"section-title\"> <span>Datepicker Widget</span><span class=\"version-details\">version added: 1.0</span> </h2> <div class=\"entry-wrapper\"> <p class=\"desc\"><strong>Description: </strong>Select a date from a popup or inline calendar</p> <section id=\"quick-nav\"><h2>QuickNav<a href=\"#entry-examples\">Examples</a> </h2>\n<div class=\"quick-nav-section\"> <h3>Options</h3> <div><a href=\"#option-altField\">altField</a></div> <div><a href=\"#option-altFormat\">altFormat</a></div> <div><a href=\"#option-appendText\">appendText</a></div> <div><a href=\"#option-autoSize\">autoSize</a></div> <div><a href=\"#option-beforeShow\">beforeShow</a></div> <div><a href=\"#option-beforeShowDay\">beforeShowDay</a></div> <div><a href=\"#option-buttonImage\">buttonImage</a></div> <div><a href=\"#option-buttonImageOnly\">buttonImageOnly</a></div> <div><a href=\"#option-buttonText\">buttonText</a></div> <div><a href=\"#option-calculateWeek\">calculateWeek</a></div> <div><a href=\"#option-changeMonth\">changeMonth</a></div> <div><a href=\"#option-changeYear\">changeYear</a></div> <div><a href=\"#option-closeText\">closeText</a></div> <div><a href=\"#option-constrainInput\">constrainInput</a></div> <div><a href=\"#option-currentText\">currentText</a></div> <div><a href=\"#option-dateFormat\">dateFormat</a></div> <div><a href=\"#option-dayNames\">dayNames</a></div> <div><a href=\"#option-dayNamesMin\">dayNamesMin</a></div> <div><a href=\"#option-dayNamesShort\">dayNamesShort</a></div> <div><a href=\"#option-defaultDate\">defaultDate</a></div> <div><a href=\"#option-duration\">duration</a></div> <div><a href=\"#option-firstDay\">firstDay</a></div> <div><a href=\"#option-gotoCurrent\">gotoCurrent</a></div> <div><a href=\"#option-hideIfNoPrevNext\">hideIfNoPrevNext</a></div> <div><a href=\"#option-isRTL\">isRTL</a></div> <div><a href=\"#option-maxDate\">maxDate</a></div> <div><a href=\"#option-minDate\">minDate</a></div> <div><a href=\"#option-monthNames\">monthNames</a></div> <div><a href=\"#option-monthNamesShort\">monthNamesShort</a></div> <div><a href=\"#option-navigationAsDateFormat\">navigationAsDateFormat</a></div> <div><a href=\"#option-nextText\">nextText</a></div> <div><a href=\"#option-numberOfMonths\">numberOfMonths</a></div> <div><a href=\"#option-onChangeMonthYear\">onChangeMonthYear</a></div> <div><a href=\"#option-onClose\">onClose</a></div> <div><a href=\"#option-onSelect\">onSelect</a></div> <div><a href=\"#option-prevText\">prevText</a></div> <div><a href=\"#option-selectOtherMonths\">selectOtherMonths</a></div> <div><a href=\"#option-shortYearCutoff\">shortYearCutoff</a></div> <div><a href=\"#option-showAnim\">showAnim</a></div> <div><a href=\"#option-showButtonPanel\">showButtonPanel</a></div> <div><a href=\"#option-showCurrentAtPos\">showCurrentAtPos</a></div> <div><a href=\"#option-showMonthAfterYear\">showMonthAfterYear</a></div> <div><a href=\"#option-showOn\">showOn</a></div> <div><a href=\"#option-showOptions\">showOptions</a></div> <div><a href=\"#option-showOtherMonths\">showOtherMonths</a></div> <div><a href=\"#option-showWeek\">showWeek</a></div> <div><a href=\"#option-stepMonths\">stepMonths</a></div> <div><a href=\"#option-weekHeader\">weekHeader</a></div> <div><a href=\"#option-yearRange\">yearRange</a></div> <div><a href=\"#option-yearSuffix\">yearSuffix</a></div> </div> <div class=\"quick-nav-section\"> <h3>Methods</h3> <div><a href=\"#method-destroy\">destroy</a></div> <div><a href=\"#method-dialog\">dialog</a></div> <div><a href=\"#method-getDate\">getDate</a></div> <div><a href=\"#method-hide\">hide</a></div> <div><a href=\"#method-isDisabled\">isDisabled</a></div> <div><a href=\"#method-option\">option</a></div> <div><a href=\"#method-refresh\">refresh</a></div> <div><a href=\"#method-setDate\">setDate</a></div> <div><a href=\"#method-show\">show</a></div> <div><a href=\"#method-widget\">widget</a></div> </div> <div class=\"quick-nav-section\"><h3>Events</h3></div></section><div class=\"longdesc\" id=\"entry-longdesc\"> <p>The jQuery UI Datepicker is a highly configurable plugin that adds datepicker functionality to your pages. You can customize the date format and language, restrict the selectable date ranges and add in buttons and other navigation options easily.</p> <p>By default, the datepicker calendar opens in a small overlay when the associated text field gains focus. For an inline calendar, simply attach the datepicker to a div or span.</p> <h3>Keyboard interaction</h3> <p>While the datepicker is open, the following key commands are available:</p> <ul> <li> <code>PAGE UP</code>: Move to the previous month.</li> <li> <code>PAGE DOWN</code>: Move to the next month.</li> <li> <code>CTRL</code> + <code>PAGE UP</code>: Move to the previous year.</li> <li> <code>CTRL</code> + <code>PAGE DOWN</code>: Move to the next year.</li> <li> <code>CTRL</code> + <code>HOME</code>: Open the datepicker if closed.</li> <li> <code>CTRL</code>/<code>COMMAND</code> + <code>HOME</code>: Move to the current month.</li> <li> <code>CTRL</code>/<code>COMMAND</code> + <code>LEFT</code>: Move to the previous day.</li> <li> <code>CTRL</code>/<code>COMMAND</code> + <code>RIGHT</code>: Move to the next day.</li> <li> <code>CTRL</code>/<code>COMMAND</code> + <code>UP</code>: Move to the previous week.</li> <li> <code>CTRL</code>/<code>COMMAND</code> + <code>DOWN</code>: Move to the next week.</li> <li> <code>ENTER</code>: Select the focused date.</li> <li> <code>CTRL</code>/<code>COMMAND</code> + <code>END</code>: Close the datepicker and erase the date.</li> <li> <code>ESCAPE</code>: Close the datepicker without selection.</li> </ul> <h3 id=\"utility-functions\">Utility functions</h3> <h4 id=\"utility-setDefaults\">$.datepicker.setDefaults( options )</h4> <p>Change the default options for all date pickers.</p> <p>Use the <a href=\"#method-option\"><code>option()</code></a> method to change options for individual instances.</p> <div> <strong>Code examples:</strong> <p>Set all date pickers to open on focus or a click on an icon.</p> <pre class=\"syntaxhighlighter javascript\">$.datepicker.setDefaults({\n  showOn: \"both\",\n  buttonImageOnly: true,\n  buttonImage: \"calendar.gif\",\n  buttonText: \"Calendar\"\n});</pre> <p>Set all date pickers to have French text.</p> <pre class=\"syntaxhighlighter javascript\">$.datepicker.setDefaults( $.datepicker.regional[ \"fr\" ] );</pre> </div> <h4 id=\"utility-formatDate\">$.datepicker.formatDate( format, date, options )</h4> <p>Format a date into a string value with a specified format.</p> <p>The format can be combinations of the following:</p> <ul> <li>d - day of month (no leading zero)</li> <li>dd - day of month (two digit)</li> <li>o - day of the year (no leading zeros)</li> <li>oo - day of the year (three digit)</li> <li>D - day name short</li> <li>DD - day name long</li> <li>m - month of year (no leading zero)</li> <li>mm - month of year (two digit)</li> <li>M - month name short</li> <li>MM - month name long</li> <li>y - year (two digit)</li> <li>yy - year (four digit)</li> <li>@ - Unix timestamp (ms since 01/01/1970)</li> <li> ! - Windows ticks (100ns since 01/01/0001)</li> <li>'...' - literal text</li> <li>'' - single quote</li> <li>anything else - literal text</li> </ul> <p>There are also a number of predefined standard date formats available from <code>$.datepicker</code>:</p> <ul> <li>ATOM - 'yy-mm-dd' (Same as RFC 3339/ISO 8601)</li> <li>COOKIE - 'D, dd M yy'</li> <li>ISO_8601 - 'yy-mm-dd'</li> <li>RFC_822 - 'D, d M y' (See RFC 822)</li> <li>RFC_850 - 'DD, dd-M-y' (See RFC 850)</li> <li>RFC_1036 - 'D, d M y' (See RFC 1036)</li> <li>RFC_1123 - 'D, d M yy' (See RFC 1123)</li> <li>RFC_2822 - 'D, d M yy' (See RFC 2822)</li> <li>RSS - 'D, d M y' (Same as RFC 822)</li> <li>TICKS - '!'</li> <li>TIMESTAMP - '@'</li> <li>W3C - 'yy-mm-dd' (Same as ISO 8601)</li> </ul> <div> <strong>Code examples:</strong> <p>Display the date in ISO format. Produces \"2007-01-26\".</p> <pre class=\"syntaxhighlighter javascript\">$.datepicker.formatDate( \"yy-mm-dd\", new Date( 2007, 1 - 1, 26 ) );</pre> <p>Display the date in expanded French format. Produces \"Samedi, Juillet 14, 2007\".</p> <pre class=\"syntaxhighlighter javascript\">$.datepicker.formatDate( \"DD, MM d, yy\", new Date( 2007, 7 - 1, 14 ), {\n  dayNamesShort: $.datepicker.regional[ \"fr\" ].dayNamesShort,\n  dayNames: $.datepicker.regional[ \"fr\" ].dayNames,\n  monthNamesShort: $.datepicker.regional[ \"fr\" ].monthNamesShort,\n  monthNames: $.datepicker.regional[ \"fr\" ].monthNames\n});</pre> </div> <h4 id=\"utility-parseDate\">$.datepicker.parseDate( format, value, options )</h4> <p>Extract a date from a string value with a specified format.</p> <p>The format can be combinations of the following:</p> <ul> <li>d - day of month (no leading zero)</li> <li>dd - day of month (two digit)</li> <li>o - day of year (no leading zeros)</li> <li>oo - day of year (three digit)</li> <li>D - day name short</li> <li>DD - day name long</li> <li>m - month of year (no leading zero)</li> <li>mm - month of year (two digit)</li> <li>M - month name short</li> <li>MM - month name long</li> <li>y - year (two digit)</li> <li>yy - year (four digit)</li> <li>@ - Unix timestamp (ms since 01/01/1970)</li> <li> ! - Windows ticks (100ns since 01/01/0001)</li> <li>'...' - literal text</li> <li>'' - single quote</li> <li>anything else - literal text</li> </ul> <p>A number of exceptions may be thrown:</p> <ul> <li>'Invalid arguments' if either format or value is null</li> <li>'Missing number at position nn' if format indicated a numeric value that is not then found</li> <li>'Unknown name at position nn' if format indicated day or month name that is not then found</li> <li>'Unexpected literal at position nn' if format indicated a literal value that is not then found</li> <li>'Invalid date' if the date is invalid, such as '31/02/2007'</li> </ul> <div> <strong>Code examples:</strong> <p>Extract a date in ISO format.</p> <pre class=\"syntaxhighlighter javascript\">$.datepicker.parseDate( \"yy-mm-dd\", \"2007-01-26\" );</pre> <p>Extract a date in expanded French format.</p> <pre class=\"syntaxhighlighter javascript\">$.datepicker.parseDate( \"DD, MM d, yy\", \"Samedi, Juillet 14, 2007\", {\n  shortYearCutoff: 20,\n  dayNamesShort: $.datepicker.regional[ \"fr\" ].dayNamesShort,\n  dayNames: $.datepicker.regional[ \"fr\" ].dayNames,\n  monthNamesShort: $.datepicker.regional[ \"fr\" ].monthNamesShort,\n  monthNames: $.datepicker.regional[ \"fr\" ].monthNames\n});</pre> </div> <h4 id=\"utility-iso8601Week\">$.datepicker.iso8601Week( date )</h4> <p>Determine the week of the year for a given date: 1 to 53.</p> <p>This function uses the ISO 8601 definition of a week: weeks start on a Monday and the first week of the year contains January 4. This means that up to three days from the previous year may be included in the of first week of the current year, and that up to three days from the current year may be included in the last week of the previous year.</p> <p>This function is the default implementation for the <a href=\"#option-calculateWeek\"><code>calculateWeek</code></a> option.</p> <div> <strong>Code examples:</strong> <p>Find the week of the year for a date.</p> <pre class=\"syntaxhighlighter javascript\">$.datepicker.iso8601Week( new Date( 2007, 1 - 1, 26 ) );</pre> </div> <h4 id=\"utility-noWeekends\">$.datepicker.noWeekends</h4> <p>Set as beforeShowDay function to prevent selection of weekends.</p> <p>We can provide the <code>noWeekends()</code> function into the <a href=\"#option-beforeShowDay\"><code>beforeShowDay</code></a> option which will calculate all the weekdays and provide an array of <code>true</code>/<code>false</code> values indicating whether a date is selectable.</p> <div> <strong>Code examples:</strong> <p>Set the DatePicker so no weekend is selectable</p> <pre class=\"syntaxhighlighter javascript\">$( \"#datepicker\" ).datepicker({\n  beforeShowDay: $.datepicker.noWeekends\n});</pre> </div> <h3>Localization</h3> <p>Datepicker provides support for localizing its content to cater for different languages and date formats. Each localization is contained within its own file with the language code appended to the name, e.g., <code>jquery.ui.datepicker-fr.js</code> for French. The desired localization file should be included after the main datepicker code. Each localization file adds its options to the set of available localizations and automatically applies them as defaults for all instances. Localization files can be found at <a href=\"https://github.com/jquery/jquery-ui/tree/master/ui/i18n\">https://github.com/jquery/jquery-ui/tree/master/ui/i18n</a>.</p> <p>The <code>$.datepicker.regional</code> attribute holds an array of localizations, indexed by language code, with <code>\"\"</code> referring to the default (English). Each entry is an object with the following attributes: <code>closeText</code>, <code>prevText</code>, <code>nextText</code>, <code>currentText</code>, <code>monthNames</code>, <code>monthNamesShort</code>, <code>dayNames</code>, <code>dayNamesShort</code>, <code>dayNamesMin</code>, <code>weekHeader</code>, <code>dateFormat</code>, <code>firstDay</code>, <code>isRTL</code>, <code>showMonthAfterYear</code>, and <code>yearSuffix</code>.</p> <p>You can restore the default localizations with:</p> <code>$.datepicker.setDefaults( $.datepicker.regional[ \"\" ] );</code> <p>And can then override an individual datepicker for a specific locale:</p> <code>$( selector ).datepicker( $.datepicker.regional[ \"fr\" ] );</code> <div> <h3 id=\"theming\">Theming</h3> <p>The datepicker widget uses the <a href=\"theming/css-framework\">jQuery UI CSS framework</a> to style its look and feel. If datepicker specific styling is needed, the following CSS class names can be used:</p> </div> <ul> <li> <code>ui-datepicker</code>: The outer container of the datepicker. If the datepicker is inline, this element will additionally have a <code>ui-datepicker-inline</code> class. If the <a href=\"#option-isRTL\"><code>isRTL</code></a> option is set, this element will additionally have a class of <code>ui-datepicker-rtl</code>. <ul> <li> <code>ui-datepicker-header</code>: The container for the datepicker's header. <ul> <li> <code>ui-datepicker-prev</code>: The control used to select previous months.</li> <li> <code>ui-datepicker-next</code>: The control used to select subsequent months.</li> <li> <code>ui-datepicker-title</code>: The container for the datepicker's title containing the month and year. <ul> <li> <code>ui-datepicker-month</code>: The textual display of the month or a <code>&lt;select&gt;</code> element if the <a href=\"#option-changeMonth\"><code>changeMonth</code></a> option is set.</li> <li> <code>ui-datepicker-year</code>: The textual display of the year or a <code>&lt;select&gt;</code> element if the <a href=\"#option-changeYear\"><code>changeYear</code></a> option is set.</li> </ul> </li> </ul> </li> <li> <code>ui-datepicker-calendar</code>: The table that contains the calendar itself. <ul> <li> <code>ui-datepicker-week-end</code>: Cells containing weekend days.</li> <li> <code>ui-datepicker-other-month</code>: Cells containing days that occur in a month other than the currently selected month.</li> <li> <code>ui-datepicker-unselectable</code>: Cells containing days that are not selectable by the user.</li> <li> <code>ui-datepicker-current-day</code>: The cell containing the selected day.</li> <li> <code>ui-datepicker-today</code>: The cell containing today's date.</li> </ul> </li> <li> <code>ui-datepicker-buttonpane</code>: The buttonpane that is used when the <a href=\"#option-showButtonPanel\"><code>showButtonPanel</code></a> option is set. <ul> <li> <code>ui-datepicker-current</code>: The button used to select today's date.</li> </ul> </li> </ul> </li> </ul> <p>If the <a href=\"#option-numberOfMonths\"><code>numberOfMonths</code></a> option is used to display multiple months at once, a number of additional classes are used:</p> <ul> <li> <code>ui-datepicker-multi</code>: The outermost container of a multiple month datepicker. This element can additionally have a <code>ui-datepicker-multi-2</code>, <code>ui-datepicker-multi-3</code>, or <code>ui-datepicker-multi-4</code> class name depending on the number of months to display. <ul> <li> <code>ui-datepicker-group</code>: Individual pickers within the group. This element will additionally have a <code>ui-datepicker-group-first</code>, <code>ui-datepicker-group-middle</code>, or <code>ui-datepicker-group-last</code> class name depending on its position within the group.</li> </ul> </li> </ul> <h3>Dependencies</h3> <ul> <li><a href=\"https://api.jqueryui.com/category/ui-core/\">UI Core</a></li> <li> <a href=\"https://api.jqueryui.com/category/effects-core/\">Effects Core</a> (optional; for use with the <a href=\"#option-showAnim\"><code>showAnim</code></a> option)</li> </ul> </div> <h3>Additional Notes:</h3> <div class=\"longdesc\"><ul> <li> This widget requires some functional CSS, otherwise it won't work. If you build a custom theme, use the widget's specific CSS file as a starting point. </li> <li> This widget manipulates its element's value programmatically, therefore a native <code>change</code> event may not be fired when the element's value changes. </li> <li> Creating a datepicker on an <code>&lt;input type=\"date\"&gt;</code> is not supported due to a UI conflict with the native picker. </li> </ul></div> <section id=\"options\"><h2>Options</h2>\n<div id=\"option-altField\" class=\"api-item first-item\"> <h3>altField </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Selector\">Selector</a> or <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> or <a href=\"http://api.jquery.com/Types/#Element\">Element</a> </div> <div class=\"default\"> <strong>Default: </strong><code>\"\"</code> </div> <div>An input element that is to be updated with the selected date from the datepicker. Use the <a href=\"#option-altFormat\"><code>altFormat</code></a> option to change the format of the date within this field. Leave as blank for no alternate field.</div> <strong>Code examples:</strong><p>Initialize the datepicker with the <code>altField</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).datepicker({\n  altField: \"#actualDate\"\n});</pre> <p>Get or set the <code>altField</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar altField = $( \".selector\" ).datepicker( \"option\", \"altField\" );\n \n// Setter\n$( \".selector\" ).datepicker( \"option\", \"altField\", \"#actualDate\" );</pre> </div> <div id=\"option-altFormat\" class=\"api-item\"> <h3>altFormat </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div class=\"default\"> <strong>Default: </strong><code>\"\"</code> </div> <div>The <a href=\"#option-dateFormat\"><code>dateFormat</code></a> to be used for the <a href=\"#option-altField\"><code>altField</code></a> option. This allows one date format to be shown to the user for selection purposes, while a different format is actually sent behind the scenes. For a full list of the possible formats see the <a href=\"#utility-formatDate\"><code>formatDate</code></a> function</div> <strong>Code examples:</strong><p>Initialize the datepicker with the <code>altFormat</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).datepicker({\n  altFormat: \"yy-mm-dd\"\n});</pre> <p>Get or set the <code>altFormat</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar altFormat = $( \".selector\" ).datepicker( \"option\", \"altFormat\" );\n \n// Setter\n$( \".selector\" ).datepicker( \"option\", \"altFormat\", \"yy-mm-dd\" );</pre> </div> <div id=\"option-appendText\" class=\"api-item\"> <h3>appendText </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div class=\"default\"> <strong>Default: </strong><code>\"\"</code> </div> <div>The text to display after each date field, e.g., to show the required format.</div> <strong>Code examples:</strong><p>Initialize the datepicker with the <code>appendText</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).datepicker({\n  appendText: \"(yyyy-mm-dd)\"\n});</pre> <p>Get or set the <code>appendText</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar appendText = $( \".selector\" ).datepicker( \"option\", \"appendText\" );\n \n// Setter\n$( \".selector\" ).datepicker( \"option\", \"appendText\", \"(yyyy-mm-dd)\" );</pre> </div> <div id=\"option-autoSize\" class=\"api-item\"> <h3>autoSize </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> </div> <div class=\"default\"> <strong>Default: </strong><code>false</code> </div> <div>Set to <code>true</code> to automatically resize the input field to accommodate dates in the current <a href=\"#option-dateFormat\"><code>dateFormat</code></a>.</div> <strong>Code examples:</strong><p>Initialize the datepicker with the <code>autoSize</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).datepicker({\n  autoSize: true\n});</pre> <p>Get or set the <code>autoSize</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar autoSize = $( \".selector\" ).datepicker( \"option\", \"autoSize\" );\n \n// Setter\n$( \".selector\" ).datepicker( \"option\", \"autoSize\", true );</pre> </div> <div id=\"option-beforeShow\" class=\"api-item\"> <h3>beforeShow </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Function\">Function</a>( <a href=\"http://api.jquery.com/Types/#Element\">Element</a> input, <a href=\"http://api.jquery.com/Types/#Object\">Object</a> inst )</div> <div class=\"default\"> <strong>Default: </strong><code>null</code> </div> <div>A function that takes an input field and current datepicker instance and returns an options object to update the datepicker with. It is called just before the datepicker is displayed.</div> </div> <div id=\"option-beforeShowDay\" class=\"api-item\"> <h3>beforeShowDay </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Function\">Function</a>( <a href=\"http://api.jquery.com/Types/#Date\">Date</a> date )</div> <div class=\"default\"> <strong>Default: </strong><code>null</code> </div> <div>A function that takes a date as a parameter and must return an array with: <ul> <li> <code>[0]</code>: <code>true</code>/<code>false</code> indicating whether or not this date is selectable</li> <li> <code>[1]</code>: a CSS class name to add to the date's cell or <code>\"\"</code> for the default presentation</li> <li> <code>[2]</code>: an optional popup tooltip for this date</li> </ul> The function is called for each day in the datepicker before it is displayed.</div> </div> <div id=\"option-buttonImage\" class=\"api-item\"> <h3>buttonImage </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div class=\"default\"> <strong>Default: </strong><code>\"\"</code> </div> <div>A URL of an image to use to display the datepicker when the <a href=\"#option-showOn\"><code>showOn</code></a> option is set to <code>\"button\"</code> or <code>\"both\"</code>. If set, the <a href=\"#option-buttonText\"><code>buttonText</code></a> option becomes the <code>alt</code> value and is not directly displayed.</div> <strong>Code examples:</strong><p>Initialize the datepicker with the <code>buttonImage</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).datepicker({\n  buttonImage: \"/images/datepicker.gif\"\n});</pre> <p>Get or set the <code>buttonImage</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar buttonImage = $( \".selector\" ).datepicker( \"option\", \"buttonImage\" );\n \n// Setter\n$( \".selector\" ).datepicker( \"option\", \"buttonImage\", \"/images/datepicker.gif\" );</pre> </div> <div id=\"option-buttonImageOnly\" class=\"api-item\"> <h3>buttonImageOnly </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> </div> <div class=\"default\"> <strong>Default: </strong><code>false</code> </div> <div>Whether the button image should be rendered by itself instead of inside a button element. This option is only relevant if the <a href=\"#option-buttonImage\"><code>buttonImage</code></a> option has also been set.</div> <strong>Code examples:</strong><p>Initialize the datepicker with the <code>buttonImageOnly</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).datepicker({\n  buttonImageOnly: true\n});</pre> <p>Get or set the <code>buttonImageOnly</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar buttonImageOnly = $( \".selector\" ).datepicker( \"option\", \"buttonImageOnly\" );\n \n// Setter\n$( \".selector\" ).datepicker( \"option\", \"buttonImageOnly\", true );</pre> </div> <div id=\"option-buttonText\" class=\"api-item\"> <h3>buttonText </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div class=\"default\"> <strong>Default: </strong><code>\"...\"</code> </div> <div>The text to display on the trigger button. Use in conjunction with the <a href=\"#option-showOn\"><code>showOn</code></a> option set to <code>\"button\"</code> or <code>\"both\"</code>.</div> <strong>Code examples:</strong><p>Initialize the datepicker with the <code>buttonText</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).datepicker({\n  buttonText: \"Choose\"\n});</pre> <p>Get or set the <code>buttonText</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar buttonText = $( \".selector\" ).datepicker( \"option\", \"buttonText\" );\n \n// Setter\n$( \".selector\" ).datepicker( \"option\", \"buttonText\", \"Choose\" );</pre> </div> <div id=\"option-calculateWeek\" class=\"api-item\"> <h3>calculateWeek </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Function\">Function</a>()</div> <div class=\"default\"> <strong>Default: </strong><code>jQuery.datepicker.iso8601Week</code> </div> <div>A function to calculate the week of the year for a given date. The default implementation uses the ISO 8601 definition: weeks start on a Monday; the first week of the year contains the first Thursday of the year.</div> <strong>Code examples:</strong><p>Initialize the datepicker with the <code>calculateWeek</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).datepicker({\n  calculateWeek: myWeekCalc\n});</pre> <p>Get or set the <code>calculateWeek</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar calculateWeek = $( \".selector\" ).datepicker( \"option\", \"calculateWeek\" );\n \n// Setter\n$( \".selector\" ).datepicker( \"option\", \"calculateWeek\", myWeekCalc );</pre> </div> <div id=\"option-changeMonth\" class=\"api-item\"> <h3>changeMonth </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> </div> <div class=\"default\"> <strong>Default: </strong><code>false</code> </div> <div>Whether the month should be rendered as a dropdown instead of text.</div> <strong>Code examples:</strong><p>Initialize the datepicker with the <code>changeMonth</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).datepicker({\n  changeMonth: true\n});</pre> <p>Get or set the <code>changeMonth</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar changeMonth = $( \".selector\" ).datepicker( \"option\", \"changeMonth\" );\n \n// Setter\n$( \".selector\" ).datepicker( \"option\", \"changeMonth\", true );</pre> </div> <div id=\"option-changeYear\" class=\"api-item\"> <h3>changeYear </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> </div> <div class=\"default\"> <strong>Default: </strong><code>false</code> </div> <div>Whether the year should be rendered as a dropdown instead of text. Use the <a href=\"#option-yearRange\"><code>yearRange</code></a> option to control which years are made available for selection.</div> <strong>Code examples:</strong><p>Initialize the datepicker with the <code>changeYear</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).datepicker({\n  changeYear: true\n});</pre> <p>Get or set the <code>changeYear</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar changeYear = $( \".selector\" ).datepicker( \"option\", \"changeYear\" );\n \n// Setter\n$( \".selector\" ).datepicker( \"option\", \"changeYear\", true );</pre> </div> <div id=\"option-closeText\" class=\"api-item\"> <h3>closeText </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div class=\"default\"> <strong>Default: </strong><code>\"Done\"</code> </div> <div>The text to display for the close link. Use the <a href=\"#option-showButtonPanel\"><code>showButtonPanel</code></a> option to display this button.</div> <strong>Code examples:</strong><p>Initialize the datepicker with the <code>closeText</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).datepicker({\n  closeText: \"Close\"\n});</pre> <p>Get or set the <code>closeText</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar closeText = $( \".selector\" ).datepicker( \"option\", \"closeText\" );\n \n// Setter\n$( \".selector\" ).datepicker( \"option\", \"closeText\", \"Close\" );</pre> </div> <div id=\"option-constrainInput\" class=\"api-item\"> <h3>constrainInput </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> </div> <div class=\"default\"> <strong>Default: </strong><code>true</code> </div> <div>When <code>true</code>, entry in the input field is constrained to those characters allowed by the current <a href=\"#option-dateFormat\"><code>dateFormat</code></a> option.</div> <strong>Code examples:</strong><p>Initialize the datepicker with the <code>constrainInput</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).datepicker({\n  constrainInput: false\n});</pre> <p>Get or set the <code>constrainInput</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar constrainInput = $( \".selector\" ).datepicker( \"option\", \"constrainInput\" );\n \n// Setter\n$( \".selector\" ).datepicker( \"option\", \"constrainInput\", false );</pre> </div> <div id=\"option-currentText\" class=\"api-item\"> <h3>currentText </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div class=\"default\"> <strong>Default: </strong><code>\"Today\"</code> </div> <div>The text to display for the current day link. Use the <a href=\"#option-showButtonPanel\"><code>showButtonPanel</code></a> option to display this button.</div> <strong>Code examples:</strong><p>Initialize the datepicker with the <code>currentText</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).datepicker({\n  currentText: \"Now\"\n});</pre> <p>Get or set the <code>currentText</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar currentText = $( \".selector\" ).datepicker( \"option\", \"currentText\" );\n \n// Setter\n$( \".selector\" ).datepicker( \"option\", \"currentText\", \"Now\" );</pre> </div> <div id=\"option-dateFormat\" class=\"api-item\"> <h3>dateFormat </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div class=\"default\"> <strong>Default: </strong><code>\"mm/dd/yy\"</code> </div> <div>The format for parsed and displayed dates. For a full list of the possible formats see the <code><a href=\"#utility-formatDate\"><code>formatDate</code></a></code> function.</div> <strong>Code examples:</strong><p>Initialize the datepicker with the <code>dateFormat</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).datepicker({\n  dateFormat: \"yy-mm-dd\"\n});</pre> <p>Get or set the <code>dateFormat</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar dateFormat = $( \".selector\" ).datepicker( \"option\", \"dateFormat\" );\n \n// Setter\n$( \".selector\" ).datepicker( \"option\", \"dateFormat\", \"yy-mm-dd\" );</pre> </div> <div id=\"option-dayNames\" class=\"api-item\"> <h3>dayNames </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Array\">Array</a> </div> <div class=\"default\"> <strong>Default: </strong><code>[ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ]</code> </div> <div>The list of long day names, starting from Sunday, for use as requested via the <a href=\"#option-dateFormat\"><code>dateFormat</code></a> option.</div> <strong>Code examples:</strong><p>Initialize the datepicker with the <code>dayNames</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).datepicker({\n  dayNames: [ \"Dimanche\", \"Lundi\", \"Mardi\", \"Mercredi\", \"Jeudi\", \"Vendredi\", \"Samedi\" ]\n});</pre> <p>Get or set the <code>dayNames</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar dayNames = $( \".selector\" ).datepicker( \"option\", \"dayNames\" );\n \n// Setter\n$( \".selector\" ).datepicker( \"option\", \"dayNames\", [ \"Dimanche\", \"Lundi\", \"Mardi\", \"Mercredi\", \"Jeudi\", \"Vendredi\", \"Samedi\" ] );</pre> </div> <div id=\"option-dayNamesMin\" class=\"api-item\"> <h3>dayNamesMin </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Array\">Array</a> </div> <div class=\"default\"> <strong>Default: </strong><code>[ \"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\" ]</code> </div> <div>The list of minimised day names, starting from Sunday, for use as column headers within the datepicker.</div> <strong>Code examples:</strong><p>Initialize the datepicker with the <code>dayNamesMin</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).datepicker({\n  dayNamesMin: [ \"Di\", \"Lu\", \"Ma\", \"Me\", \"Je\", \"Ve\", \"Sa\" ]\n});</pre> <p>Get or set the <code>dayNamesMin</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar dayNamesMin = $( \".selector\" ).datepicker( \"option\", \"dayNamesMin\" );\n \n// Setter\n$( \".selector\" ).datepicker( \"option\", \"dayNamesMin\", [ \"Di\", \"Lu\", \"Ma\", \"Me\", \"Je\", \"Ve\", \"Sa\" ] );</pre> </div> <div id=\"option-dayNamesShort\" class=\"api-item\"> <h3>dayNamesShort </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Array\">Array</a> </div> <div class=\"default\"> <strong>Default: </strong><code>[ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ]</code> </div> <div>The list of abbreviated day names, starting from Sunday, for use as requested via the <a href=\"#option-dateFormat\"><code>dateFormat</code></a> option.</div> <strong>Code examples:</strong><p>Initialize the datepicker with the <code>dayNamesShort</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).datepicker({\n  dayNamesShort: [ \"Dim\", \"Lun\", \"Mar\", \"Mer\", \"Jeu\", \"Ven\", \"Sam\" ]\n});</pre> <p>Get or set the <code>dayNamesShort</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar dayNamesShort = $( \".selector\" ).datepicker( \"option\", \"dayNamesShort\" );\n \n// Setter\n$( \".selector\" ).datepicker( \"option\", \"dayNamesShort\", [ \"Dim\", \"Lun\", \"Mar\", \"Mer\", \"Jeu\", \"Ven\", \"Sam\" ] );</pre> </div> <div id=\"option-defaultDate\" class=\"api-item\"> <h3>defaultDate </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Date\">Date</a> or <a href=\"http://api.jquery.com/Types/#Number\">Number</a> or <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div class=\"default\"> <strong>Default: </strong><code>null</code> </div> <div>Set the date to highlight on first opening if the field is blank. Specify either an actual date via a Date object or as a string in the current <a href=\"#option-dateFormat\"><code>dateFormat</code></a>, or a number of days from today (e.g. +7) or a string of values and periods ('y' for years, 'm' for months, 'w' for weeks, 'd' for days, e.g. '+1m +7d'), or null for today.</div> <strong>Multiple types supported:</strong><ul> <li> <strong>Date</strong>: A date object containing the default date.</li> <li> <strong>Number</strong>: A number of days from today. For example <code>2</code> represents two days from today and <code>-1</code> represents yesterday.</li> <li> <strong>String</strong>: A string in the format defined by the <a href=\"#option-dateFormat\"><code>dateFormat</code></a> option, or a relative date. Relative dates must contain value and period pairs; valid periods are <code>\"y\"</code> for years, <code>\"m\"</code> for months, <code>\"w\"</code> for weeks, and <code>\"d\"</code> for days. For example, <code>\"+1m +7d\"</code> represents one month and seven days from today.</li> </ul> <strong>Code examples:</strong><p>Initialize the datepicker with the <code>defaultDate</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).datepicker({\n  defaultDate: +7\n});</pre> <p>Get or set the <code>defaultDate</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar defaultDate = $( \".selector\" ).datepicker( \"option\", \"defaultDate\" );\n \n// Setter\n$( \".selector\" ).datepicker( \"option\", \"defaultDate\", +7 );</pre> </div> <div id=\"option-duration\" class=\"api-item\"> <h3>duration </h3> <div class=\"option-type\"> <strong>Type: </strong> or <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div class=\"default\"> <strong>Default: </strong><code>\"normal\"</code> </div> <div>Control the speed at which the datepicker appears, it may be a time in milliseconds or a string representing one of the three predefined speeds (\"slow\", \"normal\", \"fast\").</div> <strong>Code examples:</strong><p>Initialize the datepicker with the <code>duration</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).datepicker({\n  duration: \"slow\"\n});</pre> <p>Get or set the <code>duration</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar duration = $( \".selector\" ).datepicker( \"option\", \"duration\" );\n \n// Setter\n$( \".selector\" ).datepicker( \"option\", \"duration\", \"slow\" );</pre> </div> <div id=\"option-firstDay\" class=\"api-item\"> <h3>firstDay </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Integer\">Integer</a> </div> <div class=\"default\"> <strong>Default: </strong><code>0</code> </div> <div>Set the first day of the week: Sunday is <code>0</code>, Monday is <code>1</code>, etc.</div> <strong>Code examples:</strong><p>Initialize the datepicker with the <code>firstDay</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).datepicker({\n  firstDay: 1\n});</pre> <p>Get or set the <code>firstDay</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar firstDay = $( \".selector\" ).datepicker( \"option\", \"firstDay\" );\n \n// Setter\n$( \".selector\" ).datepicker( \"option\", \"firstDay\", 1 );</pre> </div> <div id=\"option-gotoCurrent\" class=\"api-item\"> <h3>gotoCurrent </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> </div> <div class=\"default\"> <strong>Default: </strong><code>false</code> </div> <div>When <code>true</code>, the current day link moves to the currently selected date instead of today.</div> <strong>Code examples:</strong><p>Initialize the datepicker with the <code>gotoCurrent</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).datepicker({\n  gotoCurrent: true\n});</pre> <p>Get or set the <code>gotoCurrent</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar gotoCurrent = $( \".selector\" ).datepicker( \"option\", \"gotoCurrent\" );\n \n// Setter\n$( \".selector\" ).datepicker( \"option\", \"gotoCurrent\", true );</pre> </div> <div id=\"option-hideIfNoPrevNext\" class=\"api-item\"> <h3>hideIfNoPrevNext </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> </div> <div class=\"default\"> <strong>Default: </strong><code>false</code> </div> <div>Normally the previous and next links are disabled when not applicable (see the <a href=\"#option-minDate\"><code>minDate</code></a> and <a href=\"#option-maxDate\"><code>maxDate</code></a> options). You can hide them altogether by setting this attribute to <code>true</code>.</div> <strong>Code examples:</strong><p>Initialize the datepicker with the <code>hideIfNoPrevNext</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).datepicker({\n  hideIfNoPrevNext: true\n});</pre> <p>Get or set the <code>hideIfNoPrevNext</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar hideIfNoPrevNext = $( \".selector\" ).datepicker( \"option\", \"hideIfNoPrevNext\" );\n \n// Setter\n$( \".selector\" ).datepicker( \"option\", \"hideIfNoPrevNext\", true );</pre> </div> <div id=\"option-isRTL\" class=\"api-item\"> <h3>isRTL </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> </div> <div class=\"default\"> <strong>Default: </strong><code>false</code> </div> <div>Whether the current language is drawn from right to left.</div> <strong>Code examples:</strong><p>Initialize the datepicker with the <code>isRTL</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).datepicker({\n  isRTL: true\n});</pre> <p>Get or set the <code>isRTL</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar isRTL = $( \".selector\" ).datepicker( \"option\", \"isRTL\" );\n \n// Setter\n$( \".selector\" ).datepicker( \"option\", \"isRTL\", true );</pre> </div> <div id=\"option-maxDate\" class=\"api-item\"> <h3>maxDate </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Date\">Date</a> or <a href=\"http://api.jquery.com/Types/#Number\">Number</a> or <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div class=\"default\"> <strong>Default: </strong><code>null</code> </div> <div>The maximum selectable date. When set to <code>null</code>, there is no maximum.</div> <strong>Multiple types supported:</strong><ul> <li> <strong>Date</strong>: A date object containing the maximum date.</li> <li> <strong>Number</strong>: A number of days from today. For example <code>2</code> represents two days from today and <code>-1</code> represents yesterday.</li> <li> <strong>String</strong>: A string in the format defined by the <a href=\"#option-dateFormat\"><code>dateFormat</code></a> option, or a relative date. Relative dates must contain value and period pairs; valid periods are <code>\"y\"</code> for years, <code>\"m\"</code> for months, <code>\"w\"</code> for weeks, and <code>\"d\"</code> for days. For example, <code>\"+1m +7d\"</code> represents one month and seven days from today.</li> </ul> <strong>Code examples:</strong><p>Initialize the datepicker with the <code>maxDate</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).datepicker({\n  maxDate: \"+1m +1w\"\n});</pre> <p>Get or set the <code>maxDate</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar maxDate = $( \".selector\" ).datepicker( \"option\", \"maxDate\" );\n \n// Setter\n$( \".selector\" ).datepicker( \"option\", \"maxDate\", \"+1m +1w\" );</pre> </div> <div id=\"option-minDate\" class=\"api-item\"> <h3>minDate </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Date\">Date</a> or <a href=\"http://api.jquery.com/Types/#Number\">Number</a> or <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div class=\"default\"> <strong>Default: </strong><code>null</code> </div> <div>The minimum selectable date. When set to <code>null</code>, there is no minimum.</div> <strong>Multiple types supported:</strong><ul> <li> <strong>Date</strong>: A date object containing the minimum date.</li> <li> <strong>Number</strong>: A number of days from today. For example <code>2</code> represents two days from today and <code>-1</code> represents yesterday.</li> <li> <strong>String</strong>: A string in the format defined by the <a href=\"#option-dateFormat\"><code>dateFormat</code></a> option, or a relative date. Relative dates must contain value and period pairs; valid periods are <code>\"y\"</code> for years, <code>\"m\"</code> for months, <code>\"w\"</code> for weeks, and <code>\"d\"</code> for days. For example, <code>\"+1m +7d\"</code> represents one month and seven days from today.</li> </ul> <strong>Code examples:</strong><p>Initialize the datepicker with the <code>minDate</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).datepicker({\n  minDate: new Date(2007, 1 - 1, 1)\n});</pre> <p>Get or set the <code>minDate</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar minDate = $( \".selector\" ).datepicker( \"option\", \"minDate\" );\n \n// Setter\n$( \".selector\" ).datepicker( \"option\", \"minDate\", new Date(2007, 1 - 1, 1) );</pre> </div> <div id=\"option-monthNames\" class=\"api-item\"> <h3>monthNames </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Array\">Array</a> </div> <div class=\"default\"> <strong>Default: </strong><code>[ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ]</code> </div> <div>The list of full month names, for use as requested via the <a href=\"#option-dateFormat\"><code>dateFormat</code></a> option.</div> <strong>Code examples:</strong><p>Initialize the datepicker with the <code>monthNames</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).datepicker({\n  monthNames: [ \"Januar\", \"Februar\", \"Marts\", \"April\", \"Maj\", \"Juni\", \"Juli\", \"August\", \"September\", \"Oktober\", \"November\", \"December\" ]\n});</pre> <p>Get or set the <code>monthNames</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar monthNames = $( \".selector\" ).datepicker( \"option\", \"monthNames\" );\n \n// Setter\n$( \".selector\" ).datepicker( \"option\", \"monthNames\", [ \"Januar\", \"Februar\", \"Marts\", \"April\", \"Maj\", \"Juni\", \"Juli\", \"August\", \"September\", \"Oktober\", \"November\", \"December\" ] );</pre> </div> <div id=\"option-monthNamesShort\" class=\"api-item\"> <h3>monthNamesShort </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Array\">Array</a> </div> <div class=\"default\"> <strong>Default: </strong><code>[ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]</code> </div> <div>The list of abbreviated month names, as used in the month header on each datepicker and as requested via the <a href=\"#option-dateFormat\"><code>dateFormat</code></a> option.</div> <strong>Code examples:</strong><p>Initialize the datepicker with the <code>monthNamesShort</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).datepicker({\n  monthNamesShort: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"Maj\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Okt\", \"Nov\", \"Dec\" ]\n});</pre> <p>Get or set the <code>monthNamesShort</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar monthNamesShort = $( \".selector\" ).datepicker( \"option\", \"monthNamesShort\" );\n \n// Setter\n$( \".selector\" ).datepicker( \"option\", \"monthNamesShort\", [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"Maj\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Okt\", \"Nov\", \"Dec\" ] );</pre> </div> <div id=\"option-navigationAsDateFormat\" class=\"api-item\"> <h3>navigationAsDateFormat </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> </div> <div class=\"default\"> <strong>Default: </strong><code>false</code> </div> <div>Whether the <a href=\"#option-currentText\"><code>currentText</code></a>, <a href=\"#option-prevText\"><code>prevText</code></a> and <a href=\"#option-nextText\"><code>nextText</code></a> options should be parsed as dates by the <code><a href=\"#utility-formatDate\"><code>formatDate</code></a></code> function, allowing them to display the target month names for example.</div> <strong>Code examples:</strong><p>Initialize the datepicker with the <code>navigationAsDateFormat</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).datepicker({\n  navigationAsDateFormat: true\n});</pre> <p>Get or set the <code>navigationAsDateFormat</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar navigationAsDateFormat = $( \".selector\" ).datepicker( \"option\", \"navigationAsDateFormat\" );\n \n// Setter\n$( \".selector\" ).datepicker( \"option\", \"navigationAsDateFormat\", true );</pre> </div> <div id=\"option-nextText\" class=\"api-item\"> <h3>nextText </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div class=\"default\"> <strong>Default: </strong><code>\"Next\"</code> </div> <div>The text to display for the next month link. With the standard ThemeRoller styling, this value is replaced by an icon.</div> <strong>Code examples:</strong><p>Initialize the datepicker with the <code>nextText</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).datepicker({\n  nextText: \"Later\"\n});</pre> <p>Get or set the <code>nextText</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar nextText = $( \".selector\" ).datepicker( \"option\", \"nextText\" );\n \n// Setter\n$( \".selector\" ).datepicker( \"option\", \"nextText\", \"Later\" );</pre> </div> <div id=\"option-numberOfMonths\" class=\"api-item\"> <h3>numberOfMonths </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Number\">Number</a> or <a href=\"http://api.jquery.com/Types/#Array\">Array</a> </div> <div class=\"default\"> <strong>Default: </strong><code>1</code> </div> <div>The number of months to show at once.</div> <strong>Multiple types supported:</strong><ul> <li> <strong>Number</strong>: The number of months to display in a single row.</li> <li> <strong>Array</strong>: An array defining the number of rows and columns to display.</li> </ul> <strong>Code examples:</strong><p>Initialize the datepicker with the <code>numberOfMonths</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).datepicker({\n  numberOfMonths: [ 2, 3 ]\n});</pre> <p>Get or set the <code>numberOfMonths</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar numberOfMonths = $( \".selector\" ).datepicker( \"option\", \"numberOfMonths\" );\n \n// Setter\n$( \".selector\" ).datepicker( \"option\", \"numberOfMonths\", [ 2, 3 ] );</pre> </div> <div id=\"option-onChangeMonthYear\" class=\"api-item\"> <h3>onChangeMonthYear </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Function\">Function</a>( <a href=\"http://api.jquery.com/Types/#Integer\">Integer</a> year, <a href=\"http://api.jquery.com/Types/#Integer\">Integer</a> month, <a href=\"http://api.jquery.com/Types/#Object\">Object</a> inst )</div> <div class=\"default\"> <strong>Default: </strong><code>null</code> </div> <div>Called when the datepicker moves to a new month and/or year. The function receives the selected year, month (1-12), and the datepicker instance as parameters. <code>this</code> refers to the associated input field.</div> </div> <div id=\"option-onClose\" class=\"api-item\"> <h3>onClose </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Function\">Function</a>( <a href=\"http://api.jquery.com/Types/#String\">String</a> dateText, <a href=\"http://api.jquery.com/Types/#Object\">Object</a> inst )</div> <div class=\"default\"> <strong>Default: </strong><code>null</code> </div> <div>Called when the datepicker is closed, whether or not a date is selected. The function receives the selected date as text (<code>\"\"</code> if none) and the datepicker instance as parameters. <code>this</code> refers to the associated input field.</div> </div> <div id=\"option-onSelect\" class=\"api-item\"> <h3>onSelect </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Function\">Function</a>( <a href=\"http://api.jquery.com/Types/#String\">String</a> dateText, <a href=\"http://api.jquery.com/Types/#Object\">Object</a> inst )</div> <div class=\"default\"> <strong>Default: </strong><code>null</code> </div> <div>Called when the datepicker is selected. The function receives the selected date as text and the datepicker instance as parameters. <code>this</code> refers to the associated input field.</div> </div> <div id=\"option-prevText\" class=\"api-item\"> <h3>prevText </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div class=\"default\"> <strong>Default: </strong><code>\"Prev\"</code> </div> <div>The text to display for the previous month link. With the standard ThemeRoller styling, this value is replaced by an icon.</div> <strong>Code examples:</strong><p>Initialize the datepicker with the <code>prevText</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).datepicker({\n  prevText: \"Earlier\"\n});</pre> <p>Get or set the <code>prevText</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar prevText = $( \".selector\" ).datepicker( \"option\", \"prevText\" );\n \n// Setter\n$( \".selector\" ).datepicker( \"option\", \"prevText\", \"Earlier\" );</pre> </div> <div id=\"option-selectOtherMonths\" class=\"api-item\"> <h3>selectOtherMonths </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> </div> <div class=\"default\"> <strong>Default: </strong><code>false</code> </div> <div>Whether days in other months shown before or after the current month are selectable. This only applies if the <a href=\"#option-showOtherMonths\"><code>showOtherMonths</code></a> option is set to <code>true</code>.</div> <strong>Code examples:</strong><p>Initialize the datepicker with the <code>selectOtherMonths</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).datepicker({\n  selectOtherMonths: true\n});</pre> <p>Get or set the <code>selectOtherMonths</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar selectOtherMonths = $( \".selector\" ).datepicker( \"option\", \"selectOtherMonths\" );\n \n// Setter\n$( \".selector\" ).datepicker( \"option\", \"selectOtherMonths\", true );</pre> </div> <div id=\"option-shortYearCutoff\" class=\"api-item\"> <h3>shortYearCutoff </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Number\">Number</a> or <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div class=\"default\"> <strong>Default: </strong><code>\"+10\"</code> </div> <div>The cutoff year for determining the century for a date (used in conjunction with <a href=\"#option-dateFormat\"><code>dateFormat</code></a> 'y'). Any dates entered with a year value less than or equal to the cutoff year are considered to be in the current century, while those greater than it are deemed to be in the previous century.</div> <strong>Multiple types supported:</strong><ul> <li> <strong>Number</strong>: A value between <code>0</code> and <code>99</code> indicating the cutoff year.</li> <li> <strong>String</strong>: A relative number of years from the current year, e.g., <code>\"+3\"</code> or <code>\"-5\"</code>.</li> </ul> <strong>Code examples:</strong><p>Initialize the datepicker with the <code>shortYearCutoff</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).datepicker({\n  shortYearCutoff: 50\n});</pre> <p>Get or set the <code>shortYearCutoff</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar shortYearCutoff = $( \".selector\" ).datepicker( \"option\", \"shortYearCutoff\" );\n \n// Setter\n$( \".selector\" ).datepicker( \"option\", \"shortYearCutoff\", 50 );</pre> </div> <div id=\"option-showAnim\" class=\"api-item\"> <h3>showAnim </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div class=\"default\"> <strong>Default: </strong><code>\"show\"</code> </div> <div>The name of the animation used to show and hide the datepicker. Use <code>\"show\"</code> (the default), <code>\"slideDown\"</code>, <code>\"fadeIn\"</code>, any of the <a href=\"https://api.jqueryui.com/category/effects/\">jQuery UI effects</a>. Set to an empty string to disable animation.</div> <strong>Code examples:</strong><p>Initialize the datepicker with the <code>showAnim</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).datepicker({\n  showAnim: \"fold\"\n});</pre> <p>Get or set the <code>showAnim</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar showAnim = $( \".selector\" ).datepicker( \"option\", \"showAnim\" );\n \n// Setter\n$( \".selector\" ).datepicker( \"option\", \"showAnim\", \"fold\" );</pre> </div> <div id=\"option-showButtonPanel\" class=\"api-item\"> <h3>showButtonPanel </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> </div> <div class=\"default\"> <strong>Default: </strong><code>false</code> </div> <div>Whether to display a button pane underneath the calendar. The button pane contains two buttons, a Today button that links to the current day, and a Done button that closes the datepicker. The buttons' text can be customized using the <a href=\"#option-currentText\"><code>currentText</code></a> and <a href=\"#option-closeText\"><code>closeText</code></a> options respectively.</div> <strong>Code examples:</strong><p>Initialize the datepicker with the <code>showButtonPanel</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).datepicker({\n  showButtonPanel: true\n});</pre> <p>Get or set the <code>showButtonPanel</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar showButtonPanel = $( \".selector\" ).datepicker( \"option\", \"showButtonPanel\" );\n \n// Setter\n$( \".selector\" ).datepicker( \"option\", \"showButtonPanel\", true );</pre> </div> <div id=\"option-showCurrentAtPos\" class=\"api-item\"> <h3>showCurrentAtPos </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Number\">Number</a> </div> <div class=\"default\"> <strong>Default: </strong><code>0</code> </div> <div>When displaying multiple months via the <a href=\"#option-numberOfMonths\"><code>numberOfMonths</code></a> option, the <code>showCurrentAtPos</code> option defines which position to display the current month in.</div> <strong>Code examples:</strong><p>Initialize the datepicker with the <code>showCurrentAtPos</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).datepicker({\n  showCurrentAtPos: 3\n});</pre> <p>Get or set the <code>showCurrentAtPos</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar showCurrentAtPos = $( \".selector\" ).datepicker( \"option\", \"showCurrentAtPos\" );\n \n// Setter\n$( \".selector\" ).datepicker( \"option\", \"showCurrentAtPos\", 3 );</pre> </div> <div id=\"option-showMonthAfterYear\" class=\"api-item\"> <h3>showMonthAfterYear </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> </div> <div class=\"default\"> <strong>Default: </strong><code>false</code> </div> <div>Whether to show the month after the year in the header.</div> <strong>Code examples:</strong><p>Initialize the datepicker with the <code>showMonthAfterYear</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).datepicker({\n  showMonthAfterYear: true\n});</pre> <p>Get or set the <code>showMonthAfterYear</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar showMonthAfterYear = $( \".selector\" ).datepicker( \"option\", \"showMonthAfterYear\" );\n \n// Setter\n$( \".selector\" ).datepicker( \"option\", \"showMonthAfterYear\", true );</pre> </div> <div id=\"option-showOn\" class=\"api-item\"> <h3>showOn </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div class=\"default\"> <strong>Default: </strong><code>\"focus\"</code> </div> <div>When the datepicker should appear. The datepicker can appear when the field receives focus (<code>\"focus\"</code>), when a button is clicked (<code>\"button\"</code>), or when either event occurs (<code>\"both\"</code>).</div> <strong>Code examples:</strong><p>Initialize the datepicker with the <code>showOn</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).datepicker({\n  showOn: \"both\"\n});</pre> <p>Get or set the <code>showOn</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar showOn = $( \".selector\" ).datepicker( \"option\", \"showOn\" );\n \n// Setter\n$( \".selector\" ).datepicker( \"option\", \"showOn\", \"both\" );</pre> </div> <div id=\"option-showOptions\" class=\"api-item\"> <h3>showOptions </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div class=\"default\"> <strong>Default: </strong><code>{}</code> </div> <div>If using one of the jQuery UI effects for the <a href=\"#option-showAnim\"><code>showAnim</code></a> option, you can provide additional properties for that animation using this option.</div> <strong>Code examples:</strong><p>Initialize the datepicker with the <code>showOptions</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).datepicker({\n  showOptions: { direction: \"up\" }\n});</pre> <p>Get or set the <code>showOptions</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar showOptions = $( \".selector\" ).datepicker( \"option\", \"showOptions\" );\n \n// Setter\n$( \".selector\" ).datepicker( \"option\", \"showOptions\", { direction: \"up\" } );</pre> </div> <div id=\"option-showOtherMonths\" class=\"api-item\"> <h3>showOtherMonths </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> </div> <div class=\"default\"> <strong>Default: </strong><code>false</code> </div> <div>Whether to display dates in other months (non-selectable) at the start or end of the current month. To make these days selectable use the <a href=\"#option-selectOtherMonths\"><code>selectOtherMonths</code></a> option.</div> <strong>Code examples:</strong><p>Initialize the datepicker with the <code>showOtherMonths</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).datepicker({\n  showOtherMonths: true\n});</pre> <p>Get or set the <code>showOtherMonths</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar showOtherMonths = $( \".selector\" ).datepicker( \"option\", \"showOtherMonths\" );\n \n// Setter\n$( \".selector\" ).datepicker( \"option\", \"showOtherMonths\", true );</pre> </div> <div id=\"option-showWeek\" class=\"api-item\"> <h3>showWeek </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> </div> <div class=\"default\"> <strong>Default: </strong><code>false</code> </div> <div>When <code>true</code>, a column is added to show the week of the year. The <a href=\"#option-calculateWeek\"><code>calculateWeek</code></a> option determines how the week of the year is calculated. You may also want to change the <a href=\"#option-firstDay\"><code>firstDay</code></a> option.</div> <strong>Code examples:</strong><p>Initialize the datepicker with the <code>showWeek</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).datepicker({\n  showWeek: true\n});</pre> <p>Get or set the <code>showWeek</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar showWeek = $( \".selector\" ).datepicker( \"option\", \"showWeek\" );\n \n// Setter\n$( \".selector\" ).datepicker( \"option\", \"showWeek\", true );</pre> </div> <div id=\"option-stepMonths\" class=\"api-item\"> <h3>stepMonths </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Number\">Number</a> </div> <div class=\"default\"> <strong>Default: </strong><code>1</code> </div> <div>Set how many months to move when clicking the previous/next links.</div> <strong>Code examples:</strong><p>Initialize the datepicker with the <code>stepMonths</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).datepicker({\n  stepMonths: 3\n});</pre> <p>Get or set the <code>stepMonths</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar stepMonths = $( \".selector\" ).datepicker( \"option\", \"stepMonths\" );\n \n// Setter\n$( \".selector\" ).datepicker( \"option\", \"stepMonths\", 3 );</pre> </div> <div id=\"option-weekHeader\" class=\"api-item\"> <h3>weekHeader </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div class=\"default\"> <strong>Default: </strong><code>\"Wk\"</code> </div> <div>The text to display for the week of the year column heading. Use the <a href=\"#option-showWeek\"><code>showWeek</code></a> option to display this column.</div> <strong>Code examples:</strong><p>Initialize the datepicker with the <code>weekHeader</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).datepicker({\n  weekHeader: \"W\"\n});</pre> <p>Get or set the <code>weekHeader</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar weekHeader = $( \".selector\" ).datepicker( \"option\", \"weekHeader\" );\n \n// Setter\n$( \".selector\" ).datepicker( \"option\", \"weekHeader\", \"W\" );</pre> </div> <div id=\"option-yearRange\" class=\"api-item\"> <h3>yearRange </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div class=\"default\"> <strong>Default: </strong><code>\"c-10:c+10\"</code> </div> <div>The range of years displayed in the year drop-down: either relative to today's year (<code>\"-nn:+nn\"</code>), relative to the currently selected year (<code>\"c-nn:c+nn\"</code>), absolute (<code>\"nnnn:nnnn\"</code>), or combinations of these formats (<code>\"nnnn:-nn\"</code>). Note that this option only affects what appears in the drop-down, to restrict which dates may be selected use the <a href=\"#option-minDate\"><code>minDate</code></a> and/or <a href=\"#option-maxDate\"><code>maxDate</code></a> options.</div> <strong>Code examples:</strong><p>Initialize the datepicker with the <code>yearRange</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).datepicker({\n  yearRange: \"2002:2012\"\n});</pre> <p>Get or set the <code>yearRange</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar yearRange = $( \".selector\" ).datepicker( \"option\", \"yearRange\" );\n \n// Setter\n$( \".selector\" ).datepicker( \"option\", \"yearRange\", \"2002:2012\" );</pre> </div> <div id=\"option-yearSuffix\" class=\"api-item\"> <h3>yearSuffix </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div class=\"default\"> <strong>Default: </strong><code>\"\"</code> </div> <div>Additional text to display after the year in the month headers.</div> <strong>Code examples:</strong><p>Initialize the datepicker with the <code>yearSuffix</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).datepicker({\n  yearSuffix: \"CE\"\n});</pre> <p>Get or set the <code>yearSuffix</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar yearSuffix = $( \".selector\" ).datepicker( \"option\", \"yearSuffix\" );\n \n// Setter\n$( \".selector\" ).datepicker( \"option\", \"yearSuffix\", \"CE\" );</pre> </div></section><section id=\"methods\"><h2>Methods</h2>\n<div id=\"method-destroy\"><div class=\"api-item first-item\"> <h3>destroy()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Removes the datepicker functionality completely. This will return the element back to its pre-init state. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the destroy method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).datepicker( \"destroy\" );</pre> </div> </div></div> <div id=\"method-dialog\"><div class=\"api-item\"> <h3>dialog( date [, onSelect ] [, options ] [, pos ] )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div>Opens the datepicker in a dialog box.</div> <ul> <li> <div><strong>date</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> or <a href=\"http://api.jquery.com/Types/#Date\">Date</a> </div> <div>The initial date.</div> </li> <li> <div><strong>onSelect</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Function\">Function</a>()</div> <div>A callback function when a date is selected. The function receives the date text and date picker instance as parameters.</div> </li> <li> <div><strong>options</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Options\">Options</a> </div> <div>The new options for the date picker.</div> </li> <li> <div><strong>pos</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Number%5B2%5D%20or%20MouseEvent\">Number[2] or MouseEvent</a> </div> <div>The position of the top/left of the dialog as <code>[x, y]</code> or a <code>MouseEvent</code> that contains the coordinates. If not specified the dialog is centered on the screen.</div> </li> </ul> <div> <strong>Code examples:</strong><p>Invoke the dialog method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).datepicker( \"dialog\", \"10/12/2012\" );</pre> </div> </div></div> <div id=\"method-getDate\"><div class=\"api-item\"> <h3>getDate()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#Date\">Date</a></span> </h3> <div>Returns the current date for the datepicker or <code>null</code> if no date has been selected.</div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the getDate method:</p> <pre class=\"syntaxhighlighter javascript\">var currentDate = $( \".selector\" ).datepicker( \"getDate\" );</pre> </div> </div></div> <div id=\"method-hide\"><div class=\"api-item\"> <h3>hide()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div>Close a previously opened date picker.</div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the hide method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).datepicker( \"hide\" );</pre> </div> </div></div> <div id=\"method-isDisabled\"><div class=\"api-item\"> <h3>isDisabled()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a></span> </h3> <div>Determine whether a date picker has been disabled.</div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the isDisabled method:</p> <pre class=\"syntaxhighlighter javascript\">var isDisabled = $( \".selector\" ).datepicker( \"isDisabled\" );</pre> </div> </div></div> <div id=\"method-option\"> <div class=\"api-item\"> <h3>option( optionName )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#Object\">Object</a></span> </h3> <div> <p>Gets the value currently associated with the specified <code>optionName</code>.</p> <p><strong>Note:</strong> For options that have objects as their value, you can get the value of a specific key by using dot notation. For example, <code>\"foo.bar\"</code> would get the value of the <code>bar</code> property on the <code>foo</code> option.</p> </div> <ul><li> <div><strong>optionName</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>The name of the option to get.</div> </li></ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">var isDisabled = $( \".selector\" ).datepicker( \"option\", \"disabled\" );</pre> </div> </div> <div class=\"api-item\"> <h3>option()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#PlainObject\">PlainObject</a></span> </h3> <div>Gets an object containing key/value pairs representing the current datepicker options hash.</div> <ul><li><div class=\"null-signature\">This signature does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">var options = $( \".selector\" ).datepicker( \"option\" );</pre> </div> </div> <div class=\"api-item\"> <h3>option( optionName, value )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> <p>Sets the value of the datepicker option associated with the specified <code>optionName</code>.</p> <p><strong>Note:</strong> For options that have objects as their value, you can set the value of just one property by using dot notation for <code>optionName</code>. For example, <code>\"foo.bar\"</code> would update only the <code>bar</code> property of the <code>foo</code> option.</p> </div> <ul> <li> <div><strong>optionName</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>The name of the option to set.</div> </li> <li> <div><strong>value</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>A value to set for the option.</div> </li> </ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).datepicker( \"option\", \"disabled\", true );</pre> </div> </div> <div class=\"api-item\"> <h3>option( options )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div>Sets one or more options for the datepicker.</div> <ul><li> <div><strong>options</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>A map of option-value pairs to set.</div> </li></ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).datepicker( \"option\", { disabled: true } );</pre> </div> </div> </div> <div id=\"method-refresh\"><div class=\"api-item\"> <h3>refresh()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div>Redraw the date picker, after having made some external modifications.</div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the refresh method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).datepicker( \"refresh\" );</pre> </div> </div></div> <div id=\"method-setDate\"><div class=\"api-item\"> <h3>setDate( date )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div>Sets the date for the datepicker. The new date may be a <code>Date</code> object or a string in the current <a href=\"#option-dateFormat\">date format</a> (e.g., <code>\"01/26/2009\"</code>), a number of days from today (e.g., <code>+7</code>) or a string of values and periods (<code>\"y\"</code> for years, <code>\"m\"</code> for months, <code>\"w\"</code> for weeks, <code>\"d\"</code> for days, e.g., <code>\"+1m +7d\"</code>), or <code>null</code> to clear the selected date.</div> <ul><li> <div><strong>date</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> or <a href=\"http://api.jquery.com/Types/#Date\">Date</a> </div> <div>The new date.</div> </li></ul> <div> <strong>Code examples:</strong><p>Invoke the setDate method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).datepicker( \"setDate\", \"10/12/2012\" );</pre> </div> </div></div> <div id=\"method-show\"><div class=\"api-item\"> <h3>show()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div>Open the date picker. If the datepicker is attached to an input, the input must be visible for the datepicker to be shown.</div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the show method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).datepicker( \"show\" );</pre> </div> </div></div> <div id=\"method-widget\"><div class=\"api-item\"> <h3>widget()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a></span> </h3> <div> Returns a <code>jQuery</code> object containing the datepicker. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the widget method:</p> <pre class=\"syntaxhighlighter javascript\">var widget = $( \".selector\" ).datepicker( \"widget\" );</pre> </div> </div></div></section><section class=\"entry-examples\" id=\"entry-examples\"><h2>Example:</h2>\n<div class=\"entry-example\" id=\"example-0\"> <p>A simple jQuery UI Datepicker.</p> <pre class=\"syntaxhighlighter xml\">&lt;!doctype html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"utf-8\"&gt;\n  &lt;title&gt;datepicker demo&lt;/title&gt;\n  &lt;link rel=\"stylesheet\" href=\"//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css\"&gt;\n  &lt;script src=\"//code.jquery.com/jquery-1.10.2.js\"&gt;&lt;/script&gt;\n  &lt;script src=\"//code.jquery.com/ui/1.11.4/jquery-ui.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n&lt;div id=\"datepicker\"&gt;&lt;/div&gt;\n \n&lt;script&gt;\n$( \"#datepicker\" ).datepicker();\n&lt;/script&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;</pre> <h4>Demo:</h4>  </div></section> </div></article> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; The jQuery Foundation and other contributors<br>Licensed under the MIT License.<br>\n    <a href=\"https://api.jqueryui.com/datepicker\" class=\"_attribution-link\">https://api.jqueryui.com/datepicker</a>\n  </p>\n</div>\n","clip-effect":"<h1 class=\"entry-title\">Clip Effect</h1> <div class=\"entry-content\"> <article id=\"clip1\" class=\"entry effect\"><h2 class=\"section-title\"><span>Clip Effect</span></h2> <div class=\"entry-wrapper\"> <p class=\"desc\"><strong>Description: </strong> The clip effect will hide or show an element by clipping the element vertically or horizontally. </p> <ul class=\"signatures\"><li class=\"signature\"> <h4 class=\"name\">clip</h4> <ul><li> <div> <strong>direction</strong> (default: <code>\"up\"</code>)</div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div> <p>The plane in which the clip effect will hide or show its element.</p> <p><code>vertical</code> clips the top and bottom edges, while <code>horizontal</code> clips the right and left edges.</p> </div> </li></ul> </li></ul> <section class=\"entry-examples\" id=\"entry-examples\"><h2>Example:</h2>\n<div class=\"entry-example\" id=\"example-0\"> <p>Toggle a div using the clip effect.</p> <pre class=\"syntaxhighlighter xml\">&lt;!doctype html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"utf-8\"&gt;\n  &lt;title&gt;clip demo&lt;/title&gt;\n  &lt;link rel=\"stylesheet\" href=\"//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css\"&gt;\n  &lt;style&gt;\n  #toggle {\n    width: 100px;\n    height: 100px;\n    background: #ccc;\n  }\n  &lt;/style&gt;\n  &lt;script src=\"//code.jquery.com/jquery-1.10.2.js\"&gt;&lt;/script&gt;\n  &lt;script src=\"//code.jquery.com/ui/1.11.4/jquery-ui.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n&lt;p&gt;Click anywhere to toggle the box.&lt;/p&gt;\n&lt;div id=\"toggle\"&gt;&lt;/div&gt;\n \n&lt;script&gt;\n$( document ).click(function() {\n  $( \"#toggle\" ).toggle( \"clip\" );\n});\n&lt;/script&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;</pre> <h4>Demo:</h4>  </div></section> </div></article> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; The jQuery Foundation and other contributors<br>Licensed under the MIT License.<br>\n    <a href=\"https://api.jqueryui.com/clip-effect\" class=\"_attribution-link\">https://api.jqueryui.com/clip-effect</a>\n  </p>\n</div>\n","addclass":"<h1 class=\"entry-title\">.addClass()</h1> <div class=\"entry-content\"> <article id=\"addClass1\" class=\"entry method\"><h2 class=\"section-title\"> <span class=\"name\">.addClass( className [, duration ] [, easing ] [, complete ] )</span><span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a></span> </h2> <div class=\"entry-wrapper\"> <p class=\"desc\"><strong>Description: </strong>Adds the specified class(es) to each of the set of matched elements while animating all style changes.</p> <ul class=\"signatures\"> <li class=\"signature\"> <h4 class=\"name\"><a id=\"addClass-className-duration-easing-complete\" href=\"#addClass-className-duration-easing-complete\">.addClass( className [, duration ] [, easing ] [, complete ] )</a></h4> <ul> <li> <div><strong>className</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>One or more class names (space separated) to be added to the class attribute of each matched element.</div> </li> <li> <div> <strong>duration</strong> (default: <code>400</code>)</div> <div>Type: <a href=\"http://api.jquery.com/Types/#Number\">Number</a> or <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>A string or number determining how long the animation will run.</div> </li> <li> <div> <strong>easing</strong> (default: <code>swing</code>)</div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>A string indicating which <a href=\"easings\">easing</a> function to use for the transition.</div> </li> <li> <div><strong>complete</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Function\">Function</a>()</div> <div>A function to call once the animation is complete, called once per matched element.</div> </li> </ul> </li> <li class=\"signature\"> <h4 class=\"name\"><a id=\"addClass-className-options\" href=\"#addClass-className-options\">.addClass( className [, options ] )</a></h4> <ul> <li> <div><strong>className</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>One or more class names (space separated) to be added to the class attribute of each matched element.</div> </li> <li> <div><strong>options</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>All animation settings. All properties are optional.</div> <ul> <li> <div> <strong>duration</strong> (default: <code>400</code>)</div> <div>Type: <a href=\"http://api.jquery.com/Types/#Number\">Number</a> or <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>A string or number determining how long the animation will run.</div> </li> <li> <div> <strong>easing</strong> (default: <code>swing</code>)</div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>A string indicating which <a href=\"easings\">easing</a> function to use for the transition.</div> </li> <li> <div><strong>complete</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Function\">Function</a>()</div> <div>A function to call once the animation is complete, called once per matched element.</div> </li> <li> <div> <strong>children</strong> (default: <code>false</code>)</div> <div>Type: <a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> </div> <div>Whether the animation should additionally be applied to all descendants of the matched elements. This feature should be used with caution as the cost of determining which descendants to animate can be very expensive, and grows linearly with the number of descendants.</div> </li> <li> <div> <strong>queue</strong> (default: <code>true</code>)</div> <div>Type: <a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> or <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>A Boolean indicating whether to place the animation in the effects queue. If false, the animation will begin immediately. <strong>As of jQuery 1.7</strong>, the queue option can also accept a string, in which case the animation is added to the queue represented by that string.</div> </li> </ul> </li> </ul> </li> </ul> <div class=\"longdesc\" id=\"entry-longdesc\"> <div> <p>Similar to native CSS transitions, jQuery UI's class animations provide a smooth transition from one state to another while allowing you to keep all the details about which styles to change in CSS and out of your JavaScript. All class animation methods, including <code>.addClass()</code>, support custom durations and easings, as well as provide a callback for when the animation completes.</p> <p>Not all styles can be animated. For example, there is no way to animate a background image. Any styles that cannot be animated will be changed at the end of the animation.</p> </div> <p>This plugin extends jQuery's built-in <a href=\"https://api.jquery.com/addClass/\"><code>.addClass()</code></a> method. If jQuery UI is not loaded, calling the <code>.addClass()</code> method may not fail directly, as the method still exists. However, the expected behavior will not occur.</p> </div> <section class=\"entry-examples\" id=\"entry-examples\"><h2>Example:</h2>\n<div class=\"entry-example\" id=\"example-0\"> <p>Adds the class \"big-blue\" to the matched elements.</p> <pre class=\"syntaxhighlighter xml\">&lt;!doctype html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"utf-8\"&gt;\n  &lt;title&gt;addClass demo&lt;/title&gt;\n  &lt;link rel=\"stylesheet\" href=\"//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css\"&gt;\n  &lt;style&gt;\n  div {\n    width: 100px;\n    height: 100px;\n    background-color: #ccc;\n  }\n  .big-blue {\n    width: 200px;\n    height: 200px;\n    background-color: #00f;\n  }\n  &lt;/style&gt;\n  &lt;script src=\"//code.jquery.com/jquery-1.10.2.js\"&gt;&lt;/script&gt;\n  &lt;script src=\"//code.jquery.com/ui/1.11.4/jquery-ui.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n&lt;div&gt;&lt;/div&gt;\n \n&lt;script&gt;\n$( \"div\" ).click(function() {\n  $( this ).addClass( \"big-blue\", 1000, \"easeOutBounce\" );\n});\n&lt;/script&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;</pre> <h4>Demo:</h4>  </div></section> </div></article> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; The jQuery Foundation and other contributors<br>Licensed under the MIT License.<br>\n    <a href=\"https://api.jqueryui.com/addClass\" class=\"_attribution-link\">https://api.jqueryui.com/addClass</a>\n  </p>\n</div>\n","drop-effect":"<h1 class=\"entry-title\">Drop Effect</h1> <div class=\"entry-content\"> <article id=\"drop1\" class=\"entry effect\"><h2 class=\"section-title\"><span>Drop Effect</span></h2> <div class=\"entry-wrapper\"> <p class=\"desc\"><strong>Description: </strong> The drop effect hides or shows an element fading in/out and sliding in a direction. </p> <ul class=\"signatures\"><li class=\"signature\"> <h4 class=\"name\">drop</h4> <ul><li> <div> <strong>direction</strong> (default: <code>\"left\"</code>)</div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div> <p>The direction the element will fall to hide the element, or the direction from which the element will be revealed.</p> <p>Possible Values: <code>up</code>, <code>down</code>, <code>left</code>, <code>right</code>.</p> </div> </li></ul> </li></ul> <section class=\"entry-examples\" id=\"entry-examples\"><h2>Example:</h2>\n<div class=\"entry-example\" id=\"example-0\"> <p>Toggle a div using the drop effect.</p> <pre class=\"syntaxhighlighter xml\">&lt;!doctype html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"utf-8\"&gt;\n  &lt;title&gt;drop demo&lt;/title&gt;\n  &lt;link rel=\"stylesheet\" href=\"//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css\"&gt;\n  &lt;style&gt;\n  #toggle {\n    width: 100px;\n    height: 100px;\n    background: #ccc;\n  }\n  &lt;/style&gt;\n  &lt;script src=\"//code.jquery.com/jquery-1.10.2.js\"&gt;&lt;/script&gt;\n  &lt;script src=\"//code.jquery.com/ui/1.11.4/jquery-ui.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n&lt;p&gt;Click anywhere to toggle the box.&lt;/p&gt;\n&lt;div id=\"toggle\"&gt;&lt;/div&gt;\n \n&lt;script&gt;\n$( document ).click(function() {\n  $( \"#toggle\" ).toggle( \"drop\" );\n});\n&lt;/script&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;</pre> <h4>Demo:</h4>  </div></section> </div></article> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; The jQuery Foundation and other contributors<br>Licensed under the MIT License.<br>\n    <a href=\"https://api.jqueryui.com/drop-effect\" class=\"_attribution-link\">https://api.jqueryui.com/drop-effect</a>\n  </p>\n</div>\n","theming/css-framework":"<h1 class=\"entry-title\">CSS Framework</h1>  <p>The following is a list of the class names used by jQuery UI. The classes are designed to create a visual consistency across an application and allow components to be themeable by <a href=\"http://jqueryui.com/themeroller/\">jQuery UI ThemeRoller.</a> The class names are split between ui.core.css and ui.theme.css, depending on whether styles are fixed and structural, or themeable (colors, fonts, backgrounds, etc) respectively.</p> <h3>Layout Helpers</h3> <ul> <li> <code>.ui-helper-hidden</code>: Hides content visually and from assistive technologies, such as screen readers. </li> <li> <code>.ui-helper-hidden-accessible</code>: Hides content visually, but leaves it available to assistive technologies. </li> <li> <code>.ui-helper-reset</code>: A basic style reset for DOM nodes. Resets padding, margins, text-decoration, list-style, etc. </li> <li> <code>.ui-helper-clearfix</code>: Applies float wrapping properties to parent elements. </li> <li> <code>.ui-front</code>: Applies z-index to manage the stacking of multiple widgets on the screen. See the page about <a href=\"stacking-elements\">stacking elements</a> for more details. </li> </ul> <h3>Widget Containers</h3> <ul> <li> <code>.ui-widget</code>: Class to be applied to the outer container of all widgets. Applies font-family and font size to widgets. </li> <li> <code>.ui-widget-header</code>: Class to be applied to header containers. Applies header container styles to an element and its child text, links, and icons. </li> <li> <code>.ui-widget-content</code>: Class to be applied to content containers. Applies content container styles to an element and its child text, links, and icons. (can be applied to parent or sibling of header). </li> </ul> <h3>Interaction States</h3> <ul> <li> <code>.ui-state-default</code>: Class to be applied to clickable button-like elements. Applies \"clickable default\" container styles to an element and its child text, links, and icons. </li> <li> <code>.ui-state-hover</code>: Class to be applied on mouseover to clickable button-like elements. Applies \"clickable hover\" container styles to an element and its child text, links, and icons. </li> <li> <code>.ui-state-focus</code>: Class to be applied on keyboard focus to clickable button-like elements. Applies \"clickable focus\" container styles to an element and its child text, links, and icons. </li> <li> <code>.ui-state-active</code>: Class to be applied on mousedown to clickable button-like elements. Applies \"clickable active\" container styles to an element and its child text, links, and icons. </li> </ul> <h3>Interaction Cues</h3> <ul> <li> <code>.ui-state-highlight</code>: Class to be applied to highlighted or selected elements. Applies \"highlight\" container styles to an element and its child text, links, and icons. </li> <li> <code>.ui-state-error</code>: Class to be applied to error messaging container elements. Applies \"error\" container styles to an element and its child text, links, and icons. </li> <li> <code>.ui-state-error-text</code>: An additional class that applies just the error text color without background. Can be used on form labels for instance. Also applies error icon color to child icons. </li> <li> <code>.ui-state-disabled</code>: Applies a dimmed opacity to disabled UI elements. Meant to be added in addition to an already-styled element. </li> <li> <code>.ui-priority-primary</code>: Class to be applied to a priority-1 button in situations where button hierarchy is needed. </li> <li> <code>.ui-priority-secondary</code>: Class to be applied to a priority-2 button in situations where button hierarchy is needed. </li> </ul> <h3>Icons</h3> <h4>States and images</h4> <ul> <li> <code>.ui-icon</code>: Base class to be applied to an icon element. Sets dimensions to a 16px square block, hides inner text, and sets background image to the \"content\" state sprite image. Note: <code>ui-icon</code> class will be given a different sprite background image depending on its parent container. For example, a <code>ui-icon</code> element within a <code>ui-state-default</code> container will get colored according to the <code>ui-state-default</code>'s icon color. </li> </ul> <h4>Icon types</h4> <p>After declaring a <code>ui-icon</code> class, you can follow up with a second class describing the type of icon. Icon classes generally follow a syntax of .ui-icon-{icon type}-{icon sub description}-{direction}.</p> <p>For example, a single triangle icon pointing to the right looks like this: <code>.ui-icon-triangle-1-e</code>. ThemeRoller provides the full set of CSS framework icons in its preview column. Hover over them to see the class name.</p> <h3>Misc Visuals</h3> <h4>Corner Radius helpers</h4> <ul> <li>\n<code>.ui-corner-tl</code>: Applies corner-radius to top left corner of element.</li> <li>\n<code>.ui-corner-tr</code>: Applies corner-radius to top right corner of element.</li> <li>\n<code>.ui-corner-bl</code>: Applies corner-radius to bottom left corner of element.</li> <li>\n<code>.ui-corner-br</code>: Applies corner-radius to bottom right corner of element.</li> <li>\n<code>.ui-corner-top</code>: Applies corner-radius to both top corners of element.</li> <li>\n<code>.ui-corner-bottom</code>: Applies corner-radius to both bottom corners of element.</li> <li>\n<code>.ui-corner-right</code>: Applies corner-radius to both right corners of element.</li> <li>\n<code>.ui-corner-left</code>: Applies corner-radius to both left corners of element.</li> <li>\n<code>.ui-corner-all</code>: Applies corner-radius to all 4 corners of element.</li> </ul> <h4>Overlay &amp; Shadow</h4> <ul> <li> <code>.ui-widget-overlay</code>: Applies 100% width &amp; height dimensions to an overlay screen, along with background color/texture, and screen opacity. </li> <li> <code>.ui-widget-shadow</code>: Class to be applied to overlay widget shadow elements. Applies background color/texture, custom corner radius, opacity, top/left offsets and shadow \"thickness\". Thickness is applied via padding to all sides of a shadow that is set to match the dimensions of the overlay element. Offsets are applied via top and left margins (can be positive or negative). </li> </ul><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; The jQuery Foundation and other contributors<br>Licensed under the MIT License.<br>\n    <a href=\"https://api.jqueryui.com/theming/css-framework\" class=\"_attribution-link\">https://api.jqueryui.com/theming/css-framework</a>\n  </p>\n</div>\n","droppable":"<h1 class=\"entry-title\">Droppable Widget</h1> <div class=\"entry-content\"> <article id=\"droppable1\" class=\"entry widget\"><h2 class=\"section-title\"> <span>Droppable Widget</span><span class=\"version-details\">version added: 1.0</span> </h2> <div class=\"entry-wrapper\"> <p class=\"desc\"><strong>Description: </strong>Create targets for draggable elements.</p> <section id=\"quick-nav\"><h2>QuickNav<a href=\"#entry-examples\">Examples</a> </h2>\n<div class=\"quick-nav-section\"> <h3>Options</h3> <div><a href=\"#option-accept\">accept</a></div> <div><a href=\"#option-activeClass\">activeClass</a></div> <div><a href=\"#option-addClasses\">addClasses</a></div> <div><a href=\"#option-disabled\">disabled</a></div> <div><a href=\"#option-greedy\">greedy</a></div> <div><a href=\"#option-hoverClass\">hoverClass</a></div> <div><a href=\"#option-scope\">scope</a></div> <div><a href=\"#option-tolerance\">tolerance</a></div> </div> <div class=\"quick-nav-section\"> <h3>Methods</h3> <div><a href=\"#method-destroy\">destroy</a></div> <div><a href=\"#method-disable\">disable</a></div> <div><a href=\"#method-enable\">enable</a></div> <div><a href=\"#method-instance\">instance</a></div> <div><a href=\"#method-option\">option</a></div> <div><a href=\"#method-widget\">widget</a></div> </div> <div class=\"quick-nav-section\"> <h3>Events</h3> <div><a href=\"#event-activate\">activate</a></div> <div><a href=\"#event-create\">create</a></div> <div><a href=\"#event-deactivate\">deactivate</a></div> <div><a href=\"#event-drop\">drop</a></div> <div><a href=\"#event-out\">out</a></div> <div><a href=\"#event-over\">over</a></div> </div></section><div class=\"longdesc\" id=\"entry-longdesc\"> <p>The jQuery UI Droppable plugin makes selected elements droppable (meaning they accept being dropped on by <a href=\"draggable\">draggables</a>). You can specify which draggables each will accept.</p> <h3>Dependencies</h3> <ul> <li><a href=\"https://api.jqueryui.com/category/ui-core/\">UI Core</a></li> <li><a href=\"jquery.widget\">Widget Factory</a></li> <li><a href=\"mouse\">Mouse Interaction</a></li> </ul> </div> <section id=\"options\"><h2>Options</h2>\n<div id=\"option-accept\" class=\"api-item first-item\"> <h3>accept </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Selector\">Selector</a> or <a href=\"http://api.jquery.com/Types/#Function\">Function</a>()</div> <div class=\"default\"> <strong>Default: </strong><code>\"*\"</code> </div> <div>Controls which draggable elements are accepted by the droppable.</div> <strong>Multiple types supported:</strong><ul> <li> <strong>Selector</strong>: A selector indicating which draggable elements are accepted.</li> <li> <strong>Function</strong>: A function that will be called for each draggable on the page (passed as the first argument to the function). The function must return <code>true</code> if the draggable should be accepted.</li> </ul> <strong>Code examples:</strong><p>Initialize the droppable with the <code>accept</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).droppable({\n  accept: \".special\"\n});</pre> <p>Get or set the <code>accept</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar accept = $( \".selector\" ).droppable( \"option\", \"accept\" );\n \n// Setter\n$( \".selector\" ).droppable( \"option\", \"accept\", \".special\" );</pre> </div> <div id=\"option-activeClass\" class=\"api-item\"> <h3>activeClass </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div class=\"default\"> <strong>Default: </strong><code>false</code> </div> <div>If specified, the class will be added to the droppable while an acceptable draggable is being dragged.</div> <strong>Code examples:</strong><p>Initialize the droppable with the <code>activeClass</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).droppable({\n  activeClass: \"ui-state-highlight\"\n});</pre> <p>Get or set the <code>activeClass</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar activeClass = $( \".selector\" ).droppable( \"option\", \"activeClass\" );\n \n// Setter\n$( \".selector\" ).droppable( \"option\", \"activeClass\", \"ui-state-highlight\" );</pre> </div> <div id=\"option-addClasses\" class=\"api-item\"> <h3>addClasses </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> </div> <div class=\"default\"> <strong>Default: </strong><code>true</code> </div> <div>If set to <code>false</code>, will prevent the <code>ui-droppable</code> class from being added. This may be desired as a performance optimization when calling <code>.droppable()</code> init on hundreds of elements.</div> <strong>Code examples:</strong><p>Initialize the droppable with the <code>addClasses</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).droppable({\n  addClasses: false\n});</pre> <p>Get or set the <code>addClasses</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar addClasses = $( \".selector\" ).droppable( \"option\", \"addClasses\" );\n \n// Setter\n$( \".selector\" ).droppable( \"option\", \"addClasses\", false );</pre> </div> <div id=\"option-disabled\" class=\"api-item\"> <h3>disabled </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> </div> <div class=\"default\"> <strong>Default: </strong><code>false</code> </div> <div>Disables the droppable if set to <code>true</code>.</div> <strong>Code examples:</strong><p>Initialize the droppable with the <code>disabled</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).droppable({\n  disabled: true\n});</pre> <p>Get or set the <code>disabled</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar disabled = $( \".selector\" ).droppable( \"option\", \"disabled\" );\n \n// Setter\n$( \".selector\" ).droppable( \"option\", \"disabled\", true );</pre> </div> <div id=\"option-greedy\" class=\"api-item\"> <h3>greedy </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> </div> <div class=\"default\"> <strong>Default: </strong><code>false</code> </div> <div>By default, when an element is dropped on nested droppables, each droppable will receive the element. However, by setting this option to <code>true</code>, any parent droppables will not receive the element. The <code>drop</code> event will still bubble normally, but the <code>event.target</code> can be checked to see which droppable received the draggable element.</div> <strong>Code examples:</strong><p>Initialize the droppable with the <code>greedy</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).droppable({\n  greedy: true\n});</pre> <p>Get or set the <code>greedy</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar greedy = $( \".selector\" ).droppable( \"option\", \"greedy\" );\n \n// Setter\n$( \".selector\" ).droppable( \"option\", \"greedy\", true );</pre> </div> <div id=\"option-hoverClass\" class=\"api-item\"> <h3>hoverClass </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div class=\"default\"> <strong>Default: </strong><code>false</code> </div> <div>If specified, the class will be added to the droppable while an acceptable draggable is being hovered over the droppable.</div> <strong>Code examples:</strong><p>Initialize the droppable with the <code>hoverClass</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).droppable({\n  hoverClass: \"drop-hover\"\n});</pre> <p>Get or set the <code>hoverClass</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar hoverClass = $( \".selector\" ).droppable( \"option\", \"hoverClass\" );\n \n// Setter\n$( \".selector\" ).droppable( \"option\", \"hoverClass\", \"drop-hover\" );</pre> </div> <div id=\"option-scope\" class=\"api-item\"> <h3>scope </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div class=\"default\"> <strong>Default: </strong><code>\"default\"</code> </div> <div>Used to group sets of draggable and droppable items, in addition to the <a href=\"#option-accept\"><code>accept</code></a> option. A draggable with the same scope value as a droppable will be accepted.</div> <strong>Code examples:</strong><p>Initialize the droppable with the <code>scope</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).droppable({\n  scope: \"tasks\"\n});</pre> <p>Get or set the <code>scope</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar scope = $( \".selector\" ).droppable( \"option\", \"scope\" );\n \n// Setter\n$( \".selector\" ).droppable( \"option\", \"scope\", \"tasks\" );</pre> </div> <div id=\"option-tolerance\" class=\"api-item\"> <h3>tolerance </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div class=\"default\"> <strong>Default: </strong><code>\"intersect\"</code> </div> <div> Specifies which mode to use for testing whether a draggable is hovering over a droppable. Possible values: <ul> <li> <code>\"fit\"</code>: Draggable overlaps the droppable entirely.</li> <li> <code>\"intersect\"</code>: Draggable overlaps the droppable at least 50% in both directions.</li> <li> <code>\"pointer\"</code>: Mouse pointer overlaps the droppable.</li> <li> <code>\"touch\"</code>: Draggable overlaps the droppable any amount.</li> </ul> </div> <strong>Code examples:</strong><p>Initialize the droppable with the <code>tolerance</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).droppable({\n  tolerance: \"fit\"\n});</pre> <p>Get or set the <code>tolerance</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar tolerance = $( \".selector\" ).droppable( \"option\", \"tolerance\" );\n \n// Setter\n$( \".selector\" ).droppable( \"option\", \"tolerance\", \"fit\" );</pre> </div></section><section id=\"methods\"><h2>Methods</h2>\n<div id=\"method-destroy\"><div class=\"api-item first-item\"> <h3>destroy()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Removes the droppable functionality completely. This will return the element back to its pre-init state. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the destroy method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).droppable( \"destroy\" );</pre> </div> </div></div> <div id=\"method-disable\"><div class=\"api-item\"> <h3>disable()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Disables the droppable. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the disable method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).droppable( \"disable\" );</pre> </div> </div></div> <div id=\"method-enable\"><div class=\"api-item\"> <h3>enable()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Enables the droppable. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the enable method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).droppable( \"enable\" );</pre> </div> </div></div> <div id=\"method-instance\"><div class=\"api-item\"> <h3>instance()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#Object\">Object</a></span> </h3> <div> <p>Retrieves the droppable's instance object. If the element does not have an associated instance, <code>undefined</code> is returned.</p> <p>Unlike other widget methods, <code>instance()</code> is safe to call on any element after the droppable plugin has loaded.</p> </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the instance method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).droppable( \"instance\" );</pre> </div> </div></div> <div id=\"method-option\"> <div class=\"api-item\"> <h3>option( optionName )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#Object\">Object</a></span> </h3> <div> <p>Gets the value currently associated with the specified <code>optionName</code>.</p> <p><strong>Note:</strong> For options that have objects as their value, you can get the value of a specific key by using dot notation. For example, <code>\"foo.bar\"</code> would get the value of the <code>bar</code> property on the <code>foo</code> option.</p> </div> <ul><li> <div><strong>optionName</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>The name of the option to get.</div> </li></ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">var isDisabled = $( \".selector\" ).droppable( \"option\", \"disabled\" );</pre> </div> </div> <div class=\"api-item\"> <h3>option()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#PlainObject\">PlainObject</a></span> </h3> <div>Gets an object containing key/value pairs representing the current droppable options hash.</div> <ul><li><div class=\"null-signature\">This signature does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">var options = $( \".selector\" ).droppable( \"option\" );</pre> </div> </div> <div class=\"api-item\"> <h3>option( optionName, value )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> <p>Sets the value of the droppable option associated with the specified <code>optionName</code>.</p> <p><strong>Note:</strong> For options that have objects as their value, you can set the value of just one property by using dot notation for <code>optionName</code>. For example, <code>\"foo.bar\"</code> would update only the <code>bar</code> property of the <code>foo</code> option.</p> </div> <ul> <li> <div><strong>optionName</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>The name of the option to set.</div> </li> <li> <div><strong>value</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>A value to set for the option.</div> </li> </ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).droppable( \"option\", \"disabled\", true );</pre> </div> </div> <div class=\"api-item\"> <h3>option( options )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div>Sets one or more options for the droppable.</div> <ul><li> <div><strong>options</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>A map of option-value pairs to set.</div> </li></ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).droppable( \"option\", { disabled: true } );</pre> </div> </div> </div> <div id=\"method-widget\"><div class=\"api-item\"> <h3>widget()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a></span> </h3> <div> Returns a <code>jQuery</code> object containing the droppable element. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the widget method:</p> <pre class=\"syntaxhighlighter javascript\">var widget = $( \".selector\" ).droppable( \"widget\" );</pre> </div> </div></div></section><section id=\"events\"><h2>Events</h2>\n<div id=\"event-activate\" class=\"api-item first-item\"> <h3>activate( event, ui )<span class=\"returns\">Type: <code>dropactivate</code></span> </h3> <div>Triggered when an accepted draggable starts dragging. This can be useful if you want to make the droppable \"light up\" when it can be dropped on.</div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  <ul> <li> <div><strong>draggable</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>A jQuery object representing the draggable element.</div> </li> <li> <div><strong>helper</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>A jQuery object representing the helper that is being dragged.</div> </li> <li> <div><strong>position</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>Current CSS position of the draggable helper as <code>{ top, left }</code> object.</div> </li> <li> <div><strong>offset</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>Current offset position of the draggable helper as <code>{ top, left }</code> object.</div> </li> </ul> </li> </ul> <div> <strong>Code examples:</strong><p>Initialize the droppable with the activate callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).droppable({\n  activate: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the dropactivate event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"dropactivate\", function( event, ui ) {} );</pre> </div> </div> <div id=\"event-create\" class=\"api-item\"> <h3>create( event, ui )<span class=\"returns\">Type: <code>dropcreate</code></span> </h3> <div> Triggered when the droppable is created. </div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  </li> </ul> <p><em>Note: The <code>ui</code> object is empty but included for consistency with other events.</em></p> <div> <strong>Code examples:</strong><p>Initialize the droppable with the create callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).droppable({\n  create: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the dropcreate event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"dropcreate\", function( event, ui ) {} );</pre> </div> </div> <div id=\"event-deactivate\" class=\"api-item\"> <h3>deactivate( event, ui )<span class=\"returns\">Type: <code>dropdeactivate</code></span> </h3> <div>Triggered when an accepted draggable stops dragging.</div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  <ul> <li> <div><strong>draggable</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>A jQuery object representing the draggable element.</div> </li> <li> <div><strong>helper</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>A jQuery object representing the helper that is being dragged.</div> </li> <li> <div><strong>position</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>Current CSS position of the draggable helper as <code>{ top, left }</code> object.</div> </li> <li> <div><strong>offset</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>Current offset position of the draggable helper as <code>{ top, left }</code> object.</div> </li> </ul> </li> </ul> <div> <strong>Code examples:</strong><p>Initialize the droppable with the deactivate callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).droppable({\n  deactivate: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the dropdeactivate event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"dropdeactivate\", function( event, ui ) {} );</pre> </div> </div> <div id=\"event-drop\" class=\"api-item\"> <h3>drop( event, ui )<span class=\"returns\">Type: <code>drop</code></span> </h3> <div>Triggered when an accepted draggable is dropped on the droppable (based on the<a href=\"#option-tolerance\"><code>tolerance</code></a> option).</div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  <ul> <li> <div><strong>draggable</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>A jQuery object representing the draggable element.</div> </li> <li> <div><strong>helper</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>A jQuery object representing the helper that is being dragged.</div> </li> <li> <div><strong>position</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>Current CSS position of the draggable helper as <code>{ top, left }</code> object.</div> </li> <li> <div><strong>offset</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>Current offset position of the draggable helper as <code>{ top, left }</code> object.</div> </li> </ul> </li> </ul> <div> <strong>Code examples:</strong><p>Initialize the droppable with the drop callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).droppable({\n  drop: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the drop event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"drop\", function( event, ui ) {} );</pre> </div> </div> <div id=\"event-out\" class=\"api-item\"> <h3>out( event, ui )<span class=\"returns\">Type: <code>dropout</code></span> </h3> <div>Triggered when an accepted draggable is dragged out of the droppable (based on the<a href=\"#option-tolerance\"><code>tolerance</code></a> option).</div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  </li> </ul> <p><em>Note: The <code>ui</code> object is empty but included for consistency with other events.</em></p> <div> <strong>Code examples:</strong><p>Initialize the droppable with the out callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).droppable({\n  out: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the dropout event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"dropout\", function( event, ui ) {} );</pre> </div> </div> <div id=\"event-over\" class=\"api-item\"> <h3>over( event, ui )<span class=\"returns\">Type: <code>dropover</code></span> </h3> <div>Triggered when an accepted draggable is dragged over the droppable (based on the<a href=\"#option-tolerance\"><code>tolerance</code></a> option).</div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  <ul> <li> <div><strong>draggable</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>A jQuery object representing the draggable element.</div> </li> <li> <div><strong>helper</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>A jQuery object representing the helper that is being dragged.</div> </li> <li> <div><strong>position</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>Current CSS position of the draggable helper as <code>{ top, left }</code> object.</div> </li> <li> <div><strong>offset</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>Current offset position of the draggable helper as <code>{ top, left }</code> object.</div> </li> </ul> </li> </ul> <div> <strong>Code examples:</strong><p>Initialize the droppable with the over callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).droppable({\n  over: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the dropover event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"dropover\", function( event, ui ) {} );</pre> </div> </div></section><section class=\"entry-examples\" id=\"entry-examples\"><h2>Example:</h2>\n<div class=\"entry-example\" id=\"example-0\"> <p>A pair of draggable and droppable elements.</p> <pre class=\"syntaxhighlighter xml\">&lt;!doctype html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"utf-8\"&gt;\n  &lt;title&gt;droppable demo&lt;/title&gt;\n  &lt;link rel=\"stylesheet\" href=\"//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css\"&gt;\n  &lt;style&gt;\n  #draggable {\n    width: 100px;\n    height: 100px;\n    background: #ccc;\n  }\n  #droppable {\n    position: absolute;\n    left: 250px;\n    top: 0;\n    width: 125px;\n    height: 125px;\n    background: #999;\n    color: #fff;\n    padding: 10px;\n  }\n  &lt;/style&gt;\n  &lt;script src=\"//code.jquery.com/jquery-1.10.2.js\"&gt;&lt;/script&gt;\n  &lt;script src=\"//code.jquery.com/ui/1.11.4/jquery-ui.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n&lt;div id=\"droppable\"&gt;Drop here&lt;/div&gt;\n&lt;div id=\"draggable\"&gt;Drag me&lt;/div&gt;\n \n&lt;script&gt;\n$( \"#draggable\" ).draggable();\n$( \"#droppable\" ).droppable({\n  drop: function() {\n    alert( \"dropped\" );\n  }\n});\n&lt;/script&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;</pre> <h4>Demo:</h4>  </div></section> </div></article> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; The jQuery Foundation and other contributors<br>Licensed under the MIT License.<br>\n    <a href=\"https://api.jqueryui.com/droppable\" class=\"_attribution-link\">https://api.jqueryui.com/droppable</a>\n  </p>\n</div>\n","buttonset":"<h1 class=\"entry-title\">Buttonset Widget</h1> <div class=\"entry-content\"> <article id=\"buttonset1\" class=\"entry widget\"><h2 class=\"section-title\"> <span>Buttonset Widget</span><span class=\"version-details\">version added: 1.8</span> </h2> <div class=\"entry-wrapper\"> <p class=\"desc\"><strong>Description: </strong>Themeable button sets.</p> <section id=\"quick-nav\"><h2>QuickNav<a href=\"#entry-examples\">Examples</a> </h2>\n<div class=\"quick-nav-section\"> <h3>Options</h3> <div><a href=\"#option-disabled\">disabled</a></div> <div><a href=\"#option-items\">items</a></div> </div> <div class=\"quick-nav-section\"> <h3>Methods</h3> <div><a href=\"#method-destroy\">destroy</a></div> <div><a href=\"#method-disable\">disable</a></div> <div><a href=\"#method-enable\">enable</a></div> <div><a href=\"#method-instance\">instance</a></div> <div><a href=\"#method-option\">option</a></div> <div><a href=\"#method-refresh\">refresh</a></div> <div><a href=\"#method-widget\">widget</a></div> </div> <div class=\"quick-nav-section\"> <h3>Events</h3> <div><a href=\"#event-create\">create</a></div> </div></section><div class=\"longdesc\" id=\"entry-longdesc\"> <div class=\"note\"> <code>.buttonset()</code> is bundled with <code>.button()</code>. Although they are separate widgets, they are combined into a single file. If you have <code>.button()</code> available, you also have <code>.buttonset()</code> available. </div> <p>A button set provides a visual grouping for related <a href=\"button\">buttons</a>. It is recommended that a button set be used whenever you have a group of related buttons. Button sets work by selecting all appropriate descendants and applying <code>.button()</code> to them. You can enable and disable a button set, which will enable and disable all contained buttons. Destroying a button set also calls each button's <code>.destroy()</code> method. For grouped radio and checkbox buttons, it's recommended to use a <code>fieldset</code> with a <code>legend</code> to provide an accessible group label.</p> <div> <h3 id=\"theming\">Theming</h3> <p>The buttonset widget uses the <a href=\"theming/css-framework\">jQuery UI CSS framework</a> to style its look and feel. If buttonset specific styling is needed, the following CSS class names can be used:</p> </div> <ul> <li> <code>ui-buttonset</code>: The outer container of Buttonsets. </li> </ul> <h3>Dependencies</h3> <ul> <li><a href=\"https://api.jqueryui.com/category/ui-core/\">UI Core</a></li> <li><a href=\"jquery.widget\">Widget Factory</a></li> </ul> </div> <h3>Additional Notes:</h3> <div class=\"longdesc\"><ul><li> This widget requires some functional CSS, otherwise it won't work. If you build a custom theme, use the widget's specific CSS file as a starting point. </li></ul></div> <section id=\"options\"><h2>Options</h2>\n<div id=\"option-disabled\" class=\"api-item first-item\"> <h3>disabled </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> </div> <div class=\"default\"> <strong>Default: </strong><code>false</code> </div> <div>Disables the buttonset if set to <code>true</code>.</div> <strong>Code examples:</strong><p>Initialize the buttonset with the <code>disabled</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).buttonset({\n  disabled: true\n});</pre> <p>Get or set the <code>disabled</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar disabled = $( \".selector\" ).buttonset( \"option\", \"disabled\" );\n \n// Setter\n$( \".selector\" ).buttonset( \"option\", \"disabled\", true );</pre> </div> <div id=\"option-items\" class=\"api-item\"> <h3>items </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Selector\">Selector</a> </div> <div class=\"default\"> <strong>Default: </strong><code>\"button, input[type=button], input[type=submit], input[type=reset], input[type=checkbox], input[type=radio], a, :data(ui-button)\"</code> </div> <div>Which descendant elements to convert manage as buttons.</div> <strong>Code examples:</strong><p>Initialize the buttonset with the <code>items</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).buttonset({\n  items: \"button, input[type=button], input[type=submit]\"\n});</pre> <p>Get or set the <code>items</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar items = $( \".selector\" ).buttonset( \"option\", \"items\" );\n \n// Setter\n$( \".selector\" ).buttonset( \"option\", \"items\", \"button, input[type=button], input[type=submit]\" );</pre> </div></section><section id=\"methods\"><h2>Methods</h2>\n<div id=\"method-destroy\"><div class=\"api-item first-item\"> <h3>destroy()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Removes the buttonset functionality completely. This will return the element back to its pre-init state. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the destroy method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).buttonset( \"destroy\" );</pre> </div> </div></div> <div id=\"method-disable\"><div class=\"api-item\"> <h3>disable()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Disables the buttonset. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the disable method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).buttonset( \"disable\" );</pre> </div> </div></div> <div id=\"method-enable\"><div class=\"api-item\"> <h3>enable()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Enables the buttonset. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the enable method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).buttonset( \"enable\" );</pre> </div> </div></div> <div id=\"method-instance\"><div class=\"api-item\"> <h3>instance()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#Object\">Object</a></span> </h3> <div> <p>Retrieves the buttonset's instance object. If the element does not have an associated instance, <code>undefined</code> is returned.</p> <p>Unlike other widget methods, <code>instance()</code> is safe to call on any element after the buttonset plugin has loaded.</p> </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the instance method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).buttonset( \"instance\" );</pre> </div> </div></div> <div id=\"method-option\"> <div class=\"api-item\"> <h3>option( optionName )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#Object\">Object</a></span> </h3> <div> <p>Gets the value currently associated with the specified <code>optionName</code>.</p> <p><strong>Note:</strong> For options that have objects as their value, you can get the value of a specific key by using dot notation. For example, <code>\"foo.bar\"</code> would get the value of the <code>bar</code> property on the <code>foo</code> option.</p> </div> <ul><li> <div><strong>optionName</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>The name of the option to get.</div> </li></ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">var isDisabled = $( \".selector\" ).buttonset( \"option\", \"disabled\" );</pre> </div> </div> <div class=\"api-item\"> <h3>option()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#PlainObject\">PlainObject</a></span> </h3> <div>Gets an object containing key/value pairs representing the current buttonset options hash.</div> <ul><li><div class=\"null-signature\">This signature does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">var options = $( \".selector\" ).buttonset( \"option\" );</pre> </div> </div> <div class=\"api-item\"> <h3>option( optionName, value )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> <p>Sets the value of the buttonset option associated with the specified <code>optionName</code>.</p> <p><strong>Note:</strong> For options that have objects as their value, you can set the value of just one property by using dot notation for <code>optionName</code>. For example, <code>\"foo.bar\"</code> would update only the <code>bar</code> property of the <code>foo</code> option.</p> </div> <ul> <li> <div><strong>optionName</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>The name of the option to set.</div> </li> <li> <div><strong>value</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>A value to set for the option.</div> </li> </ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).buttonset( \"option\", \"disabled\", true );</pre> </div> </div> <div class=\"api-item\"> <h3>option( options )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div>Sets one or more options for the buttonset.</div> <ul><li> <div><strong>options</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>A map of option-value pairs to set.</div> </li></ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).buttonset( \"option\", { disabled: true } );</pre> </div> </div> </div> <div id=\"method-refresh\"><div class=\"api-item\"> <h3>refresh()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div>Process any buttons that were added or removed directly in the DOM. Results depend on the <a href=\"#option-items\"><code>items</code></a> option.</div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the refresh method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).buttonset( \"refresh\" );</pre> </div> </div></div> <div id=\"method-widget\"><div class=\"api-item\"> <h3>widget()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a></span> </h3> <div> Returns a <code>jQuery</code> object containing the button set element that contains the buttons. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the widget method:</p> <pre class=\"syntaxhighlighter javascript\">var widget = $( \".selector\" ).buttonset( \"widget\" );</pre> </div> </div></div></section><section id=\"events\"><h2>Events</h2>\n<div id=\"event-create\" class=\"api-item first-item\"> <h3>create( event, ui )<span class=\"returns\">Type: <code>buttonsetcreate</code></span> </h3> <div> Triggered when the buttonset is created. </div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  </li> </ul> <p><em>Note: The <code>ui</code> object is empty but included for consistency with other events.</em></p> <div> <strong>Code examples:</strong><p>Initialize the buttonset with the create callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).buttonset({\n  create: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the buttonsetcreate event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"buttonsetcreate\", function( event, ui ) {} );</pre> </div> </div></section><section class=\"entry-examples\" id=\"entry-examples\"><h2>Example:</h2>\n<div class=\"entry-example\" id=\"example-0\"> <p>A simple jQuery UI Buttonset</p> <pre class=\"syntaxhighlighter xml\">&lt;!doctype html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"utf-8\"&gt;\n  &lt;title&gt;buttonset demo&lt;/title&gt;\n  &lt;link rel=\"stylesheet\" href=\"//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css\"&gt;\n  &lt;script src=\"//code.jquery.com/jquery-1.10.2.js\"&gt;&lt;/script&gt;\n  &lt;script src=\"//code.jquery.com/ui/1.11.4/jquery-ui.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n&lt;form&gt;\n  &lt;fieldset&gt;\n    &lt;legend&gt;Favorite jQuery Project&lt;/legend&gt;\n    &lt;div id=\"radio\"&gt;\n      &lt;input type=\"radio\" id=\"sizzle\" name=\"project\"&gt;\n      &lt;label for=\"sizzle\"&gt;Sizzle&lt;/label&gt;\n \n      &lt;input type=\"radio\" id=\"qunit\" name=\"project\" checked=\"checked\"&gt;\n      &lt;label for=\"qunit\"&gt;QUnit&lt;/label&gt;\n \n      &lt;input type=\"radio\" id=\"color\" name=\"project\"&gt;\n      &lt;label for=\"color\"&gt;Color&lt;/label&gt;\n    &lt;/div&gt;\n  &lt;/fieldset&gt;\n&lt;/form&gt;\n \n&lt;script&gt;\n$( \"#radio\" ).buttonset();\n&lt;/script&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;</pre> <h4>Demo:</h4>  </div></section> </div></article> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; The jQuery Foundation and other contributors<br>Licensed under the MIT License.<br>\n    <a href=\"https://api.jqueryui.com/buttonset\" class=\"_attribution-link\">https://api.jqueryui.com/buttonset</a>\n  </p>\n</div>\n","color-animation":"<h1 class=\"entry-title\">Color Animation</h1>  <p>jQuery UI effects core adds the ability to animate color properties using <code>rgb()</code>, <code>rgba()</code>, hex values, or even color names such as <code>\"aqua\"</code>. Simply include the jQuery UI effects core file and <a href=\"https://api.jquery.com/animate/\"><code>.animate()</code></a> will gain support for colors.</p> <p>The following properties are supported:</p> <ul> <li><code>backgroundColor</code></li> <li><code>borderBottomColor</code></li> <li><code>borderLeftColor</code></li> <li><code>borderRightColor</code></li> <li><code>borderTopColor</code></li> <li><code>color</code></li> <li><code>columnRuleColor</code></li> <li><code>outlineColor</code></li> <li><code>textDecorationColor</code></li> <li><code>textEmphasisColor</code></li> </ul> <p>Support for color animation comes from the <a href=\"https://github.com/jquery/jquery-color\">jQuery Color plugin</a>. The Color plugin provides several functions for working with colors. For full documentation, please see the <a href=\"https://github.com/jquery/jquery-color#readme\">jQuery Color documentation</a>.</p> <h2 class=\"toc-linked\"> Class Animations</h2>\n<p>While there are use cases for directly animating individual color properties, it is often a better approach to contain the styles in a class. jQuery UI provides a few methods which will animate the addition or removal of a CSS class, specifically <a href=\"addclass\"><code>.addClass()</code></a>, <a href=\"removeclass\"><code>.removeClass()</code></a>, <a href=\"toggleclass\"><code>.toggleClass()</code></a>, and <a href=\"switchclass\"><code>.switchClass()</code></a>. These methods will automatically determine which properties need to change and apply the appropriate animations.</p> <h2 class=\"toc-linked\"> Example</h2>\n<pre class=\"syntaxhighlighter xml\">&lt;!doctype html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"utf-8\"&gt;\n  &lt;title&gt;Color Animation Demo&lt;/title&gt;\n  &lt;link rel=\"stylesheet\" href=\"https://code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css\"&gt;\n  &lt;style&gt;\n  #elem {\n    color: #006;\n    background-color: #aaa;\n    font-size: 25px;\n    padding: 1em;\n    text-align: center;\n  }\n  &lt;/style&gt;\n  &lt;script src=\"https://code.jquery.com/jquery-1.10.2.js\"&gt;&lt;/script&gt;\n  &lt;script src=\"https://code.jquery.com/ui/1.11.4/jquery-ui.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n&lt;div id=\"elem\"&gt;color animations&lt;/div&gt;\n&lt;button id=\"toggle\"&gt;animate colors&lt;/button&gt;\n \n&lt;script&gt;\n$( \"#toggle\" ).click(function() {\n  $( \"#elem\" ).animate({\n    color: \"green\",\n    backgroundColor: \"rgb( 20, 20, 20 )\"\n  });\n});\n&lt;/script&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;\n </pre> <iframe src=\"https://api.jqueryui.com/resources/color-animation.html\" width=\"100%\" height=\"200\"></iframe><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; The jQuery Foundation and other contributors<br>Licensed under the MIT License.<br>\n    <a href=\"https://api.jqueryui.com/color-animation\" class=\"_attribution-link\">https://api.jqueryui.com/color-animation</a>\n  </p>\n</div>\n","dialog":"<h1 class=\"entry-title\">Dialog Widget</h1> <div class=\"entry-content\"> <article id=\"dialog1\" class=\"entry widget\"><h2 class=\"section-title\"> <span>Dialog Widget</span><span class=\"version-details\">version added: 1.0</span> </h2> <div class=\"entry-wrapper\"> <p class=\"desc\"><strong>Description: </strong>Open content in an interactive overlay.</p> <section id=\"quick-nav\"><h2>QuickNav<a href=\"#entry-examples\">Examples</a> </h2>\n<div class=\"quick-nav-section\"> <h3>Options</h3> <div><a href=\"#option-appendTo\">appendTo</a></div> <div><a href=\"#option-autoOpen\">autoOpen</a></div> <div><a href=\"#option-buttons\">buttons</a></div> <div><a href=\"#option-closeOnEscape\">closeOnEscape</a></div> <div><a href=\"#option-closeText\">closeText</a></div> <div><a href=\"#option-dialogClass\">dialogClass</a></div> <div><a href=\"#option-draggable\">draggable</a></div> <div><a href=\"#option-height\">height</a></div> <div><a href=\"#option-hide\">hide</a></div> <div><a href=\"#option-maxHeight\">maxHeight</a></div> <div><a href=\"#option-maxWidth\">maxWidth</a></div> <div><a href=\"#option-minHeight\">minHeight</a></div> <div><a href=\"#option-minWidth\">minWidth</a></div> <div><a href=\"#option-modal\">modal</a></div> <div><a href=\"#option-position\">position</a></div> <div><a href=\"#option-resizable\">resizable</a></div> <div><a href=\"#option-show\">show</a></div> <div><a href=\"#option-title\">title</a></div> <div><a href=\"#option-width\">width</a></div> </div> <div class=\"quick-nav-section\"> <h3>Methods</h3> <div><a href=\"#method-close\">close</a></div> <div><a href=\"#method-destroy\">destroy</a></div> <div><a href=\"#method-instance\">instance</a></div> <div><a href=\"#method-isOpen\">isOpen</a></div> <div><a href=\"#method-moveToTop\">moveToTop</a></div> <div><a href=\"#method-open\">open</a></div> <div><a href=\"#method-option\">option</a></div> <div><a href=\"#method-widget\">widget</a></div> <br><h3>Extension Points</h3> <div><a href=\"#method-_allowInteraction\">_allowInteraction</a></div> </div> <div class=\"quick-nav-section\"> <h3>Events</h3> <div><a href=\"#event-beforeClose\">beforeClose</a></div> <div><a href=\"#event-close\">close</a></div> <div><a href=\"#event-create\">create</a></div> <div><a href=\"#event-drag\">drag</a></div> <div><a href=\"#event-dragStart\">dragStart</a></div> <div><a href=\"#event-dragStop\">dragStop</a></div> <div><a href=\"#event-focus\">focus</a></div> <div><a href=\"#event-open\">open</a></div> <div><a href=\"#event-resize\">resize</a></div> <div><a href=\"#event-resizeStart\">resizeStart</a></div> <div><a href=\"#event-resizeStop\">resizeStop</a></div> </div></section><div class=\"longdesc\" id=\"entry-longdesc\"> <p>A dialog is a floating window that contains a title bar and a content area. The dialog window can be moved, resized and closed with the 'x' icon by default.</p> <p>If the content length exceeds the maximum height, a scrollbar will automatically appear.</p> <p>A bottom button bar and semi-transparent modal overlay layer are common options that can be added.</p> <h3>Focus</h3> <p>Upon opening a dialog, focus is automatically moved to the first item that matches the following:</p> <ol> <li>The first element within the dialog with the <code>autofocus</code> attribute</li> <li>The first <a href=\"tabbable-selector\"><code>:tabbable</code></a> element within the dialog's content</li> <li>The first <a href=\"tabbable-selector\"><code>:tabbable</code></a> element within the dialog's buttonpane</li> <li>The dialog's close button</li> <li>The dialog itself</li> </ol> <p>While open, the dialog widget ensures that keyboard navigation using the 'tab' key causes the focus to cycle amongst the focusable elements in the dialog, not elements outside of it. Modal dialogs additionally prevent mouse users from clicking on elements outside of the dialog.</p> <p>Upon closing a dialog, focus is automatically returned to the element that had focus when the dialog was opened.</p> <h3>Hiding the close button</h3> <p>In some cases, you may want to hide the close button, for instance, if you have a close button in the button pane. The best way to accomplish this is via CSS. As an example, you can define a simple rule, such as:</p> <pre class=\"syntaxhighlighter javascript\">.no-close .ui-dialog-titlebar-close {\n  display: none;\n}</pre> <p>Then, you can simply add the <code>no-close</code> class to any dialog in order to hide its close button:</p> <pre class=\"syntaxhighlighter javascript\">$( \"#dialog\" ).dialog({\n  dialogClass: \"no-close\",\n  buttons: [\n    {\n      text: \"OK\",\n      click: function() {\n        $( this ).dialog( \"close\" );\n      }\n    }\n  ]\n});</pre> <div> <h3 id=\"theming\">Theming</h3> <p>The dialog widget uses the <a href=\"theming/css-framework\">jQuery UI CSS framework</a> to style its look and feel. If dialog specific styling is needed, the following CSS class names can be used:</p> </div> <ul> <li> <code>ui-dialog</code>: The outer container of the dialog. <ul> <li> <code>ui-dialog-titlebar</code>: The title bar containing the dialog's title and close button. <ul> <li> <code>ui-dialog-title</code>: The container around the textual title of the dialog.</li> <li> <code>ui-dialog-titlebar-close</code>: The dialog's close button.</li> </ul> </li> <li> <code>ui-dialog-content</code>: The container around the dialog's content. This is also the element the widget was instantiated with.</li> <li> <code>ui-dialog-buttonpane</code>: The pane that contains the dialog's buttons. This will only be present if the <a href=\"#option-buttons\"><code>buttons</code></a> option is set. <ul> <li> <code>ui-dialog-buttonset</code>: The container around the buttons themselves.</li> </ul> </li> </ul> </li> </ul> <p>Additionally, when the <a href=\"#option-modal\"><code>modal</code></a> option is set, an element with a <code>ui-widget-overlay</code> class name is appended to the <code>&lt;body&gt;</code>.</p> <h3>Dependencies</h3> <ul> <li><a href=\"https://api.jqueryui.com/category/ui-core/\">UI Core</a></li> <li><a href=\"jquery.widget\">Widget Factory</a></li> <li><a href=\"position\">Position</a></li> <li><a href=\"button\">Button</a></li> <li> <a href=\"draggable\">Draggable</a> (optional; for use with the <a href=\"#option-draggable\"><code>draggable</code></a> option)</li> <li> <a href=\"resizable\">Resizable</a> (optional; for use with the <a href=\"#option-resizable\"><code>resizable</code></a> option)</li> <li> <a href=\"https://api.jqueryui.com/category/effects-core/\">Effects Core</a> (optional; for use with the <a href=\"#option-show\"><code>show</code></a> and <a href=\"#option-hide\"><code>hide</code></a> options)</li> </ul> </div> <h3>Additional Notes:</h3> <div class=\"longdesc\"><ul><li> This widget requires some functional CSS, otherwise it won't work. If you build a custom theme, use the widget's specific CSS file as a starting point. </li></ul></div> <section id=\"options\"><h2>Options</h2>\n<div id=\"option-appendTo\" class=\"api-item first-item\"> <h3>appendTo </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Selector\">Selector</a> </div> <div class=\"default\"> <strong>Default: </strong><code>\"body\"</code> </div> <div> <p>Which element the dialog (and overlay, if <a href=\"#option-modal\">modal</a>) should be appended to.</p> <div class=\"warning\"> <strong>Note:</strong> The <code>appendTo</code> option should not be changed while the dialog is open.</div> <span class=\"version-details\"> (version added: 1.10.0)</span> </div> <strong>Code examples:</strong><p>Initialize the dialog with the <code>appendTo</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).dialog({\n  appendTo: \"#someElem\"\n});</pre> <p>Get or set the <code>appendTo</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar appendTo = $( \".selector\" ).dialog( \"option\", \"appendTo\" );\n \n// Setter\n$( \".selector\" ).dialog( \"option\", \"appendTo\", \"#someElem\" );</pre> </div> <div id=\"option-autoOpen\" class=\"api-item\"> <h3>autoOpen </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> </div> <div class=\"default\"> <strong>Default: </strong><code>true</code> </div> <div>If set to <code>true</code>, the dialog will automatically open upon initialization. If <code>false</code>, the dialog will stay hidden until the <a href=\"#method-open\"><code>open()</code></a> method is called.</div> <strong>Code examples:</strong><p>Initialize the dialog with the <code>autoOpen</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).dialog({\n  autoOpen: false\n});</pre> <p>Get or set the <code>autoOpen</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar autoOpen = $( \".selector\" ).dialog( \"option\", \"autoOpen\" );\n \n// Setter\n$( \".selector\" ).dialog( \"option\", \"autoOpen\", false );</pre> </div> <div id=\"option-buttons\" class=\"api-item\"> <h3>buttons </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Object\">Object</a> or <a href=\"http://api.jquery.com/Types/#Array\">Array</a> </div> <div class=\"default\"> <strong>Default: </strong><code>[]</code> </div> <div>Specifies which buttons should be displayed on the dialog. The context of the callback is the dialog element; if you need access to the button, it is available as the target of the event object.</div> <strong>Multiple types supported:</strong><ul> <li> <strong>Object</strong>: The keys are the button labels and the values are the callbacks for when the associated button is clicked.</li> <li> <strong>Array</strong>: Each element of the array must be an object defining the attributes, properties, and event handlers to set on the button. In addition, a key of <code>icons</code> can be used to control <a href=\"button#option-icons\">button's <code>icons</code> option</a>, and a key of <code>showText</code> can be used to control <a href=\"button#option-text\">button's <code>text</code> option</a>.</li> </ul> <strong>Code examples:</strong><p>Initialize the dialog with the <code>buttons</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).dialog({\n  buttons: [\n    {\n      text: \"Ok\",\n      icons: {\n        primary: \"ui-icon-heart\"\n      },\n      click: function() {\n        $( this ).dialog( \"close\" );\n      }\n \n      // Uncommenting the following line would hide the text,\n      // resulting in the label being used as a tooltip\n      //showText: false\n    }\n  ]\n});</pre> <p>Get or set the <code>buttons</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar buttons = $( \".selector\" ).dialog( \"option\", \"buttons\" );\n \n// Setter\n$( \".selector\" ).dialog( \"option\", \"buttons\", \n  [\n    {\n      text: \"Ok\",\n      icons: {\n        primary: \"ui-icon-heart\"\n      },\n      click: function() {\n        $( this ).dialog( \"close\" );\n      }\n \n      // Uncommenting the following line would hide the text,\n      // resulting in the label being used as a tooltip\n      //showText: false\n    }\n  ]\n);</pre> </div> <div id=\"option-closeOnEscape\" class=\"api-item\"> <h3>closeOnEscape </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> </div> <div class=\"default\"> <strong>Default: </strong><code>true</code> </div> <div>Specifies whether the dialog should close when it has focus and the user presses the escape (ESC) key.</div> <strong>Code examples:</strong><p>Initialize the dialog with the <code>closeOnEscape</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).dialog({\n  closeOnEscape: false\n});</pre> <p>Get or set the <code>closeOnEscape</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar closeOnEscape = $( \".selector\" ).dialog( \"option\", \"closeOnEscape\" );\n \n// Setter\n$( \".selector\" ).dialog( \"option\", \"closeOnEscape\", false );</pre> </div> <div id=\"option-closeText\" class=\"api-item\"> <h3>closeText </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div class=\"default\"> <strong>Default: </strong><code>\"close\"</code> </div> <div>Specifies the text for the close button. Note that the close text is visibly hidden when using a standard theme.</div> <strong>Code examples:</strong><p>Initialize the dialog with the <code>closeText</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).dialog({\n  closeText: \"hide\"\n});</pre> <p>Get or set the <code>closeText</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar closeText = $( \".selector\" ).dialog( \"option\", \"closeText\" );\n \n// Setter\n$( \".selector\" ).dialog( \"option\", \"closeText\", \"hide\" );</pre> </div> <div id=\"option-dialogClass\" class=\"api-item\"> <h3>dialogClass </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div class=\"default\"> <strong>Default: </strong><code>\"\"</code> </div> <div>The specified class name(s) will be added to the dialog, for additional theming.</div> <strong>Code examples:</strong><p>Initialize the dialog with the <code>dialogClass</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).dialog({\n  dialogClass: \"alert\"\n});</pre> <p>Get or set the <code>dialogClass</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar dialogClass = $( \".selector\" ).dialog( \"option\", \"dialogClass\" );\n \n// Setter\n$( \".selector\" ).dialog( \"option\", \"dialogClass\", \"alert\" );</pre> </div> <div id=\"option-draggable\" class=\"api-item\"> <h3>draggable </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> </div> <div class=\"default\"> <strong>Default: </strong><code>true</code> </div> <div>If set to <code>true</code>, the dialog will be draggable by the title bar. Requires the <a href=\"draggable\">jQuery UI Draggable widget</a> to be included.</div> <strong>Code examples:</strong><p>Initialize the dialog with the <code>draggable</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).dialog({\n  draggable: false\n});</pre> <p>Get or set the <code>draggable</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar draggable = $( \".selector\" ).dialog( \"option\", \"draggable\" );\n \n// Setter\n$( \".selector\" ).dialog( \"option\", \"draggable\", false );</pre> </div> <div id=\"option-height\" class=\"api-item\"> <h3>height </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Number\">Number</a> or <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div class=\"default\"> <strong>Default: </strong><code>\"auto\"</code> </div> <div>The height of the dialog.</div> <strong>Multiple types supported:</strong><ul> <li> <strong>Number</strong>: The height in pixels.</li> <li> <strong>String</strong>: The only supported string value is <code>\"auto\"</code> which will allow the dialog height to adjust based on its content.</li> </ul> <strong>Code examples:</strong><p>Initialize the dialog with the <code>height</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).dialog({\n  height: 400\n});</pre> <p>Get or set the <code>height</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar height = $( \".selector\" ).dialog( \"option\", \"height\" );\n \n// Setter\n$( \".selector\" ).dialog( \"option\", \"height\", 400 );</pre> </div> <div id=\"option-hide\" class=\"api-item\"> <h3>hide </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> or <a href=\"http://api.jquery.com/Types/#Number\">Number</a> or <a href=\"http://api.jquery.com/Types/#String\">String</a> or <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div class=\"default\"> <strong>Default: </strong><code>null</code> </div> <div>If and how to animate the hiding of the dialog.</div> <strong>Multiple types supported:</strong><ul> <li> <strong>Boolean</strong>: When set to <code>false</code>, no animation will be used and the dialog will be hidden immediately. When set to <code>true</code>, the dialog will fade out with the default duration and the default easing. </li> <li> <strong>Number</strong>: The dialog will fade out with the specified duration and the default easing. </li> <li> <strong>String</strong>: The dialog will be hidden using the specified effect. The value can either be the name of a built-in jQuery animation method, such as <code>\"slideUp\"</code>, or the name of a <a href=\"https://api.jqueryui.com/category/effects/\">jQuery UI effect</a>, such as <code>\"fold\"</code>. In either case the effect will be used with the default duration and the default easing. </li> <li> <strong>Object</strong>: If the value is an object, then <code>effect</code>, <code>delay</code>, <code>duration</code>, and <code>easing</code> properties may be provided. If the <code>effect</code> property contains the name of a jQuery method, then that method will be used; otherwise it is assumed to be the name of a jQuery UI effect. When using a jQuery UI effect that supports additional settings, you may include those settings in the object and they will be passed to the effect. If <code>duration</code> or <code>easing</code> is omitted, then the default values will be used. If <code>effect</code> is omitted, then <code>\"fadeOut\"</code> will be used. If <code>delay</code> is omitted, then no delay is used.</li> </ul> <strong>Code examples:</strong><p>Initialize the dialog with the <code>hide</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).dialog({\n  hide: { effect: \"explode\", duration: 1000 }\n});</pre> <p>Get or set the <code>hide</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar hide = $( \".selector\" ).dialog( \"option\", \"hide\" );\n \n// Setter\n$( \".selector\" ).dialog( \"option\", \"hide\", { effect: \"explode\", duration: 1000 } );</pre> </div> <div id=\"option-maxHeight\" class=\"api-item\"> <h3>maxHeight </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Number\">Number</a> </div> <div class=\"default\"> <strong>Default: </strong><code>false</code> </div> <div>The maximum height to which the dialog can be resized, in pixels.</div> <strong>Code examples:</strong><p>Initialize the dialog with the <code>maxHeight</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).dialog({\n  maxHeight: 600\n});</pre> <p>Get or set the <code>maxHeight</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar maxHeight = $( \".selector\" ).dialog( \"option\", \"maxHeight\" );\n \n// Setter\n$( \".selector\" ).dialog( \"option\", \"maxHeight\", 600 );</pre> </div> <div id=\"option-maxWidth\" class=\"api-item\"> <h3>maxWidth </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Number\">Number</a> </div> <div class=\"default\"> <strong>Default: </strong><code>false</code> </div> <div>The maximum width to which the dialog can be resized, in pixels.</div> <strong>Code examples:</strong><p>Initialize the dialog with the <code>maxWidth</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).dialog({\n  maxWidth: 600\n});</pre> <p>Get or set the <code>maxWidth</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar maxWidth = $( \".selector\" ).dialog( \"option\", \"maxWidth\" );\n \n// Setter\n$( \".selector\" ).dialog( \"option\", \"maxWidth\", 600 );</pre> </div> <div id=\"option-minHeight\" class=\"api-item\"> <h3>minHeight </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Number\">Number</a> </div> <div class=\"default\"> <strong>Default: </strong><code>150</code> </div> <div>The minimum height to which the dialog can be resized, in pixels.</div> <strong>Code examples:</strong><p>Initialize the dialog with the <code>minHeight</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).dialog({\n  minHeight: 200\n});</pre> <p>Get or set the <code>minHeight</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar minHeight = $( \".selector\" ).dialog( \"option\", \"minHeight\" );\n \n// Setter\n$( \".selector\" ).dialog( \"option\", \"minHeight\", 200 );</pre> </div> <div id=\"option-minWidth\" class=\"api-item\"> <h3>minWidth </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Number\">Number</a> </div> <div class=\"default\"> <strong>Default: </strong><code>150</code> </div> <div>The minimum width to which the dialog can be resized, in pixels.</div> <strong>Code examples:</strong><p>Initialize the dialog with the <code>minWidth</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).dialog({\n  minWidth: 200\n});</pre> <p>Get or set the <code>minWidth</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar minWidth = $( \".selector\" ).dialog( \"option\", \"minWidth\" );\n \n// Setter\n$( \".selector\" ).dialog( \"option\", \"minWidth\", 200 );</pre> </div> <div id=\"option-modal\" class=\"api-item\"> <h3>modal </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> </div> <div class=\"default\"> <strong>Default: </strong><code>false</code> </div> <div>If set to <code>true</code>, the dialog will have modal behavior; other items on the page will be disabled, i.e., cannot be interacted with. Modal dialogs create an overlay below the dialog but above other page elements.</div> <strong>Code examples:</strong><p>Initialize the dialog with the <code>modal</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).dialog({\n  modal: true\n});</pre> <p>Get or set the <code>modal</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar modal = $( \".selector\" ).dialog( \"option\", \"modal\" );\n \n// Setter\n$( \".selector\" ).dialog( \"option\", \"modal\", true );</pre> </div> <div id=\"option-position\" class=\"api-item\"> <h3>position </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div class=\"default\"> <strong>Default: </strong><code>{ my: \"center\", at: \"center\", of: window }</code> </div> <div> <p>Specifies where the dialog should be displayed when opened. The dialog will handle collisions such that as much of the dialog is visible as possible.</p> <p>The <code>of</code> property defaults to the window, but you can specify another element to position against. You can refer to the <a href=\"position\">jQuery UI Position</a> utility for more details about the available properties.</p> </div> <strong>Code examples:</strong><p>Initialize the dialog with the <code>position</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).dialog({\n  position: { my: \"left top\", at: \"left bottom\", of: button }\n});</pre> <p>Get or set the <code>position</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar position = $( \".selector\" ).dialog( \"option\", \"position\" );\n \n// Setter\n$( \".selector\" ).dialog( \"option\", \"position\", { my: \"left top\", at: \"left bottom\", of: button } );</pre> </div> <div id=\"option-resizable\" class=\"api-item\"> <h3>resizable </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> </div> <div class=\"default\"> <strong>Default: </strong><code>true</code> </div> <div>If set to <code>true</code>, the dialog will be resizable. Requires the <a href=\"resizable\">jQuery UI Resizable widget</a> to be included.</div> <strong>Code examples:</strong><p>Initialize the dialog with the <code>resizable</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).dialog({\n  resizable: false\n});</pre> <p>Get or set the <code>resizable</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar resizable = $( \".selector\" ).dialog( \"option\", \"resizable\" );\n \n// Setter\n$( \".selector\" ).dialog( \"option\", \"resizable\", false );</pre> </div> <div id=\"option-show\" class=\"api-item\"> <h3>show </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> or <a href=\"http://api.jquery.com/Types/#Number\">Number</a> or <a href=\"http://api.jquery.com/Types/#String\">String</a> or <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div class=\"default\"> <strong>Default: </strong><code>null</code> </div> <div>If and how to animate the showing of the dialog.</div> <strong>Multiple types supported:</strong><ul> <li> <strong>Boolean</strong>: When set to <code>false</code>, no animation will be used and the dialog will be shown immediately. When set to <code>true</code>, the dialog will fade in with the default duration and the default easing. </li> <li> <strong>Number</strong>: The dialog will fade in with the specified duration and the default easing. </li> <li> <strong>String</strong>: The dialog will be shown using the specified effect. The value can either be the name of a built-in jQuery animation method, such as <code>\"slideDown\"</code>, or the name of a <a href=\"https://api.jqueryui.com/category/effects/\">jQuery UI effect</a>, such as <code>\"fold\"</code>. In either case the effect will be used with the default duration and the default easing. </li> <li> <strong>Object</strong>: If the value is an object, then <code>effect</code>, <code>delay</code>, <code>duration</code>, and <code>easing</code> properties may be provided. If the <code>effect</code> property contains the name of a jQuery method, then that method will be used; otherwise it is assumed to be the name of a jQuery UI effect. When using a jQuery UI effect that supports additional settings, you may include those settings in the object and they will be passed to the effect. If <code>duration</code> or <code>easing</code> is omitted, then the default values will be used. If <code>effect</code> is omitted, then <code>\"fadeIn\"</code> will be used. If <code>delay</code> is omitted, then no delay is used.</li> </ul> <strong>Code examples:</strong><p>Initialize the dialog with the <code>show</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).dialog({\n  show: { effect: \"blind\", duration: 800 }\n});</pre> <p>Get or set the <code>show</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar show = $( \".selector\" ).dialog( \"option\", \"show\" );\n \n// Setter\n$( \".selector\" ).dialog( \"option\", \"show\", { effect: \"blind\", duration: 800 } );</pre> </div> <div id=\"option-title\" class=\"api-item\"> <h3>title </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div class=\"default\"> <strong>Default: </strong><code>null</code> </div> <div>Specifies the title of the dialog. If the value is <code>null</code>, the <code>title</code> attribute on the dialog source element will be used.</div> <strong>Code examples:</strong><p>Initialize the dialog with the <code>title</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).dialog({\n  title: \"Dialog Title\"\n});</pre> <p>Get or set the <code>title</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar title = $( \".selector\" ).dialog( \"option\", \"title\" );\n \n// Setter\n$( \".selector\" ).dialog( \"option\", \"title\", \"Dialog Title\" );</pre> </div> <div id=\"option-width\" class=\"api-item\"> <h3>width </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Number\">Number</a> </div> <div class=\"default\"> <strong>Default: </strong><code>300</code> </div> <div>The width of the dialog, in pixels.</div> <strong>Code examples:</strong><p>Initialize the dialog with the <code>width</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).dialog({\n  width: 500\n});</pre> <p>Get or set the <code>width</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar width = $( \".selector\" ).dialog( \"option\", \"width\" );\n \n// Setter\n$( \".selector\" ).dialog( \"option\", \"width\", 500 );</pre> </div></section><section id=\"methods\"><h2>Methods</h2>\n<div id=\"method-close\"><div class=\"api-item first-item\"> <h3>close()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div>Closes the dialog.</div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the close method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).dialog( \"close\" );</pre> </div> </div></div> <div id=\"method-destroy\"><div class=\"api-item\"> <h3>destroy()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Removes the dialog functionality completely. This will return the element back to its pre-init state. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the destroy method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).dialog( \"destroy\" );</pre> </div> </div></div> <div id=\"method-instance\"><div class=\"api-item\"> <h3>instance()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#Object\">Object</a></span> </h3> <div> <p>Retrieves the dialog's instance object. If the element does not have an associated instance, <code>undefined</code> is returned.</p> <p>Unlike other widget methods, <code>instance()</code> is safe to call on any element after the dialog plugin has loaded.</p> </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the instance method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).dialog( \"instance\" );</pre> </div> </div></div> <div id=\"method-isOpen\"><div class=\"api-item\"> <h3>isOpen()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a></span> </h3> <div>Whether the dialog is currently open.</div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the isOpen method:</p> <pre class=\"syntaxhighlighter javascript\">var isOpen = $( \".selector\" ).dialog( \"isOpen\" );</pre> </div> </div></div> <div id=\"method-moveToTop\"><div class=\"api-item\"> <h3>moveToTop()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div>Moves the dialog to the top of the dialog stack.</div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the moveToTop method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).dialog( \"moveToTop\" );</pre> </div> </div></div> <div id=\"method-open\"><div class=\"api-item\"> <h3>open()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div>Opens the dialog.</div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the open method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).dialog( \"open\" );</pre> </div> </div></div> <div id=\"method-option\"> <div class=\"api-item\"> <h3>option( optionName )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#Object\">Object</a></span> </h3> <div> <p>Gets the value currently associated with the specified <code>optionName</code>.</p> <p><strong>Note:</strong> For options that have objects as their value, you can get the value of a specific key by using dot notation. For example, <code>\"foo.bar\"</code> would get the value of the <code>bar</code> property on the <code>foo</code> option.</p> </div> <ul><li> <div><strong>optionName</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>The name of the option to get.</div> </li></ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">var isDisabled = $( \".selector\" ).dialog( \"option\", \"disabled\" );</pre> </div> </div> <div class=\"api-item\"> <h3>option()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#PlainObject\">PlainObject</a></span> </h3> <div>Gets an object containing key/value pairs representing the current dialog options hash.</div> <ul><li><div class=\"null-signature\">This signature does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">var options = $( \".selector\" ).dialog( \"option\" );</pre> </div> </div> <div class=\"api-item\"> <h3>option( optionName, value )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> <p>Sets the value of the dialog option associated with the specified <code>optionName</code>.</p> <p><strong>Note:</strong> For options that have objects as their value, you can set the value of just one property by using dot notation for <code>optionName</code>. For example, <code>\"foo.bar\"</code> would update only the <code>bar</code> property of the <code>foo</code> option.</p> </div> <ul> <li> <div><strong>optionName</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>The name of the option to set.</div> </li> <li> <div><strong>value</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>A value to set for the option.</div> </li> </ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).dialog( \"option\", \"disabled\", true );</pre> </div> </div> <div class=\"api-item\"> <h3>option( options )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div>Sets one or more options for the dialog.</div> <ul><li> <div><strong>options</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>A map of option-value pairs to set.</div> </li></ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).dialog( \"option\", { disabled: true } );</pre> </div> </div> </div> <div id=\"method-widget\"><div class=\"api-item\"> <h3>widget()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a></span> </h3> <div> Returns a <code>jQuery</code> object containing the generated wrapper. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the widget method:</p> <pre class=\"syntaxhighlighter javascript\">var widget = $( \".selector\" ).dialog( \"widget\" );</pre> </div> </div></div></section><section id=\"extension-points\"><h2>Extension Points</h2>\n<p> The dialog widget is built with the <a href=\"jquery.widget\">widget factory</a> and can be extended. When extending widgets, you have the ability to override or add to the behavior of existing methods. The following methods are provided as extension points with the same API stability as the <a href=\"#methods\">plugin methods</a> listed above. For more information on widget extensions, see <a href=\"http://learn.jquery.com/jquery-ui/widget-factory/extending-widgets/\">Extending Widgets with the Widget Factory</a>. </p>  <div id=\"method-_allowInteraction\"><div class=\"api-item first-item\"> <h3>_allowInteraction( event )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a></span> </h3> <div> Modal dialogs do not allow users to interact with elements behind the dialog. This can be problematic for elements that are not children of the dialog, but are absolutely positioned to appear as though they are. The <code>_allowInteraction()</code> method determines whether the user should be allowed to interact with a given target element; therefore, it can be used to whitelist elements that are not children of the dialog but you want users to be able to use. </div> <ul><li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li></ul> <div> <strong>Code examples:</strong><p>Allow the Select2 plugin to be used within modal dialogs. The <a href=\"jquery.widget#method-_super\"><code>_super()</code></a> call ensures elements within the dialog can still be interacted with.</p> <pre class=\"syntaxhighlighter javascript\">_allowInteraction: function( event ) {\n  return !!$( event.target ).is( \".select2-input\" ) || this._super( event );\n}</pre> </div> </div></div></section><section id=\"events\"><h2>Events</h2>\n<div id=\"event-beforeClose\" class=\"api-item first-item\"> <h3>beforeClose( event, ui )<span class=\"returns\">Type: <code>dialogbeforeclose</code></span> </h3> <div>Triggered when a dialog is about to close. If canceled, the dialog will not close.</div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  </li> </ul> <p><em>Note: The <code>ui</code> object is empty but included for consistency with other events.</em></p> <div> <strong>Code examples:</strong><p>Initialize the dialog with the beforeClose callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).dialog({\n  beforeClose: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the dialogbeforeclose event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"dialogbeforeclose\", function( event, ui ) {} );</pre> </div> </div> <div id=\"event-close\" class=\"api-item\"> <h3>close( event, ui )<span class=\"returns\">Type: <code>dialogclose</code></span> </h3> <div>Triggered when the dialog is closed.</div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  </li> </ul> <p><em>Note: The <code>ui</code> object is empty but included for consistency with other events.</em></p> <div> <strong>Code examples:</strong><p>Initialize the dialog with the close callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).dialog({\n  close: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the dialogclose event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"dialogclose\", function( event, ui ) {} );</pre> </div> </div> <div id=\"event-create\" class=\"api-item\"> <h3>create( event, ui )<span class=\"returns\">Type: <code>dialogcreate</code></span> </h3> <div> Triggered when the dialog is created. </div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  </li> </ul> <p><em>Note: The <code>ui</code> object is empty but included for consistency with other events.</em></p> <div> <strong>Code examples:</strong><p>Initialize the dialog with the create callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).dialog({\n  create: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the dialogcreate event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"dialogcreate\", function( event, ui ) {} );</pre> </div> </div> <div id=\"event-drag\" class=\"api-item\"> <h3>drag( event, ui )<span class=\"returns\">Type: <code>dialogdrag</code></span> </h3> <div>Triggered while the dialog is being dragged.</div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  <ul> <li> <div><strong>position</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>The current CSS position of the dialog.</div> </li> <li> <div><strong>offset</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>The current offset position of the dialog.</div> </li> </ul> </li> </ul> <div> <strong>Code examples:</strong><p>Initialize the dialog with the drag callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).dialog({\n  drag: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the dialogdrag event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"dialogdrag\", function( event, ui ) {} );</pre> </div> </div> <div id=\"event-dragStart\" class=\"api-item\"> <h3>dragStart( event, ui )<span class=\"returns\">Type: <code>dialogdragstart</code></span> </h3> <div>Triggered when the user starts dragging the dialog.</div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  <ul> <li> <div><strong>position</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>The current CSS position of the dialog.</div> </li> <li> <div><strong>offset</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>The current offset position of the dialog.</div> </li> </ul> </li> </ul> <div> <strong>Code examples:</strong><p>Initialize the dialog with the dragStart callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).dialog({\n  dragStart: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the dialogdragstart event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"dialogdragstart\", function( event, ui ) {} );</pre> </div> </div> <div id=\"event-dragStop\" class=\"api-item\"> <h3>dragStop( event, ui )<span class=\"returns\">Type: <code>dialogdragstop</code></span> </h3> <div>Triggered after the dialog has been dragged.</div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  <ul> <li> <div><strong>position</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>The current CSS position of the dialog.</div> </li> <li> <div><strong>offset</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>The current offset position of the dialog.</div> </li> </ul> </li> </ul> <div> <strong>Code examples:</strong><p>Initialize the dialog with the dragStop callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).dialog({\n  dragStop: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the dialogdragstop event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"dialogdragstop\", function( event, ui ) {} );</pre> </div> </div> <div id=\"event-focus\" class=\"api-item\"> <h3>focus( event, ui )<span class=\"returns\">Type: <code>dialogfocus</code></span> </h3> <div>Triggered when the dialog gains focus.</div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  </li> </ul> <p><em>Note: The <code>ui</code> object is empty but included for consistency with other events.</em></p> <div> <strong>Code examples:</strong><p>Initialize the dialog with the focus callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).dialog({\n  focus: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the dialogfocus event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"dialogfocus\", function( event, ui ) {} );</pre> </div> </div> <div id=\"event-open\" class=\"api-item\"> <h3>open( event, ui )<span class=\"returns\">Type: <code>dialogopen</code></span> </h3> <div>Triggered when the dialog is opened.</div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  </li> </ul> <p><em>Note: The <code>ui</code> object is empty but included for consistency with other events.</em></p> <div> <strong>Code examples:</strong><p>Initialize the dialog with the open callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).dialog({\n  open: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the dialogopen event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"dialogopen\", function( event, ui ) {} );</pre> </div> </div> <div id=\"event-resize\" class=\"api-item\"> <h3>resize( event, ui )<span class=\"returns\">Type: <code>dialogresize</code></span> </h3> <div>Triggered while the dialog is being resized.</div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  <ul> <li> <div><strong>originalPosition</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>The CSS position of the dialog prior to being resized.</div> </li> <li> <div><strong>position</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>The current CSS position of the dialog.</div> </li> <li> <div><strong>originalSize</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>The size of the dialog prior to being resized.</div> </li> <li> <div><strong>size</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>The current size of the dialog.</div> </li> </ul> </li> </ul> <div> <strong>Code examples:</strong><p>Initialize the dialog with the resize callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).dialog({\n  resize: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the dialogresize event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"dialogresize\", function( event, ui ) {} );</pre> </div> </div> <div id=\"event-resizeStart\" class=\"api-item\"> <h3>resizeStart( event, ui )<span class=\"returns\">Type: <code>dialogresizestart</code></span> </h3> <div>Triggered when the user starts resizing the dialog.</div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  <ul> <li> <div><strong>originalPosition</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>The CSS position of the dialog prior to being resized.</div> </li> <li> <div><strong>position</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>The current CSS position of the dialog.</div> </li> <li> <div><strong>originalSize</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>The size of the dialog prior to being resized.</div> </li> <li> <div><strong>size</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>The current size of the dialog.</div> </li> </ul> </li> </ul> <div> <strong>Code examples:</strong><p>Initialize the dialog with the resizeStart callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).dialog({\n  resizeStart: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the dialogresizestart event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"dialogresizestart\", function( event, ui ) {} );</pre> </div> </div> <div id=\"event-resizeStop\" class=\"api-item\"> <h3>resizeStop( event, ui )<span class=\"returns\">Type: <code>dialogresizestop</code></span> </h3> <div>Triggered after the dialog has been resized.</div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  <ul> <li> <div><strong>originalPosition</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>The CSS position of the dialog prior to being resized.</div> </li> <li> <div><strong>position</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>The current CSS position of the dialog.</div> </li> <li> <div><strong>originalSize</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>The size of the dialog prior to being resized.</div> </li> <li> <div><strong>size</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>The current size of the dialog.</div> </li> </ul> </li> </ul> <div> <strong>Code examples:</strong><p>Initialize the dialog with the resizeStop callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).dialog({\n  resizeStop: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the dialogresizestop event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"dialogresizestop\", function( event, ui ) {} );</pre> </div> </div></section><section class=\"entry-examples\" id=\"entry-examples\"><h2>Example:</h2>\n<div class=\"entry-example\" id=\"example-0\"> <p>A simple jQuery UI Dialog</p> <pre class=\"syntaxhighlighter xml\">&lt;!doctype html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"utf-8\"&gt;\n  &lt;title&gt;dialog demo&lt;/title&gt;\n  &lt;link rel=\"stylesheet\" href=\"//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css\"&gt;\n  &lt;script src=\"//code.jquery.com/jquery-1.10.2.js\"&gt;&lt;/script&gt;\n  &lt;script src=\"//code.jquery.com/ui/1.11.4/jquery-ui.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n&lt;button id=\"opener\"&gt;open the dialog&lt;/button&gt;\n&lt;div id=\"dialog\" title=\"Dialog Title\"&gt;I'm a dialog&lt;/div&gt;\n \n&lt;script&gt;\n$( \"#dialog\" ).dialog({ autoOpen: false });\n$( \"#opener\" ).click(function() {\n  $( \"#dialog\" ).dialog( \"open\" );\n});\n&lt;/script&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;</pre> <h4>Demo:</h4>  </div></section> </div></article> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; The jQuery Foundation and other contributors<br>Licensed under the MIT License.<br>\n    <a href=\"https://api.jqueryui.com/dialog\" class=\"_attribution-link\">https://api.jqueryui.com/dialog</a>\n  </p>\n</div>\n","easings":"<h1 class=\"entry-title\">Easings</h1>  <p>Easing functions specify the speed at which an animation progresses at different points within the animation. jQuery core ships with two easings: <code>linear</code>, which progresses at a constant pace throughout the animation, and <code>swing</code> (jQuery core's default easing), which progresses slightly slower at the beginning and end of the animation than it does in the middle of the animation. jQuery UI provides several additional easing functions, ranging from variations on the swing behavior to customized effects such as bouncing.</p>\n\n<p>Some easings will result in negative values during the animation. Depending on the properties that are being animated, the actual value may be clamped at zero. For example, you can animate <code>left</code> to a negative value, but you cannot animate <code>height</code> or <code>opacity</code> to a negative value.</p> <p>The best way to understand how an easing will affect an animation is to see the equation graphed over time. See below for a graph of all animations available in jQuery UI.</p> <iframe src=\"https://api.jqueryui.com/resources/easing-graph.html\" width=\"100%\" height=\"600\"></iframe> <iframe src=\"https://api.jqueryui.com/resources/easing-comparison.html\" width=\"100%\" height=\"500\"></iframe><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; The jQuery Foundation and other contributors<br>Licensed under the MIT License.<br>\n    <a href=\"https://api.jqueryui.com/easings\" class=\"_attribution-link\">https://api.jqueryui.com/easings</a>\n  </p>\n</div>\n","data-selector":"<h1 class=\"entry-title\">:data() Selector</h1> <div class=\"entry-content\"> <article id=\"data1\" class=\"entry selector\"><h2 class=\"section-title\"><span>data selector</span></h2> <div class=\"entry-wrapper\"> <p class=\"desc\"><strong>Description: </strong>Selects elements which have data stored under the specified key.</p> <ul class=\"signatures\"><li class=\"signature\"> <h4 class=\"name\">jQuery( \":data(key)\" )</h4> <p class=\"argument\"><strong>key: </strong>The data key.</p> </li></ul> <div class=\"longdesc\" id=\"entry-longdesc\"> <p>The expression <code>$( \"div:data(foo)\")</code> matches a <code>&lt;div&gt;</code> if it has data stored via <code>.data( \"foo\", value )</code>.</p> </div> <section class=\"entry-examples\" id=\"entry-examples\"><h2>Example:</h2>\n<div class=\"entry-example\" id=\"example-0\"> <p>Select elements with data and change their background color.</p> <pre class=\"syntaxhighlighter xml\">&lt;!doctype html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"utf-8\"&gt;\n  &lt;title&gt;data demo&lt;/title&gt;\n  &lt;link rel=\"stylesheet\" href=\"//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css\"&gt;\n  &lt;style&gt;\n  div {\n    width: 100px;\n    height: 100px;\n    border: 1px solid #000;\n    float: left;\n  }\n  &lt;/style&gt;\n  &lt;script src=\"//code.jquery.com/jquery-1.10.2.js\"&gt;&lt;/script&gt;\n  &lt;script src=\"//code.jquery.com/ui/1.11.4/jquery-ui.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n&lt;div id=\"one\"&gt;&lt;/div&gt;\n&lt;div id=\"two\"&gt;&lt;/div&gt;\n&lt;div id=\"three\"&gt;&lt;/div&gt;\n \n&lt;script&gt;\n$( \"#one\" ).data( \"color\", \"blue\" );\n$( \"#three\" ).data( \"color\", \"green\" );\n \n$( \":data(color)\" ).each(function() {\n  var element = $( this );\n  element.css( \"backgroundColor\", element.data( \"color\" ) );\n});\n&lt;/script&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;</pre> <h4>Demo:</h4>  </div></section> </div></article> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; The jQuery Foundation and other contributors<br>Licensed under the MIT License.<br>\n    <a href=\"https://api.jqueryui.com/data-selector\" class=\"_attribution-link\">https://api.jqueryui.com/data-selector</a>\n  </p>\n</div>\n","enableselection":"<h1 class=\"entry-title\">.enableSelection()</h1> <div class=\"entry-content\"> <article id=\"enableSelection1\" class=\"entry method\"><h2 class=\"section-title\"> <span class=\"name\">.enableSelection()</span><span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a></span> </h2> <div class=\"entry-wrapper\"> <p class=\"desc\"><strong>Description: </strong>Enable selection of text content within the set of matched elements.</p> <ul class=\"signatures\"><li class=\"signature\"> <h4 class=\"name\"> <span class=\"version-details\">version added: 1.6, deprecated: 1.9</span><a id=\"enableSelection\" href=\"#enableSelection\">.enableSelection()</a> </h4> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> </li></ul> <div class=\"longdesc\" id=\"entry-longdesc\"> <p>The <code>.enableSelection()</code> method can be used to re-enable selection of text that was disabled via <a href=\"disableselection\"><code>.disableSelection()</code></a>.</p> </div> </div></article> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; The jQuery Foundation and other contributors<br>Licensed under the MIT License.<br>\n    <a href=\"https://api.jqueryui.com/enableSelection\" class=\"_attribution-link\">https://api.jqueryui.com/enableSelection</a>\n  </p>\n</div>\n","effect":"<h1 class=\"entry-title\">.effect()</h1> <div class=\"entry-content\"> <article id=\"effect1\" class=\"entry method\"><h2 class=\"section-title\"> <span class=\"name\">.effect( effect [, options ] [, duration ] [, complete ] )</span><span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a></span> </h2> <div class=\"entry-wrapper\"> <p class=\"desc\"><strong>Description: </strong>Apply an animation effect to an element.</p> <ul class=\"signatures\"> <li class=\"signature\"> <h4 class=\"name\"><a id=\"effect-effect-options-duration-complete\" href=\"#effect-effect-options-duration-complete\">.effect( effect [, options ] [, duration ] [, complete ] )</a></h4> <ul> <li> <div><strong>effect</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>A string indicating which <a href=\"https://api.jqueryui.com/category/effects/\">effect</a> to use for the transition.</div> </li> <li> <div><strong>options</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>Effect-specific properties and <a href=\"easings\">easing</a>.</div> </li> <li> <div> <strong>duration</strong> (default: <code>400</code>)</div> <div>Type: <a href=\"http://api.jquery.com/Types/#Number\">Number</a> or <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>A string or number determining how long the animation will run.</div> </li> <li> <div><strong>complete</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Function\">Function</a>()</div> <div>A function to call once the animation is complete, called once per matched element.</div> </li> </ul> </li> <li class=\"signature\"> <h4 class=\"name\"><a id=\"effect-options\" href=\"#effect-options\">.effect( options )</a></h4> <ul><li> <div><strong>options</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>All animation settings. The only required property is <code>effect</code>.</div> <ul> <li> <div><strong>effect</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>A string indicating which <a href=\"https://api.jqueryui.com/category/effects/\">effect</a> to use for the transition.</div> </li> <li> <div> <strong>easing</strong> (default: <code>\"swing\"</code>)</div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>A string indicating which <a href=\"easings\">easing</a> function to use for the transition.</div> </li> <li> <div> <strong>duration</strong> (default: <code>400</code>)</div> <div>Type: <a href=\"http://api.jquery.com/Types/#Number\">Number</a> or <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>A string or number determining how long the animation will run.</div> </li> <li> <div><strong>complete</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Function\">Function</a>()</div> <div>A function to call once the animation is complete, called once per matched element.</div> </li> <li> <div> <strong>queue</strong> (default: <code>true</code>)</div> <div>Type: <a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> or <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>A Boolean indicating whether to place the animation in the effects queue. If false, the animation will begin immediately. <strong>As of jQuery 1.7</strong>, the queue option can also accept a string, in which case the animation is added to the queue represented by that string.</div> </li> </ul> </li></ul> </li> </ul> <div class=\"longdesc\" id=\"entry-longdesc\"> <p>The <code>.effect()</code> method applies a named animation <a href=\"https://api.jqueryui.com/category/effects/\">effect</a> to an element. Many effects also support a show or hide mode, which can be accomplished with the <a href=\"show\"><code>.show()</code></a>, <a href=\"hide\"><code>.hide()</code></a>, and <a href=\"toggle\"><code>.toggle()</code></a> methods.</p> </div> <section class=\"entry-examples\" id=\"entry-examples\"><h2>Example:</h2>\n<div class=\"entry-example\" id=\"example-0\"> <p>Apply the bounce effect to a div.</p> <pre class=\"syntaxhighlighter xml\">&lt;!doctype html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"utf-8\"&gt;\n  &lt;title&gt;effect demo&lt;/title&gt;\n  &lt;link rel=\"stylesheet\" href=\"//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css\"&gt;\n  &lt;style&gt;\n  div {\n    width: 100px;\n    height: 100px;\n    background: #ccc;\n    border: 1px solid #000;\n  }\n  &lt;/style&gt;\n  &lt;script src=\"//code.jquery.com/jquery-1.10.2.js\"&gt;&lt;/script&gt;\n  &lt;script src=\"//code.jquery.com/ui/1.11.4/jquery-ui.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n&lt;p&gt;Click anywhere to apply the effect.&lt;/p&gt;\n&lt;div&gt;&lt;/div&gt;\n \n&lt;script&gt;\n$( document ).click(function() {\n  $( \"div\" ).effect( \"bounce\", \"slow\" );\n});\n&lt;/script&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;</pre> <h4>Demo:</h4>  </div></section> </div></article> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; The jQuery Foundation and other contributors<br>Licensed under the MIT License.<br>\n    <a href=\"https://api.jqueryui.com/effect\" class=\"_attribution-link\">https://api.jqueryui.com/effect</a>\n  </p>\n</div>\n","explode-effect":"<h1 class=\"entry-title\">Explode Effect</h1> <div class=\"entry-content\"> <article id=\"explode1\" class=\"entry effect\"><h2 class=\"section-title\"><span>Explode Effect</span></h2> <div class=\"entry-wrapper\"> <p class=\"desc\"><strong>Description: </strong> The explode effect hides or shows an element by splitting it into pieces. </p> <ul class=\"signatures\"><li class=\"signature\"> <h4 class=\"name\">explode</h4> <ul><li> <div> <strong>pieces</strong> (default: <code>9</code>)</div> <div>Type: <a href=\"http://api.jquery.com/Types/#Integer\">Integer</a> </div> <div>The number of pieces to explode, should be a perfect square, any other values are rounded to the nearest square.</div> </li></ul> </li></ul> <section class=\"entry-examples\" id=\"entry-examples\"><h2>Example:</h2>\n<div class=\"entry-example\" id=\"example-0\"> <p>Toggle a div using the explode effect.</p> <pre class=\"syntaxhighlighter xml\">&lt;!doctype html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"utf-8\"&gt;\n  &lt;title&gt;explode demo&lt;/title&gt;\n  &lt;link rel=\"stylesheet\" href=\"//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css\"&gt;\n  &lt;style&gt;\n  #toggle {\n    width: 100px;\n    height: 100px;\n    background: #ccc;\n  }\n  &lt;/style&gt;\n  &lt;script src=\"//code.jquery.com/jquery-1.10.2.js\"&gt;&lt;/script&gt;\n  &lt;script src=\"//code.jquery.com/ui/1.11.4/jquery-ui.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n&lt;p&gt;Click anywhere to toggle the box.&lt;/p&gt;\n&lt;div id=\"toggle\"&gt;&lt;/div&gt;\n \n&lt;script&gt;\n$( document ).click(function() {\n  $( \"#toggle\" ).toggle( \"explode\" );\n});\n&lt;/script&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;</pre> <h4>Demo:</h4>  </div></section> </div></article> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; The jQuery Foundation and other contributors<br>Licensed under the MIT License.<br>\n    <a href=\"https://api.jqueryui.com/explode-effect\" class=\"_attribution-link\">https://api.jqueryui.com/explode-effect</a>\n  </p>\n</div>\n","position":"<h1 class=\"entry-title\">.position()</h1> <div class=\"entry-content\"> <article id=\"position1\" class=\"entry method\"><h2 class=\"section-title\"> <span class=\"name\">.position( options )</span><span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a></span><span class=\"version-details\">version added: 1.8</span> </h2> <div class=\"entry-wrapper\"> <p class=\"desc\"><strong>Description: </strong>Position an element relative to another.</p> <ul class=\"signatures\"><li class=\"signature\"> <h4 class=\"name\"><a id=\"position-options\" href=\"#position-options\">.position( options )</a></h4> <ul><li> <div><strong>options</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  <ul> <li> <div> <strong>my</strong> (default: <code>\"center\"</code>)</div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>Defines which position <strong>on the element being positioned</strong> to align with the target element: \"horizontal vertical\" alignment. A single value such as <code>\"right\"</code> will be normalized to <code>\"right center\"</code>, <code>\"top\"</code> will be normalized to <code>\"center top\"</code> (following CSS convention). Acceptable horizontal values: <code>\"left\"</code>, <code>\"center\"</code>, <code>\"right\"</code>. Acceptable vertical values: <code>\"top\"</code>, <code>\"center\"</code>, <code>\"bottom\"</code>. Example: <code>\"left top\"</code> or <code>\"center center\"</code>. Each dimension can also contain offsets, in pixels or percent, e.g., <code>\"right+10 top-25%\"</code>. Percentage offsets are relative to the element being positioned.</div> </li> <li> <div> <strong>at</strong> (default: <code>\"center\"</code>)</div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>Defines which position <strong>on the target element</strong> to align the positioned element against: \"horizontal vertical\" alignment. See the <a href=\"#option-my\"><code>my</code></a> option for full details on possible values. Percentage offsets are relative to the target element.</div> </li> <li> <div> <strong>of</strong> (default: <code>null</code>)</div> <div>Type: <a href=\"http://api.jquery.com/Types/#Selector\">Selector</a> or <a href=\"http://api.jquery.com/Types/#Element\">Element</a> or <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> or <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div> <div>Which element to position against. If you provide a selector or jQuery object, the first matching element will be used. If you provide an event object, the <code>pageX</code> and <code>pageY</code> properties will be used. Example: <code>\"#top-menu\"</code> </div> </li> <li> <div> <strong>collision</strong> (default: <code>\"flip\"</code>)</div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div> <p>When the positioned element overflows the window in some direction, move it to an alternative position. Similar to <a href=\"#option-my\"><code>my</code></a> and <a href=\"#option-at\"><code>at</code></a>, this accepts a single value or a pair for horizontal/vertical, e.g., <code>\"flip\"</code>, <code>\"fit\"</code>, <code>\"fit flip\"</code>, <code>\"fit none\"</code>.</p> <ul> <li> <code>\"flip\"</code>: Flips the element to the opposite side of the target and the collision detection is run again to see if it will fit. Whichever side allows more of the element to be visible will be used.</li> <li> <code>\"fit\"</code>: Shift the element away from the edge of the window.</li> <li> <code>\"flipfit\"</code>: First applies the flip logic, placing the element on whichever side allows more of the element to be visible. Then the fit logic is applied to ensure as much of the element is visible as possible.</li> <li> <code>\"none\"</code>: Does not apply any collision detection.</li> </ul> </div> </li> <li> <div> <strong>using</strong> (default: <code>null</code>)</div> <div>Type: <a href=\"http://api.jquery.com/Types/#Function\">Function</a>()</div> <div> When specified, the actual property setting is delegated to this callback. Receives two parameters: The first is a hash of <code>top</code> and <code>left</code> values for the position that should be set and can be forwarded to <code>.css()</code> or <code>.animate()</code>. <p>The second provides feedback about the position and dimensions of both elements, as well as calculations to their relative position. Both <code>target</code> and <code>element</code> have these properties: <code>element</code>, <code>left</code>, <code>top</code>, <code>width</code>, <code>height</code>. In addition, there's <code>horizontal</code>, <code>vertical</code> and <code>important</code>, giving you twelve potential directions like <code>{ horizontal: \"center\", vertical: \"left\", important: \"horizontal\" }</code>.</p> </div> </li> <li> <div> <strong>within</strong> (default: <code>window</code>)</div> <div>Type: <a href=\"http://api.jquery.com/Types/#Selector\">Selector</a> or <a href=\"http://api.jquery.com/Types/#Element\">Element</a> or <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>Element to position within, affecting collision detection. If you provide a selector or jQuery object, the first matching element will be used.</div> </li> </ul> </li></ul> </li></ul> <div class=\"longdesc\" id=\"entry-longdesc\"> <p>The jQuery UI <code>.position()</code> method allows you to position an element relative to the window, document, another element, or the cursor/mouse, without worrying about offset parents.</p> <p><em>Note: jQuery UI does not support positioning hidden elements.</em></p> <p>This is a standalone jQuery plugin and has no dependencies on other jQuery UI components.</p> <p>This plugin extends jQuery's built-in <a href=\"https://api.jquery.com/position/\"><code>.position()</code></a> method. If jQuery UI is not loaded, calling the <code>.position()</code> method may not fail directly, as the method still exists. However, the expected behavior will not occur.</p> </div> <section class=\"entry-examples\" id=\"entry-examples\"><h2>Example:</h2>\n<div class=\"entry-example\" id=\"example-0\"> <p>A simple jQuery UI Position example.</p> <pre class=\"syntaxhighlighter xml\">&lt;!doctype html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"utf-8\"&gt;\n  &lt;title&gt;position demo&lt;/title&gt;\n  &lt;link rel=\"stylesheet\" href=\"//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css\"&gt;\n  &lt;style&gt;\n  #targetElement {\n    height: 200px;\n    margin: 50px;\n    background: #9cf;\n  }\n  .positionDiv {\n    position: absolute;\n    width: 75px;\n    height: 75px;\n    background: #080;\n  }\n  &lt;/style&gt;\n  &lt;script src=\"//code.jquery.com/jquery-1.10.2.js\"&gt;&lt;/script&gt;\n  &lt;script src=\"//code.jquery.com/ui/1.11.4/jquery-ui.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n&lt;div id=\"targetElement\"&gt;\n  &lt;div class=\"positionDiv\" id=\"position1\"&gt;&lt;/div&gt;\n  &lt;div class=\"positionDiv\" id=\"position2\"&gt;&lt;/div&gt;\n  &lt;div class=\"positionDiv\" id=\"position3\"&gt;&lt;/div&gt;\n  &lt;div class=\"positionDiv\" id=\"position4\"&gt;&lt;/div&gt;\n&lt;/div&gt;\n \n&lt;script&gt;\n$( \"#position1\" ).position({\n  my: \"center\",\n  at: \"center\",\n  of: \"#targetElement\"\n});\n \n$( \"#position2\" ).position({\n  my: \"left top\",\n  at: \"left top\",\n  of: \"#targetElement\"\n});\n \n$( \"#position3\" ).position({\n  my: \"right center\",\n  at: \"right bottom\",\n  of: \"#targetElement\"\n});\n \n$( document ).mousemove(function( event ) {\n  $( \"#position4\" ).position({\n    my: \"left+3 bottom-3\",\n    of: event,\n    collision: \"fit\"\n  });\n});\n&lt;/script&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;</pre> <h4>Demo:</h4>  </div></section> </div></article> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; The jQuery Foundation and other contributors<br>Licensed under the MIT License.<br>\n    <a href=\"https://api.jqueryui.com/position\" class=\"_attribution-link\">https://api.jqueryui.com/position</a>\n  </p>\n</div>\n","fade-effect":"<h1 class=\"entry-title\">Fade Effect</h1> <div class=\"entry-content\"> <article id=\"fade1\" class=\"entry effect\"><h2 class=\"section-title\"><span>Fade Effect</span></h2> <div class=\"entry-wrapper\"> <p class=\"desc\"><strong>Description: </strong> The fade effect hides or shows an element by fading it. </p> <ul class=\"signatures\"><li class=\"signature\"><h4 class=\"name\">fade</h4></li></ul> <section class=\"entry-examples\" id=\"entry-examples\"><h2>Example:</h2>\n<div class=\"entry-example\" id=\"example-0\"> <p>Toggle a div using the fade effect.</p> <pre class=\"syntaxhighlighter xml\">&lt;!doctype html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"utf-8\"&gt;\n  &lt;title&gt;fade demo&lt;/title&gt;\n  &lt;link rel=\"stylesheet\" href=\"//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css\"&gt;\n  &lt;style&gt;\n  #toggle {\n    width: 100px;\n    height: 100px;\n    background: #ccc;\n  }\n  &lt;/style&gt;\n  &lt;script src=\"//code.jquery.com/jquery-1.10.2.js\"&gt;&lt;/script&gt;\n  &lt;script src=\"//code.jquery.com/ui/1.11.4/jquery-ui.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n&lt;p&gt;Click anywhere to toggle the box.&lt;/p&gt;\n&lt;div id=\"toggle\"&gt;&lt;/div&gt;\n \n&lt;script&gt;\n$( document ).click(function() {\n  $( \"#toggle\" ).toggle( \"fade\" );\n});\n&lt;/script&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;</pre> <h4>Demo:</h4>  </div></section> </div></article> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; The jQuery Foundation and other contributors<br>Licensed under the MIT License.<br>\n    <a href=\"https://api.jqueryui.com/fade-effect\" class=\"_attribution-link\">https://api.jqueryui.com/fade-effect</a>\n  </p>\n</div>\n","focusable-selector":"<h1 class=\"entry-title\">:focusable Selector</h1> <div class=\"entry-content\"> <article id=\"focusable1\" class=\"entry selector\"><h2 class=\"section-title\"><span>focusable selector</span></h2> <div class=\"entry-wrapper\"> <p class=\"desc\"><strong>Description: </strong>Selects elements which can be focused.</p> <ul class=\"signatures\"><li class=\"signature\"><h4 class=\"name\">jQuery( \":focusable\" )</h4></li></ul> <div class=\"longdesc\" id=\"entry-longdesc\"> <p>Some elements are natively focusable, while others require explicitly setting a tab index. In all cases, the element must be visible in order to be focusable.</p> <p>Elements of the following type are focusable if they are not disabled: <code>input</code>, <code>select</code>, <code>textarea</code>, <code>button</code>, and <code>object</code>. Anchors are focusable if they have an <code>href</code> or <code>tabindex</code> attribute. <code>area</code> elements are focusable if they are inside a named map, have an <code>href</code> attribute, and there is a visible image using the map. All other elements are focusable based solely on their <code>tabindex</code> attribute and visibility.</p> <p><em>Note: Elements with a negative tab index are <code>:focusable</code>, but not <a href=\"tabbable-selector\"><code>:tabbable</code></a>.</em></p> </div> <section class=\"entry-examples\" id=\"entry-examples\"><h2>Example:</h2>\n<div class=\"entry-example\" id=\"example-0\"> <p>Select focusable elements and highlight them with a red border.</p> <pre class=\"syntaxhighlighter xml\">&lt;!doctype html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"utf-8\"&gt;\n  &lt;title&gt;focusable demo&lt;/title&gt;\n  &lt;link rel=\"stylesheet\" href=\"//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css\"&gt;\n  &lt;style&gt;\n  input, a, p {\n    border: 1px solid #000;\n  }\n  div {\n    padding: 5px;\n  }\n  &lt;/style&gt;\n  &lt;script src=\"//code.jquery.com/jquery-1.10.2.js\"&gt;&lt;/script&gt;\n  &lt;script src=\"//code.jquery.com/ui/1.11.4/jquery-ui.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n&lt;div&gt;&lt;input value=\"text input\"&gt;&lt;/div&gt;\n&lt;div&gt;&lt;a&gt;anchor without href&lt;/a&gt;&lt;/div&gt;\n&lt;div&gt;&lt;a href=\"#\"&gt;anchor with href&lt;/a&gt;&lt;/div&gt;\n&lt;div&gt;&lt;p&gt;paragraph without tabindex&lt;/p&gt;&lt;/div&gt;\n&lt;div&gt;&lt;p tabindex=\"1\"&gt;paragraph with tabindex&lt;/p&gt;&lt;/div&gt;\n \n&lt;script&gt;\n$( \":focusable\" ).css( \"border-color\", \"red\" );\n&lt;/script&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;</pre> <h4>Demo:</h4>  </div></section> </div></article> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; The jQuery Foundation and other contributors<br>Licensed under the MIT License.<br>\n    <a href=\"https://api.jqueryui.com/focusable-selector\" class=\"_attribution-link\">https://api.jqueryui.com/focusable-selector</a>\n  </p>\n</div>\n","focus":"<h1 class=\"entry-title\">.focus()</h1> <div class=\"entry-content\"> <article id=\"focus1\" class=\"entry method\"><h2 class=\"section-title\"> <span class=\"name\">.focus( delay [, callback ] )</span><span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a></span> </h2> <div class=\"entry-wrapper\"> <p class=\"desc\"><strong>Description: </strong>Asynchronously set focus to an element.</p> <ul class=\"signatures\"><li class=\"signature\"> <h4 class=\"name\"> <span class=\"version-details\">version deprecated: 1.11</span><a id=\"focus-delay-callback\" href=\"#focus-delay-callback\">.focus( delay [, callback ] )</a> </h4> <ul> <li> <div><strong>delay</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Integer\">Integer</a> </div> <div>The number of milliseconds to wait before setting focus.</div> </li> <li> <div><strong>callback</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Function\">Function</a>()</div> <div>A function to invoke after the element has been focused.</div> </li> </ul> </li></ul> <div class=\"longdesc\" id=\"entry-longdesc\"> <p>This plugin extends jQuery's built-in <a href=\"https://api.jquery.com/focus/\"><code>.focus()</code></a> method. If jQuery UI is not loaded, calling the <code>.focus()</code> method may not fail directly, as the method still exists. However, the expected behavior will not occur.</p> <p class=\"warning\">This method is deprecated. Use <code>.focus()</code> without arguments inside a timeout or <a href=\"jquery.widget#method-_delay\">$.Widget's <code>._delay()</code></a> method.</p> </div> </div></article> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; The jQuery Foundation and other contributors<br>Licensed under the MIT License.<br>\n    <a href=\"https://api.jqueryui.com/focus\" class=\"_attribution-link\">https://api.jqueryui.com/focus</a>\n  </p>\n</div>\n","fold-effect":"<h1 class=\"entry-title\">Fold Effect</h1> <div class=\"entry-content\"> <article id=\"fold1\" class=\"entry effect\"><h2 class=\"section-title\"><span>Fold Effect</span></h2> <div class=\"entry-wrapper\"> <p class=\"desc\"><strong>Description: </strong> The fold effect hides or shows an element by folding it. </p> <ul class=\"signatures\"><li class=\"signature\"> <h4 class=\"name\">fold</h4> <ul> <li> <div> <strong>size</strong> (default: <code>15</code>)</div> <div>Type: <a href=\"http://api.jquery.com/Types/#Number\">Number</a> or <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>The size of the \"folded\" element.</div> </li> <li> <div> <strong>horizFirst</strong> (default: <code>false</code>)</div> <div>Type: <a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> </div> <div>Whether the horizontal direction happens first when hiding. Remember, showing inverts hiding.</div> </li> </ul> </li></ul> <section class=\"entry-examples\" id=\"entry-examples\"><h2>Example:</h2>\n<div class=\"entry-example\" id=\"example-0\"> <p>Toggle a div using the fold effect.</p> <pre class=\"syntaxhighlighter xml\">&lt;!doctype html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"utf-8\"&gt;\n  &lt;title&gt;fold demo&lt;/title&gt;\n  &lt;link rel=\"stylesheet\" href=\"//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css\"&gt;\n  &lt;style&gt;\n  #toggle {\n    width: 100px;\n    height: 100px;\n    background: #ccc;\n  }\n  &lt;/style&gt;\n  &lt;script src=\"//code.jquery.com/jquery-1.10.2.js\"&gt;&lt;/script&gt;\n  &lt;script src=\"//code.jquery.com/ui/1.11.4/jquery-ui.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n&lt;p&gt;Click anywhere to toggle the box.&lt;/p&gt;\n&lt;div id=\"toggle\"&gt;&lt;/div&gt;\n \n&lt;script&gt;\n$( document ).click(function() {\n  $( \"#toggle\" ).toggle( \"fold\" );\n});\n&lt;/script&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;</pre> <h4>Demo:</h4>  </div></section> </div></article> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; The jQuery Foundation and other contributors<br>Licensed under the MIT License.<br>\n    <a href=\"https://api.jqueryui.com/fold-effect\" class=\"_attribution-link\">https://api.jqueryui.com/fold-effect</a>\n  </p>\n</div>\n","highlight-effect":"<h1 class=\"entry-title\">Highlight Effect</h1> <div class=\"entry-content\"> <article id=\"highlight1\" class=\"entry effect\"><h2 class=\"section-title\"><span>Highlight Effect</span></h2> <div class=\"entry-wrapper\"> <p class=\"desc\"><strong>Description: </strong> The highlight effect hides or shows an element by animating its background color first. </p> <ul class=\"signatures\"><li class=\"signature\"> <h4 class=\"name\">highlight</h4> <ul><li> <div> <strong>color</strong> (default: <code>\"#ffff99\"</code>)</div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>The background color used during the animation.</div> </li></ul> </li></ul> <section class=\"entry-examples\" id=\"entry-examples\"><h2>Example:</h2>\n<div class=\"entry-example\" id=\"example-0\"> <p>Toggle a div using the highlight effect.</p> <pre class=\"syntaxhighlighter xml\">&lt;!doctype html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"utf-8\"&gt;\n  &lt;title&gt;highlight demo&lt;/title&gt;\n  &lt;link rel=\"stylesheet\" href=\"//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css\"&gt;\n  &lt;style&gt;\n  #toggle {\n    width: 100px;\n    height: 100px;\n    background: #ccc;\n  }\n  &lt;/style&gt;\n  &lt;script src=\"//code.jquery.com/jquery-1.10.2.js\"&gt;&lt;/script&gt;\n  &lt;script src=\"//code.jquery.com/ui/1.11.4/jquery-ui.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n&lt;p&gt;Click anywhere to toggle the box.&lt;/p&gt;\n&lt;div id=\"toggle\"&gt;&lt;/div&gt;\n \n&lt;script&gt;\n$( document ).click(function() {\n  $( \"#toggle\" ).toggle( \"highlight\" );\n});\n&lt;/script&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;</pre> <h4>Demo:</h4>  </div></section> </div></article> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; The jQuery Foundation and other contributors<br>Licensed under the MIT License.<br>\n    <a href=\"https://api.jqueryui.com/highlight-effect\" class=\"_attribution-link\">https://api.jqueryui.com/highlight-effect</a>\n  </p>\n</div>\n","hide":"<h1 class=\"entry-title\">.hide()</h1> <div class=\"entry-content\"> <article id=\"hide1\" class=\"entry method\"><h2 class=\"section-title\"> <span class=\"name\">.hide( effect [, options ] [, duration ] [, complete ] )</span><span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a></span> </h2> <div class=\"entry-wrapper\"> <p class=\"desc\"><strong>Description: </strong>Hide the matched elements, using custom effects.</p> <ul class=\"signatures\"> <li class=\"signature\"> <h4 class=\"name\"><a id=\"hide-effect-options-duration-complete\" href=\"#hide-effect-options-duration-complete\">.hide( effect [, options ] [, duration ] [, complete ] )</a></h4> <ul> <li> <div><strong>effect</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>A string indicating which <a href=\"https://api.jqueryui.com/category/effects/\">effect</a> to use for the transition.</div> </li> <li> <div><strong>options</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>Effect-specific properties and <a href=\"easings\">easing</a>.</div> </li> <li> <div> <strong>duration</strong> (default: <code>400</code>)</div> <div>Type: <a href=\"http://api.jquery.com/Types/#Number\">Number</a> or <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>A string or number determining how long the animation will run.</div> </li> <li> <div><strong>complete</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Function\">Function</a>()</div> <div>A function to call once the animation is complete, called once per matched element.</div> </li> </ul> </li> <li class=\"signature\"> <h4 class=\"name\"><a id=\"hide-options\" href=\"#hide-options\">.hide( options )</a></h4> <ul><li> <div><strong>options</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>All animation settings. The only required property is <code>effect</code>.</div> <ul> <li> <div><strong>effect</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>A string indicating which <a href=\"https://api.jqueryui.com/category/effects/\">effect</a> to use for the transition.</div> </li> <li> <div> <strong>easing</strong> (default: <code>\"swing\"</code>)</div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>A string indicating which <a href=\"easings\">easing</a> function to use for the transition.</div> </li> <li> <div> <strong>duration</strong> (default: <code>400</code>)</div> <div>Type: <a href=\"http://api.jquery.com/Types/#Number\">Number</a> or <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>A string or number determining how long the animation will run.</div> </li> <li> <div><strong>complete</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Function\">Function</a>()</div> <div>A function to call once the animation is complete, called once per matched element.</div> </li> <li> <div> <strong>queue</strong> (default: <code>true</code>)</div> <div>Type: <a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> or <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>A Boolean indicating whether to place the animation in the effects queue. If false, the animation will begin immediately. <strong>As of jQuery 1.7</strong>, the queue option can also accept a string, in which case the animation is added to the queue represented by that string.</div> </li> </ul> </li></ul> </li> </ul> <div class=\"longdesc\" id=\"entry-longdesc\"> <p>This plugin extends jQuery's built-in <a href=\"https://api.jquery.com/hide/\"><code>.hide()</code></a> method. If jQuery UI is not loaded, calling the <code>.hide()</code> method may not fail directly, as the method still exists. However, the expected behavior will not occur.</p> </div> <section class=\"entry-examples\" id=\"entry-examples\"><h2>Example:</h2>\n<div class=\"entry-example\" id=\"example-0\"> <p>Hide a div using the drop effect.</p> <pre class=\"syntaxhighlighter xml\">&lt;!doctype html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"utf-8\"&gt;\n  &lt;title&gt;hide demo&lt;/title&gt;\n  &lt;link rel=\"stylesheet\" href=\"//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css\"&gt;\n  &lt;style&gt;\n  div {\n    width: 100px;\n    height: 100px;\n    background: #ccc;\n    border: 1px solid #000;\n  }\n  &lt;/style&gt;\n  &lt;script src=\"//code.jquery.com/jquery-1.10.2.js\"&gt;&lt;/script&gt;\n  &lt;script src=\"//code.jquery.com/ui/1.11.4/jquery-ui.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n&lt;button&gt;hide the div&lt;/button&gt;\n&lt;div&gt;&lt;/div&gt;\n \n&lt;script&gt;\n$( \"button\" ).click(function() {\n  $( \"div\" ).hide( \"drop\", { direction: \"down\" }, \"slow\" );\n});\n&lt;/script&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;</pre> <h4>Demo:</h4>  </div></section> </div></article> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; The jQuery Foundation and other contributors<br>Licensed under the MIT License.<br>\n    <a href=\"https://api.jqueryui.com/hide\" class=\"_attribution-link\">https://api.jqueryui.com/hide</a>\n  </p>\n</div>\n","theming/icons":"<h1 class=\"entry-title\">Icons</h1>  <p>jQuery UI provides a number of icons that can be used by applying class names to elements. The class names generally follow a syntax of <code>.ui-icon-{icon type}-{icon sub description}-{direction}</code>. For example, the following will display an icon of a thick arrow pointing north:</p> <pre class=\"syntaxhighlighter xml\">&lt;span class=\"ui-icon ui-icon-arrowthick-1-n\"&gt;&lt;/span&gt;</pre> <p>The icons are also integrated into a number of jQuery UI's widgets, such as <a href=\"../accordion#option-icons\">accordion</a>, <a href=\"../button#option-icons\">button</a>, <a href=\"../menu#option-icons\">menu</a>. </p>\n<p>The following is a full list of the icons provided:</p> <iframe src=\"https://api.jqueryui.com/resources/icons-list.html\" width=\"100%\" height=\"1000\"></iframe><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; The jQuery Foundation and other contributors<br>Licensed under the MIT License.<br>\n    <a href=\"https://api.jqueryui.com/theming/icons\" class=\"_attribution-link\">https://api.jqueryui.com/theming/icons</a>\n  </p>\n</div>\n","jquery.ui.keycode":"<h1 class=\"entry-title\">jQuery.ui.keyCode</h1> <div class=\"entry-content\"> <article id=\"jQuery-ui-keyCode1\" class=\"entry property\"><h2 class=\"section-title\"><span>jQuery.ui.keyCode</span></h2> <div class=\"entry-wrapper\"> <p class=\"desc\"><strong>Description: </strong>A mapping of key code descriptions to their numeric values.</p> <ul class=\"signatures\"><li class=\"signature\"> <h4 class=\"name\">jQuery.ui.keyCode</h4> <ul> <li> <div><strong>BACKSPACE</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Integer\">Integer</a> </div>  </li> <li> <div><strong>COMMA</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Integer\">Integer</a> </div>  </li> <li> <div><strong>DELETE</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Integer\">Integer</a> </div>  </li> <li> <div><strong>DOWN</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Integer\">Integer</a> </div>  </li> <li> <div><strong>END</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Integer\">Integer</a> </div>  </li> <li> <div><strong>ENTER</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Integer\">Integer</a> </div>  </li> <li> <div><strong>ESCAPE</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Integer\">Integer</a> </div>  </li> <li> <div><strong>HOME</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Integer\">Integer</a> </div>  </li> <li> <div><strong>LEFT</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Integer\">Integer</a> </div>  </li> <li> <div><strong>PAGE_DOWN</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Integer\">Integer</a> </div>  </li> <li> <div><strong>PAGE_UP</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Integer\">Integer</a> </div>  </li> <li> <div><strong>PERIOD</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Integer\">Integer</a> </div>  </li> <li> <div><strong>RIGHT</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Integer\">Integer</a> </div>  </li> <li> <div><strong>SPACE</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Integer\">Integer</a> </div>  </li> <li> <div><strong>TAB</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Integer\">Integer</a> </div>  </li> <li> <div><strong>UP</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Integer\">Integer</a> </div>  </li> </ul> </li></ul> <section class=\"entry-examples\" id=\"entry-examples\"><h2>Example:</h2>\n<div class=\"entry-example\" id=\"example-0\"> <p>Test for arrow key presses.</p> <pre class=\"syntaxhighlighter javascript\">$( document ).on( \"keydown\", function( event ) {\n  switch( event.keyCode ) {\n    case $.ui.keyCode.LEFT:\n      console.log( \"left\" );\n      break;\n    case $.ui.keyCode.RIGHT:\n      console.log( \"right\" );\n      break;\n    case $.ui.keyCode.UP:\n      console.log( \"up\" );\n      break;\n    case $.ui.keyCode.DOWN:\n      console.log( \"down\" );\n      break;\n  }\n});</pre> </div></section> </div></article> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; The jQuery Foundation and other contributors<br>Licensed under the MIT License.<br>\n    <a href=\"https://api.jqueryui.com/jQuery.ui.keyCode\" class=\"_attribution-link\">https://api.jqueryui.com/jQuery.ui.keyCode</a>\n  </p>\n</div>\n","jquery.widget.bridge":"<h1 class=\"entry-title\">Widget Plugin Bridge</h1> <div class=\"entry-content\"> <article id=\"jQuery-widget-bridge1\" class=\"entry method\"><h2 class=\"section-title\"><span class=\"name\">jQuery.widget.bridge( name, constructor )</span></h2> <div class=\"entry-wrapper\"> <p class=\"desc\"><strong>Description: </strong>Part of the <a href=\"jquery.widget\">jQuery Widget Factory</a> is the <code>jQuery.widget.bridge()</code> method. This acts as the middleman between the object created by <code>$.widget()</code> and the jQuery API.</p> <ul class=\"signatures\"><li class=\"signature\"> <h4 class=\"name\"><a id=\"jQuery-widget-bridge-name-constructor\" href=\"#jQuery-widget-bridge-name-constructor\">jQuery.widget.bridge( name, constructor )</a></h4> <ul> <li> <div><strong>name</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>The name of the plugin to create.</div> </li> <li> <div><strong>constructor</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Function\">Function</a>()</div> <div>The object to instantiate when the plugin is invoked.</div> </li> </ul> </li></ul> <div class=\"longdesc\" id=\"entry-longdesc\"> <p><code>$.widget.bridge()</code> does a few things:</p> <ul> <li>Connects a regular JavaScript constructor to the jQuery API.</li> <li>Automatically creates instances of said object and stores it within the element's <code>$.data</code> cache.</li> <li>Allows calls to public methods.</li> <li>Prevents calls to private methods.</li> <li>Prevents method calls on uninitialized objects.</li> <li>Protects against multiple initializations.</li> </ul> <p>jQuery UI widgets are created using <code>$.widget( \"foo.bar\", {} );</code> syntax to define an object from which instances will be created. Given a DOM structure with five <code>.foo</code>'s, <code>$( \".foo\" ).bar();</code> will create five instances of your \"bar\" object. <code>$.widget.bridge()</code> works inside the factory by taking your base \"bar\" object and giving it a public API. Therefore, you can create instances by writing <code>$( \".foo\" ).bar()</code>, and call methods by writing <code>$( \".foo\" ).bar( \"baz\" )</code>.</p> <p>If all you want is one-time initialization and calling methods, your object passed to <code>jQuery.widget.bridge()</code> can be very minimal:</p> <pre class=\"syntaxhighlighter javascript\">var Highlighter = function( options, element ) {\n  this.options = options;\n  this.element = $( element );\n  this._set( 800 );\n};\nHighlighter.prototype = {\n  toggle: function() {\n    this._set( this.element.css( \"font-weight\") === 400 ? 800 : 400 );\n  },\n  _set: function(value) {\n    this.element.css( \"font-weight\", value );\n  }\n};</pre> <p>All you need here is a function that acts as the constructor, accepting two arguments:</p> <ul> <li> <code>options</code>: an object of configuration options</li> <li> <code>element</code>: the DOM element this instance was created on</li> </ul> <p>You can then hook this object up as a jQuery plugin using the bridge and use it on any jQuery object:</p> <pre class=\"syntaxhighlighter javascript\">// Hook up the plugin\n$.widget.bridge( \"colorToggle\", Highlighter );\n \n// Initialize it on divs\n$( \"div\" ).colorToggle().click(function() {\n  // Call the public method on click\n  $( this ).colorToggle( \"toggle\" );\n});</pre> <p>To use all the features of the bridge, your object also needs to have an <code>_init()</code> method on the prototype. This will get called whenever the plugin is invoked while an instance already exists. In that case you also need to have an <code>option()</code> method. This will be invoked with the options as the first argument. If there were none, the argument will be an empty object. For a proper implementation of the <code>option</code> method, check out the implementation of <a href=\"jquery.widget#jQuery-Widget2\"><code>$.Widget</code></a>.</p> <p>There is one optional property the bridge will use, if present: If your object's prototype has a <code>widgetFullName</code> property, this will be used as the key for storing and retrieving the instance. Otherwise, the name argument will be used.</p> </div> </div></article> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; The jQuery Foundation and other contributors<br>Licensed under the MIT License.<br>\n    <a href=\"https://api.jqueryui.com/jQuery.widget.bridge\" class=\"_attribution-link\">https://api.jqueryui.com/jQuery.widget.bridge</a>\n  </p>\n</div>\n","jquery.widget":"<h1 class=\"entry-title\">Widget Factory</h1> <div class=\"entry-content\"> <div class=\"toc\"> <h4><span>Contents:</span></h4> <ul class=\"toc-list\"> <li> <a href=\"#jQuery-widget1\">jQuery.widget( name [, base ], prototype )</a><ul><li><a href=\"#jQuery-widget-name-base-prototype\">jQuery.widget( name [, base ], prototype )</a></li></ul> </li> <li><a href=\"#jQuery-Widget2\">jQuery.Widget</a></li> </ul> </div>\n<article id=\"jQuery-widget1\" class=\"entry method\"><h2 class=\"section-title\"><span class=\"name\">jQuery.widget( name [, base ], prototype )</span></h2> <div class=\"entry-wrapper\"> <p class=\"desc\"><strong>Description: </strong>Create stateful jQuery plugins using the same abstraction as all jQuery UI widgets.</p> <ul class=\"signatures\"><li class=\"signature\"> <h4 class=\"name\"><a id=\"jQuery-widget-name-base-prototype\" href=\"#jQuery-widget-name-base-prototype\">jQuery.widget( name [, base ], prototype )</a></h4> <ul> <li> <div><strong>name</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>The name of the widget to create, including the namespace.</div> </li> <li> <div><strong>base</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Function\">Function</a>()</div> <div>The base widget to inherit from. This must be a constructor that can be instantiated with the `new` keyword. Defaults to <code>jQuery.Widget</code>.</div> </li> <li> <div><strong>prototype</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#PlainObject\">PlainObject</a> </div> <div>The object to use as a prototype for the widget.</div> </li> </ul> </li></ul> <div class=\"longdesc\" id=\"entry-longdesc\"> <p>You can create new widgets from scratch, using just the <code>$.Widget</code> object as a base to inherit from, or you can explicitly inherit from existing jQuery UI or third-party widgets. Defining a widget with the same name as you inherit from even allows you to extend widgets in place.</p> <p>jQuery UI contains many widgets that maintain state and therefore have a slightly different usage pattern than typical jQuery plugins. All of jQuery UI's widgets use the same patterns, which is defined by the widget factory. So if you learn how to use one widget, then you'll know how to use all of them.</p> <p class=\"note\">Looking for tutorials about the widget factory? Check out <a href=\"http://learn.jquery.com/jquery-ui/widget-factory/\">the articles on the jQuery Learning Center</a>.</p> <p><em>Note: This documentation shows examples using the <a href=\"progressbar\">progressbar widget</a> but the syntax is the same for every widget.</em></p> <h3>Initialization</h3> <p>In order to track the state of the widget, we must introduce a full life cycle for the widget. The life cycle starts when the widget is initialized. To initialize a widget, we simply call the plugin on one or more elements.</p> <pre class=\"syntaxhighlighter javascript\">$( \"#elem\" ).progressbar();</pre> <p>This will initialize each element in the jQuery object, in this case the element with an id of <code>\"elem\"</code>.</p> <h3>Options</h3> <p>Because <code>progressbar()</code> was called with no parameters, the widget was initialized with its default options. We can pass a set of options during initialization to override the defaults:</p> <pre class=\"syntaxhighlighter javascript\">$( \"#elem\" ).progressbar({ value: 20 });</pre> <p>We can pass as many or as few options as we want during initialization. Any options that we don't pass will just use their default values.</p> <p>You can pass multiple options arguments. Those arguments will be merged into one object (similar to <a href=\"https://api.jquery.com/jQuery.extend/\"><code>$.extend( true, target, object1, objectN )</code></a>). This is useful for sharing options between instances, while overriding some properties for each one:</p> <pre class=\"syntaxhighlighter javascript\">var options = { modal: true, show: \"slow\" };\n$( \"#dialog1\" ).dialog( options );\n$( \"#dialog2\" ).dialog( options, { autoOpen: false });</pre> <p>All options passed on init are deep-copied to ensure the objects can be modified later without affecting the widget. Arrays are the only exception, they are referenced as-is. This exception is in place to support data-binding, where the data source has to be kept as a reference.</p> <p>The default values are stored on the widget's prototype, therefore we have the ability to override the values that jQuery UI sets. For example, after setting the following, all future progressbar instances will default to a value of 80:</p> <pre class=\"syntaxhighlighter javascript\">$.ui.progressbar.prototype.options.value = 80;</pre> <p>The options are part of the widget's state, so we can set options after initialization as well. We'll see this later with the option method.</p> <h3>Methods</h3> <p>Now that the widget is initialized, we can query its state or perform actions on the widget. All actions after initialization take the form of a method call. To call a method on a widget, we pass the name of the method to the jQuery plugin. For example, to call the <code>value()</code> method on our progressbar widget, we would use:</p> <pre class=\"syntaxhighlighter javascript\">$( \"#elem\" ).progressbar( \"value\" );</pre> <p>If the method accepts parameters, we can pass them after the method name. For example, to pass the parameter <code>40</code> to the <code>value()</code> method, we can use:</p> <pre class=\"syntaxhighlighter javascript\">$( \"#elem\" ).progressbar( \"value\", 40 );</pre> <p>Just like other methods in jQuery, most widget methods return the jQuery object for chaining.</p> <pre class=\"syntaxhighlighter javascript\">$( \"#elem\" )\n  .progressbar( \"value\", 90 )\n  .addClass( \"almost-done\" );</pre> <p>Each widget will have its own set of methods based on the functionality that the widget provides. However, there are a few methods that exist on all widgets, which are documented below.</p> <h3>Events</h3> <p>All widgets have events associated with their various behaviors to notify you when the state is changing. For most widgets, when the events are triggered, the names are prefixed with the widget name and lowercased. For example, we can bind to progressbar's <code>change</code> event which is triggered whenever the value changes.</p> <pre class=\"syntaxhighlighter javascript\">$( \"#elem\" ).bind( \"progressbarchange\", function() {\n  alert( \"The value has changed!\" );\n});</pre> <p>Each event has a corresponding callback, which is exposed as an option. We can hook into progressbar's <code>change</code> callback instead of binding to the <code>progressbarchange</code> event, if we want to.</p> <pre class=\"syntaxhighlighter javascript\">$( \"#elem\" ).progressbar({\n  change: function() {\n    alert( \"The value has changed!\" );\n  }\n});</pre> <p>All widgets have a <code>create</code> event which is triggered upon instantiation.</p> <h3>Instance</h3> <p>The widget's instance can be retrieved from a given element using the <a href=\"#method-instance\"><code>instance()</code></a> method.</p> <pre class=\"syntaxhighlighter javascript\">$( \"#elem\" ).progressbar( \"instance\" );</pre> <p>If the <code>instance()</code> method is called on an element that is not associated with the widget, <code>undefined</code> is returned.</p> <pre class=\"syntaxhighlighter javascript\">$( \"#not-a-progressbar\" ).progressbar( \"instance\" ); // undefined</pre> <p>The instance is stored using <a href=\"https://api.jquery.com/jQuery.data/\"><code>jQuery.data()</code></a> with the widget's full name as the key. Therefore, the <a href=\"data-selector\"><code>:data</code></a> selector can also determine whether an element has a given widget bound to it.</p> <pre class=\"syntaxhighlighter javascript\">$( \"#elem\" ).is( \":data('ui-progressbar')\" ); // true\n$( \"#elem\" ).is( \":data('ui-draggable')\" ); // false</pre> <p>Unlike <code>instance()</code>, <code>:data</code> can be used even if the widget being tested for has not loaded.</p> <pre class=\"syntaxhighlighter javascript\">$( \"#elem\" ).nonExistentWidget( \"instance\" ); // TypeError\n$( \"#elem\" ).is( \":data('ui-nonExistentWidget')\" ); // false</pre> <p>You can also use <code>:data</code> to get a list of all elements that are instances of a given widget.</p> <pre class=\"syntaxhighlighter javascript\">$( \":data('ui-progressbar')\" );</pre> <h3>Properties</h3> <p>All widgets have the following set of properties:</p> <ul> <li> <strong>defaultElement</strong>: An element to use when a widget instance is constructed without providing an element. For example, since the progressbar's <code>defaultElement</code> is <code>\"&lt;div&gt;</code>\", <code>$.ui.progressbar({ value: 50 })</code> instantiates a progressbar widget instance on a newly created <code>&lt;div&gt;</code>. </li> <li> <strong>document</strong>: A jQuery object containing the <code>document</code> that the widget's element is within. Useful if you need to interact with widgets within iframes. </li> <li> <strong>element</strong>: A jQuery object containing the element used to instantiate the widget. If you select multiple elements and call <code>.myWidget()</code>, a separate widget instance will be created for each element. Therefore, this property will always contain one element. </li> <li> <strong>namespace</strong>: The location on the global jQuery object that the widget's prototype is stored on. For example a <code>namespace</code> of <code>\"ui\"</code> indicates that the widget's prototype is stored on <code>$.ui</code>. </li> <li> <strong>options</strong>: An object containing the options currently being used by the widget. On instantiation, any options provided by the user will automatically be merged with any default values defined in <code>$.myNamespace.myWidget.prototype.options</code>. User specified options override the defaults. </li> <li> <strong>uuid</strong>: A unique integer identifier for the widget. </li> <li> <strong>version</strong>: The string version of the widget. For jQuery UI widgets this will be set to the version of jQuery UI the widget is using. Widget developers have to set this property in their prototype explicitly. </li> <li> <strong>widgetEventPrefix</strong>: The prefix prepended to the name of events fired from this widget. For example the <code>widgetEventPrefix</code> of the <a href=\"draggable\">draggable widget</a> is <code>\"drag\"</code>, therefore when a draggable is created, the name of the event fired is <code>\"dragcreate\"</code>. By default the <code>widgetEventPrefix</code> of a widget is its name. <em>Note: This property is deprecated and will be removed in a later release. Event names will be changed to widgetName:eventName (e.g. <code>\"draggable:create\"</code>).</em> </li> <li> <strong>widgetFullName</strong>: The full name of the widget including the namespace. For <code>$.widget( \"myNamespace.myWidget\", {} )</code>, <code>widgetFullName</code> will be <code>\"myNamespace-myWidget\"</code>. </li> <li> <strong>widgetName</strong>: The name of the widget. For <code>$.widget( \"myNamespace.myWidget\", {} )</code>, <code>widgetName</code> will be <code>\"myWidget\"</code>. </li> <li> <strong>window</strong>: A jQuery object containing the <code>window</code> that the widget's element is within. Useful if you need to interact with widgets within iframes. </li> </ul> </div> </div></article><article id=\"jQuery-Widget2\" class=\"entry widget\"><h2 class=\"section-title\"><span>Base Widget</span></h2> <div class=\"entry-wrapper\"> <p class=\"desc\"><strong>Description: </strong>The base widget used by the widget factory.</p> <section id=\"quick-nav\"><h2>QuickNav</h2>\n<div class=\"quick-nav-section\"> <h3>Options</h3> <div><a href=\"#option-disabled\">disabled</a></div> <div><a href=\"#option-hide\">hide</a></div> <div><a href=\"#option-show\">show</a></div> </div> <div class=\"quick-nav-section\"> <h3>Methods</h3> <div><a href=\"#method-_create\">_create</a></div> <div><a href=\"#method-_delay\">_delay</a></div> <div><a href=\"#method-_destroy\">_destroy</a></div> <div><a href=\"#method-_focusable\">_focusable</a></div> <div><a href=\"#method-_getCreateEventData\">_getCreateEventData</a></div> <div><a href=\"#method-_getCreateOptions\">_getCreateOptions</a></div> <div><a href=\"#method-_hide\">_hide</a></div> <div><a href=\"#method-_hoverable\">_hoverable</a></div> <div><a href=\"#method-_init\">_init</a></div> <div><a href=\"#method-_off\">_off</a></div> <div><a href=\"#method-_on\">_on</a></div> <div><a href=\"#method-_setOption\">_setOption</a></div> <div><a href=\"#method-_setOptions\">_setOptions</a></div> <div><a href=\"#method-_show\">_show</a></div> <div><a href=\"#method-_super\">_super</a></div> <div><a href=\"#method-_superApply\">_superApply</a></div> <div><a href=\"#method-_trigger\">_trigger</a></div> <div><a href=\"#method-destroy\">destroy</a></div> <div><a href=\"#method-disable\">disable</a></div> <div><a href=\"#method-enable\">enable</a></div> <div><a href=\"#method-instance\">instance</a></div> <div><a href=\"#method-option\">option</a></div> <div><a href=\"#method-widget\">widget</a></div> </div> <div class=\"quick-nav-section\"> <h3>Events</h3> <div><a href=\"#event-create\">create</a></div> </div></section><section id=\"options\"><h2>Options</h2>\n<div id=\"option-disabled\" class=\"api-item first-item\"> <h3>disabled </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> </div> <div class=\"default\"> <strong>Default: </strong><code>false</code> </div> <div>Disables the widget if set to <code>true</code>.</div> <strong>Code examples:</strong><p>Initialize the widget with the <code>disabled</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).widget({\n  disabled: true\n});</pre> <p>Get or set the <code>disabled</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar disabled = $( \".selector\" ).widget( \"option\", \"disabled\" );\n \n// Setter\n$( \".selector\" ).widget( \"option\", \"disabled\", true );</pre> </div> <div id=\"option-hide\" class=\"api-item\"> <h3>hide </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> or <a href=\"http://api.jquery.com/Types/#Number\">Number</a> or <a href=\"http://api.jquery.com/Types/#String\">String</a> or <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div class=\"default\"> <strong>Default: </strong><code>null</code> </div> <div>If and how to animate the hiding of the element.</div> <strong>Multiple types supported:</strong><ul> <li> <strong>Boolean</strong>: When set to <code>false</code>, no animation will be used and the element will be hidden immediately. When set to <code>true</code>, the element will fade out with the default duration and the default easing. </li> <li> <strong>Number</strong>: The element will fade out with the specified duration and the default easing. </li> <li> <strong>String</strong>: The element will be hidden using the specified effect. The value can either be the name of a built-in jQuery animation method, such as <code>\"slideUp\"</code>, or the name of a <a href=\"https://api.jqueryui.com/category/effects/\">jQuery UI effect</a>, such as <code>\"fold\"</code>. In either case the effect will be used with the default duration and the default easing. </li> <li> <strong>Object</strong>: If the value is an object, then <code>effect</code>, <code>delay</code>, <code>duration</code>, and <code>easing</code> properties may be provided. If the <code>effect</code> property contains the name of a jQuery method, then that method will be used; otherwise it is assumed to be the name of a jQuery UI effect. When using a jQuery UI effect that supports additional settings, you may include those settings in the object and they will be passed to the effect. If <code>duration</code> or <code>easing</code> is omitted, then the default values will be used. If <code>effect</code> is omitted, then <code>\"fadeOut\"</code> will be used. If <code>delay</code> is omitted, then no delay is used.</li> </ul> <strong>Code examples:</strong><p>Initialize the widget with the <code>hide</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).widget({\n  hide: { effect: \"explode\", duration: 1000 }\n});</pre> <p>Get or set the <code>hide</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar hide = $( \".selector\" ).widget( \"option\", \"hide\" );\n \n// Setter\n$( \".selector\" ).widget( \"option\", \"hide\", { effect: \"explode\", duration: 1000 } );</pre> </div> <div id=\"option-show\" class=\"api-item\"> <h3>show </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> or <a href=\"http://api.jquery.com/Types/#Number\">Number</a> or <a href=\"http://api.jquery.com/Types/#String\">String</a> or <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div class=\"default\"> <strong>Default: </strong><code>null</code> </div> <div>If and how to animate the showing of the element.</div> <strong>Multiple types supported:</strong><ul> <li> <strong>Boolean</strong>: When set to <code>false</code>, no animation will be used and the element will be shown immediately. When set to <code>true</code>, the element will fade in with the default duration and the default easing. </li> <li> <strong>Number</strong>: The element will fade in with the specified duration and the default easing. </li> <li> <strong>String</strong>: The element will be shown using the specified effect. The value can either be the name of a built-in jQuery animation method, such as <code>\"slideDown\"</code>, or the name of a <a href=\"https://api.jqueryui.com/category/effects/\">jQuery UI effect</a>, such as <code>\"fold\"</code>. In either case the effect will be used with the default duration and the default easing. </li> <li> <strong>Object</strong>: If the value is an object, then <code>effect</code>, <code>delay</code>, <code>duration</code>, and <code>easing</code> properties may be provided. If the <code>effect</code> property contains the name of a jQuery method, then that method will be used; otherwise it is assumed to be the name of a jQuery UI effect. When using a jQuery UI effect that supports additional settings, you may include those settings in the object and they will be passed to the effect. If <code>duration</code> or <code>easing</code> is omitted, then the default values will be used. If <code>effect</code> is omitted, then <code>\"fadeIn\"</code> will be used. If <code>delay</code> is omitted, then no delay is used.</li> </ul> <strong>Code examples:</strong><p>Initialize the widget with the <code>show</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).widget({\n  show: { effect: \"blind\", duration: 800 }\n});</pre> <p>Get or set the <code>show</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar show = $( \".selector\" ).widget( \"option\", \"show\" );\n \n// Setter\n$( \".selector\" ).widget( \"option\", \"show\", { effect: \"blind\", duration: 800 } );</pre> </div></section><section id=\"methods\"><h2>Methods</h2>\n<div id=\"method-_create\"><div class=\"api-item first-item\"> <h3>_create()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> The <code>_create()</code> method is the widget's constructor. There are no parameters, but <code>this.element</code> and <code>this.options</code> are already set. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Set the background color of the widget's element based on an option.</p> <pre class=\"syntaxhighlighter javascript\">_create: function() {\n  this.element.css( \"background-color\", this.options.color );\n}</pre> </div> </div></div> <div id=\"method-_delay\"><div class=\"api-item\"> <h3>_delay( fn [, delay ] )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#Number\">Number</a></span> </h3> <div> Invokes the provided function after a specified delay. Keeps <code>this</code> context correct. Essentially <code>setTimeout()</code>. <p>Returns the timeout ID for use with <code>clearTimeout()</code>.</p> </div> <ul> <li> <div><strong>fn</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Function\">Function</a>() or <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>The function to invoke. Can also be the name of a method on the widget.</div> </li> <li> <div><strong>delay</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Number\">Number</a> </div> <div>The number of milliseconds to wait before invoking the function. Defaults to <code>0</code>.</div> </li> </ul> <div> <strong>Code examples:</strong><p>Call the <code>_foo()</code> method on the widget after 100 milliseconds.</p> <pre class=\"syntaxhighlighter javascript\">this._delay( this._foo, 100 );</pre> </div> </div></div> <div id=\"method-_destroy\"><div class=\"api-item\"> <h3>_destroy()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> The public <a href=\"#method-destroy\"><code>destroy()</code></a> method cleans up all common data, events, etc. and then delegates out to <code>_destroy()</code> for custom, widget-specific, cleanup. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Remove a class from the widget's element when the widget is destroyed.</p> <pre class=\"syntaxhighlighter javascript\">_destroy: function() {\n  this.element.removeClass( \"my-widget\" );\n}</pre> </div> </div></div> <div id=\"method-_focusable\"><div class=\"api-item\"> <h3>_focusable( element )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Sets up <code>element</code> to apply the <code>ui-state-focus</code> class on focus. <p>The event handlers are automatically cleaned up on destroy.</p> </div> <ul><li> <div><strong>element</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The element(s) to apply the focusable behavior to.</div> </li></ul> <div> <strong>Code examples:</strong><p>Apply focusable styling to a set of elements within the widget.</p> <pre class=\"syntaxhighlighter javascript\">this._focusable( this.element.find( \".my-items\" ) );</pre> </div> </div></div> <div id=\"method-_getCreateEventData\"><div class=\"api-item\"> <h3>_getCreateEventData()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#Object\">Object</a></span> </h3> <div> All widgets trigger the <a href=\"#event-create\"><code>create</code></a> event. By default, no data is provided in the event, but this method can return an object which will be passed as the <code>create</code> event's data. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Pass the widget's options to <code>create</code> event handlers as an argument.</p> <pre class=\"syntaxhighlighter javascript\">_getCreateEventData: function() {\n  return this.options;\n}</pre> </div> </div></div> <div id=\"method-_getCreateOptions\"><div class=\"api-item\"> <h3>_getCreateOptions()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#Object\">Object</a></span> </h3> <div> This method allows the widget to define a custom method for defining options during instantiation. The user-provided options override the options returned by this method, which override the default options. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Make the widget element's id attribute available as an option.</p> <pre class=\"syntaxhighlighter javascript\">_getCreateOptions: function() {\n  return { id: this.element.attr( \"id\" ) };\n}</pre> </div> </div></div> <div id=\"method-_hide\"><div class=\"api-item\"> <h3>_hide( element, option [, callback ] )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Hides an element immediately, using built-in animation methods, or using custom effects. See the <a href=\"#option-hide\">hide</a> option for possible <code>option</code> values. </div> <ul> <li> <div><strong>element</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The element(s) to hide.</div> </li> <li> <div><strong>option</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>The properties defining how to hide the element.</div> </li> <li> <div><strong>callback</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Function\">Function</a>()</div> <div>Callback to invoke after the element has been fully hidden.</div> </li> </ul> <div> <strong>Code examples:</strong><p>Pass along the <code>hide</code> option for custom animations.</p> <pre class=\"syntaxhighlighter javascript\">this._hide( this.element, this.options.hide, function() {\n \n  // Remove the element from the DOM when it's fully hidden.\n  $( this ).remove();\n});</pre> </div> </div></div> <div id=\"method-_hoverable\"><div class=\"api-item\"> <h3>_hoverable( element )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Sets up <code>element</code> to apply the <code>ui-state-hover</code> class on hover. <p>The event handlers are automatically cleaned up on destroy.</p> </div> <ul><li> <div><strong>element</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The element(s) to apply the hoverable behavior to.</div> </li></ul> <div> <strong>Code examples:</strong><p>Apply hoverable styling to all <code>&lt;div&gt;</code>s within the element on hover.</p> <pre class=\"syntaxhighlighter javascript\">this._hoverable( this.element.find( \"div\" ) );</pre> </div> </div></div> <div id=\"method-_init\"><div class=\"api-item\"> <h3>_init()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Widgets have the concept of initialization that is distinct from creation. Any time the plugin is called with no arguments or with only an option hash, the widget is initialized; this includes when the widget is created. <p><em>Note: Initialization should only be handled if there is a logical action to perform on successive calls to the widget with no arguments.</em></p> </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Call the <code>open()</code> method if the <code>autoOpen</code> option is set.</p> <pre class=\"syntaxhighlighter javascript\">_init: function() {\n  if ( this.options.autoOpen ) {\n    this.open();\n  }\n}</pre> </div> </div></div> <div id=\"method-_off\"><div class=\"api-item\"> <h3>_off( element, eventName )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Unbinds event handlers from the specified element(s). </div> <ul> <li> <div><strong>element</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div> The element(s) to unbind the event handlers from. Unlike the <code>_on()</code> method, the elements are required for <code>_off()</code>. </div> </li> <li> <div><strong>eventName</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>One or more space-separated event types.</div> </li> </ul> <div> <strong>Code examples:</strong><p>Unbind all click events from the widget's element.</p> <pre class=\"syntaxhighlighter javascript\">this._off( this.element, \"click\" );</pre> </div> </div></div> <div id=\"method-_on\"><div class=\"api-item\"> <h3>_on( [suppressDisabledCheck ] [, element ], handlers )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Binds event handlers to the specified element(s). Delegation is supported via selectors inside the event names, e.g., \"<code>click .foo</code>\". The <code>_on()</code> method provides several benefits of direct event binding: <ul> <li>Maintains proper <code>this</code> context inside the handlers.</li> <li>Automatically handles disabled widgets: If the widget is disabled or the event occurs on an element with the <code>ui-state-disabled</code> class, the event handler is not invoked. Can be overridden with the <code>suppressDisabledCheck</code> parameter.</li> <li>Event handlers are automatically namespaced and cleaned up on destroy.</li> </ul> </div> <ul> <li> <div> <strong>suppressDisabledCheck</strong> (default: <code>false</code>)</div> <div>Type: <a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> </div> <div>Whether or not to bypass the disabled check.</div> </li> <li> <div><strong>element</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>Which element(s) to bind the event handlers to. If no element is provided, <code>this.element</code> is used for non-delegated events and <a href=\"#method-widget\">the widget element</a> is used for delegated events.</div> </li> <li> <div><strong>handlers</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div> An object in which the keys represent the event type and optional selector for delegation, and the values represent a handler function to be called for the event. </div> </li> </ul> <div> <strong>Code examples:</strong><p>Prevent the default action of all links clicked within the widget's element.</p> <pre class=\"syntaxhighlighter javascript\">this._on( this.element, {\n  \"click a\": function( event ) {\n    event.preventDefault();\n  }\n});</pre> </div> </div></div> <div id=\"method-_setOption\"><div class=\"api-item\"> <h3>_setOption( key, value )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Called from the <a href=\"#method-_setOptions\"><code>_setOptions()</code></a> method for each individual option. Widget state should be updated based on changes. </div> <ul> <li> <div><strong>key</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>The name of the option to set.</div> </li> <li> <div><strong>value</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>A value to set for the option.</div> </li> </ul> <div> <strong>Code examples:</strong><p>Update a widget's element when its <code>height</code> or <code>width</code> option changes.</p> <pre class=\"syntaxhighlighter javascript\">_setOption: function( key, value ) {\n  if ( key === \"width\" ) {\n    this.element.width( value );\n  }\n  if ( key === \"height\" ) {\n    this.element.height( value );\n  }\n  this._super( key, value );\n}</pre> </div> </div></div> <div id=\"method-_setOptions\"><div class=\"api-item\"> <h3>_setOptions( options )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Called whenever the <a href=\"#method-option\"><code>option()</code></a> method is called, regardless of the form in which the <code>option()</code> method was called. <p>Overriding this is useful if you can defer processor-intensive changes for multiple option changes.</p> </div> <ul><li> <div><strong>options</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>An object containing options to set, with the name of the option as the key and the option value as the value.</div> </li></ul> <div> <strong>Code examples:</strong><p>Call a <code>resize()</code> method if the <code>height</code> or <code>width</code> options change.</p> <pre class=\"syntaxhighlighter javascript\">_setOptions: function( options ) {\n  var that = this,\n    resize = false;\n \n  $.each( options, function( key, value ) {\n    that._setOption( key, value );\n    if ( key === \"height\" || key === \"width\" ) {\n      resize = true;\n    }\n  });\n \n  if ( resize ) {\n    this.resize();\n  }\n}</pre> </div> </div></div> <div id=\"method-_show\"><div class=\"api-item\"> <h3>_show( element, option [, callback ] )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Shows an element immediately, using built-in animation methods, or using custom effects. See the <a href=\"#option-show\">show</a> option for possible <code>option</code> values. </div> <ul> <li> <div><strong>element</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The element(s) to show.</div> </li> <li> <div><strong>option</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>The properties defining how to show the element.</div> </li> <li> <div><strong>callback</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Function\">Function</a>()</div> <div>Callback to invoke after the element has been fully shown.</div> </li> </ul> <div> <strong>Code examples:</strong><p>Pass along the <code>show</code> option for custom animations.</p> <pre class=\"syntaxhighlighter javascript\">this._show( this.element, this.options.show, function() {\n \n  // Focus the element when it's fully visible.\n  this.focus();\n}</pre> </div> </div></div> <div id=\"method-_super\"><div class=\"api-item\"> <h3>_super( [arg ] [, ... ] )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Invokes the method of the same name from the parent widget, with any specified arguments. Essentially <code>.call()</code>. </div> <ul><li> <div><strong>arg</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div> Zero to many arguments to pass to the parent widget's method. </div> </li></ul> <div> <strong>Code examples:</strong><p>Handle <code>title</code> option updates and call the parent widget's <code>_setOption()</code> to update the internal storage of the option.</p> <pre class=\"syntaxhighlighter javascript\">_setOption: function( key, value ) {\n  if ( key === \"title\" ) {\n    this.element.find( \"h3\" ).text( value );\n  }\n  this._super( key, value );\n}</pre> </div> </div></div> <div id=\"method-_superApply\"><div class=\"api-item\"> <h3>_superApply( arguments )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Invokes the method of the same name from the parent widget, with the array of arguments. Essentially <code>.apply()</code>. </div> <ul><li> <div><strong>arguments</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Array\">Array</a> </div> <div>Array of arguments to pass to the parent method.</div> </li></ul> <div> <strong>Code examples:</strong><p>Handle <code>title</code> option updates and call the parent widget's <code>_setOption()</code> to update the internal storage of the option.</p> <pre class=\"syntaxhighlighter javascript\">_setOption: function( key, value ) {\n  if ( key === \"title\" ) {\n    this.element.find( \"h3\" ).text( value );\n  }\n  this._superApply( arguments );\n}</pre> </div> </div></div> <div id=\"method-_trigger\"><div class=\"api-item\"> <h3>_trigger( type [, event ] [, data ] )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a></span> </h3> <div> Triggers an event and its associated callback. <p>The option with the name equal to type is invoked as the callback.</p> <p>The event name is the lowercase concatenation of the widget name and type.</p> <p><em>Note: When providing data, you must provide all three parameters. If there is no event to pass along, just pass <code>null</code>.</em></p> <p>If the default action is prevented, <code>false</code> will be returned, otherwise <code>true</code>. Preventing the default action happens when the handler returns <code>false</code> or calls <code>event.preventDefault()</code>.</p> </div> <ul> <li> <div><strong>type</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>The <code>type</code> should match the name of a callback option. The full event type will be generated automatically.</div> </li> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div> <div>The original event that caused this event to occur; useful for providing context to the listener.</div> </li> <li> <div><strong>data</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>A hash of data associated with the event.</div> </li> </ul> <div> <strong>Code examples:</strong><p>Trigger a <code>search</code> event whenever a key is pressed.</p> <pre class=\"syntaxhighlighter javascript\">this._on( this.element, {\n  keydown: function( event ) {\n \n    // Pass the original event so that the custom search event has\n    // useful information, such as keyCode\n    this._trigger( \"search\", event, {\n \n      // Pass additional information unique to this event\n      value: this.element.val()\n    });\n  }\n});</pre> </div> </div></div> <div id=\"method-destroy\"><div class=\"api-item\"> <h3>destroy()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Removes the widget functionality completely. This will return the element back to its pre-init state. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> </div></div> <div id=\"method-disable\"><div class=\"api-item\"> <h3>disable()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Disables the widget. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> </div></div> <div id=\"method-enable\"><div class=\"api-item\"> <h3>enable()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Enables the widget. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> </div></div> <div id=\"method-instance\"><div class=\"api-item\"> <h3>instance()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#Object\">Object</a></span> </h3> <div> <p>Retrieves the widget's instance object. If the element does not have an associated instance, <code>undefined</code> is returned.</p> <p>Unlike other widget methods, <code>instance()</code> is safe to call on any element after the widget plugin has loaded.</p> </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> </div></div> <div id=\"method-option\"> <div class=\"api-item\"> <h3>option( optionName )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#Object\">Object</a></span> </h3> <div> <p>Gets the value currently associated with the specified <code>optionName</code>.</p> <p><strong>Note:</strong> For options that have objects as their value, you can get the value of a specific key by using dot notation. For example, <code>\"foo.bar\"</code> would get the value of the <code>bar</code> property on the <code>foo</code> option.</p> </div> <ul><li> <div><strong>optionName</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>The name of the option to get.</div> </li></ul> </div> <div class=\"api-item\"> <h3>option()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#PlainObject\">PlainObject</a></span> </h3> <div>Gets an object containing key/value pairs representing the current widget options hash.</div> <ul><li><div class=\"null-signature\">This signature does not accept any arguments.</div></li></ul> </div> <div class=\"api-item\"> <h3>option( optionName, value )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> <p>Sets the value of the widget option associated with the specified <code>optionName</code>.</p> <p><strong>Note:</strong> For options that have objects as their value, you can set the value of just one property by using dot notation for <code>optionName</code>. For example, <code>\"foo.bar\"</code> would update only the <code>bar</code> property of the <code>foo</code> option.</p> </div> <ul> <li> <div><strong>optionName</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>The name of the option to set.</div> </li> <li> <div><strong>value</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>A value to set for the option.</div> </li> </ul> </div> <div class=\"api-item\"> <h3>option( options )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div>Sets one or more options for the widget.</div> <ul><li> <div><strong>options</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>A map of option-value pairs to set.</div> </li></ul> </div> </div> <div id=\"method-widget\"><div class=\"api-item\"> <h3>widget()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a></span> </h3> <div> Returns a <code>jQuery</code> object containing the original element or other relevant generated element. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> </div></div></section><section id=\"events\"><h2>Events</h2>\n<div id=\"event-create\" class=\"api-item first-item\"> <h3>create( event, ui )<span class=\"returns\">Type: <code>widgetcreate</code></span> </h3> <div> Triggered when the widget is created. </div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  </li> </ul> <p><em>Note: The <code>ui</code> object is empty but included for consistency with other events.</em></p> <div> <strong>Code examples:</strong><p>Initialize the widget with the create callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).widget({\n  create: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the widgetcreate event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"widgetcreate\", function( event, ui ) {} );</pre> </div> </div></section> </div></article> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; The jQuery Foundation and other contributors<br>Licensed under the MIT License.<br>\n    <a href=\"https://api.jqueryui.com/jQuery.widget\" class=\"_attribution-link\">https://api.jqueryui.com/jQuery.widget</a>\n  </p>\n</div>\n","puff-effect":"<h1 class=\"entry-title\">Puff Effect</h1> <div class=\"entry-content\"> <article id=\"puff1\" class=\"entry effect\"><h2 class=\"section-title\"><span>Puff Effect</span></h2> <div class=\"entry-wrapper\"> <p class=\"desc\"><strong>Description: </strong> Creates a puff effect by scaling the element up and hiding it at the same time. </p> <ul class=\"signatures\"><li class=\"signature\"> <h4 class=\"name\">puff</h4> <ul><li> <div> <strong>percent</strong> (default: <code>150</code>)</div> <div>Type: <a href=\"http://api.jquery.com/Types/#Number\">Number</a> </div> <div>The percentage to scale to.</div> </li></ul> </li></ul> <section class=\"entry-examples\" id=\"entry-examples\"><h2>Example:</h2>\n<div class=\"entry-example\" id=\"example-0\"> <p>Toggle a div using the puff effect.</p> <pre class=\"syntaxhighlighter xml\">&lt;!doctype html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"utf-8\"&gt;\n  &lt;title&gt;puff demo&lt;/title&gt;\n  &lt;link rel=\"stylesheet\" href=\"//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css\"&gt;\n  &lt;style&gt;\n  #toggle {\n    width: 100px;\n    height: 100px;\n    background: #ccc;\n  }\n  &lt;/style&gt;\n  &lt;script src=\"//code.jquery.com/jquery-1.10.2.js\"&gt;&lt;/script&gt;\n  &lt;script src=\"//code.jquery.com/ui/1.11.4/jquery-ui.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n&lt;p&gt;Click anywhere to toggle the box.&lt;/p&gt;\n&lt;div id=\"toggle\"&gt;&lt;/div&gt;\n \n&lt;script&gt;\n$( document ).click(function() {\n  $( \"#toggle\" ).toggle( \"puff\" );\n});\n&lt;/script&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;</pre> <h4>Demo:</h4>  </div></section> </div></article> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; The jQuery Foundation and other contributors<br>Licensed under the MIT License.<br>\n    <a href=\"https://api.jqueryui.com/puff-effect\" class=\"_attribution-link\">https://api.jqueryui.com/puff-effect</a>\n  </p>\n</div>\n","mouse":"<h1 class=\"entry-title\">Mouse Interaction</h1> <div class=\"entry-content\"> <article id=\"mouse1\" class=\"entry widget\"><h2 class=\"section-title\"><span>Mouse Interaction</span></h2> <div class=\"entry-wrapper\"> <p class=\"desc\"><strong>Description: </strong>The base interaction layer.</p> <section id=\"quick-nav\"><h2>QuickNav</h2>\n<div class=\"quick-nav-section\"> <h3>Options</h3> <div><a href=\"#option-cancel\">cancel</a></div> <div><a href=\"#option-delay\">delay</a></div> <div><a href=\"#option-distance\">distance</a></div> </div> <div class=\"quick-nav-section\"> <h3>Methods</h3> <div><a href=\"#method-_mouseCapture\">_mouseCapture</a></div> <div><a href=\"#method-_mouseDelayMet\">_mouseDelayMet</a></div> <div><a href=\"#method-_mouseDestroy\">_mouseDestroy</a></div> <div><a href=\"#method-_mouseDistanceMet\">_mouseDistanceMet</a></div> <div><a href=\"#method-_mouseDown\">_mouseDown</a></div> <div><a href=\"#method-_mouseDrag\">_mouseDrag</a></div> <div><a href=\"#method-_mouseInit\">_mouseInit</a></div> <div><a href=\"#method-_mouseMove\">_mouseMove</a></div> <div><a href=\"#method-_mouseStart\">_mouseStart</a></div> <div><a href=\"#method-_mouseStop\">_mouseStop</a></div> <div><a href=\"#method-_mouseUp\">_mouseUp</a></div> </div> <div class=\"quick-nav-section\"><h3>Events</h3></div></section><div class=\"longdesc\" id=\"entry-longdesc\"> <p>Similar to <a href=\"jquery.widget#jQuery-Widget2\"><code>jQuery.Widget</code></a>, the mouse interaction is not intended to be used directly. It is purely a base layer for other widgets to inherit from. This page only documents what is added to <code>jQuery.Widget</code>, but it does include internal methods that are not intended to be overwritten. The intended public API is <a href=\"#method-_mouseStart\"><code>_mouseStart()</code></a>, <a href=\"#method-_mouseDrag\"><code>_mouseDrag()</code></a>, <a href=\"#method-_mouseStop\"><code>_mouseStop()</code></a>, and <a href=\"#method-_mouseCapture\"><code>_mouseCapture()</code></a>.</p> <h3>Dependencies</h3> <ul> <li><a href=\"jquery.widget\">Widget Factory</a></li> </ul> </div> <section id=\"options\"><h2>Options</h2>\n<div id=\"option-cancel\" class=\"api-item first-item\"> <h3>cancel </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Selector\">Selector</a> </div> <div class=\"default\"> <strong>Default: </strong><code>\"input,textarea,button,select,option\"</code> </div> <div>Prevents interactions from starting on specified elements.</div> <strong>Code examples:</strong><p>Initialize the mouse with the <code>cancel</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).mouse({\n  cancel: \".title\"\n});</pre> <p>Get or set the <code>cancel</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar cancel = $( \".selector\" ).mouse( \"option\", \"cancel\" );\n \n// Setter\n$( \".selector\" ).mouse( \"option\", \"cancel\", \".title\" );</pre> </div> <div id=\"option-delay\" class=\"api-item\"> <h3>delay </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Number\">Number</a> </div> <div class=\"default\"> <strong>Default: </strong><code>0</code> </div> <div>Time in milliseconds after mousedown until the interaction should start. This option can be used to prevent unwanted interactions when clicking on an element.</div> <strong>Code examples:</strong><p>Initialize the mouse with the <code>delay</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).mouse({\n  delay: 300\n});</pre> <p>Get or set the <code>delay</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar delay = $( \".selector\" ).mouse( \"option\", \"delay\" );\n \n// Setter\n$( \".selector\" ).mouse( \"option\", \"delay\", 300 );</pre> </div> <div id=\"option-distance\" class=\"api-item\"> <h3>distance </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Number\">Number</a> </div> <div class=\"default\"> <strong>Default: </strong><code>1</code> </div> <div>Distance in pixels after mousedown the mouse must move before the interaction should start. This option can be used to prevent unwanted interactions when clicking on an element.</div> <strong>Code examples:</strong><p>Initialize the mouse with the <code>distance</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).mouse({\n  distance: 10\n});</pre> <p>Get or set the <code>distance</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar distance = $( \".selector\" ).mouse( \"option\", \"distance\" );\n \n// Setter\n$( \".selector\" ).mouse( \"option\", \"distance\", 10 );</pre> </div></section><section id=\"methods\"><h2>Methods</h2>\n<div id=\"method-_mouseCapture\"><div class=\"api-item first-item\"> <h3>_mouseCapture()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a></span> </h3> <div> Determines whether an interaction should start based on event target of the interaction. The default implementation always returns <code>true</code>. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the _mouseCapture method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).mouse( \"_mouseCapture\" );</pre> </div> </div></div> <div id=\"method-_mouseDelayMet\"><div class=\"api-item\"> <h3>_mouseDelayMet()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a></span> </h3> <div> Determines whether the <a href=\"#option-delay\"><code>delay</code></a> option has been met for the current interaction. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the _mouseDelayMet method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).mouse( \"_mouseDelayMet\" );</pre> </div> </div></div> <div id=\"method-_mouseDestroy\"><div class=\"api-item\"> <h3>_mouseDestroy()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Destroys the interaction event handlers. This must be called from the extending widget's <code>_destroy()</code> method. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the _mouseDestroy method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).mouse( \"_mouseDestroy\" );</pre> </div> </div></div> <div id=\"method-_mouseDistanceMet\"><div class=\"api-item\"> <h3>_mouseDistanceMet()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a></span> </h3> <div> Determines whether the <a href=\"#option-distance\"><code>distance</code></a> option has been met for the current interaction. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the _mouseDistanceMet method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).mouse( \"_mouseDistanceMet\" );</pre> </div> </div></div> <div id=\"method-_mouseDown\"><div class=\"api-item\"> <h3>_mouseDown()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Handles the beginning of an interaction. Verifies that the event is associated with the primary mouse button and ensures that the <a href=\"#option-delay\"><code>delay</code></a> and <a href=\"#option-distance\"><code>distance</code></a> options are met prior to starting the interaction. When the interaction is ready to start, invokes the <a href=\"#method-_mouseStart\"><code>_mouseStart()</code></a> method for the extending widget to handle. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the _mouseDown method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).mouse( \"_mouseDown\" );</pre> </div> </div></div> <div id=\"method-_mouseDrag\"><div class=\"api-item\"> <h3>_mouseDrag()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> The extending widget should implement a <code>_mouseDrag()</code> method to handle each movement of an interaction. This method will receive the mouse event associated with the movement. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the _mouseDrag method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).mouse( \"_mouseDrag\" );</pre> </div> </div></div> <div id=\"method-_mouseInit\"><div class=\"api-item\"> <h3>_mouseInit()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Initializes the interaction event handlers. This must be called from the extending widget's <code>_create()</code> method. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the _mouseInit method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).mouse( \"_mouseInit\" );</pre> </div> </div></div> <div id=\"method-_mouseMove\"><div class=\"api-item\"> <h3>_mouseMove()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Handles each movement of the interaction. Invokes the <a href=\"#method-_mouseDrag\"><code>mouseDrag()</code></a> method for the extending widget to handle. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the _mouseMove method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).mouse( \"_mouseMove\" );</pre> </div> </div></div> <div id=\"method-_mouseStart\"><div class=\"api-item\"> <h3>_mouseStart()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> The extending widget should implement a <code>_mouseStart()</code> method to handle the beginning of an interaction. This method will receive the mouse event associated with the start of the interaction. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the _mouseStart method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).mouse( \"_mouseStart\" );</pre> </div> </div></div> <div id=\"method-_mouseStop\"><div class=\"api-item\"> <h3>_mouseStop()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> The extending widget should implement a <code>_mouseStop()</code> method to handle the end of an interaction. This method will receive the mouse event associated with the end of the interaction. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the _mouseStop method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).mouse( \"_mouseStop\" );</pre> </div> </div></div> <div id=\"method-_mouseUp\"><div class=\"api-item\"> <h3>_mouseUp()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Handles the end of the interaction. Invokes the <a href=\"#method-_mouseStop\"><code>mouseStop()</code></a> method for the extending widget to handle. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the _mouseUp method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).mouse( \"_mouseUp\" );</pre> </div> </div></div></section> </div></article> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; The jQuery Foundation and other contributors<br>Licensed under the MIT License.<br>\n    <a href=\"https://api.jqueryui.com/mouse\" class=\"_attribution-link\">https://api.jqueryui.com/mouse</a>\n  </p>\n</div>\n","menu":"<h1 class=\"entry-title\">Menu Widget</h1> <div class=\"entry-content\"> <article id=\"menu1\" class=\"entry widget\"><h2 class=\"section-title\"> <span>Menu Widget</span><span class=\"version-details\">version added: 1.9</span> </h2> <div class=\"entry-wrapper\"> <p class=\"desc\"><strong>Description: </strong> Themeable menu with mouse and keyboard interactions for navigation. </p> <section id=\"quick-nav\"><h2>QuickNav<a href=\"#entry-examples\">Examples</a> </h2>\n<div class=\"quick-nav-section\"> <h3>Options</h3> <div><a href=\"#option-disabled\">disabled</a></div> <div><a href=\"#option-icons\">icons</a></div> <div><a href=\"#option-items\">items</a></div> <div><a href=\"#option-menus\">menus</a></div> <div><a href=\"#option-position\">position</a></div> <div><a href=\"#option-role\">role</a></div> </div> <div class=\"quick-nav-section\"> <h3>Methods</h3> <div><a href=\"#method-blur\">blur</a></div> <div><a href=\"#method-collapse\">collapse</a></div> <div><a href=\"#method-collapseAll\">collapseAll</a></div> <div><a href=\"#method-destroy\">destroy</a></div> <div><a href=\"#method-disable\">disable</a></div> <div><a href=\"#method-enable\">enable</a></div> <div><a href=\"#method-expand\">expand</a></div> <div><a href=\"#method-focus\">focus</a></div> <div><a href=\"#method-instance\">instance</a></div> <div><a href=\"#method-isFirstItem\">isFirstItem</a></div> <div><a href=\"#method-isLastItem\">isLastItem</a></div> <div><a href=\"#method-next\">next</a></div> <div><a href=\"#method-nextPage\">nextPage</a></div> <div><a href=\"#method-option\">option</a></div> <div><a href=\"#method-previous\">previous</a></div> <div><a href=\"#method-previousPage\">previousPage</a></div> <div><a href=\"#method-refresh\">refresh</a></div> <div><a href=\"#method-select\">select</a></div> <div><a href=\"#method-widget\">widget</a></div> <br><h3>Extension Points</h3> <div><a href=\"#method-_closeOnDocumentClick\">_closeOnDocumentClick</a></div> <div><a href=\"#method-_isDivider\">_isDivider</a></div> </div> <div class=\"quick-nav-section\"> <h3>Events</h3> <div><a href=\"#event-blur\">blur</a></div> <div><a href=\"#event-create\">create</a></div> <div><a href=\"#event-focus\">focus</a></div> <div><a href=\"#event-select\">select</a></div> </div></section><div class=\"longdesc\" id=\"entry-longdesc\"> <p>A menu can be created from any valid markup as long as the elements have a strict parent/child relationship. The most commonly used element is the unordered list (<code>&lt;ul&gt;</code>):</p> <pre class=\"syntaxhighlighter xml\">&lt;ul id=\"menu\"&gt;\n  &lt;li&gt;Item 1&lt;/li&gt;\n  &lt;li&gt;Item 2&lt;/li&gt;\n  &lt;li&gt;Item 3\n    &lt;ul&gt;\n      &lt;li&gt;Item 3-1&lt;/li&gt;\n      &lt;li&gt;Item 3-2&lt;/li&gt;\n      &lt;li&gt;Item 3-3&lt;/li&gt;\n      &lt;li&gt;Item 3-4&lt;/li&gt;\n      &lt;li&gt;Item 3-5&lt;/li&gt;\n    &lt;/ul&gt;\n  &lt;/li&gt;\n  &lt;li&gt;Item 4&lt;/li&gt;\n  &lt;li&gt;Item 5&lt;/li&gt;\n&lt;/ul&gt;</pre> <p>If you use a structure other than <code>&lt;ul&gt;</code>/<code>&lt;li&gt;</code>, including using the same element for the menu and the menu items, use the <a href=\"#option-menus\"><code>menus</code></a> option to specify a way to differentiate the two elements, e.g., <code>menus: \"div.menuElement\"</code>.</p> <p>Any menu item can be disabled by adding the <code>ui-state-disabled</code> class to that element.</p> <h3 id=\"icons\">Icons</h3> <p>To add icons to the menu, include them in the markup:</p> <pre class=\"syntaxhighlighter xml\">&lt;ul id=\"menu\"&gt;\n  &lt;li&gt;&lt;span class=\"ui-icon ui-icon-disk\"&gt;&lt;/span&gt;Save&lt;/li&gt;\n&lt;/ul&gt;</pre> <p>Menu automatically adds the necessary padding to items without icons.</p> <h3 id=\"dividers\">Dividers</h3> <p>Divider elements can be created by including unlinked menu items that contain only spaces and/or dashes:</p> <pre class=\"syntaxhighlighter xml\">&lt;ul id=\"menu\"&gt;\n  &lt;li&gt;Item 1&lt;/li&gt;\n  &lt;li&gt;-&lt;/li&gt;\n  &lt;li&gt;Item 2&lt;/li&gt;\n&lt;/ul&gt;</pre> <h3>Keyboard interaction</h3> <ul> <li> <code>ENTER</code>/<code>SPACE</code>: Invoke the focused menu item's action, which may be opening a submenu.</li> <li> <code>UP</code>: Move focus to the previous menu item.</li> <li> <code>DOWN</code>: Move focus to the next menu item.</li> <li> <code>RIGHT</code>: Open the submenu, if available.</li> <li> <code>LEFT</code>: Close the current submenu and move focus to the parent menu item. If not in a submenu, do nothing.</li> <li> <code>ESCAPE</code>: Close the current submenu and move focus to the parent menu item. If not in a submenu, do nothing.</li> </ul> <p>Typing a letter moves focus to the first item whose title starts with that character. Repeating the same character cycles through matching items. Typing more characters within the one second timer matches those characters.</p> <p>Disabled items can receive keyboard focus, but do not allow any other interaction.</p> <div> <h3 id=\"theming\">Theming</h3> <p>The menu widget uses the <a href=\"theming/css-framework\">jQuery UI CSS framework</a> to style its look and feel. If menu specific styling is needed, the following CSS class names can be used:</p> </div> <ul> <li> <code>ui-menu</code>: The outer container of the menu. This element will additionally have a <code>ui-menu-icons</code> class if the menu contains icons. <ul> <li> <code>ui-menu-item</code>: The container for individual menu items. <ul> <li> <code>ui-menu-icon</code>: The submenu icons set via the <a href=\"#option-icons\"><code>icons</code></a> option.</li> </ul> </li> <li> <code>ui-menu-divider</code>: Divider elements between menu items.</li> </ul> </li> </ul> <h3>Dependencies</h3> <ul> <li><a href=\"https://api.jqueryui.com/category/ui-core/\">UI Core</a></li> <li><a href=\"jquery.widget\">Widget Factory</a></li> <li><a href=\"position\">Position</a></li> </ul> </div> <h3>Additional Notes:</h3> <div class=\"longdesc\"><ul><li> This widget requires some functional CSS, otherwise it won't work. If you build a custom theme, use the widget's specific CSS file as a starting point. </li></ul></div> <section id=\"options\"><h2>Options</h2>\n<div id=\"option-disabled\" class=\"api-item first-item\"> <h3>disabled </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> </div> <div class=\"default\"> <strong>Default: </strong><code>false</code> </div> <div>Disables the menu if set to <code>true</code>.</div> <strong>Code examples:</strong><p>Initialize the menu with the <code>disabled</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).menu({\n  disabled: true\n});</pre> <p>Get or set the <code>disabled</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar disabled = $( \".selector\" ).menu( \"option\", \"disabled\" );\n \n// Setter\n$( \".selector\" ).menu( \"option\", \"disabled\", true );</pre> </div> <div id=\"option-icons\" class=\"api-item\"> <h3>icons </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div class=\"default\"> <strong>Default: </strong><code>{ submenu: \"ui-icon-carat-1-e\" }</code> </div> <div> Icons to use for submenus, matching <a href=\"theming/icons\">an icon provided by the jQuery UI CSS Framework</a>. <ul> <li>submenu (string, default: \"ui-icon-carat-1-e\")</li> </ul> </div> <strong>Code examples:</strong><p>Initialize the menu with the <code>icons</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).menu({\n  icons: { submenu: \"ui-icon-circle-triangle-e\" }\n});</pre> <p>Get or set the <code>icons</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar icons = $( \".selector\" ).menu( \"option\", \"icons\" );\n \n// Setter\n$( \".selector\" ).menu( \"option\", \"icons\", { submenu: \"ui-icon-circle-triangle-e\" } );</pre> </div> <div id=\"option-items\" class=\"api-item\"> <h3>items </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div class=\"default\"> <strong>Default: </strong><code>\"&gt; *\"</code> </div> <div> <p>Selector for the elements that serve as the menu items.</p> <div class=\"warning\"> <strong>Note:</strong> The <code>items</code> option should not be changed after initialization.</div> <span class=\"version-details\"> (version added: 1.11.0)</span> </div> <strong>Code examples:</strong><p>Initialize the menu with the <code>items</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).menu({\n  items: \".custom-item\"\n});</pre> <p>Get the <code>items</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar items = $( \".selector\" ).menu( \"option\", \"items\" );</pre> </div> <div id=\"option-menus\" class=\"api-item\"> <h3>menus </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div class=\"default\"> <strong>Default: </strong><code>\"ul\"</code> </div> <div> <p>Selector for the elements that serve as the menu container, including sub-menus.</p> <div class=\"warning\"> <strong>Note:</strong> The <code>menus</code> option should not be changed after initialization. Existing submenus will not be updated.</div> </div> <strong>Code examples:</strong><p>Initialize the menu with the <code>menus</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).menu({\n  menus: \"div\"\n});</pre> <p>Get the <code>menus</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar menus = $( \".selector\" ).menu( \"option\", \"menus\" );</pre> </div> <div id=\"option-position\" class=\"api-item\"> <h3>position </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div class=\"default\"> <strong>Default: </strong><code>{ my: \"left top\", at: \"right top\" }</code> </div> <div>Identifies the position of submenus in relation to the associated parent menu item. The <code>of</code> option defaults to the parent menu item, but you can specify another element to position against. You can refer to the <a href=\"position\">jQuery UI Position</a> utility for more details about the various options.</div> <strong>Code examples:</strong><p>Initialize the menu with the <code>position</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).menu({\n  position: { my: \"left top\", at: \"right-5 top+5\" }\n});</pre> <p>Get or set the <code>position</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar position = $( \".selector\" ).menu( \"option\", \"position\" );\n \n// Setter\n$( \".selector\" ).menu( \"option\", \"position\", { my: \"left top\", at: \"right-5 top+5\" } );</pre> </div> <div id=\"option-role\" class=\"api-item\"> <h3>role </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div class=\"default\"> <strong>Default: </strong><code>\"menu\"</code> </div> <div> <p>Customize the ARIA roles used for the menu and menu items. The default uses <code>\"menuitem\"</code> for items. Setting the <code>role</code> option to <code>\"listbox\"</code> will use <code>\"option\"</code> for items. If set to <code>null</code>, no roles will be set, which is useful if the menu is being controlled by another element that is maintaining focus.</p> <div class=\"warning\"> <strong>Note:</strong> The <code>role</code> option should not be changed after initialization. Existing (sub)menus and menu items will not be updated.</div> </div> <strong>Code examples:</strong><p>Initialize the menu with the <code>role</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).menu({\n  role: null\n});</pre> <p>Get the <code>role</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar role = $( \".selector\" ).menu( \"option\", \"role\" );</pre> </div></section><section id=\"methods\"><h2>Methods</h2>\n<div id=\"method-blur\"><div class=\"api-item first-item\"> <h3>blur( [event ] )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Removes focus from a menu, resets any active element styles and triggers the menu's <a href=\"#event-blur\"><code>blur</code></a> event. </div> <ul><li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div> <div>What triggered the menu to blur.</div> </li></ul> <div> <strong>Code examples:</strong><p>Invoke the blur method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).menu( \"blur\" );</pre> </div> </div></div> <div id=\"method-collapse\"><div class=\"api-item\"> <h3>collapse( [event ] )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Closes the currently active sub-menu. </div> <ul><li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div> <div>What triggered the menu to collapse.</div> </li></ul> <div> <strong>Code examples:</strong><p>Invoke the collapse method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).menu( \"collapse\" );</pre> </div> </div></div> <div id=\"method-collapseAll\"><div class=\"api-item\"> <h3>collapseAll( [event ] [, all ] )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Closes all open sub-menus. </div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div> <div>What triggered the menu to collapse.</div> </li> <li> <div><strong>all</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> </div> <div>Indicates whether all sub-menus should be closed or only sub-menus below and including the menu that is or contains the target of the triggering event.</div> </li> </ul> <div> <strong>Code examples:</strong><p>Invoke the collapseAll method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).menu( \"collapseAll\", null, true );</pre> </div> </div></div> <div id=\"method-destroy\"><div class=\"api-item\"> <h3>destroy()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Removes the menu functionality completely. This will return the element back to its pre-init state. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the destroy method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).menu( \"destroy\" );</pre> </div> </div></div> <div id=\"method-disable\"><div class=\"api-item\"> <h3>disable()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Disables the menu. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the disable method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).menu( \"disable\" );</pre> </div> </div></div> <div id=\"method-enable\"><div class=\"api-item\"> <h3>enable()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Enables the menu. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the enable method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).menu( \"enable\" );</pre> </div> </div></div> <div id=\"method-expand\"><div class=\"api-item\"> <h3>expand( [event ] )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Opens the sub-menu below the currently active item, if one exists. </div> <ul><li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div> <div>What triggered the menu to expand.</div> </li></ul> <div> <strong>Code examples:</strong><p>Invoke the expand method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).menu( \"expand\" );</pre> </div> </div></div> <div id=\"method-focus\"><div class=\"api-item\"> <h3>focus( [event ], item )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Activates a particular menu item, begins opening any sub-menu if present and triggers the menu's <a href=\"#event-focus\"><code>focus</code></a> event. </div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div> <div>What triggered the menu item to gain focus.</div> </li> <li> <div><strong>item</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The menu item to focus/activate.</div> </li> </ul> <div> <strong>Code examples:</strong><p>Invoke the focus method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).menu( \"focus\", null, menu.find( \".ui-menu-item:last\" ) );</pre> </div> </div></div> <div id=\"method-instance\"><div class=\"api-item\"> <h3>instance()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#Object\">Object</a></span> </h3> <div> <p>Retrieves the menu's instance object. If the element does not have an associated instance, <code>undefined</code> is returned.</p> <p>Unlike other widget methods, <code>instance()</code> is safe to call on any element after the menu plugin has loaded.</p> </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the instance method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).menu( \"instance\" );</pre> </div> </div></div> <div id=\"method-isFirstItem\"><div class=\"api-item\"> <h3>isFirstItem()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Returns a boolean value stating whether or not the currently active item is the first item in the menu. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the isFirstItem method:</p> <pre class=\"syntaxhighlighter javascript\">var firstItem = $( \".selector\" ).menu( \"isFirstItem\" );</pre> </div> </div></div> <div id=\"method-isLastItem\"><div class=\"api-item\"> <h3>isLastItem()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Returns a boolean value stating whether or not the currently active item is the last item in the menu. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the isLastItem method:</p> <pre class=\"syntaxhighlighter javascript\">var lastItem = $( \".selector\" ).menu( \"isLastItem\" );</pre> </div> </div></div> <div id=\"method-next\"><div class=\"api-item\"> <h3>next( [event ] )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Moves active state to next menu item. </div> <ul><li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div> <div>What triggered the focus to move.</div> </li></ul> <div> <strong>Code examples:</strong><p>Invoke the next method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).menu( \"next\" );</pre> </div> </div></div> <div id=\"method-nextPage\"><div class=\"api-item\"> <h3>nextPage( [event ] )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Moves active state to first menu item below the bottom of a scrollable menu or the last item if not scrollable. </div> <ul><li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div> <div>What triggered the focus to move.</div> </li></ul> <div> <strong>Code examples:</strong><p>Invoke the nextPage method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).menu( \"nextPage\" );</pre> </div> </div></div> <div id=\"method-option\"> <div class=\"api-item\"> <h3>option( optionName )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#Object\">Object</a></span> </h3> <div> <p>Gets the value currently associated with the specified <code>optionName</code>.</p> <p><strong>Note:</strong> For options that have objects as their value, you can get the value of a specific key by using dot notation. For example, <code>\"foo.bar\"</code> would get the value of the <code>bar</code> property on the <code>foo</code> option.</p> </div> <ul><li> <div><strong>optionName</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>The name of the option to get.</div> </li></ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">var isDisabled = $( \".selector\" ).menu( \"option\", \"disabled\" );</pre> </div> </div> <div class=\"api-item\"> <h3>option()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#PlainObject\">PlainObject</a></span> </h3> <div>Gets an object containing key/value pairs representing the current menu options hash.</div> <ul><li><div class=\"null-signature\">This signature does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">var options = $( \".selector\" ).menu( \"option\" );</pre> </div> </div> <div class=\"api-item\"> <h3>option( optionName, value )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> <p>Sets the value of the menu option associated with the specified <code>optionName</code>.</p> <p><strong>Note:</strong> For options that have objects as their value, you can set the value of just one property by using dot notation for <code>optionName</code>. For example, <code>\"foo.bar\"</code> would update only the <code>bar</code> property of the <code>foo</code> option.</p> </div> <ul> <li> <div><strong>optionName</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>The name of the option to set.</div> </li> <li> <div><strong>value</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>A value to set for the option.</div> </li> </ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).menu( \"option\", \"disabled\", true );</pre> </div> </div> <div class=\"api-item\"> <h3>option( options )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div>Sets one or more options for the menu.</div> <ul><li> <div><strong>options</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>A map of option-value pairs to set.</div> </li></ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).menu( \"option\", { disabled: true } );</pre> </div> </div> </div> <div id=\"method-previous\"><div class=\"api-item\"> <h3>previous( [event ] )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Moves active state to previous menu item. </div> <ul><li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div> <div>What triggered the focus to move.</div> </li></ul> <div> <strong>Code examples:</strong><p>Invoke the previous method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).menu( \"previous\" );</pre> </div> </div></div> <div id=\"method-previousPage\"><div class=\"api-item\"> <h3>previousPage( [event ] )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Moves active state to first menu item above the top of a scrollable menu or the first item if not scrollable. </div> <ul><li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div> <div>What triggered the focus to move.</div> </li></ul> <div> <strong>Code examples:</strong><p>Invoke the previousPage method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).menu( \"previousPage\" );</pre> </div> </div></div> <div id=\"method-refresh\"><div class=\"api-item\"> <h3>refresh()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Initializes sub-menus and menu items that have not already been initialized. New menu items, including sub-menus can be added to the menu or all of the contents of the menu can be replaced and then initialized with the <code>refresh()</code> method. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the refresh method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).menu( \"refresh\" );</pre> </div> </div></div> <div id=\"method-select\"><div class=\"api-item\"> <h3>select( [event ] )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Selects the currently active menu item, collapses all sub-menus and triggers the menu's <a href=\"#event-select\"><code>select</code></a> event. </div> <ul><li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div> <div>What triggered the selection.</div> </li></ul> <div> <strong>Code examples:</strong><p>Invoke the select method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).menu( \"select\" );</pre> </div> </div></div> <div id=\"method-widget\"><div class=\"api-item\"> <h3>widget()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a></span> </h3> <div> Returns a <code>jQuery</code> object containing the menu. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the widget method:</p> <pre class=\"syntaxhighlighter javascript\">var widget = $( \".selector\" ).menu( \"widget\" );</pre> </div> </div></div></section><section id=\"extension-points\"><h2>Extension Points</h2>\n<p> The menu widget is built with the <a href=\"jquery.widget\">widget factory</a> and can be extended. When extending widgets, you have the ability to override or add to the behavior of existing methods. The following methods are provided as extension points with the same API stability as the <a href=\"#methods\">plugin methods</a> listed above. For more information on widget extensions, see <a href=\"http://learn.jquery.com/jquery-ui/widget-factory/extending-widgets/\">Extending Widgets with the Widget Factory</a>. </p>  <div id=\"method-_closeOnDocumentClick\"><div class=\"api-item first-item\"> <h3>_closeOnDocumentClick( event )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a></span> </h3> <div> Method that determines whether clicks on the document should close any open menus. By default, menus are closed unless the click occurred on the menu. </div> <ul><li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li></ul> <div> <strong>Code examples:</strong><p>Never close menus on document click.</p> <pre class=\"syntaxhighlighter javascript\">_closeOnDocumentClick: function( event ) {\n  return false;\n}</pre> </div> </div></div> <div id=\"method-_isDivider\"><div class=\"api-item\"> <h3>_isDivider( item )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a></span> </h3> <div> Determines whether an item should actually be represented as a divider instead of a menu item. By default any item that contains just spaces and/or dashes is considered a divider. </div> <ul><li> <div><strong>item</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div>  </li></ul> <div> <strong>Code examples:</strong><p>Treat all items as menu items with no dividers.</p> <pre class=\"syntaxhighlighter javascript\">_isDivider: function( item ) {\n  return false;\n}</pre> </div> </div></div></section><section id=\"events\"><h2>Events</h2>\n<div id=\"event-blur\" class=\"api-item first-item\"> <h3>blur( event, ui )<span class=\"returns\">Type: <code>menublur</code></span> </h3> <div> Triggered when the menu loses focus. </div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  <ul><li> <div><strong>item</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div> The currently active menu item. </div> </li></ul> </li> </ul> <div> <strong>Code examples:</strong><p>Initialize the menu with the blur callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).menu({\n  blur: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the menublur event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"menublur\", function( event, ui ) {} );</pre> </div> </div> <div id=\"event-create\" class=\"api-item\"> <h3>create( event, ui )<span class=\"returns\">Type: <code>menucreate</code></span> </h3> <div> Triggered when the menu is created. </div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  </li> </ul> <p><em>Note: The <code>ui</code> object is empty but included for consistency with other events.</em></p> <div> <strong>Code examples:</strong><p>Initialize the menu with the create callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).menu({\n  create: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the menucreate event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"menucreate\", function( event, ui ) {} );</pre> </div> </div> <div id=\"event-focus\" class=\"api-item\"> <h3>focus( event, ui )<span class=\"returns\">Type: <code>menufocus</code></span> </h3> <div> Triggered when a menu gains focus or when any menu item is activated. </div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  <ul><li> <div><strong>item</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div> The currently active menu item. </div> </li></ul> </li> </ul> <div> <strong>Code examples:</strong><p>Initialize the menu with the focus callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).menu({\n  focus: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the menufocus event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"menufocus\", function( event, ui ) {} );</pre> </div> </div> <div id=\"event-select\" class=\"api-item\"> <h3>select( event, ui )<span class=\"returns\">Type: <code>menuselect</code></span> </h3> <div> Triggered when a menu item is selected. </div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  <ul><li> <div><strong>item</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div> The currently active menu item. </div> </li></ul> </li> </ul> <div> <strong>Code examples:</strong><p>Initialize the menu with the select callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).menu({\n  select: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the menuselect event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"menuselect\", function( event, ui ) {} );</pre> </div> </div></section><section class=\"entry-examples\" id=\"entry-examples\"><h2>Example:</h2>\n<div class=\"entry-example\" id=\"example-0\"> <p>A simple jQuery UI Menu</p> <pre class=\"syntaxhighlighter xml\">&lt;!doctype html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"utf-8\"&gt;\n  &lt;title&gt;menu demo&lt;/title&gt;\n  &lt;link rel=\"stylesheet\" href=\"//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css\"&gt;\n  &lt;style&gt;\n  .ui-menu {\n    width: 200px;\n  }\n  &lt;/style&gt;\n  &lt;script src=\"//code.jquery.com/jquery-1.10.2.js\"&gt;&lt;/script&gt;\n  &lt;script src=\"//code.jquery.com/ui/1.11.4/jquery-ui.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n&lt;ul id=\"menu\"&gt;\n  &lt;li&gt;Item 1&lt;/li&gt;\n  &lt;li&gt;Item 2&lt;/li&gt;\n  &lt;li&gt;Item 3\n    &lt;ul&gt;\n      &lt;li&gt;Item 3-1&lt;/li&gt;\n      &lt;li&gt;Item 3-2&lt;/li&gt;\n      &lt;li&gt;Item 3-3&lt;/li&gt;\n      &lt;li&gt;Item 3-4&lt;/li&gt;\n      &lt;li&gt;Item 3-5&lt;/li&gt;\n    &lt;/ul&gt;\n  &lt;/li&gt;\n  &lt;li&gt;Item 4&lt;/li&gt;\n  &lt;li&gt;Item 5&lt;/li&gt;\n&lt;/ul&gt;\n \n&lt;script&gt;\n$( \"#menu\" ).menu();\n&lt;/script&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;</pre> <h4>Demo:</h4>  </div></section> </div></article> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; The jQuery Foundation and other contributors<br>Licensed under the MIT License.<br>\n    <a href=\"https://api.jqueryui.com/menu\" class=\"_attribution-link\">https://api.jqueryui.com/menu</a>\n  </p>\n</div>\n","progressbar":"<h1 class=\"entry-title\">Progressbar Widget</h1> <div class=\"entry-content\"> <article id=\"progressbar1\" class=\"entry widget\"><h2 class=\"section-title\"> <span>Progressbar Widget</span><span class=\"version-details\">version added: 1.6</span> </h2> <div class=\"entry-wrapper\"> <p class=\"desc\"><strong>Description: </strong>Display status of a determinate or indeterminate process.</p> <section id=\"quick-nav\"><h2>QuickNav<a href=\"#entry-examples\">Examples</a> </h2>\n<div class=\"quick-nav-section\"> <h3>Options</h3> <div><a href=\"#option-disabled\">disabled</a></div> <div><a href=\"#option-max\">max</a></div> <div><a href=\"#option-value\">value</a></div> </div> <div class=\"quick-nav-section\"> <h3>Methods</h3> <div><a href=\"#method-destroy\">destroy</a></div> <div><a href=\"#method-disable\">disable</a></div> <div><a href=\"#method-enable\">enable</a></div> <div><a href=\"#method-instance\">instance</a></div> <div><a href=\"#method-option\">option</a></div> <div><a href=\"#method-value\">value</a></div> <div><a href=\"#method-widget\">widget</a></div> </div> <div class=\"quick-nav-section\"> <h3>Events</h3> <div><a href=\"#event-change\">change</a></div> <div><a href=\"#event-complete\">complete</a></div> <div><a href=\"#event-create\">create</a></div> </div></section><div class=\"longdesc\" id=\"entry-longdesc\"> <p> The progress bar is designed to display the current percent complete for a process. The bar is coded to be flexibly sized through CSS and will scale to fit inside its parent container by default. </p> <p> A determinate progress bar should only be used in situations where the system can accurately update the current status. A determinate progress bar should never fill from left to right, then loop back to empty for a single process — if the actual status cannot be calculated, an indeterminate progress bar should be used to provide user feedback. </p> <div> <h3 id=\"theming\">Theming</h3> <p>The progressbar widget uses the <a href=\"theming/css-framework\">jQuery UI CSS framework</a> to style its look and feel. If progressbar specific styling is needed, the following CSS class names can be used:</p> </div> <ul> <li> <code>ui-progressbar</code>: The outer container of the progressbar. This element will additionally have a class of <code>ui-progressbar-indeterminate</code> for indeterminate progressbars. <ul> <li> <code>ui-progressbar-value</code>: The element that represents the filled portion of the progressbar. <ul> <li> <code>ui-progressbar-overlay</code>: Overlay used to display an animation for indeterminate progressbars.</li> </ul> </li> </ul> </li> </ul> <h3>Dependencies</h3> <ul> <li><a href=\"https://api.jqueryui.com/category/ui-core/\">UI Core</a></li> <li><a href=\"jquery.widget\">Widget Factory</a></li> </ul> </div> <h3>Additional Notes:</h3> <div class=\"longdesc\"><ul><li> This widget requires some functional CSS, otherwise it won't work. If you build a custom theme, use the widget's specific CSS file as a starting point. </li></ul></div> <section id=\"options\"><h2>Options</h2>\n<div id=\"option-disabled\" class=\"api-item first-item\"> <h3>disabled </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> </div> <div class=\"default\"> <strong>Default: </strong><code>false</code> </div> <div>Disables the progressbar if set to <code>true</code>.</div> <strong>Code examples:</strong><p>Initialize the progressbar with the <code>disabled</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).progressbar({\n  disabled: true\n});</pre> <p>Get or set the <code>disabled</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar disabled = $( \".selector\" ).progressbar( \"option\", \"disabled\" );\n \n// Setter\n$( \".selector\" ).progressbar( \"option\", \"disabled\", true );</pre> </div> <div id=\"option-max\" class=\"api-item\"> <h3>max </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Number\">Number</a> </div> <div class=\"default\"> <strong>Default: </strong><code>100</code> </div> <div>The maximum value of the progressbar.</div> <strong>Code examples:</strong><p>Initialize the progressbar with the <code>max</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).progressbar({\n  max: 1024\n});</pre> <p>Get or set the <code>max</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar max = $( \".selector\" ).progressbar( \"option\", \"max\" );\n \n// Setter\n$( \".selector\" ).progressbar( \"option\", \"max\", 1024 );</pre> </div> <div id=\"option-value\" class=\"api-item\"> <h3>value </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Number\">Number</a> or <a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> </div> <div class=\"default\"> <strong>Default: </strong><code>0</code> </div> <div>The value of the progressbar.</div> <strong>Multiple types supported:</strong><ul> <li> <strong>Number</strong>: A value between <code>0</code> and the <a href=\"#option-max\"><code>max</code></a>. </li> <li> <strong>Boolean</strong>: Value can be set to <code>false</code> to create an indeterminate progressbar. </li> </ul> <strong>Code examples:</strong><p>Initialize the progressbar with the <code>value</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).progressbar({\n  value: 25\n});</pre> <p>Get or set the <code>value</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar value = $( \".selector\" ).progressbar( \"option\", \"value\" );\n \n// Setter\n$( \".selector\" ).progressbar( \"option\", \"value\", 25 );</pre> </div></section><section id=\"methods\"><h2>Methods</h2>\n<div id=\"method-destroy\"><div class=\"api-item first-item\"> <h3>destroy()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Removes the progressbar functionality completely. This will return the element back to its pre-init state. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the destroy method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).progressbar( \"destroy\" );</pre> </div> </div></div> <div id=\"method-disable\"><div class=\"api-item\"> <h3>disable()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Disables the progressbar. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the disable method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).progressbar( \"disable\" );</pre> </div> </div></div> <div id=\"method-enable\"><div class=\"api-item\"> <h3>enable()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Enables the progressbar. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the enable method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).progressbar( \"enable\" );</pre> </div> </div></div> <div id=\"method-instance\"><div class=\"api-item\"> <h3>instance()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#Object\">Object</a></span> </h3> <div> <p>Retrieves the progressbar's instance object. If the element does not have an associated instance, <code>undefined</code> is returned.</p> <p>Unlike other widget methods, <code>instance()</code> is safe to call on any element after the progressbar plugin has loaded.</p> </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the instance method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).progressbar( \"instance\" );</pre> </div> </div></div> <div id=\"method-option\"> <div class=\"api-item\"> <h3>option( optionName )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#Object\">Object</a></span> </h3> <div> <p>Gets the value currently associated with the specified <code>optionName</code>.</p> <p><strong>Note:</strong> For options that have objects as their value, you can get the value of a specific key by using dot notation. For example, <code>\"foo.bar\"</code> would get the value of the <code>bar</code> property on the <code>foo</code> option.</p> </div> <ul><li> <div><strong>optionName</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>The name of the option to get.</div> </li></ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">var isDisabled = $( \".selector\" ).progressbar( \"option\", \"disabled\" );</pre> </div> </div> <div class=\"api-item\"> <h3>option()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#PlainObject\">PlainObject</a></span> </h3> <div>Gets an object containing key/value pairs representing the current progressbar options hash.</div> <ul><li><div class=\"null-signature\">This signature does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">var options = $( \".selector\" ).progressbar( \"option\" );</pre> </div> </div> <div class=\"api-item\"> <h3>option( optionName, value )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> <p>Sets the value of the progressbar option associated with the specified <code>optionName</code>.</p> <p><strong>Note:</strong> For options that have objects as their value, you can set the value of just one property by using dot notation for <code>optionName</code>. For example, <code>\"foo.bar\"</code> would update only the <code>bar</code> property of the <code>foo</code> option.</p> </div> <ul> <li> <div><strong>optionName</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>The name of the option to set.</div> </li> <li> <div><strong>value</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>A value to set for the option.</div> </li> </ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).progressbar( \"option\", \"disabled\", true );</pre> </div> </div> <div class=\"api-item\"> <h3>option( options )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div>Sets one or more options for the progressbar.</div> <ul><li> <div><strong>options</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>A map of option-value pairs to set.</div> </li></ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).progressbar( \"option\", { disabled: true } );</pre> </div> </div> </div> <div id=\"method-value\"> <div class=\"api-item\"> <h3>value()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#Number\">Number</a> or <a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a></span> </h3> <div>Gets the current value of the progressbar.</div> <ul><li><div class=\"null-signature\">This signature does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">var progressSoFar = $( \".selector\" ).progressbar( \"value\" );</pre> </div> </div> <div class=\"api-item\"> <h3>value( value )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div>Sets the current value of the progressbar.</div> <ul><li> <div><strong>value</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Number\">Number</a> or <a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> </div> <div>The value to set. See the <a href=\"#option-value\"><code>value</code></a> option for details on valid values.</div> </li></ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).progressbar( \"value\", 50 );</pre> </div> </div> </div> <div id=\"method-widget\"><div class=\"api-item\"> <h3>widget()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a></span> </h3> <div> Returns a <code>jQuery</code> object containing the progressbar. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the widget method:</p> <pre class=\"syntaxhighlighter javascript\">var widget = $( \".selector\" ).progressbar( \"widget\" );</pre> </div> </div></div></section><section id=\"events\"><h2>Events</h2>\n<div id=\"event-change\" class=\"api-item first-item\"> <h3>change( event, ui )<span class=\"returns\">Type: <code>progressbarchange</code></span> </h3> <div>Triggered when the value of the progressbar changes.</div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  </li> </ul> <p><em>Note: The <code>ui</code> object is empty but included for consistency with other events.</em></p> <div> <strong>Code examples:</strong><p>Initialize the progressbar with the change callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).progressbar({\n  change: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the progressbarchange event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"progressbarchange\", function( event, ui ) {} );</pre> </div> </div> <div id=\"event-complete\" class=\"api-item\"> <h3>complete( event, ui )<span class=\"returns\">Type: <code>progressbarcomplete</code></span> </h3> <div>Triggered when the value of the progressbar reaches the maximum value.</div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  </li> </ul> <p><em>Note: The <code>ui</code> object is empty but included for consistency with other events.</em></p> <div> <strong>Code examples:</strong><p>Initialize the progressbar with the complete callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).progressbar({\n  complete: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the progressbarcomplete event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"progressbarcomplete\", function( event, ui ) {} );</pre> </div> </div> <div id=\"event-create\" class=\"api-item\"> <h3>create( event, ui )<span class=\"returns\">Type: <code>progressbarcreate</code></span> </h3> <div> Triggered when the progressbar is created. </div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  </li> </ul> <p><em>Note: The <code>ui</code> object is empty but included for consistency with other events.</em></p> <div> <strong>Code examples:</strong><p>Initialize the progressbar with the create callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).progressbar({\n  create: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the progressbarcreate event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"progressbarcreate\", function( event, ui ) {} );</pre> </div> </div></section><section class=\"entry-examples\" id=\"entry-examples\"><h2>Examples:</h2>\n<div class=\"entry-example\" id=\"example-0\"> <p>A simple jQuery UI Progressbar</p> <pre class=\"syntaxhighlighter xml\">&lt;!doctype html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"utf-8\"&gt;\n  &lt;title&gt;progressbar demo&lt;/title&gt;\n  &lt;link rel=\"stylesheet\" href=\"//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css\"&gt;\n  &lt;script src=\"//code.jquery.com/jquery-1.10.2.js\"&gt;&lt;/script&gt;\n  &lt;script src=\"//code.jquery.com/ui/1.11.4/jquery-ui.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n&lt;div id=\"progressbar\"&gt;&lt;/div&gt;\n \n&lt;script&gt;\n$( \"#progressbar\" ).progressbar({\n  value: 37\n});\n&lt;/script&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;</pre> <h4>Demo:</h4>  </div> <div class=\"entry-example\" id=\"example-1\"> <p>A simple jQuery UI Indeterminate Progressbar</p> <pre class=\"syntaxhighlighter xml\">&lt;!doctype html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"utf-8\"&gt;\n  &lt;title&gt;progressbar demo&lt;/title&gt;\n  &lt;link rel=\"stylesheet\" href=\"//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css\"&gt;\n  &lt;script src=\"//code.jquery.com/jquery-1.10.2.js\"&gt;&lt;/script&gt;\n  &lt;script src=\"//code.jquery.com/ui/1.11.4/jquery-ui.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n&lt;div id=\"progressbar\"&gt;&lt;/div&gt;\n \n&lt;script&gt;\n$( \"#progressbar\" ).progressbar({\n  value: false\n});\n&lt;/script&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;</pre> <h4>Demo:</h4>  </div></section> </div></article> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; The jQuery Foundation and other contributors<br>Licensed under the MIT License.<br>\n    <a href=\"https://api.jqueryui.com/progressbar\" class=\"_attribution-link\">https://api.jqueryui.com/progressbar</a>\n  </p>\n</div>\n","resizable":"<h1 class=\"entry-title\">Resizable Widget</h1> <div class=\"entry-content\"> <article id=\"resizable1\" class=\"entry widget\"><h2 class=\"section-title\"> <span>Resizable Widget</span><span class=\"version-details\">version added: 1.0</span> </h2> <div class=\"entry-wrapper\"> <p class=\"desc\"><strong>Description: </strong>Change the size of an element using the mouse.</p> <section id=\"quick-nav\"><h2>QuickNav<a href=\"#entry-examples\">Examples</a> </h2>\n<div class=\"quick-nav-section\"> <h3>Options</h3> <div><a href=\"#option-alsoResize\">alsoResize</a></div> <div><a href=\"#option-animate\">animate</a></div> <div><a href=\"#option-animateDuration\">animateDuration</a></div> <div><a href=\"#option-animateEasing\">animateEasing</a></div> <div><a href=\"#option-aspectRatio\">aspectRatio</a></div> <div><a href=\"#option-autoHide\">autoHide</a></div> <div><a href=\"#option-cancel\">cancel</a></div> <div><a href=\"#option-containment\">containment</a></div> <div><a href=\"#option-delay\">delay</a></div> <div><a href=\"#option-disabled\">disabled</a></div> <div><a href=\"#option-distance\">distance</a></div> <div><a href=\"#option-ghost\">ghost</a></div> <div><a href=\"#option-grid\">grid</a></div> <div><a href=\"#option-handles\">handles</a></div> <div><a href=\"#option-helper\">helper</a></div> <div><a href=\"#option-maxHeight\">maxHeight</a></div> <div><a href=\"#option-maxWidth\">maxWidth</a></div> <div><a href=\"#option-minHeight\">minHeight</a></div> <div><a href=\"#option-minWidth\">minWidth</a></div> </div> <div class=\"quick-nav-section\"> <h3>Methods</h3> <div><a href=\"#method-destroy\">destroy</a></div> <div><a href=\"#method-disable\">disable</a></div> <div><a href=\"#method-enable\">enable</a></div> <div><a href=\"#method-instance\">instance</a></div> <div><a href=\"#method-option\">option</a></div> <div><a href=\"#method-widget\">widget</a></div> </div> <div class=\"quick-nav-section\"> <h3>Events</h3> <div><a href=\"#event-create\">create</a></div> <div><a href=\"#event-resize\">resize</a></div> <div><a href=\"#event-start\">start</a></div> <div><a href=\"#event-stop\">stop</a></div> </div></section><div class=\"longdesc\" id=\"entry-longdesc\"> <p>The jQuery UI Resizable plugin makes selected elements resizable (meaning they have draggable resize handles). You can specify one or more handles as well as min and max width and height.</p> <h3>Dependencies</h3> <ul> <li><a href=\"https://api.jqueryui.com/category/ui-core/\">UI Core</a></li> <li><a href=\"jquery.widget\">Widget Factory</a></li> <li><a href=\"mouse\">Mouse Interaction</a></li> </ul> </div> <h3>Additional Notes:</h3> <div class=\"longdesc\"><ul><li> This widget requires some functional CSS, otherwise it won't work. If you build a custom theme, use the widget's specific CSS file as a starting point. </li></ul></div> <section id=\"options\"><h2>Options</h2>\n<div id=\"option-alsoResize\" class=\"api-item first-item\"> <h3>alsoResize </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Selector\">Selector</a> or <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> or <a href=\"http://api.jquery.com/Types/#Element\">Element</a> </div> <div class=\"default\"> <strong>Default: </strong><code>false</code> </div> <div>One or more elements to resize synchronously with the resizable element.</div> <strong>Code examples:</strong><p>Initialize the resizable with the <code>alsoResize</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).resizable({\n  alsoResize: \"#mirror\"\n});</pre> <p>Get or set the <code>alsoResize</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar alsoResize = $( \".selector\" ).resizable( \"option\", \"alsoResize\" );\n \n// Setter\n$( \".selector\" ).resizable( \"option\", \"alsoResize\", \"#mirror\" );</pre> </div> <div id=\"option-animate\" class=\"api-item\"> <h3>animate </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> </div> <div class=\"default\"> <strong>Default: </strong><code>false</code> </div> <div>Animates to the final size after resizing.</div> <strong>Code examples:</strong><p>Initialize the resizable with the <code>animate</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).resizable({\n  animate: true\n});</pre> <p>Get or set the <code>animate</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar animate = $( \".selector\" ).resizable( \"option\", \"animate\" );\n \n// Setter\n$( \".selector\" ).resizable( \"option\", \"animate\", true );</pre> </div> <div id=\"option-animateDuration\" class=\"api-item\"> <h3>animateDuration </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Number\">Number</a> or <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div class=\"default\"> <strong>Default: </strong><code>\"slow\"</code> </div> <div>How long to animate when using the <a href=\"#option-animate\"><code>animate</code></a> option.</div> <strong>Multiple types supported:</strong><ul> <li> <strong>Number</strong>: Duration in milliseconds.</li> <li> <strong>String</strong>: A named duration, such as <code>\"slow\"</code> or <code>\"fast\"</code>.</li> </ul> <strong>Code examples:</strong><p>Initialize the resizable with the <code>animateDuration</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).resizable({\n  animateDuration: \"fast\"\n});</pre> <p>Get or set the <code>animateDuration</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar animateDuration = $( \".selector\" ).resizable( \"option\", \"animateDuration\" );\n \n// Setter\n$( \".selector\" ).resizable( \"option\", \"animateDuration\", \"fast\" );</pre> </div> <div id=\"option-animateEasing\" class=\"api-item\"> <h3>animateEasing </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div class=\"default\"> <strong>Default: </strong><code>\"swing\"</code> </div> <div>Which <a href=\"easings\">easing</a> to apply when using the <a href=\"#option-animate\"><code>animate</code></a> option.</div> <strong>Code examples:</strong><p>Initialize the resizable with the <code>animateEasing</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).resizable({\n  animateEasing: \"easeOutBounce\"\n});</pre> <p>Get or set the <code>animateEasing</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar animateEasing = $( \".selector\" ).resizable( \"option\", \"animateEasing\" );\n \n// Setter\n$( \".selector\" ).resizable( \"option\", \"animateEasing\", \"easeOutBounce\" );</pre> </div> <div id=\"option-aspectRatio\" class=\"api-item\"> <h3>aspectRatio </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> or <a href=\"http://api.jquery.com/Types/#Number\">Number</a> </div> <div class=\"default\"> <strong>Default: </strong><code>false</code> </div> <div>Whether the element should be constrained to a specific aspect ratio.</div> <strong>Multiple types supported:</strong><ul> <li> <strong>Boolean</strong>: When set to <code>true</code>, the element will maintain its original aspect ratio.</li> <li> <strong>Number</strong>: Force the element to maintain a specific aspect ratio during resizing.</li> </ul> <strong>Code examples:</strong><p>Initialize the resizable with the <code>aspectRatio</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).resizable({\n  aspectRatio: true\n});</pre> <p>Get or set the <code>aspectRatio</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar aspectRatio = $( \".selector\" ).resizable( \"option\", \"aspectRatio\" );\n \n// Setter\n$( \".selector\" ).resizable( \"option\", \"aspectRatio\", true );</pre> </div> <div id=\"option-autoHide\" class=\"api-item\"> <h3>autoHide </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> </div> <div class=\"default\"> <strong>Default: </strong><code>false</code> </div> <div>Whether the handles should hide when the user is not hovering over the element.</div> <strong>Code examples:</strong><p>Initialize the resizable with the <code>autoHide</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).resizable({\n  autoHide: true\n});</pre> <p>Get or set the <code>autoHide</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar autoHide = $( \".selector\" ).resizable( \"option\", \"autoHide\" );\n \n// Setter\n$( \".selector\" ).resizable( \"option\", \"autoHide\", true );</pre> </div> <div id=\"option-cancel\" class=\"api-item\"> <h3>cancel </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Selector\">Selector</a> </div> <div class=\"default\"> <strong>Default: </strong><code>\"input,textarea,button,select,option\"</code> </div> <div>Prevents resizing from starting on specified elements.</div> <strong>Code examples:</strong><p>Initialize the resizable with the <code>cancel</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).resizable({\n  cancel: \".cancel\"\n});</pre> <p>Get or set the <code>cancel</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar cancel = $( \".selector\" ).resizable( \"option\", \"cancel\" );\n \n// Setter\n$( \".selector\" ).resizable( \"option\", \"cancel\", \".cancel\" );</pre> </div> <div id=\"option-containment\" class=\"api-item\"> <h3>containment </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Selector\">Selector</a> or <a href=\"http://api.jquery.com/Types/#Element\">Element</a> or <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div class=\"default\"> <strong>Default: </strong><code>false</code> </div> <div>Constrains resizing to within the bounds of the specified element or region.</div> <strong>Multiple types supported:</strong><ul> <li> <strong>Selector</strong>: The resizable element will be contained to the bounding box of the first element found by the selector. If no element is found, no containment will be set.</li> <li> <strong>Element</strong>: The resizable element will be contained to the bounding box of this element.</li> <li> <strong>String</strong>: Possible values: <code>\"parent\"</code> and <code>\"document\"</code>.</li> </ul> <strong>Code examples:</strong><p>Initialize the resizable with the <code>containment</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).resizable({\n  containment: \"parent\"\n});</pre> <p>Get or set the <code>containment</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar containment = $( \".selector\" ).resizable( \"option\", \"containment\" );\n \n// Setter\n$( \".selector\" ).resizable( \"option\", \"containment\", \"parent\" );</pre> </div> <div id=\"option-delay\" class=\"api-item\"> <h3>delay </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Number\">Number</a> </div> <div class=\"default\"> <strong>Default: </strong><code>0</code> </div> <div>Tolerance, in milliseconds, for when resizing should start. If specified, resizing will not start until after mouse is moved beyond duration. This can help prevent unintended resizing when clicking on an element.</div> <strong>Code examples:</strong><p>Initialize the resizable with the <code>delay</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).resizable({\n  delay: 150\n});</pre> <p>Get or set the <code>delay</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar delay = $( \".selector\" ).resizable( \"option\", \"delay\" );\n \n// Setter\n$( \".selector\" ).resizable( \"option\", \"delay\", 150 );</pre> </div> <div id=\"option-disabled\" class=\"api-item\"> <h3>disabled </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> </div> <div class=\"default\"> <strong>Default: </strong><code>false</code> </div> <div>Disables the resizable if set to <code>true</code>.</div> <strong>Code examples:</strong><p>Initialize the resizable with the <code>disabled</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).resizable({\n  disabled: true\n});</pre> <p>Get or set the <code>disabled</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar disabled = $( \".selector\" ).resizable( \"option\", \"disabled\" );\n \n// Setter\n$( \".selector\" ).resizable( \"option\", \"disabled\", true );</pre> </div> <div id=\"option-distance\" class=\"api-item\"> <h3>distance </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Number\">Number</a> </div> <div class=\"default\"> <strong>Default: </strong><code>1</code> </div> <div>Tolerance, in pixels, for when resizing should start. If specified, resizing will not start until after mouse is moved beyond distance. This can help prevent unintended resizing when clicking on an element.</div> <strong>Code examples:</strong><p>Initialize the resizable with the <code>distance</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).resizable({\n  distance: 30\n});</pre> <p>Get or set the <code>distance</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar distance = $( \".selector\" ).resizable( \"option\", \"distance\" );\n \n// Setter\n$( \".selector\" ).resizable( \"option\", \"distance\", 30 );</pre> </div> <div id=\"option-ghost\" class=\"api-item\"> <h3>ghost </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> </div> <div class=\"default\"> <strong>Default: </strong><code>false</code> </div> <div>If set to <code>true</code>, a semi-transparent helper element is shown for resizing.</div> <strong>Code examples:</strong><p>Initialize the resizable with the <code>ghost</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).resizable({\n  ghost: true\n});</pre> <p>Get or set the <code>ghost</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar ghost = $( \".selector\" ).resizable( \"option\", \"ghost\" );\n \n// Setter\n$( \".selector\" ).resizable( \"option\", \"ghost\", true );</pre> </div> <div id=\"option-grid\" class=\"api-item\"> <h3>grid </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Array\">Array</a> </div> <div class=\"default\"> <strong>Default: </strong><code>false</code> </div> <div>Snaps the resizing element to a grid, every x and y pixels. Array values: <code>[ x, y ]</code>.</div> <strong>Code examples:</strong><p>Initialize the resizable with the <code>grid</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).resizable({\n  grid: [ 20, 10 ]\n});</pre> <p>Get or set the <code>grid</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar grid = $( \".selector\" ).resizable( \"option\", \"grid\" );\n \n// Setter\n$( \".selector\" ).resizable( \"option\", \"grid\", [ 20, 10 ] );</pre> </div> <div id=\"option-handles\" class=\"api-item\"> <h3>handles </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#String\">String</a> or <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div class=\"default\"> <strong>Default: </strong><code>\"e, s, se\"</code> </div> <div>Which handles can be used for resizing.</div> <strong>Multiple types supported:</strong><ul> <li> <strong>String</strong>: A comma delimited list of any of the following: n, e, s, w, ne, se, sw, nw, all. The necessary handles will be auto-generated by the plugin.</li> <li> <strong>Object</strong>: <p>The following keys are supported: { n, e, s, w, ne, se, sw, nw }. The value of any specified should be a jQuery selector matching the child element of the resizable to use as that handle. If the handle is not a child of the resizable, you can pass in the DOMElement or a valid jQuery object directly.</p> <p><em>Note: When generating your own handles, each handle must have the <code>ui-resizable-handle</code> class, as well as the appropriate <code>ui-resizable-{direction}</code> class, .e.g., <code>ui-resizable-s</code>.</em></p> </li> </ul> <strong>Code examples:</strong><p>Initialize the resizable with the <code>handles</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).resizable({\n  handles: \"n, e, s, w\"\n});</pre> <p>Get or set the <code>handles</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar handles = $( \".selector\" ).resizable( \"option\", \"handles\" );\n \n// Setter\n$( \".selector\" ).resizable( \"option\", \"handles\", \"n, e, s, w\" );</pre> </div> <div id=\"option-helper\" class=\"api-item\"> <h3>helper </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div class=\"default\"> <strong>Default: </strong><code>false</code> </div> <div>A class name that will be added to a proxy element to outline the resize during the drag of the resize handle. Once the resize is complete, the original element is sized.</div> <strong>Code examples:</strong><p>Initialize the resizable with the <code>helper</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).resizable({\n  helper: \"resizable-helper\"\n});</pre> <p>Get or set the <code>helper</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar helper = $( \".selector\" ).resizable( \"option\", \"helper\" );\n \n// Setter\n$( \".selector\" ).resizable( \"option\", \"helper\", \"resizable-helper\" );</pre> </div> <div id=\"option-maxHeight\" class=\"api-item\"> <h3>maxHeight </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Number\">Number</a> </div> <div class=\"default\"> <strong>Default: </strong><code>null</code> </div> <div>The maximum height the resizable should be allowed to resize to.</div> <strong>Code examples:</strong><p>Initialize the resizable with the <code>maxHeight</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).resizable({\n  maxHeight: 300\n});</pre> <p>Get or set the <code>maxHeight</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar maxHeight = $( \".selector\" ).resizable( \"option\", \"maxHeight\" );\n \n// Setter\n$( \".selector\" ).resizable( \"option\", \"maxHeight\", 300 );</pre> </div> <div id=\"option-maxWidth\" class=\"api-item\"> <h3>maxWidth </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Number\">Number</a> </div> <div class=\"default\"> <strong>Default: </strong><code>null</code> </div> <div>The maximum width the resizable should be allowed to resize to.</div> <strong>Code examples:</strong><p>Initialize the resizable with the <code>maxWidth</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).resizable({\n  maxWidth: 300\n});</pre> <p>Get or set the <code>maxWidth</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar maxWidth = $( \".selector\" ).resizable( \"option\", \"maxWidth\" );\n \n// Setter\n$( \".selector\" ).resizable( \"option\", \"maxWidth\", 300 );</pre> </div> <div id=\"option-minHeight\" class=\"api-item\"> <h3>minHeight </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Number\">Number</a> </div> <div class=\"default\"> <strong>Default: </strong><code>10</code> </div> <div>The minimum height the resizable should be allowed to resize to.</div> <strong>Code examples:</strong><p>Initialize the resizable with the <code>minHeight</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).resizable({\n  minHeight: 150\n});</pre> <p>Get or set the <code>minHeight</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar minHeight = $( \".selector\" ).resizable( \"option\", \"minHeight\" );\n \n// Setter\n$( \".selector\" ).resizable( \"option\", \"minHeight\", 150 );</pre> </div> <div id=\"option-minWidth\" class=\"api-item\"> <h3>minWidth </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Number\">Number</a> </div> <div class=\"default\"> <strong>Default: </strong><code>10</code> </div> <div>The minimum width the resizable should be allowed to resize to.</div> <strong>Code examples:</strong><p>Initialize the resizable with the <code>minWidth</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).resizable({\n  minWidth: 150\n});</pre> <p>Get or set the <code>minWidth</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar minWidth = $( \".selector\" ).resizable( \"option\", \"minWidth\" );\n \n// Setter\n$( \".selector\" ).resizable( \"option\", \"minWidth\", 150 );</pre> </div></section><section id=\"methods\"><h2>Methods</h2>\n<div id=\"method-destroy\"><div class=\"api-item first-item\"> <h3>destroy()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Removes the resizable functionality completely. This will return the element back to its pre-init state. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the destroy method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).resizable( \"destroy\" );</pre> </div> </div></div> <div id=\"method-disable\"><div class=\"api-item\"> <h3>disable()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Disables the resizable. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the disable method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).resizable( \"disable\" );</pre> </div> </div></div> <div id=\"method-enable\"><div class=\"api-item\"> <h3>enable()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Enables the resizable. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the enable method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).resizable( \"enable\" );</pre> </div> </div></div> <div id=\"method-instance\"><div class=\"api-item\"> <h3>instance()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#Object\">Object</a></span> </h3> <div> <p>Retrieves the resizable's instance object. If the element does not have an associated instance, <code>undefined</code> is returned.</p> <p>Unlike other widget methods, <code>instance()</code> is safe to call on any element after the resizable plugin has loaded.</p> </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the instance method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).resizable( \"instance\" );</pre> </div> </div></div> <div id=\"method-option\"> <div class=\"api-item\"> <h3>option( optionName )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#Object\">Object</a></span> </h3> <div> <p>Gets the value currently associated with the specified <code>optionName</code>.</p> <p><strong>Note:</strong> For options that have objects as their value, you can get the value of a specific key by using dot notation. For example, <code>\"foo.bar\"</code> would get the value of the <code>bar</code> property on the <code>foo</code> option.</p> </div> <ul><li> <div><strong>optionName</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>The name of the option to get.</div> </li></ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">var isDisabled = $( \".selector\" ).resizable( \"option\", \"disabled\" );</pre> </div> </div> <div class=\"api-item\"> <h3>option()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#PlainObject\">PlainObject</a></span> </h3> <div>Gets an object containing key/value pairs representing the current resizable options hash.</div> <ul><li><div class=\"null-signature\">This signature does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">var options = $( \".selector\" ).resizable( \"option\" );</pre> </div> </div> <div class=\"api-item\"> <h3>option( optionName, value )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> <p>Sets the value of the resizable option associated with the specified <code>optionName</code>.</p> <p><strong>Note:</strong> For options that have objects as their value, you can set the value of just one property by using dot notation for <code>optionName</code>. For example, <code>\"foo.bar\"</code> would update only the <code>bar</code> property of the <code>foo</code> option.</p> </div> <ul> <li> <div><strong>optionName</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>The name of the option to set.</div> </li> <li> <div><strong>value</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>A value to set for the option.</div> </li> </ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).resizable( \"option\", \"disabled\", true );</pre> </div> </div> <div class=\"api-item\"> <h3>option( options )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div>Sets one or more options for the resizable.</div> <ul><li> <div><strong>options</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>A map of option-value pairs to set.</div> </li></ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).resizable( \"option\", { disabled: true } );</pre> </div> </div> </div> <div id=\"method-widget\"><div class=\"api-item\"> <h3>widget()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a></span> </h3> <div> Returns a <code>jQuery</code> object containing the resizable element. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the widget method:</p> <pre class=\"syntaxhighlighter javascript\">var widget = $( \".selector\" ).resizable( \"widget\" );</pre> </div> </div></div></section><section id=\"events\"><h2>Events</h2>\n<div id=\"event-create\" class=\"api-item first-item\"> <h3>create( event, ui )<span class=\"returns\">Type: <code>resizecreate</code></span> </h3> <div> Triggered when the resizable is created. </div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  </li> </ul> <p><em>Note: The <code>ui</code> object is empty but included for consistency with other events.</em></p> <div> <strong>Code examples:</strong><p>Initialize the resizable with the create callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).resizable({\n  create: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the resizecreate event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"resizecreate\", function( event, ui ) {} );</pre> </div> </div> <div id=\"event-resize\" class=\"api-item\"> <h3>resize( event, ui )<span class=\"returns\">Type: <code>resize</code></span> </h3> <div>This event is triggered during the resize, on the drag of the resize handler.</div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  <ul> <li> <div><strong>element</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The jQuery object representing the element to be resized</div> </li> <li> <div><strong>helper</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The jQuery object representing the helper that's being resized</div> </li> <li> <div><strong>originalElement</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The jQuery object representing the original element before it is wrapped</div> </li> <li> <div><strong>originalPosition</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>The position represented as <code>{ left, top }</code> before the resizable is resized</div> </li> <li> <div><strong>originalSize</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>The size represented as <code>{ width, height }</code> before the resizable is resized</div> </li> <li> <div><strong>position</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>The current position represented as <code>{ left, top }</code>. The values may be changed to modify where the element will be positioned. Useful for custom resizing logic.</div> </li> <li> <div><strong>size</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>The current size represented as <code>{ width, height }</code>. The values may be changed to modify where the element will be positioned. Useful for custom resizing logic.</div> </li> </ul> </li> </ul> <div> <strong>Code examples:</strong><p>Initialize the resizable with the resize callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).resizable({\n  resize: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the resize event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"resize\", function( event, ui ) {} );</pre> <p>Restrict height resizing to 30 pixel increments:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).resizable({\n  resize: function( event, ui ) {\n    ui.size.height = Math.round( ui.size.height / 30 ) * 30;\n  }\n});</pre> </div> </div> <div id=\"event-start\" class=\"api-item\"> <h3>start( event, ui )<span class=\"returns\">Type: <code>resizestart</code></span> </h3> <div>This event is triggered at the start of a resize operation.</div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  <ul> <li> <div><strong>element</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The jQuery object representing the element to be resized</div> </li> <li> <div><strong>helper</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The jQuery object representing the helper that's being resized</div> </li> <li> <div><strong>originalElement</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The jQuery object representing the original element before it is wrapped</div> </li> <li> <div><strong>originalPosition</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>The position represented as <code>{ left, top }</code> before the resizable is resized</div> </li> <li> <div><strong>originalSize</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>The size represented as <code>{ width, height }</code> before the resizable is resized</div> </li> <li> <div><strong>position</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>The current position represented as <code>{ left, top }</code> </div> </li> <li> <div><strong>size</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>The current size represented as <code>{ width, height }</code> </div> </li> </ul> </li> </ul> <div> <strong>Code examples:</strong><p>Initialize the resizable with the start callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).resizable({\n  start: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the resizestart event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"resizestart\", function( event, ui ) {} );</pre> </div> </div> <div id=\"event-stop\" class=\"api-item\"> <h3>stop( event, ui )<span class=\"returns\">Type: <code>resizestop</code></span> </h3> <div>This event is triggered at the end of a resize operation.</div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  <ul> <li> <div><strong>element</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The jQuery object representing the element to be resized</div> </li> <li> <div><strong>helper</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The jQuery object representing the helper that's being resized</div> </li> <li> <div><strong>originalElement</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The jQuery object representing the original element before it is wrapped</div> </li> <li> <div><strong>originalPosition</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>The position represented as <code>{ left, top }</code> before the resizable is resized</div> </li> <li> <div><strong>originalSize</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>The size represented as <code>{ width, height }</code> before the resizable is resized</div> </li> <li> <div><strong>position</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>The current position represented as <code>{ left, top }</code> </div> </li> <li> <div><strong>size</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>The current size represented as <code>{ width, height }</code> </div> </li> </ul> </li> </ul> <div> <strong>Code examples:</strong><p>Initialize the resizable with the stop callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).resizable({\n  stop: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the resizestop event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"resizestop\", function( event, ui ) {} );</pre> </div> </div></section><section class=\"entry-examples\" id=\"entry-examples\"><h2>Example:</h2>\n<div class=\"entry-example\" id=\"example-0\"> <p>A simple jQuery UI Resizable.</p> <pre class=\"syntaxhighlighter xml\">&lt;!doctype html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"utf-8\"&gt;\n  &lt;title&gt;resizable demo&lt;/title&gt;\n  &lt;link rel=\"stylesheet\" href=\"//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css\"&gt;\n  &lt;style&gt;\n  #resizable {\n    width: 100px;\n    height: 100px;\n    background: #ccc;\n}\t&lt;/style&gt;\n  &lt;script src=\"//code.jquery.com/jquery-1.10.2.js\"&gt;&lt;/script&gt;\n  &lt;script src=\"//code.jquery.com/ui/1.11.4/jquery-ui.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n&lt;div id=\"resizable\"&gt;&lt;/div&gt;\n \n&lt;script&gt;\n$( \"#resizable\" ).resizable();\n&lt;/script&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;</pre> <h4>Demo:</h4>  </div></section> </div></article> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; The jQuery Foundation and other contributors<br>Licensed under the MIT License.<br>\n    <a href=\"https://api.jqueryui.com/resizable\" class=\"_attribution-link\">https://api.jqueryui.com/resizable</a>\n  </p>\n</div>\n","removeclass":"<h1 class=\"entry-title\">.removeClass()</h1> <div class=\"entry-content\"> <article id=\"removeClass1\" class=\"entry method\"><h2 class=\"section-title\"> <span class=\"name\">.removeClass( className [, duration ] [, easing ] [, complete ] )</span><span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a></span> </h2> <div class=\"entry-wrapper\"> <p class=\"desc\"><strong>Description: </strong>Removes the specified class(es) from each of the set of matched elements while animating all style changes.</p> <ul class=\"signatures\"> <li class=\"signature\"> <h4 class=\"name\"><a id=\"removeClass-className-duration-easing-complete\" href=\"#removeClass-className-duration-easing-complete\">.removeClass( className [, duration ] [, easing ] [, complete ] )</a></h4> <ul> <li> <div><strong>className</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>One or more class names (space separated) to be removed from the class attribute of each matched element.</div> </li> <li> <div> <strong>duration</strong> (default: <code>400</code>)</div> <div>Type: <a href=\"http://api.jquery.com/Types/#Number\">Number</a> or <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>A string or number determining how long the animation will run.</div> </li> <li> <div> <strong>easing</strong> (default: <code>swing</code>)</div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>A string indicating which <a href=\"easings\">easing</a> function to use for the transition.</div> </li> <li> <div><strong>complete</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Function\">Function</a>()</div> <div>A function to call once the animation is complete, called once per matched element.</div> </li> </ul> </li> <li class=\"signature\"> <h4 class=\"name\"><a id=\"removeClass-className-options\" href=\"#removeClass-className-options\">.removeClass( className [, options ] )</a></h4> <ul> <li> <div><strong>className</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>One or more class names (space separated) to be removed from the class attribute of each matched element.</div> </li> <li> <div><strong>options</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>All animation settings. All properties are optional.</div> <ul> <li> <div> <strong>duration</strong> (default: <code>400</code>)</div> <div>Type: <a href=\"http://api.jquery.com/Types/#Number\">Number</a> or <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>A string or number determining how long the animation will run.</div> </li> <li> <div> <strong>easing</strong> (default: <code>swing</code>)</div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>A string indicating which <a href=\"easings\">easing</a> function to use for the transition.</div> </li> <li> <div><strong>complete</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Function\">Function</a>()</div> <div>A function to call once the animation is complete, called once per matched element.</div> </li> <li> <div> <strong>children</strong> (default: <code>false</code>)</div> <div>Type: <a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> </div> <div>Whether the animation should additionally be applied to all descendants of the matched elements. This feature should be used with caution as the cost of determining which descendants to animate can be very expensive, and grows linearly with the number of descendants.</div> </li> <li> <div> <strong>queue</strong> (default: <code>true</code>)</div> <div>Type: <a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> or <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>A Boolean indicating whether to place the animation in the effects queue. If false, the animation will begin immediately. <strong>As of jQuery 1.7</strong>, the queue option can also accept a string, in which case the animation is added to the queue represented by that string.</div> </li> </ul> </li> </ul> </li> </ul> <div class=\"longdesc\" id=\"entry-longdesc\"> <div> <p>Similar to native CSS transitions, jQuery UI's class animations provide a smooth transition from one state to another while allowing you to keep all the details about which styles to change in CSS and out of your JavaScript. All class animation methods, including <code>.removeClass()</code>, support custom durations and easings, as well as provide a callback for when the animation completes.</p> <p>Not all styles can be animated. For example, there is no way to animate a background image. Any styles that cannot be animated will be changed at the end of the animation.</p> </div> <p>This plugin extends jQuery's built-in <a href=\"https://api.jquery.com/removeClass/\"><code>.removeClass()</code></a> method. If jQuery UI is not loaded, calling the <code>.removeClass()</code> method may not fail directly, as the method still exists. However, the expected behavior will not occur.</p> </div> <section class=\"entry-examples\" id=\"entry-examples\"><h2>Example:</h2>\n<div class=\"entry-example\" id=\"example-0\"> <p>Removes the class \"big-blue\" from the matched elements.</p> <pre class=\"syntaxhighlighter xml\">&lt;!doctype html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"utf-8\"&gt;\n  &lt;title&gt;removeClass demo&lt;/title&gt;\n  &lt;link rel=\"stylesheet\" href=\"//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css\"&gt;\n  &lt;style&gt;\n  div {\n    width: 100px;\n    height: 100px;\n    background-color: #ccc;\n  }\n  .big-blue {\n    width: 200px;\n    height: 200px;\n    background-color: #00f;\n  }\n  &lt;/style&gt;\n  &lt;script src=\"//code.jquery.com/jquery-1.10.2.js\"&gt;&lt;/script&gt;\n  &lt;script src=\"//code.jquery.com/ui/1.11.4/jquery-ui.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n&lt;div class=\"big-blue\"&gt;&lt;/div&gt;\n \n&lt;script&gt;\n$( \"div\" ).click(function() {\n  $( this ).removeClass( \"big-blue\", 1000, \"easeInBack\" );\n});\n&lt;/script&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;</pre> <h4>Demo:</h4>  </div></section> </div></article> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; The jQuery Foundation and other contributors<br>Licensed under the MIT License.<br>\n    <a href=\"https://api.jqueryui.com/removeClass\" class=\"_attribution-link\">https://api.jqueryui.com/removeClass</a>\n  </p>\n</div>\n","shake-effect":"<h1 class=\"entry-title\">Shake Effect</h1> <div class=\"entry-content\"> <article id=\"shake1\" class=\"entry effect\"><h2 class=\"section-title\"><span>Shake Effect</span></h2> <div class=\"entry-wrapper\"> <p class=\"desc\"><strong>Description: </strong>Shakes the element multiple times, vertically or horizontally.</p> <ul class=\"signatures\"><li class=\"signature\"> <h4 class=\"name\">shake</h4> <ul> <li> <div> <strong>direction</strong> (default: <code>\"left\"</code>)</div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>A value of <code>\"left\"</code> or <code>\"right\"</code> will shake the element horizontally, and a value of <code>\"up\"</code> or <code>\"down\"</code> will shake the element vertically. The value specifies which direction the element should move along the axis for the first step of the effect.</div> </li> <li> <div> <strong>distance</strong> (default: <code>20</code>)</div> <div>Type: <a href=\"http://api.jquery.com/Types/#Number\">Number</a> </div> <div>Distance to shake.</div> </li> <li> <div> <strong>times</strong> (default: <code>3</code>)</div> <div>Type: <a href=\"http://api.jquery.com/Types/#Integer\">Integer</a> </div> <div>Times to shake.</div> </li> </ul> </li></ul> <section class=\"entry-examples\" id=\"entry-examples\"><h2>Example:</h2>\n<div class=\"entry-example\" id=\"example-0\"> <p>Shake a div.</p> <pre class=\"syntaxhighlighter xml\">&lt;!doctype html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"utf-8\"&gt;\n  &lt;title&gt;shake demo&lt;/title&gt;\n  &lt;link rel=\"stylesheet\" href=\"//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css\"&gt;\n  &lt;style&gt;\n  #toggle {\n    width: 100px;\n    height: 100px;\n    background: #ccc;\n  }\n  &lt;/style&gt;\n  &lt;script src=\"//code.jquery.com/jquery-1.10.2.js\"&gt;&lt;/script&gt;\n  &lt;script src=\"//code.jquery.com/ui/1.11.4/jquery-ui.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n&lt;p&gt;Click anywhere to shake the box.&lt;/p&gt;\n&lt;div id=\"toggle\"&gt;&lt;/div&gt;\n \n&lt;script&gt;\n$( document ).click(function() {\n  $( \"#toggle\" ).effect( \"shake\" );\n});\n&lt;/script&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;</pre> <h4>Demo:</h4>  </div></section> </div></article> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; The jQuery Foundation and other contributors<br>Licensed under the MIT License.<br>\n    <a href=\"https://api.jqueryui.com/shake-effect\" class=\"_attribution-link\">https://api.jqueryui.com/shake-effect</a>\n  </p>\n</div>\n","pulsate-effect":"<h1 class=\"entry-title\">Pulsate Effect</h1> <div class=\"entry-content\"> <article id=\"pulsate1\" class=\"entry effect\"><h2 class=\"section-title\"><span>Pulsate Effect</span></h2> <div class=\"entry-wrapper\"> <p class=\"desc\"><strong>Description: </strong> The pulsate effect hides or shows an element by pulsing it in or out. </p> <ul class=\"signatures\"><li class=\"signature\"> <h4 class=\"name\">pulsate</h4> <ul><li> <div> <strong>times</strong> (default: <code>5</code>)</div> <div>Type: <a href=\"http://api.jquery.com/Types/#Integer\">Integer</a> </div> <div>The number of times the element should pulse. An extra half pulse is added for hide/show.</div> </li></ul> </li></ul> <section class=\"entry-examples\" id=\"entry-examples\"><h2>Example:</h2>\n<div class=\"entry-example\" id=\"example-0\"> <p>Toggle a div using the pulsate effect.</p> <pre class=\"syntaxhighlighter xml\">&lt;!doctype html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"utf-8\"&gt;\n  &lt;title&gt;pulsate demo&lt;/title&gt;\n  &lt;link rel=\"stylesheet\" href=\"//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css\"&gt;\n  &lt;style&gt;\n  #toggle {\n    width: 100px;\n    height: 100px;\n    background: #ccc;\n  }\n  &lt;/style&gt;\n  &lt;script src=\"//code.jquery.com/jquery-1.10.2.js\"&gt;&lt;/script&gt;\n  &lt;script src=\"//code.jquery.com/ui/1.11.4/jquery-ui.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n&lt;p&gt;Click anywhere to toggle the box.&lt;/p&gt;\n&lt;div id=\"toggle\"&gt;&lt;/div&gt;\n \n&lt;script&gt;\n$( document ).click(function() {\n  $( \"#toggle\" ).toggle( \"pulsate\" );\n});\n&lt;/script&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;</pre> <h4>Demo:</h4>  </div></section> </div></article> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; The jQuery Foundation and other contributors<br>Licensed under the MIT License.<br>\n    <a href=\"https://api.jqueryui.com/pulsate-effect\" class=\"_attribution-link\">https://api.jqueryui.com/pulsate-effect</a>\n  </p>\n</div>\n","removeuniqueid":"<h1 class=\"entry-title\">.removeUniqueId()</h1> <div class=\"entry-content\"> <article id=\"removeUniqueId1\" class=\"entry method\"><h2 class=\"section-title\"> <span class=\"name\">.removeUniqueId()</span><span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a></span> </h2> <div class=\"entry-wrapper\"> <p class=\"desc\"><strong>Description: </strong>Remove ids that were set by <code>.uniqueId()</code> for the set of matched elements.</p> <ul class=\"signatures\"><li class=\"signature\"> <h4 class=\"name\"> <span class=\"version-details\">version added: 1.9</span><a id=\"removeUniqueId\" href=\"#removeUniqueId\">.removeUniqueId()</a> </h4> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> </li></ul> <div class=\"longdesc\" id=\"entry-longdesc\"> <p>The <code>.removeUniqueId()</code> will remove ids that were set by <a href=\"uniqueid\"><code>.uniqueId()</code></a>. Calling <code>.removeUniqueId()</code> on an element that did not have its id set by <code>.uniqueId()</code> will have no affect, even if the element has an id.</p> </div> </div></article> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; The jQuery Foundation and other contributors<br>Licensed under the MIT License.<br>\n    <a href=\"https://api.jqueryui.com/removeUniqueId\" class=\"_attribution-link\">https://api.jqueryui.com/removeUniqueId</a>\n  </p>\n</div>\n","slide-effect":"<h1 class=\"entry-title\">Slide Effect</h1> <div class=\"entry-content\"> <article id=\"slide1\" class=\"entry effect\"><h2 class=\"section-title\"><span>Slide Effect</span></h2> <div class=\"entry-wrapper\"> <p class=\"desc\"><strong>Description: </strong>Slides the element out of the viewport.</p> <ul class=\"signatures\"><li class=\"signature\"> <h4 class=\"name\">slide</h4> <ul> <li> <div> <strong>direction</strong> (default: <code>\"both\"</code>)</div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>The direction of the effect. Possible values: <code>\"left\"</code>, <code>\"right\"</code>, <code>\"up\"</code>, <code>\"down\"</code>.</div> </li> <li> <div> <strong>distance</strong> (default: <code>element's outerWidth</code>)</div> <div>Type: <a href=\"http://api.jquery.com/Types/#Number\">Number</a> </div> <div>The distance of the effect. Defaults to either the height or width of the element depending on the <code>direction</code> argument. Can be set to any integer less than the width/height of the element.</div> </li> </ul> </li></ul> <section class=\"entry-examples\" id=\"entry-examples\"><h2>Example:</h2>\n<div class=\"entry-example\" id=\"example-0\"> <p>Toggle a div using the slide effect.</p> <pre class=\"syntaxhighlighter xml\">&lt;!doctype html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"utf-8\"&gt;\n  &lt;title&gt;slide demo&lt;/title&gt;\n  &lt;link rel=\"stylesheet\" href=\"//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css\"&gt;\n  &lt;style&gt;\n  #toggle {\n    width: 100px;\n    height: 100px;\n    background: #ccc;\n  }\n  &lt;/style&gt;\n  &lt;script src=\"//code.jquery.com/jquery-1.10.2.js\"&gt;&lt;/script&gt;\n  &lt;script src=\"//code.jquery.com/ui/1.11.4/jquery-ui.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n&lt;p&gt;Click anywhere to toggle the box.&lt;/p&gt;\n&lt;div id=\"toggle\"&gt;&lt;/div&gt;\n \n&lt;script&gt;\n$( document ).click(function() {\n  $( \"#toggle\" ).toggle( \"slide\" );\n});\n&lt;/script&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;</pre> <h4>Demo:</h4>  </div></section> </div></article> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; The jQuery Foundation and other contributors<br>Licensed under the MIT License.<br>\n    <a href=\"https://api.jqueryui.com/slide-effect\" class=\"_attribution-link\">https://api.jqueryui.com/slide-effect</a>\n  </p>\n</div>\n","scale-effect":"<h1 class=\"entry-title\">Scale Effect</h1> <div class=\"entry-content\"> <article id=\"scale1\" class=\"entry effect\"><h2 class=\"section-title\"><span>Scale Effect</span></h2> <div class=\"entry-wrapper\"> <p class=\"desc\"><strong>Description: </strong> Shrink or grow an element by a percentage factor. </p> <ul class=\"signatures\"><li class=\"signature\"> <h4 class=\"name\">scale</h4> <ul> <li> <div> <strong>direction</strong> (default: <code>\"both\"</code>)</div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>The direction of the effect. Possible values: <code>\"both\"</code>, <code>\"vertical\"</code> or <code>\"horizontal\"</code>.</div> </li> <li> <div> <strong>origin</strong> (default: <code>[ \"middle\", \"center\" ]</code>)</div> <div>Type: <a href=\"http://api.jquery.com/Types/#Array\">Array</a> </div> <div>The vanishing point.</div> </li> <li> <div><strong>percent</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Number\">Number</a> </div> <div>The percentage to scale to.</div> </li> <li> <div> <strong>scale</strong> (default: <code>\"both\"</code>)</div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>Which areas of the element will be resized: <code>\"both\"</code>, <code>\"box\"</code>, <code>\"content\"</code>. Box resizes the border and padding of the element; content resizes any content inside of the element.</div> </li> </ul> </li></ul> <section class=\"entry-examples\" id=\"entry-examples\"><h2>Examples:</h2>\n<div class=\"entry-example\" id=\"example-0\"> <p>Toggle a div using the scale effect.</p> <pre class=\"syntaxhighlighter xml\">&lt;!doctype html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"utf-8\"&gt;\n  &lt;title&gt;scale demo&lt;/title&gt;\n  &lt;link rel=\"stylesheet\" href=\"//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css\"&gt;\n  &lt;style&gt;\n  #toggle {\n    width: 100px;\n    height: 100px;\n    background: #ccc;\n  }\n  &lt;/style&gt;\n  &lt;script src=\"//code.jquery.com/jquery-1.10.2.js\"&gt;&lt;/script&gt;\n  &lt;script src=\"//code.jquery.com/ui/1.11.4/jquery-ui.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n&lt;p&gt;Click anywhere to toggle the box.&lt;/p&gt;\n&lt;div id=\"toggle\"&gt;&lt;/div&gt;\n \n&lt;script&gt;\n$( document ).click(function() {\n  $( \"#toggle\" ).toggle( \"scale\" );\n});\n&lt;/script&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;</pre> <h4>Demo:</h4>  </div> <div class=\"entry-example\" id=\"example-1\"> <p>Toggle a div using the scale effect in just one direction.</p> <pre class=\"syntaxhighlighter xml\">&lt;!doctype html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"utf-8\"&gt;\n  &lt;title&gt;scale demo&lt;/title&gt;\n  &lt;link rel=\"stylesheet\" href=\"//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css\"&gt;\n  &lt;style&gt;\n  #toggle {\n    width: 100px;\n    height: 100px;\n    background: #ccc;\n  }\n  &lt;/style&gt;\n  &lt;script src=\"//code.jquery.com/jquery-1.10.2.js\"&gt;&lt;/script&gt;\n  &lt;script src=\"//code.jquery.com/ui/1.11.4/jquery-ui.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n&lt;p&gt;Click anywhere to toggle the box.&lt;/p&gt;\n&lt;div id=\"toggle\"&gt;&lt;/div&gt;\n \n&lt;script&gt;\n$( document ).click(function() {\n  $( \"#toggle\" ).toggle({ effect: \"scale\", direction: \"horizontal\" });\n});\n&lt;/script&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;</pre> <h4>Demo:</h4>  </div></section> </div></article> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; The jQuery Foundation and other contributors<br>Licensed under the MIT License.<br>\n    <a href=\"https://api.jqueryui.com/scale-effect\" class=\"_attribution-link\">https://api.jqueryui.com/scale-effect</a>\n  </p>\n</div>\n","spinner":"<h1 class=\"entry-title\">Spinner Widget</h1> <div class=\"entry-content\"> <article id=\"spinner1\" class=\"entry widget\"><h2 class=\"section-title\"> <span>Spinner Widget</span><span class=\"version-details\">version added: 1.9</span> </h2> <div class=\"entry-wrapper\"> <p class=\"desc\"><strong>Description: </strong> Enhance a text input for entering numeric values, with up/down buttons and arrow key handling. </p> <section id=\"quick-nav\"><h2>QuickNav<a href=\"#entry-examples\">Examples</a> </h2>\n<div class=\"quick-nav-section\"> <h3>Options</h3> <div><a href=\"#option-culture\">culture</a></div> <div><a href=\"#option-disabled\">disabled</a></div> <div><a href=\"#option-icons\">icons</a></div> <div><a href=\"#option-incremental\">incremental</a></div> <div><a href=\"#option-max\">max</a></div> <div><a href=\"#option-min\">min</a></div> <div><a href=\"#option-numberFormat\">numberFormat</a></div> <div><a href=\"#option-page\">page</a></div> <div><a href=\"#option-step\">step</a></div> </div> <div class=\"quick-nav-section\"> <h3>Methods</h3> <div><a href=\"#method-destroy\">destroy</a></div> <div><a href=\"#method-disable\">disable</a></div> <div><a href=\"#method-enable\">enable</a></div> <div><a href=\"#method-instance\">instance</a></div> <div><a href=\"#method-isValid\">isValid</a></div> <div><a href=\"#method-option\">option</a></div> <div><a href=\"#method-pageDown\">pageDown</a></div> <div><a href=\"#method-pageUp\">pageUp</a></div> <div><a href=\"#method-stepDown\">stepDown</a></div> <div><a href=\"#method-stepUp\">stepUp</a></div> <div><a href=\"#method-value\">value</a></div> <div><a href=\"#method-widget\">widget</a></div> <br><h3>Extension Points</h3> <div><a href=\"#method-_buttonHtml\">_buttonHtml</a></div> <div><a href=\"#method-_uiSpinnerHtml\">_uiSpinnerHtml</a></div> </div> <div class=\"quick-nav-section\"> <h3>Events</h3> <div><a href=\"#event-change\">change</a></div> <div><a href=\"#event-create\">create</a></div> <div><a href=\"#event-spin\">spin</a></div> <div><a href=\"#event-start\">start</a></div> <div><a href=\"#event-stop\">stop</a></div> </div></section><div class=\"longdesc\" id=\"entry-longdesc\"> <p>The Spinner, or number stepper widget, is perfect for handling all kinds of numeric input. It allows users to type a value directly, or modify an existing value by spinning with the keyboard, mouse or scrollwheel. When combined with Globalize, you can even spin currencies and dates in a variety of locales.</p> <p>Spinner wraps a text input with two buttons to increment and decrement the current value. Key events are added so that the same incrementing and decrementing can be done with the keyboard. Spinner delegates to <a href=\"https://github.com/jquery/globalize\">Globalize</a> for number formatting and parsing.</p> <h3>Keyboard interaction</h3> <ul> <li> <code>UP</code>: Increment the value by one step.</li> <li> <code>DOWN</code>: Decrement the value by one step.</li> <li> <code>PAGE UP</code>: Increment the value by one page.</li> <li> <code>PAGE DOWN</code>: Decrement the value by one page.</li> </ul> <p>Focus stays in the text field, even after using the mouse to click one of the spin buttons.</p> <p>When the spinner is not read only (<code>&lt;input readonly&gt;</code>), the user may enter text that causes an invalid value (below min, above max, step mismatch, non-numeric input). Whenever a step is taken, either programmatically or via the step buttons, the value will be forced to a valid value (see the description for <a href=\"#method-stepUp\"><code>stepUp()</code></a> and <a href=\"#method-stepDown\"><code>stepDown()</code></a> for more details).</p> <div> <h3 id=\"theming\">Theming</h3> <p>The spinner widget uses the <a href=\"theming/css-framework\">jQuery UI CSS framework</a> to style its look and feel. If spinner specific styling is needed, the following CSS class names can be used:</p> </div> <ul> <li> <code>ui-spinner</code>: The outer container of the spinner. <ul> <li> <code>ui-spinner-input</code>: The <code>&lt;input&gt;</code> element that the Spinner widget was instantiated with.</li> <li> <code>ui-spinner-button</code>: The button controls used to increment and decrement the spinner's value. The up button will additionally have a <code>ui-spinner-up</code> class and the down button will additionally have a <code>ui-spinner-down</code> class.</li> </ul> </li> </ul> <h3>Dependencies</h3> <ul> <li><a href=\"https://api.jqueryui.com/category/ui-core/\">UI Core</a></li> <li><a href=\"jquery.widget\">Widget Factory</a></li> <li><a href=\"button\">Button</a></li> <li> <a href=\"https://github.com/jquery/globalize\">Globalize</a> (external, optional; for use with the <a href=\"#option-culture\"><code>culture</code></a> and <a href=\"#option-numberFormat\"><code>numberFormat</code></a> options)</li> </ul> </div> <h3>Additional Notes:</h3> <div class=\"longdesc\"><ul> <li> This widget requires some functional CSS, otherwise it won't work. If you build a custom theme, use the widget's specific CSS file as a starting point. </li> <li> This widget manipulates its element's value programmatically, therefore a native <code>change</code> event may not be fired when the element's value changes. </li> <li> Creating a spinner on an <code>&lt;input type=\"number\"&gt;</code> is not supported due to a UI conflict with the native spinner. </li> </ul></div> <section id=\"options\"><h2>Options</h2>\n<div id=\"option-culture\" class=\"api-item first-item\"> <h3>culture </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div class=\"default\"> <strong>Default: </strong><code>null</code> </div> <div>Sets the culture to use for parsing and formatting the value. If <code>null</code>, the currently set culture in <code>Globalize</code> is used, see <a href=\"https://github.com/jquery/globalize\">Globalize docs</a> for available cultures. Only relevant if the <a href=\"#option-numberFormat\"><code>numberFormat</code></a> option is set. Requires <a href=\"https://github.com/jquery/globalize\">Globalize</a> to be included.</div> <strong>Code examples:</strong><p>Initialize the spinner with the <code>culture</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).spinner({\n  culture: \"fr\"\n});</pre> <p>Get or set the <code>culture</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar culture = $( \".selector\" ).spinner( \"option\", \"culture\" );\n \n// Setter\n$( \".selector\" ).spinner( \"option\", \"culture\", \"fr\" );</pre> </div> <div id=\"option-disabled\" class=\"api-item\"> <h3>disabled </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> </div> <div class=\"default\"> <strong>Default: </strong><code>false</code> </div> <div>Disables the spinner if set to <code>true</code>.</div> <strong>Code examples:</strong><p>Initialize the spinner with the <code>disabled</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).spinner({\n  disabled: true\n});</pre> <p>Get or set the <code>disabled</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar disabled = $( \".selector\" ).spinner( \"option\", \"disabled\" );\n \n// Setter\n$( \".selector\" ).spinner( \"option\", \"disabled\", true );</pre> </div> <div id=\"option-icons\" class=\"api-item\"> <h3>icons </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div class=\"default\"> <strong>Default: </strong><code>{ down: \"ui-icon-triangle-1-s\", up: \"ui-icon-triangle-1-n\" }</code> </div> <div> Icons to use for buttons, matching <a href=\"theming/icons\">an icon provided by the jQuery UI CSS Framework</a>. <ul> <li>up (string, default: \"ui-icon-triangle-1-n\")</li> <li>down (string, default: \"ui-icon-triangle-1-s\")</li> </ul> </div> <strong>Code examples:</strong><p>Initialize the spinner with the <code>icons</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).spinner({\n  icons: { down: \"custom-down-icon\", up: \"custom-up-icon\" }\n});</pre> <p>Get or set the <code>icons</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar icons = $( \".selector\" ).spinner( \"option\", \"icons\" );\n \n// Setter\n$( \".selector\" ).spinner( \"option\", \"icons\", { down: \"custom-down-icon\", up: \"custom-up-icon\" } );</pre> </div> <div id=\"option-incremental\" class=\"api-item\"> <h3>incremental </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> or <a href=\"http://api.jquery.com/Types/#Function\">Function</a>( <a href=\"http://api.jquery.com/Types/#Integer\">Integer</a> count )</div> <div class=\"default\"> <strong>Default: </strong><code>true</code> </div> <div>Controls the number of steps taken when holding down a spin button.</div> <strong>Multiple types supported:</strong><ul> <li> <strong>Boolean</strong>: When set to <code>true</code>, the stepping delta will increase when spun incessantly. When set to <code>false</code>, all steps are equal (as defined by the <a href=\"#option-step\"><code>step</code></a> option).</li> <li> <strong>Function</strong>: Receives one parameter: the number of spins that have occurred. Must return the number of steps that should occur for the current spin.</li> </ul> <strong>Code examples:</strong><p>Initialize the spinner with the <code>incremental</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).spinner({\n  incremental: false\n});</pre> <p>Get or set the <code>incremental</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar incremental = $( \".selector\" ).spinner( \"option\", \"incremental\" );\n \n// Setter\n$( \".selector\" ).spinner( \"option\", \"incremental\", false );</pre> </div> <div id=\"option-max\" class=\"api-item\"> <h3>max </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Number\">Number</a> or <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div class=\"default\"> <strong>Default: </strong><code>null</code> </div> <div>The maximum allowed value. The element's <code>max</code> attribute is used if it exists and the option is not explicitly set. If <code>null</code>, there is no maximum enforced.</div> <strong>Multiple types supported:</strong><ul> <li> <strong>Number</strong>: The maximum value.</li> <li> <strong>String</strong>: If <a href=\"https://github.com/jquery/globalize\">Globalize</a> is included, the <code>max</code> option can be passed as a string which will be parsed based on the <a href=\"#opiton-numberFormat\"><code>numberFormat</code></a> and <a href=\"#option-culture\"><code>culture</code></a> options; otherwise it will fall back to the native <code>parseFloat()</code> method.</li> </ul> <strong>Code examples:</strong><p>Initialize the spinner with the <code>max</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).spinner({\n  max: 50\n});</pre> <p>Get or set the <code>max</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar max = $( \".selector\" ).spinner( \"option\", \"max\" );\n \n// Setter\n$( \".selector\" ).spinner( \"option\", \"max\", 50 );</pre> </div> <div id=\"option-min\" class=\"api-item\"> <h3>min </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Number\">Number</a> or <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div class=\"default\"> <strong>Default: </strong><code>null</code> </div> <div>The minimum allowed value. The element's <code>min</code> attribute is used if it exists and the option is not explicitly set. If <code>null</code>, there is no minimum enforced.</div> <strong>Multiple types supported:</strong><ul> <li> <strong>Number</strong>: The minimum value.</li> <li> <strong>String</strong>: If <a href=\"https://github.com/jquery/globalize\">Globalize</a> is included, the <code>min</code> option can be passed as a string which will be parsed based on the <a href=\"#opiton-numberFormat\"><code>numberFormat</code></a> and <a href=\"#option-culture\"><code>culture</code></a> options; otherwise it will fall back to the native <code>parseFloat()</code> method.</li> </ul> <strong>Code examples:</strong><p>Initialize the spinner with the <code>min</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).spinner({\n  min: 0\n});</pre> <p>Get or set the <code>min</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar min = $( \".selector\" ).spinner( \"option\", \"min\" );\n \n// Setter\n$( \".selector\" ).spinner( \"option\", \"min\", 0 );</pre> </div> <div id=\"option-numberFormat\" class=\"api-item\"> <h3>numberFormat </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div class=\"default\"> <strong>Default: </strong><code>null</code> </div> <div>Format of numbers passed to <a href=\"https://github.com/jquery/globalize\"><code>Globalize</code></a>, if available. Most common are <code>\"n\"</code> for a decimal number and <code>\"C\"</code> for a currency value. Also see the <a href=\"#option-culture\"><code>culture</code></a> option.</div> <strong>Code examples:</strong><p>Initialize the spinner with the <code>numberFormat</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).spinner({\n  numberFormat: \"n\"\n});</pre> <p>Get or set the <code>numberFormat</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar numberFormat = $( \".selector\" ).spinner( \"option\", \"numberFormat\" );\n \n// Setter\n$( \".selector\" ).spinner( \"option\", \"numberFormat\", \"n\" );</pre> </div> <div id=\"option-page\" class=\"api-item\"> <h3>page </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Number\">Number</a> </div> <div class=\"default\"> <strong>Default: </strong><code>10</code> </div> <div>The number of steps to take when paging via the <a href=\"#method-pageUp\"><code>pageUp</code></a>/<a href=\"#method-pageDown\"><code>pageDown</code></a> methods.</div> <strong>Code examples:</strong><p>Initialize the spinner with the <code>page</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).spinner({\n  page: 5\n});</pre> <p>Get or set the <code>page</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar page = $( \".selector\" ).spinner( \"option\", \"page\" );\n \n// Setter\n$( \".selector\" ).spinner( \"option\", \"page\", 5 );</pre> </div> <div id=\"option-step\" class=\"api-item\"> <h3>step </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Number\">Number</a> or <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div class=\"default\"> <strong>Default: </strong><code>1</code> </div> <div>The size of the step to take when spinning via buttons or via the <a href=\"#method-stepUp\"><code>stepUp()</code></a>/<a href=\"#method-stepDown\"><code>stepDown()</code></a> methods. The element's <code>step</code> attribute is used if it exists and the option is not explicitly set.</div> <strong>Multiple types supported:</strong><ul> <li> <strong>Number</strong>: The size of the step.</li> <li> <strong>String</strong>: If <a href=\"https://github.com/jquery/globalize\">Globalize</a> is included, the <code>step</code> option can be passed as a string which will be parsed based on the <a href=\"#opiton-numberFormat\"><code>numberFormat</code></a> and <a href=\"#option-culture\"><code>culture</code></a> options, otherwise it will fall back to the native <code>parseFloat</code>.</li> </ul> <strong>Code examples:</strong><p>Initialize the spinner with the <code>step</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).spinner({\n  step: 2\n});</pre> <p>Get or set the <code>step</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar step = $( \".selector\" ).spinner( \"option\", \"step\" );\n \n// Setter\n$( \".selector\" ).spinner( \"option\", \"step\", 2 );</pre> </div></section><section id=\"methods\"><h2>Methods</h2>\n<div id=\"method-destroy\"><div class=\"api-item first-item\"> <h3>destroy()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Removes the spinner functionality completely. This will return the element back to its pre-init state. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the destroy method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).spinner( \"destroy\" );</pre> </div> </div></div> <div id=\"method-disable\"><div class=\"api-item\"> <h3>disable()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Disables the spinner. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the disable method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).spinner( \"disable\" );</pre> </div> </div></div> <div id=\"method-enable\"><div class=\"api-item\"> <h3>enable()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Enables the spinner. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the enable method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).spinner( \"enable\" );</pre> </div> </div></div> <div id=\"method-instance\"><div class=\"api-item\"> <h3>instance()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#Object\">Object</a></span> </h3> <div> <p>Retrieves the spinner's instance object. If the element does not have an associated instance, <code>undefined</code> is returned.</p> <p>Unlike other widget methods, <code>instance()</code> is safe to call on any element after the spinner plugin has loaded.</p> </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the instance method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).spinner( \"instance\" );</pre> </div> </div></div> <div id=\"method-isValid\"><div class=\"api-item\"> <h3>isValid()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a></span> </h3> <div> Returns whether the Spinner's value is valid given its <a href=\"#option-min\"><code>min</code></a>, <a href=\"#option-max\"><code>max</code></a>, and <a href=\"#option-step\"><code>step</code></a>. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the isValid method:</p> <pre class=\"syntaxhighlighter javascript\">var isValid = $( \".selector\" ).spinner( \"isValid\" );</pre> </div> </div></div> <div id=\"method-option\"> <div class=\"api-item\"> <h3>option( optionName )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#Object\">Object</a></span> </h3> <div> <p>Gets the value currently associated with the specified <code>optionName</code>.</p> <p><strong>Note:</strong> For options that have objects as their value, you can get the value of a specific key by using dot notation. For example, <code>\"foo.bar\"</code> would get the value of the <code>bar</code> property on the <code>foo</code> option.</p> </div> <ul><li> <div><strong>optionName</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>The name of the option to get.</div> </li></ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">var isDisabled = $( \".selector\" ).spinner( \"option\", \"disabled\" );</pre> </div> </div> <div class=\"api-item\"> <h3>option()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#PlainObject\">PlainObject</a></span> </h3> <div>Gets an object containing key/value pairs representing the current spinner options hash.</div> <ul><li><div class=\"null-signature\">This signature does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">var options = $( \".selector\" ).spinner( \"option\" );</pre> </div> </div> <div class=\"api-item\"> <h3>option( optionName, value )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> <p>Sets the value of the spinner option associated with the specified <code>optionName</code>.</p> <p><strong>Note:</strong> For options that have objects as their value, you can set the value of just one property by using dot notation for <code>optionName</code>. For example, <code>\"foo.bar\"</code> would update only the <code>bar</code> property of the <code>foo</code> option.</p> </div> <ul> <li> <div><strong>optionName</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>The name of the option to set.</div> </li> <li> <div><strong>value</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>A value to set for the option.</div> </li> </ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).spinner( \"option\", \"disabled\", true );</pre> </div> </div> <div class=\"api-item\"> <h3>option( options )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div>Sets one or more options for the spinner.</div> <ul><li> <div><strong>options</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>A map of option-value pairs to set.</div> </li></ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).spinner( \"option\", { disabled: true } );</pre> </div> </div> </div> <div id=\"method-pageDown\"><div class=\"api-item\"> <h3>pageDown( [pages ] )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> <p>Decrements the value by the specified number of pages, as defined by the <a href=\"#option-page\"><code>page</code></a> option. Without the parameter, a single page is decremented.</p> <p>If the resulting value is above the max, below the min, or results in a step mismatch, the value will be adjusted to the closest valid value.</p> <p>Invoking <code>pageDown()</code> will cause <a href=\"#event-start\"><code>start</code></a>, <a href=\"#event-spin\"><code>spin</code></a>, and <a href=\"#event-stop\"><code>stop</code></a> events to be triggered.</p> </div> <ul><li> <div><strong>pages</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Number\">Number</a> </div> <div>Number of pages to decrement, defaults to 1.</div> </li></ul> <div> <strong>Code examples:</strong><p>Invoke the pageDown method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).spinner( \"pageDown\" );</pre> </div> </div></div> <div id=\"method-pageUp\"><div class=\"api-item\"> <h3>pageUp( [pages ] )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> <p>Increments the value by the specified number of pages, as defined by the <a href=\"#option-page\"><code>page</code></a> option. Without the parameter, a single page is incremented.</p> <p>If the resulting value is above the max, below the min, or results in a step mismatch, the value will be adjusted to the closest valid value.</p> <p>Invoking <code>pageUp()</code> will cause <a href=\"#event-start\"><code>start</code></a>, <a href=\"#event-spin\"><code>spin</code></a>, and <a href=\"#event-stop\"><code>stop</code></a> events to be triggered.</p> </div> <ul><li> <div><strong>pages</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Number\">Number</a> </div> <div>Number of pages to increment, defaults to 1.</div> </li></ul> <div> <strong>Code examples:</strong><p>Invoke the pageUp method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).spinner( \"pageUp\", 10 );</pre> </div> </div></div> <div id=\"method-stepDown\"><div class=\"api-item\"> <h3>stepDown( [steps ] )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> <p>Decrements the value by the specified number of steps. Without the parameter, a single step is decremented.</p> <p>If the resulting value is above the max, below the min, or results in a step mismatch, the value will be adjusted to the closest valid value.</p> <p>Invoking <code>stepDown()</code> will cause <a href=\"#event-start\"><code>start</code></a>, <a href=\"#event-spin\"><code>spin</code></a>, and <a href=\"#event-stop\"><code>stop</code></a> events to be triggered.</p> </div> <ul><li> <div><strong>steps</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Number\">Number</a> </div> <div>Number of steps to decrement, defaults to 1.</div> </li></ul> <div> <strong>Code examples:</strong><p>Invoke the stepDown method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).spinner( \"stepDown\" );</pre> </div> </div></div> <div id=\"method-stepUp\"><div class=\"api-item\"> <h3>stepUp( [steps ] )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> <p>Increments the value by the specified number of steps. Without the parameter, a single step is incremented.</p> <p>If the resulting value is above the max, below the min, or results in a step mismatch, the value will be adjusted to the closest valid value.</p> <p>Invoking <code>stepUp()</code> will cause <a href=\"#event-start\"><code>start</code></a>, <a href=\"#event-spin\"><code>spin</code></a>, and <a href=\"#event-stop\"><code>stop</code></a> events to be triggered.</p> </div> <ul><li> <div><strong>steps</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Number\">Number</a> </div> <div>Number of steps to increment, defaults to 1.</div> </li></ul> <div> <strong>Code examples:</strong><p>Invoke the stepUp method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).spinner( \"stepUp\", 5 );</pre> </div> </div></div> <div id=\"method-value\"> <div class=\"api-item\"> <h3>value()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#Number\">Number</a></span> </h3> <div>Gets the current value as a number. The value is parsed based on the <a href=\"#option-numberFormat\"><code>numberFormat</code></a> and <a href=\"#option-culture\"><code>culture</code></a> options.</div> <ul><li><div class=\"null-signature\">This signature does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">var value = $( \".selector\" ).spinner( \"value\" );</pre> </div> </div> <div class=\"api-item\"> <h3>value( value )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3>  <ul><li> <div><strong>value</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Number\">Number</a> or <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>The value to set. If passed as a string, the value is parsed based on the <a href=\"#option-numberFormat\"><code>numberFormat</code></a> and <a href=\"#option-culture\"><code>culture</code></a> options.</div> </li></ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).spinner( \"value\", 50 );</pre> </div> </div> </div> <div id=\"method-widget\"><div class=\"api-item\"> <h3>widget()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a></span> </h3> <div> Returns a <code>jQuery</code> object containing the generated wrapper. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the widget method:</p> <pre class=\"syntaxhighlighter javascript\">var widget = $( \".selector\" ).spinner( \"widget\" );</pre> </div> </div></div></section><section id=\"extension-points\"><h2>Extension Points</h2>\n<p> The spinner widget is built with the <a href=\"jquery.widget\">widget factory</a> and can be extended. When extending widgets, you have the ability to override or add to the behavior of existing methods. The following methods are provided as extension points with the same API stability as the <a href=\"#methods\">plugin methods</a> listed above. For more information on widget extensions, see <a href=\"http://learn.jquery.com/jquery-ui/widget-factory/extending-widgets/\">Extending Widgets with the Widget Factory</a>. </p>  <div id=\"method-_buttonHtml\"><div class=\"api-item first-item\"> <h3>_buttonHtml()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#String\">String</a></span> </h3> <div> Method that returns HTML to use for the spinner's increment and decrement buttons. Each button must be given a <code>ui-spinner-button</code> class name for the associated events to work. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Use <code>&lt;button&gt;</code> elements for the increment and decrement buttons.</p> <pre class=\"syntaxhighlighter javascript\">_buttonHtml: function() {\n  return \"\" +\n    \"&lt;button class='ui-spinner-button ui-spinner-up'&gt;\" +\n      \"&lt;span class='ui-icon \" + this.options.icons.up + \"'&gt;&amp;#9650;&lt;/span&gt;\" +\n    \"&lt;/button&gt;\" +\n    \"&lt;button class='ui-spinner-button ui-spinner-down'&gt;\" +\n      \"&lt;span class='ui-icon \" + this.options.icons.down + \"'&gt;&amp;#9660;&lt;/span&gt;\" +\n    \"&lt;/button&gt;\";\n}</pre> </div> </div></div> <div id=\"method-_uiSpinnerHtml\"><div class=\"api-item\"> <h3>_uiSpinnerHtml()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#String\">String</a></span> </h3> <div> Method that determines the HTML to use to wrap the spinner's <code>&lt;input&gt;</code> element. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Wrap the spinner with a <code>&lt;div&gt;</code> with no rounded corners.</p> <pre class=\"syntaxhighlighter javascript\">_uiSpinnerHtml: function() {\n  return \"&lt;div class='ui-spinner ui-widget ui-widget-content'&gt;&lt;/div&gt;\";\n}</pre> </div> </div></div></section><section id=\"events\"><h2>Events</h2>\n<div id=\"event-change\" class=\"api-item first-item\"> <h3>change( event, ui )<span class=\"returns\">Type: <code>spinchange</code></span> </h3> <div> Triggered when the value of the spinner has changed and the input is no longer focused. </div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  </li> </ul> <p><em>Note: The <code>ui</code> object is empty but included for consistency with other events.</em></p> <div> <strong>Code examples:</strong><p>Initialize the spinner with the change callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).spinner({\n  change: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the spinchange event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"spinchange\", function( event, ui ) {} );</pre> </div> </div> <div id=\"event-create\" class=\"api-item\"> <h3>create( event, ui )<span class=\"returns\">Type: <code>spincreate</code></span> </h3> <div> Triggered when the spinner is created. </div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  </li> </ul> <p><em>Note: The <code>ui</code> object is empty but included for consistency with other events.</em></p> <div> <strong>Code examples:</strong><p>Initialize the spinner with the create callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).spinner({\n  create: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the spincreate event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"spincreate\", function( event, ui ) {} );</pre> </div> </div> <div id=\"event-spin\" class=\"api-item\"> <h3>spin( event, ui )<span class=\"returns\">Type: <code>spin</code></span> </h3> <div> Triggered during increment/decrement (to determine direction of spin compare current value with <code>ui.value</code>). <p>Can be canceled, preventing the value from being updated.</p> </div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  <ul><li> <div><strong>value</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Number\">Number</a> </div> <div>The new value to be set, unless the event is cancelled.</div> </li></ul> </li> </ul> <div> <strong>Code examples:</strong><p>Initialize the spinner with the spin callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).spinner({\n  spin: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the spin event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"spin\", function( event, ui ) {} );</pre> </div> </div> <div id=\"event-start\" class=\"api-item\"> <h3>start( event, ui )<span class=\"returns\">Type: <code>spinstart</code></span> </h3> <div> Triggered before a spin. Can be canceled, preventing the spin from occurring. </div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  </li> </ul> <p><em>Note: The <code>ui</code> object is empty but included for consistency with other events.</em></p> <div> <strong>Code examples:</strong><p>Initialize the spinner with the start callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).spinner({\n  start: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the spinstart event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"spinstart\", function( event, ui ) {} );</pre> </div> </div> <div id=\"event-stop\" class=\"api-item\"> <h3>stop( event, ui )<span class=\"returns\">Type: <code>spinstop</code></span> </h3> <div>Triggered after a spin.</div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  </li> </ul> <p><em>Note: The <code>ui</code> object is empty but included for consistency with other events.</em></p> <div> <strong>Code examples:</strong><p>Initialize the spinner with the stop callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).spinner({\n  stop: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the spinstop event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"spinstop\", function( event, ui ) {} );</pre> </div> </div></section><section class=\"entry-examples\" id=\"entry-examples\"><h2>Example:</h2>\n<div class=\"entry-example\" id=\"example-0\"> <p>Plain number spinner</p> <pre class=\"syntaxhighlighter xml\">&lt;!doctype html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"utf-8\"&gt;\n  &lt;title&gt;spinner demo&lt;/title&gt;\n  &lt;link rel=\"stylesheet\" href=\"//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css\"&gt;\n  &lt;script src=\"//code.jquery.com/jquery-1.10.2.js\"&gt;&lt;/script&gt;\n  &lt;script src=\"//code.jquery.com/ui/1.11.4/jquery-ui.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n&lt;input id=\"spinner\"&gt;\n \n&lt;script&gt;\n$( \"#spinner\" ).spinner();\n&lt;/script&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;</pre> <h4>Demo:</h4>  </div></section> </div></article> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; The jQuery Foundation and other contributors<br>Licensed under the MIT License.<br>\n    <a href=\"https://api.jqueryui.com/spinner\" class=\"_attribution-link\">https://api.jqueryui.com/spinner</a>\n  </p>\n</div>\n","sortable":"<h1 class=\"entry-title\">Sortable Widget</h1> <div class=\"entry-content\"> <article id=\"sortable1\" class=\"entry widget\"><h2 class=\"section-title\"> <span>Sortable Widget</span><span class=\"version-details\">version added: 1.0</span> </h2> <div class=\"entry-wrapper\"> <p class=\"desc\"><strong>Description: </strong>Reorder elements in a list or grid using the mouse.</p> <section id=\"quick-nav\"><h2>QuickNav<a href=\"#entry-examples\">Examples</a> </h2>\n<div class=\"quick-nav-section\"> <h3>Options</h3> <div><a href=\"#option-appendTo\">appendTo</a></div> <div><a href=\"#option-axis\">axis</a></div> <div><a href=\"#option-cancel\">cancel</a></div> <div><a href=\"#option-connectWith\">connectWith</a></div> <div><a href=\"#option-containment\">containment</a></div> <div><a href=\"#option-cursor\">cursor</a></div> <div><a href=\"#option-cursorAt\">cursorAt</a></div> <div><a href=\"#option-delay\">delay</a></div> <div><a href=\"#option-disabled\">disabled</a></div> <div><a href=\"#option-distance\">distance</a></div> <div><a href=\"#option-dropOnEmpty\">dropOnEmpty</a></div> <div><a href=\"#option-forceHelperSize\">forceHelperSize</a></div> <div><a href=\"#option-forcePlaceholderSize\">forcePlaceholderSize</a></div> <div><a href=\"#option-grid\">grid</a></div> <div><a href=\"#option-handle\">handle</a></div> <div><a href=\"#option-helper\">helper</a></div> <div><a href=\"#option-items\">items</a></div> <div><a href=\"#option-opacity\">opacity</a></div> <div><a href=\"#option-placeholder\">placeholder</a></div> <div><a href=\"#option-revert\">revert</a></div> <div><a href=\"#option-scroll\">scroll</a></div> <div><a href=\"#option-scrollSensitivity\">scrollSensitivity</a></div> <div><a href=\"#option-scrollSpeed\">scrollSpeed</a></div> <div><a href=\"#option-tolerance\">tolerance</a></div> <div><a href=\"#option-zIndex\">zIndex</a></div> </div> <div class=\"quick-nav-section\"> <h3>Methods</h3> <div><a href=\"#method-cancel\">cancel</a></div> <div><a href=\"#method-destroy\">destroy</a></div> <div><a href=\"#method-disable\">disable</a></div> <div><a href=\"#method-enable\">enable</a></div> <div><a href=\"#method-instance\">instance</a></div> <div><a href=\"#method-option\">option</a></div> <div><a href=\"#method-refresh\">refresh</a></div> <div><a href=\"#method-refreshPositions\">refreshPositions</a></div> <div><a href=\"#method-serialize\">serialize</a></div> <div><a href=\"#method-toArray\">toArray</a></div> <div><a href=\"#method-widget\">widget</a></div> </div> <div class=\"quick-nav-section\"> <h3>Events</h3> <div><a href=\"#event-activate\">activate</a></div> <div><a href=\"#event-beforeStop\">beforeStop</a></div> <div><a href=\"#event-change\">change</a></div> <div><a href=\"#event-create\">create</a></div> <div><a href=\"#event-deactivate\">deactivate</a></div> <div><a href=\"#event-out\">out</a></div> <div><a href=\"#event-over\">over</a></div> <div><a href=\"#event-receive\">receive</a></div> <div><a href=\"#event-remove\">remove</a></div> <div><a href=\"#event-sort\">sort</a></div> <div><a href=\"#event-start\">start</a></div> <div><a href=\"#event-stop\">stop</a></div> <div><a href=\"#event-update\">update</a></div> </div></section><div class=\"longdesc\" id=\"entry-longdesc\"> <p>The jQuery UI Sortable plugin makes selected elements sortable by dragging with the mouse.</p> <p><em>Note: In order to sort table rows, the <code>tbody</code> must be made sortable, not the <code>table</code>.</em></p> <h3>Dependencies</h3> <ul> <li><a href=\"https://api.jqueryui.com/category/ui-core/\">UI Core</a></li> <li><a href=\"jquery.widget\">Widget Factory</a></li> <li><a href=\"mouse\">Mouse Interaction</a></li> </ul> </div> <section id=\"options\"><h2>Options</h2>\n<div id=\"option-appendTo\" class=\"api-item first-item\"> <h3>appendTo </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> or <a href=\"http://api.jquery.com/Types/#Element\">Element</a> or <a href=\"http://api.jquery.com/Types/#Selector\">Selector</a> or <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div class=\"default\"> <strong>Default: </strong><code>\"parent\"</code> </div> <div>Defines where the helper that moves with the mouse is being appended to during the drag (for example, to resolve overlap/zIndex issues).</div> <strong>Multiple types supported:</strong><ul> <li> <strong>jQuery</strong>: A jQuery object containing the element to append the helper to.</li> <li> <strong>Element</strong>: The element to append the helper to.</li> <li> <strong>Selector</strong>: A selector specifying which element to append the helper to.</li> <li> <strong>String</strong>: The string <code>\"parent\"</code> will cause the helper to be a sibling of the sortable item.</li> </ul> <strong>Code examples:</strong><p>Initialize the sortable with the <code>appendTo</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).sortable({\n  appendTo: document.body\n});</pre> <p>Get or set the <code>appendTo</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar appendTo = $( \".selector\" ).sortable( \"option\", \"appendTo\" );\n \n// Setter\n$( \".selector\" ).sortable( \"option\", \"appendTo\", document.body );</pre> </div> <div id=\"option-axis\" class=\"api-item\"> <h3>axis </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div class=\"default\"> <strong>Default: </strong><code>false</code> </div> <div>If defined, the items can be dragged only horizontally or vertically. Possible values: <code>\"x\"</code>, <code>\"y\"</code>.</div> <strong>Code examples:</strong><p>Initialize the sortable with the <code>axis</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).sortable({\n  axis: \"x\"\n});</pre> <p>Get or set the <code>axis</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar axis = $( \".selector\" ).sortable( \"option\", \"axis\" );\n \n// Setter\n$( \".selector\" ).sortable( \"option\", \"axis\", \"x\" );</pre> </div> <div id=\"option-cancel\" class=\"api-item\"> <h3>cancel </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Selector\">Selector</a> </div> <div class=\"default\"> <strong>Default: </strong><code>\"input,textarea,button,select,option\"</code> </div> <div>Prevents sorting if you start on elements matching the selector.</div> <strong>Code examples:</strong><p>Initialize the sortable with the <code>cancel</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).sortable({\n  cancel: \"a,button\"\n});</pre> <p>Get or set the <code>cancel</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar cancel = $( \".selector\" ).sortable( \"option\", \"cancel\" );\n \n// Setter\n$( \".selector\" ).sortable( \"option\", \"cancel\", \"a,button\" );</pre> </div> <div id=\"option-connectWith\" class=\"api-item\"> <h3>connectWith </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Selector\">Selector</a> </div> <div class=\"default\"> <strong>Default: </strong><code>false</code> </div> <div>A selector of other sortable elements that the items from this list should be connected to. This is a one-way relationship, if you want the items to be connected in both directions, the <code>connectWith</code> option must be set on both sortable elements.</div> <strong>Code examples:</strong><p>Initialize the sortable with the <code>connectWith</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).sortable({\n  connectWith: \"#shopping-cart\"\n});</pre> <p>Get or set the <code>connectWith</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar connectWith = $( \".selector\" ).sortable( \"option\", \"connectWith\" );\n \n// Setter\n$( \".selector\" ).sortable( \"option\", \"connectWith\", \"#shopping-cart\" );</pre> </div> <div id=\"option-containment\" class=\"api-item\"> <h3>containment </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Element\">Element</a> or <a href=\"http://api.jquery.com/Types/#Selector\">Selector</a> or <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div class=\"default\"> <strong>Default: </strong><code>false</code> </div> <div> <p>Defines a bounding box that the sortable items are constrained to while dragging.</p> <p>Note: The element specified for containment must have a calculated width and height (though it need not be explicit). For example, if you have <code>float: left</code> sortable children and specify <code>containment: \"parent\"</code> be sure to have <code>float: left</code> on the sortable/parent container as well or it will have <code>height: 0</code>, causing undefined behavior.</p> </div> <strong>Multiple types supported:</strong><ul> <li> <strong>Element</strong>: An element to use as the container.</li> <li> <strong>Selector</strong>: A selector specifying an element to use as the container.</li> <li> <strong>String</strong>: A string identifying an element to use as the container. Possible values: <code>\"parent\"</code>, <code>\"document\"</code>, <code>\"window\"</code>.</li> </ul> <strong>Code examples:</strong><p>Initialize the sortable with the <code>containment</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).sortable({\n  containment: \"parent\"\n});</pre> <p>Get or set the <code>containment</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar containment = $( \".selector\" ).sortable( \"option\", \"containment\" );\n \n// Setter\n$( \".selector\" ).sortable( \"option\", \"containment\", \"parent\" );</pre> </div> <div id=\"option-cursor\" class=\"api-item\"> <h3>cursor </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div class=\"default\"> <strong>Default: </strong><code>\"auto\"</code> </div> <div>Defines the cursor that is being shown while sorting.</div> <strong>Code examples:</strong><p>Initialize the sortable with the <code>cursor</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).sortable({\n  cursor: \"move\"\n});</pre> <p>Get or set the <code>cursor</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar cursor = $( \".selector\" ).sortable( \"option\", \"cursor\" );\n \n// Setter\n$( \".selector\" ).sortable( \"option\", \"cursor\", \"move\" );</pre> </div> <div id=\"option-cursorAt\" class=\"api-item\"> <h3>cursorAt </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div class=\"default\"> <strong>Default: </strong><code>false</code> </div> <div>Moves the sorting element or helper so the cursor always appears to drag from the same position. Coordinates can be given as a hash using a combination of one or two keys: <code>{ top, left, right, bottom }</code>.</div> <strong>Code examples:</strong><p>Initialize the sortable with the <code>cursorAt</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).sortable({\n  cursorAt: { left: 5 }\n});</pre> <p>Get or set the <code>cursorAt</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar cursorAt = $( \".selector\" ).sortable( \"option\", \"cursorAt\" );\n \n// Setter\n$( \".selector\" ).sortable( \"option\", \"cursorAt\", { left: 5 } );</pre> </div> <div id=\"option-delay\" class=\"api-item\"> <h3>delay </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Integer\">Integer</a> </div> <div class=\"default\"> <strong>Default: </strong><code>0</code> </div> <div>Time in milliseconds to define when the sorting should start. Adding a delay helps preventing unwanted drags when clicking on an element.</div> <strong>Code examples:</strong><p>Initialize the sortable with the <code>delay</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).sortable({\n  delay: 150\n});</pre> <p>Get or set the <code>delay</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar delay = $( \".selector\" ).sortable( \"option\", \"delay\" );\n \n// Setter\n$( \".selector\" ).sortable( \"option\", \"delay\", 150 );</pre> </div> <div id=\"option-disabled\" class=\"api-item\"> <h3>disabled </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> </div> <div class=\"default\"> <strong>Default: </strong><code>false</code> </div> <div>Disables the sortable if set to <code>true</code>.</div> <strong>Code examples:</strong><p>Initialize the sortable with the <code>disabled</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).sortable({\n  disabled: true\n});</pre> <p>Get or set the <code>disabled</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar disabled = $( \".selector\" ).sortable( \"option\", \"disabled\" );\n \n// Setter\n$( \".selector\" ).sortable( \"option\", \"disabled\", true );</pre> </div> <div id=\"option-distance\" class=\"api-item\"> <h3>distance </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Number\">Number</a> </div> <div class=\"default\"> <strong>Default: </strong><code>1</code> </div> <div>Tolerance, in pixels, for when sorting should start. If specified, sorting will not start until after mouse is dragged beyond distance. Can be used to allow for clicks on elements within a handle.</div> <strong>Code examples:</strong><p>Initialize the sortable with the <code>distance</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).sortable({\n  distance: 5\n});</pre> <p>Get or set the <code>distance</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar distance = $( \".selector\" ).sortable( \"option\", \"distance\" );\n \n// Setter\n$( \".selector\" ).sortable( \"option\", \"distance\", 5 );</pre> </div> <div id=\"option-dropOnEmpty\" class=\"api-item\"> <h3>dropOnEmpty </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> </div> <div class=\"default\"> <strong>Default: </strong><code>true</code> </div> <div>If <code>false</code>, items from this sortable can't be dropped on an empty connect sortable (see the <a href=\"#option-connectWith\"><code>connectWith</code></a> option.</div> <strong>Code examples:</strong><p>Initialize the sortable with the <code>dropOnEmpty</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).sortable({\n  dropOnEmpty: false\n});</pre> <p>Get or set the <code>dropOnEmpty</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar dropOnEmpty = $( \".selector\" ).sortable( \"option\", \"dropOnEmpty\" );\n \n// Setter\n$( \".selector\" ).sortable( \"option\", \"dropOnEmpty\", false );</pre> </div> <div id=\"option-forceHelperSize\" class=\"api-item\"> <h3>forceHelperSize </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> </div> <div class=\"default\"> <strong>Default: </strong><code>false</code> </div> <div>If <code>true</code>, forces the helper to have a size.</div> <strong>Code examples:</strong><p>Initialize the sortable with the <code>forceHelperSize</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).sortable({\n  forceHelperSize: true\n});</pre> <p>Get or set the <code>forceHelperSize</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar forceHelperSize = $( \".selector\" ).sortable( \"option\", \"forceHelperSize\" );\n \n// Setter\n$( \".selector\" ).sortable( \"option\", \"forceHelperSize\", true );</pre> </div> <div id=\"option-forcePlaceholderSize\" class=\"api-item\"> <h3>forcePlaceholderSize </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> </div> <div class=\"default\"> <strong>Default: </strong><code>false</code> </div> <div>If true, forces the placeholder to have a size.</div> <strong>Code examples:</strong><p>Initialize the sortable with the <code>forcePlaceholderSize</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).sortable({\n  forcePlaceholderSize: true\n});</pre> <p>Get or set the <code>forcePlaceholderSize</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar forcePlaceholderSize = $( \".selector\" ).sortable( \"option\", \"forcePlaceholderSize\" );\n \n// Setter\n$( \".selector\" ).sortable( \"option\", \"forcePlaceholderSize\", true );</pre> </div> <div id=\"option-grid\" class=\"api-item\"> <h3>grid </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Array\">Array</a> </div> <div class=\"default\"> <strong>Default: </strong><code>false</code> </div> <div>Snaps the sorting element or helper to a grid, every x and y pixels. Array values: <code>[ x, y ]</code>.</div> <strong>Code examples:</strong><p>Initialize the sortable with the <code>grid</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).sortable({\n  grid: [ 20, 10 ]\n});</pre> <p>Get or set the <code>grid</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar grid = $( \".selector\" ).sortable( \"option\", \"grid\" );\n \n// Setter\n$( \".selector\" ).sortable( \"option\", \"grid\", [ 20, 10 ] );</pre> </div> <div id=\"option-handle\" class=\"api-item\"> <h3>handle </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Selector\">Selector</a> or <a href=\"http://api.jquery.com/Types/#Element\">Element</a> </div> <div class=\"default\"> <strong>Default: </strong><code>false</code> </div> <div>Restricts sort start click to the specified element.</div> <strong>Code examples:</strong><p>Initialize the sortable with the <code>handle</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).sortable({\n  handle: \".handle\"\n});</pre> <p>Get or set the <code>handle</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar handle = $( \".selector\" ).sortable( \"option\", \"handle\" );\n \n// Setter\n$( \".selector\" ).sortable( \"option\", \"handle\", \".handle\" );</pre> </div> <div id=\"option-helper\" class=\"api-item\"> <h3>helper </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#String\">String</a> or <a href=\"http://api.jquery.com/Types/#Function\">Function</a>()</div> <div class=\"default\"> <strong>Default: </strong><code>\"original\"</code> </div> <div>Allows for a helper element to be used for dragging display.</div> <strong>Multiple types supported:</strong><ul> <li> <strong>String</strong>: If set to <code>\"clone\"</code>, then the element will be cloned and the clone will be dragged.</li> <li> <strong>Function</strong>: A function that will return a DOMElement to use while dragging. The function receives the event and the element being sorted.</li> </ul> <strong>Code examples:</strong><p>Initialize the sortable with the <code>helper</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).sortable({\n  helper: \"clone\"\n});</pre> <p>Get or set the <code>helper</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar helper = $( \".selector\" ).sortable( \"option\", \"helper\" );\n \n// Setter\n$( \".selector\" ).sortable( \"option\", \"helper\", \"clone\" );</pre> </div> <div id=\"option-items\" class=\"api-item\"> <h3>items </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Selector\">Selector</a> </div> <div class=\"default\"> <strong>Default: </strong><code>\"&gt; *\"</code> </div> <div>Specifies which items inside the element should be sortable.</div> <strong>Code examples:</strong><p>Initialize the sortable with the <code>items</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).sortable({\n  items: \"&gt; li\"\n});</pre> <p>Get or set the <code>items</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar items = $( \".selector\" ).sortable( \"option\", \"items\" );\n \n// Setter\n$( \".selector\" ).sortable( \"option\", \"items\", \"&gt; li\" );</pre> </div> <div id=\"option-opacity\" class=\"api-item\"> <h3>opacity </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Number\">Number</a> </div> <div class=\"default\"> <strong>Default: </strong><code>false</code> </div> <div>Defines the opacity of the helper while sorting. From <code>0.01</code> to <code>1</code>.</div> <strong>Code examples:</strong><p>Initialize the sortable with the <code>opacity</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).sortable({\n  opacity: 0.5\n});</pre> <p>Get or set the <code>opacity</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar opacity = $( \".selector\" ).sortable( \"option\", \"opacity\" );\n \n// Setter\n$( \".selector\" ).sortable( \"option\", \"opacity\", 0.5 );</pre> </div> <div id=\"option-placeholder\" class=\"api-item\"> <h3>placeholder </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div class=\"default\"> <strong>Default: </strong><code>false</code> </div> <div>A class name that gets applied to the otherwise white space.</div> <strong>Code examples:</strong><p>Initialize the sortable with the <code>placeholder</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).sortable({\n  placeholder: \"sortable-placeholder\"\n});</pre> <p>Get or set the <code>placeholder</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar placeholder = $( \".selector\" ).sortable( \"option\", \"placeholder\" );\n \n// Setter\n$( \".selector\" ).sortable( \"option\", \"placeholder\", \"sortable-placeholder\" );</pre> </div> <div id=\"option-revert\" class=\"api-item\"> <h3>revert </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> or <a href=\"http://api.jquery.com/Types/#Number\">Number</a> </div> <div class=\"default\"> <strong>Default: </strong><code>false</code> </div> <div>Whether the sortable items should revert to their new positions using a smooth animation.</div> <strong>Multiple types supported:</strong><ul> <li> <strong>Boolean</strong>: When set to <code>true</code>, the items will animate with the default duration.</li> <li> <strong>Number</strong>: The duration for the animation, in milliseconds.</li> </ul> <strong>Code examples:</strong><p>Initialize the sortable with the <code>revert</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).sortable({\n  revert: true\n});</pre> <p>Get or set the <code>revert</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar revert = $( \".selector\" ).sortable( \"option\", \"revert\" );\n \n// Setter\n$( \".selector\" ).sortable( \"option\", \"revert\", true );</pre> </div> <div id=\"option-scroll\" class=\"api-item\"> <h3>scroll </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> </div> <div class=\"default\"> <strong>Default: </strong><code>true</code> </div> <div>If set to true, the page scrolls when coming to an edge.</div> <strong>Code examples:</strong><p>Initialize the sortable with the <code>scroll</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).sortable({\n  scroll: false\n});</pre> <p>Get or set the <code>scroll</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar scroll = $( \".selector\" ).sortable( \"option\", \"scroll\" );\n \n// Setter\n$( \".selector\" ).sortable( \"option\", \"scroll\", false );</pre> </div> <div id=\"option-scrollSensitivity\" class=\"api-item\"> <h3>scrollSensitivity </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Number\">Number</a> </div> <div class=\"default\"> <strong>Default: </strong><code>20</code> </div> <div>Defines how near the mouse must be to an edge to start scrolling.</div> <strong>Code examples:</strong><p>Initialize the sortable with the <code>scrollSensitivity</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).sortable({\n  scrollSensitivity: 10\n});</pre> <p>Get or set the <code>scrollSensitivity</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar scrollSensitivity = $( \".selector\" ).sortable( \"option\", \"scrollSensitivity\" );\n \n// Setter\n$( \".selector\" ).sortable( \"option\", \"scrollSensitivity\", 10 );</pre> </div> <div id=\"option-scrollSpeed\" class=\"api-item\"> <h3>scrollSpeed </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Number\">Number</a> </div> <div class=\"default\"> <strong>Default: </strong><code>20</code> </div> <div>The speed at which the window should scroll once the mouse pointer gets within the <a href=\"#option-scrollSensitivity\"><code>scrollSensitivity</code></a> distance.</div> <strong>Code examples:</strong><p>Initialize the sortable with the <code>scrollSpeed</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).sortable({\n  scrollSpeed: 40\n});</pre> <p>Get or set the <code>scrollSpeed</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar scrollSpeed = $( \".selector\" ).sortable( \"option\", \"scrollSpeed\" );\n \n// Setter\n$( \".selector\" ).sortable( \"option\", \"scrollSpeed\", 40 );</pre> </div> <div id=\"option-tolerance\" class=\"api-item\"> <h3>tolerance </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div class=\"default\"> <strong>Default: </strong><code>\"intersect\"</code> </div> <div> Specifies which mode to use for testing whether the item being moved is hovering over another item. Possible values: <ul> <li> <code>\"intersect\"</code>: The item overlaps the other item by at least 50%.</li> <li> <code>\"pointer\"</code>: The mouse pointer overlaps the other item.</li> </ul> </div> <strong>Code examples:</strong><p>Initialize the sortable with the <code>tolerance</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).sortable({\n  tolerance: \"pointer\"\n});</pre> <p>Get or set the <code>tolerance</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar tolerance = $( \".selector\" ).sortable( \"option\", \"tolerance\" );\n \n// Setter\n$( \".selector\" ).sortable( \"option\", \"tolerance\", \"pointer\" );</pre> </div> <div id=\"option-zIndex\" class=\"api-item\"> <h3>zIndex </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Integer\">Integer</a> </div> <div class=\"default\"> <strong>Default: </strong><code>1000</code> </div> <div>Z-index for element/helper while being sorted.</div> <strong>Code examples:</strong><p>Initialize the sortable with the <code>zIndex</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).sortable({\n  zIndex: 9999\n});</pre> <p>Get or set the <code>zIndex</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar zIndex = $( \".selector\" ).sortable( \"option\", \"zIndex\" );\n \n// Setter\n$( \".selector\" ).sortable( \"option\", \"zIndex\", 9999 );</pre> </div></section><section id=\"methods\"><h2>Methods</h2>\n<div id=\"method-cancel\"><div class=\"api-item first-item\"> <h3>cancel()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div>Cancels a change in the current sortable and reverts it to the state prior to when the current sort was started. Useful in the stop and receive callback functions.</div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the cancel method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).sortable( \"cancel\" );</pre> </div> </div></div> <div id=\"method-destroy\"><div class=\"api-item\"> <h3>destroy()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Removes the sortable functionality completely. This will return the element back to its pre-init state. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the destroy method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).sortable( \"destroy\" );</pre> </div> </div></div> <div id=\"method-disable\"><div class=\"api-item\"> <h3>disable()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Disables the sortable. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the disable method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).sortable( \"disable\" );</pre> </div> </div></div> <div id=\"method-enable\"><div class=\"api-item\"> <h3>enable()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Enables the sortable. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the enable method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).sortable( \"enable\" );</pre> </div> </div></div> <div id=\"method-instance\"><div class=\"api-item\"> <h3>instance()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#Object\">Object</a></span> </h3> <div> <p>Retrieves the sortable's instance object. If the element does not have an associated instance, <code>undefined</code> is returned.</p> <p>Unlike other widget methods, <code>instance()</code> is safe to call on any element after the sortable plugin has loaded.</p> </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the instance method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).sortable( \"instance\" );</pre> </div> </div></div> <div id=\"method-option\"> <div class=\"api-item\"> <h3>option( optionName )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#Object\">Object</a></span> </h3> <div> <p>Gets the value currently associated with the specified <code>optionName</code>.</p> <p><strong>Note:</strong> For options that have objects as their value, you can get the value of a specific key by using dot notation. For example, <code>\"foo.bar\"</code> would get the value of the <code>bar</code> property on the <code>foo</code> option.</p> </div> <ul><li> <div><strong>optionName</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>The name of the option to get.</div> </li></ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">var isDisabled = $( \".selector\" ).sortable( \"option\", \"disabled\" );</pre> </div> </div> <div class=\"api-item\"> <h3>option()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#PlainObject\">PlainObject</a></span> </h3> <div>Gets an object containing key/value pairs representing the current sortable options hash.</div> <ul><li><div class=\"null-signature\">This signature does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">var options = $( \".selector\" ).sortable( \"option\" );</pre> </div> </div> <div class=\"api-item\"> <h3>option( optionName, value )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> <p>Sets the value of the sortable option associated with the specified <code>optionName</code>.</p> <p><strong>Note:</strong> For options that have objects as their value, you can set the value of just one property by using dot notation for <code>optionName</code>. For example, <code>\"foo.bar\"</code> would update only the <code>bar</code> property of the <code>foo</code> option.</p> </div> <ul> <li> <div><strong>optionName</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>The name of the option to set.</div> </li> <li> <div><strong>value</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>A value to set for the option.</div> </li> </ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).sortable( \"option\", \"disabled\", true );</pre> </div> </div> <div class=\"api-item\"> <h3>option( options )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div>Sets one or more options for the sortable.</div> <ul><li> <div><strong>options</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>A map of option-value pairs to set.</div> </li></ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).sortable( \"option\", { disabled: true } );</pre> </div> </div> </div> <div id=\"method-refresh\"><div class=\"api-item\"> <h3>refresh()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div>Refresh the sortable items. Triggers the reloading of all sortable items, causing new items to be recognized.</div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the refresh method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).sortable( \"refresh\" );</pre> </div> </div></div> <div id=\"method-refreshPositions\"><div class=\"api-item\"> <h3>refreshPositions()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div>Refresh the cached positions of the sortable items. Calling this method refreshes the cached item positions of all sortables.</div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the refreshPositions method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).sortable( \"refreshPositions\" );</pre> </div> </div></div> <div id=\"method-serialize\"><div class=\"api-item\"> <h3>serialize( options )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#String\">String</a></span> </h3> <div> <p>Serializes the sortable's item <code>id</code>s into a form/ajax submittable string. Calling this method produces a hash that can be appended to any url to easily submit a new item order back to the server.</p> <p>It works by default by looking at the <code>id</code> of each item in the format <code>\"setname_number\"</code>, and it spits out a hash like <code>\"setname[]=number&amp;setname[]=number\"</code>.</p> <p><em>Note: If serialize returns an empty string, make sure the <code>id</code> attributes include an underscore. They must be in the form: <code>\"set_number\"</code> For example, a 3 element list with <code>id</code> attributes <code>\"foo_1\"</code>, <code>\"foo_5\"</code>, <code>\"foo_2\"</code> will serialize to <code>\"foo[]=1&amp;foo[]=5&amp;foo[]=2\"</code>. You can use an underscore, equal sign or hyphen to separate the set and number. For example <code>\"foo=1\"</code>, <code>\"foo-1\"</code>, and <code>\"foo_1\"</code> all serialize to <code>\"foo[]=1\"</code>.</em></p> </div> <ul><li> <div><strong>options</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>Options to customize the serialization.</div> <ul> <li> <div> <strong>key</strong> (default: <code>the part of the attribute in front of the separator</code>)</div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>Replaces <code>part1[]</code> with the specified value.</div> </li> <li> <div> <strong>attribute</strong> (default: <code>\"id\"</code>)</div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>The name of the attribute to use for the values.</div> </li> <li> <div> <strong>expression</strong> (default: <code>/(.+)[-=_](.+)/</code>)</div> <div>Type: <a href=\"http://api.jquery.com/Types/#RegExp\">RegExp</a> </div> <div>A regular expression used to split the attribute value into key and value parts.</div> </li> </ul> </li></ul> <div> <strong>Code examples:</strong><p>Invoke the serialize method:</p> <pre class=\"syntaxhighlighter javascript\">var sorted = $( \".selector\" ).sortable( \"serialize\", { key: \"sort\" } );</pre> </div> </div></div> <div id=\"method-toArray\"><div class=\"api-item\"> <h3>toArray( options )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#Array\">Array</a></span> </h3> <div>Serializes the sortable's item id's into an array of string.</div> <ul><li> <div><strong>options</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>Options to customize the serialization.</div> <ul><li> <div> <strong>attribute</strong> (default: <code>\"id\"</code>)</div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>The name of the attribute to use for the values.</div> </li></ul> </li></ul> <div> <strong>Code examples:</strong><p>Invoke the toArray method:</p> <pre class=\"syntaxhighlighter javascript\">var sortedIDs = $( \".selector\" ).sortable( \"toArray\" );</pre> </div> </div></div> <div id=\"method-widget\"><div class=\"api-item\"> <h3>widget()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a></span> </h3> <div> Returns a <code>jQuery</code> object containing the sortable element. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the widget method:</p> <pre class=\"syntaxhighlighter javascript\">var widget = $( \".selector\" ).sortable( \"widget\" );</pre> </div> </div></div></section><section id=\"events\"><h2>Events</h2>\n<div id=\"event-activate\" class=\"api-item first-item\"> <h3>activate( event, ui )<span class=\"returns\">Type: <code>sortactivate</code></span> </h3> <div>This event is triggered when using connected lists, every connected list on drag start receives it.</div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  <ul> <li> <div><strong>helper</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The jQuery object representing the helper being sorted.</div> </li> <li> <div><strong>item</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The jQuery object representing the current dragged element.</div> </li> <li> <div><strong>offset</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>The current absolute position of the helper represented as <code>{ top, left }</code>.</div> </li> <li> <div><strong>position</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>The current position of the helper represented as <code>{ top, left }</code>.</div> </li> <li> <div><strong>originalPosition</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>The original position of the element represented as <code>{ top, left }</code>.</div> </li> <li> <div><strong>sender</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The sortable that the item comes from if moving from one sortable to another.</div> </li> <li> <div><strong>placeholder</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The jQuery object representing the element being used as a placeholder.</div> </li> </ul> </li> </ul> <div> <strong>Code examples:</strong><p>Initialize the sortable with the activate callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).sortable({\n  activate: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the sortactivate event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"sortactivate\", function( event, ui ) {} );</pre> </div> </div> <div id=\"event-beforeStop\" class=\"api-item\"> <h3>beforeStop( event, ui )<span class=\"returns\">Type: <code>sortbeforestop</code></span> </h3> <div>This event is triggered when sorting stops, but when the placeholder/helper is still available.</div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  <ul> <li> <div><strong>helper</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The jQuery object representing the helper being sorted.</div> </li> <li> <div><strong>item</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The jQuery object representing the current dragged element.</div> </li> <li> <div><strong>offset</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>The current absolute position of the helper represented as <code>{ top, left }</code>.</div> </li> <li> <div><strong>position</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>The current position of the helper represented as <code>{ top, left }</code>.</div> </li> <li> <div><strong>originalPosition</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>The original position of the element represented as <code>{ top, left }</code>.</div> </li> <li> <div><strong>sender</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The sortable that the item comes from if moving from one sortable to another.</div> </li> <li> <div><strong>placeholder</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The jQuery object representing the element being used as a placeholder.</div> </li> </ul> </li> </ul> <div> <strong>Code examples:</strong><p>Initialize the sortable with the beforeStop callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).sortable({\n  beforeStop: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the sortbeforestop event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"sortbeforestop\", function( event, ui ) {} );</pre> </div> </div> <div id=\"event-change\" class=\"api-item\"> <h3>change( event, ui )<span class=\"returns\">Type: <code>sortchange</code></span> </h3> <div>This event is triggered during sorting, but only when the DOM position has changed.</div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  <ul> <li> <div><strong>helper</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The jQuery object representing the helper being sorted.</div> </li> <li> <div><strong>item</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The jQuery object representing the current dragged element.</div> </li> <li> <div><strong>offset</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>The current absolute position of the helper represented as <code>{ top, left }</code>.</div> </li> <li> <div><strong>position</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>The current position of the helper represented as <code>{ top, left }</code>.</div> </li> <li> <div><strong>originalPosition</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>The original position of the element represented as <code>{ top, left }</code>.</div> </li> <li> <div><strong>sender</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The sortable that the item comes from if moving from one sortable to another.</div> </li> <li> <div><strong>placeholder</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The jQuery object representing the element being used as a placeholder.</div> </li> </ul> </li> </ul> <div> <strong>Code examples:</strong><p>Initialize the sortable with the change callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).sortable({\n  change: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the sortchange event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"sortchange\", function( event, ui ) {} );</pre> </div> </div> <div id=\"event-create\" class=\"api-item\"> <h3>create( event, ui )<span class=\"returns\">Type: <code>sortcreate</code></span> </h3> <div> Triggered when the sortable is created. </div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  </li> </ul> <p><em>Note: The <code>ui</code> object is empty but included for consistency with other events.</em></p> <div> <strong>Code examples:</strong><p>Initialize the sortable with the create callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).sortable({\n  create: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the sortcreate event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"sortcreate\", function( event, ui ) {} );</pre> </div> </div> <div id=\"event-deactivate\" class=\"api-item\"> <h3>deactivate( event, ui )<span class=\"returns\">Type: <code>sortdeactivate</code></span> </h3> <div>This event is triggered when sorting was stopped, is propagated to all possible connected lists.</div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  <ul> <li> <div><strong>helper</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The jQuery object representing the helper being sorted.</div> </li> <li> <div><strong>item</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The jQuery object representing the current dragged element.</div> </li> <li> <div><strong>offset</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>The current absolute position of the helper represented as <code>{ top, left }</code>.</div> </li> <li> <div><strong>position</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>The current position of the helper represented as <code>{ top, left }</code>.</div> </li> <li> <div><strong>originalPosition</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>The original position of the element represented as <code>{ top, left }</code>.</div> </li> <li> <div><strong>sender</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The sortable that the item comes from if moving from one sortable to another.</div> </li> <li> <div><strong>placeholder</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The jQuery object representing the element being used as a placeholder.</div> </li> </ul> </li> </ul> <div> <strong>Code examples:</strong><p>Initialize the sortable with the deactivate callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).sortable({\n  deactivate: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the sortdeactivate event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"sortdeactivate\", function( event, ui ) {} );</pre> </div> </div> <div id=\"event-out\" class=\"api-item\"> <h3>out( event, ui )<span class=\"returns\">Type: <code>sortout</code></span> </h3> <div> <p>This event is triggered when a sortable item is moved away from a sortable list.</p> <p><em>Note: This event is also triggered when a sortable item is dropped.</em></p> </div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  <ul> <li> <div><strong>helper</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The jQuery object representing the helper being sorted.</div> </li> <li> <div><strong>item</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The jQuery object representing the current dragged element.</div> </li> <li> <div><strong>offset</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>The current absolute position of the helper represented as <code>{ top, left }</code>.</div> </li> <li> <div><strong>position</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>The current position of the helper represented as <code>{ top, left }</code>.</div> </li> <li> <div><strong>originalPosition</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>The original position of the element represented as <code>{ top, left }</code>.</div> </li> <li> <div><strong>sender</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The sortable that the item comes from if moving from one sortable to another.</div> </li> <li> <div><strong>placeholder</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The jQuery object representing the element being used as a placeholder.</div> </li> </ul> </li> </ul> <div> <strong>Code examples:</strong><p>Initialize the sortable with the out callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).sortable({\n  out: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the sortout event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"sortout\", function( event, ui ) {} );</pre> </div> </div> <div id=\"event-over\" class=\"api-item\"> <h3>over( event, ui )<span class=\"returns\">Type: <code>sortover</code></span> </h3> <div>This event is triggered when a sortable item is moved into a sortable list.</div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  <ul> <li> <div><strong>helper</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The jQuery object representing the helper being sorted.</div> </li> <li> <div><strong>item</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The jQuery object representing the current dragged element.</div> </li> <li> <div><strong>offset</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>The current absolute position of the helper represented as <code>{ top, left }</code>.</div> </li> <li> <div><strong>position</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>The current position of the helper represented as <code>{ top, left }</code>.</div> </li> <li> <div><strong>originalPosition</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>The original position of the element represented as <code>{ top, left }</code>.</div> </li> <li> <div><strong>sender</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The sortable that the item comes from if moving from one sortable to another.</div> </li> <li> <div><strong>placeholder</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The jQuery object representing the element being used as a placeholder.</div> </li> </ul> </li> </ul> <div> <strong>Code examples:</strong><p>Initialize the sortable with the over callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).sortable({\n  over: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the sortover event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"sortover\", function( event, ui ) {} );</pre> </div> </div> <div id=\"event-receive\" class=\"api-item\"> <h3>receive( event, ui )<span class=\"returns\">Type: <code>sortreceive</code></span> </h3> <div>This event is triggered when an item from a connected sortable list has been dropped into another list. The latter is the event target.</div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  <ul> <li> <div><strong>helper</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The jQuery object representing the helper being sorted.</div> </li> <li> <div><strong>item</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The jQuery object representing the current dragged element.</div> </li> <li> <div><strong>offset</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>The current absolute position of the helper represented as <code>{ top, left }</code>.</div> </li> <li> <div><strong>position</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>The current position of the helper represented as <code>{ top, left }</code>.</div> </li> <li> <div><strong>originalPosition</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>The original position of the element represented as <code>{ top, left }</code>.</div> </li> <li> <div><strong>sender</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The sortable that the item comes from if moving from one sortable to another.</div> </li> <li> <div><strong>placeholder</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The jQuery object representing the element being used as a placeholder.</div> </li> </ul> </li> </ul> <div> <strong>Code examples:</strong><p>Initialize the sortable with the receive callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).sortable({\n  receive: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the sortreceive event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"sortreceive\", function( event, ui ) {} );</pre> </div> </div> <div id=\"event-remove\" class=\"api-item\"> <h3>remove( event, ui )<span class=\"returns\">Type: <code>sortremove</code></span> </h3> <div>This event is triggered when a sortable item from the list has been dropped into another. The former is the event target.</div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  <ul> <li> <div><strong>helper</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The jQuery object representing the helper being sorted.</div> </li> <li> <div><strong>item</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The jQuery object representing the current dragged element.</div> </li> <li> <div><strong>offset</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>The current absolute position of the helper represented as <code>{ top, left }</code>.</div> </li> <li> <div><strong>position</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>The current position of the helper represented as <code>{ top, left }</code>.</div> </li> <li> <div><strong>originalPosition</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>The original position of the element represented as <code>{ top, left }</code>.</div> </li> <li> <div><strong>placeholder</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The jQuery object representing the element being used as a placeholder.</div> </li> </ul> </li> </ul> <div> <strong>Code examples:</strong><p>Initialize the sortable with the remove callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).sortable({\n  remove: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the sortremove event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"sortremove\", function( event, ui ) {} );</pre> </div> </div> <div id=\"event-sort\" class=\"api-item\"> <h3>sort( event, ui )<span class=\"returns\">Type: <code>sort</code></span> </h3> <div>This event is triggered during sorting.</div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  <ul> <li> <div><strong>helper</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The jQuery object representing the helper being sorted.</div> </li> <li> <div><strong>item</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The jQuery object representing the current dragged element.</div> </li> <li> <div><strong>offset</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>The current absolute position of the helper represented as <code>{ top, left }</code>.</div> </li> <li> <div><strong>position</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>The current position of the helper represented as <code>{ top, left }</code>.</div> </li> <li> <div><strong>originalPosition</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>The original position of the element represented as <code>{ top, left }</code>.</div> </li> <li> <div><strong>sender</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The sortable that the item comes from if moving from one sortable to another.</div> </li> <li> <div><strong>placeholder</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The jQuery object representing the element being used as a placeholder.</div> </li> </ul> </li> </ul> <div> <strong>Code examples:</strong><p>Initialize the sortable with the sort callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).sortable({\n  sort: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the sort event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"sort\", function( event, ui ) {} );</pre> </div> </div> <div id=\"event-start\" class=\"api-item\"> <h3>start( event, ui )<span class=\"returns\">Type: <code>sortstart</code></span> </h3> <div>This event is triggered when sorting starts.</div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  <ul> <li> <div><strong>helper</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The jQuery object representing the helper being sorted.</div> </li> <li> <div><strong>item</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The jQuery object representing the current dragged element.</div> </li> <li> <div><strong>offset</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>The current absolute position of the helper represented as <code>{ top, left }</code>.</div> </li> <li> <div><strong>position</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>The current position of the helper represented as <code>{ top, left }</code>.</div> </li> <li> <div><strong>originalPosition</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>The original position of the element represented as <code>{ top, left }</code>.</div> </li> <li> <div><strong>sender</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The sortable that the item comes from if moving from one sortable to another.</div> </li> <li> <div><strong>placeholder</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The jQuery object representing the element being used as a placeholder.</div> </li> </ul> </li> </ul> <div> <strong>Code examples:</strong><p>Initialize the sortable with the start callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).sortable({\n  start: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the sortstart event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"sortstart\", function( event, ui ) {} );</pre> </div> </div> <div id=\"event-stop\" class=\"api-item\"> <h3>stop( event, ui )<span class=\"returns\">Type: <code>sortstop</code></span> </h3> <div>This event is triggered when sorting has stopped.</div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  <ul> <li> <div><strong>helper</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The jQuery object representing the helper being sorted.</div> </li> <li> <div><strong>item</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The jQuery object representing the current dragged element.</div> </li> <li> <div><strong>offset</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>The current absolute position of the helper represented as <code>{ top, left }</code>.</div> </li> <li> <div><strong>position</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>The current position of the helper represented as <code>{ top, left }</code>.</div> </li> <li> <div><strong>originalPosition</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>The original position of the element represented as <code>{ top, left }</code>.</div> </li> <li> <div><strong>sender</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The sortable that the item comes from if moving from one sortable to another.</div> </li> <li> <div><strong>placeholder</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The jQuery object representing the element being used as a placeholder.</div> </li> </ul> </li> </ul> <div> <strong>Code examples:</strong><p>Initialize the sortable with the stop callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).sortable({\n  stop: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the sortstop event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"sortstop\", function( event, ui ) {} );</pre> </div> </div> <div id=\"event-update\" class=\"api-item\"> <h3>update( event, ui )<span class=\"returns\">Type: <code>sortupdate</code></span> </h3> <div>This event is triggered when the user stopped sorting and the DOM position has changed.</div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  <ul> <li> <div><strong>helper</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The jQuery object representing the helper being sorted.</div> </li> <li> <div><strong>item</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The jQuery object representing the current dragged element.</div> </li> <li> <div><strong>offset</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>The current absolute position of the helper represented as <code>{ top, left }</code>.</div> </li> <li> <div><strong>position</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>The current position of the helper represented as <code>{ top, left }</code>.</div> </li> <li> <div><strong>originalPosition</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>The original position of the element represented as <code>{ top, left }</code>.</div> </li> <li> <div><strong>sender</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The sortable that the item comes from if moving from one sortable to another.</div> </li> <li> <div><strong>placeholder</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The jQuery object representing the element being used as a placeholder.</div> </li> </ul> </li> </ul> <div> <strong>Code examples:</strong><p>Initialize the sortable with the update callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).sortable({\n  update: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the sortupdate event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"sortupdate\", function( event, ui ) {} );</pre> </div> </div></section><section class=\"entry-examples\" id=\"entry-examples\"><h2>Example:</h2>\n<div class=\"entry-example\" id=\"example-0\"> <p>A simple jQuery UI Sortable.</p> <pre class=\"syntaxhighlighter xml\">&lt;!doctype html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"utf-8\"&gt;\n  &lt;title&gt;sortable demo&lt;/title&gt;\n  &lt;link rel=\"stylesheet\" href=\"//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css\"&gt;\n  &lt;script src=\"//code.jquery.com/jquery-1.10.2.js\"&gt;&lt;/script&gt;\n  &lt;script src=\"//code.jquery.com/ui/1.11.4/jquery-ui.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n&lt;ul id=\"sortable\"&gt;\n  &lt;li&gt;Item 1&lt;/li&gt;\n  &lt;li&gt;Item 2&lt;/li&gt;\n  &lt;li&gt;Item 3&lt;/li&gt;\n  &lt;li&gt;Item 4&lt;/li&gt;\n  &lt;li&gt;Item 5&lt;/li&gt;\n&lt;/ul&gt;\n \n&lt;script&gt;$(\"#sortable\").sortable();&lt;/script&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;</pre> <h4>Demo:</h4>  </div></section> </div></article> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; The jQuery Foundation and other contributors<br>Licensed under the MIT License.<br>\n    <a href=\"https://api.jqueryui.com/sortable\" class=\"_attribution-link\">https://api.jqueryui.com/sortable</a>\n  </p>\n</div>\n","scrollparent":"<h1 class=\"entry-title\">.scrollParent()</h1> <div class=\"entry-content\"> <article id=\"scrollParent1\" class=\"entry method\"><h2 class=\"section-title\"> <span class=\"name\">.scrollParent()</span><span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a></span> </h2> <div class=\"entry-wrapper\"> <p class=\"desc\"><strong>Description: </strong>Get the closest ancestor element that is scrollable.</p> <ul class=\"signatures\"><li class=\"signature\"> <h4 class=\"name\"><a id=\"scrollParent\" href=\"#scrollParent\">.scrollParent()</a></h4> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> </li></ul> <div class=\"longdesc\" id=\"entry-longdesc\"> <p>This method finds the nearest ancestor that allows scrolling. In other words, the <code>.scrollParent()</code> method finds the element that the currently selected element will scroll within.</p> <p><em>Note: This method only works on jQuery objects containing one element.</em></p> </div> </div></article> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; The jQuery Foundation and other contributors<br>Licensed under the MIT License.<br>\n    <a href=\"https://api.jqueryui.com/scrollParent\" class=\"_attribution-link\">https://api.jqueryui.com/scrollParent</a>\n  </p>\n</div>\n","selectable":"<h1 class=\"entry-title\">Selectable Widget</h1> <div class=\"entry-content\"> <article id=\"selectable1\" class=\"entry widget\"><h2 class=\"section-title\"> <span>Selectable Widget</span><span class=\"version-details\">version added: 1.0</span> </h2> <div class=\"entry-wrapper\"> <p class=\"desc\"><strong>Description: </strong>Use the mouse to select elements, individually or in a group.</p> <section id=\"quick-nav\"><h2>QuickNav<a href=\"#entry-examples\">Examples</a> </h2>\n<div class=\"quick-nav-section\"> <h3>Options</h3> <div><a href=\"#option-appendTo\">appendTo</a></div> <div><a href=\"#option-autoRefresh\">autoRefresh</a></div> <div><a href=\"#option-cancel\">cancel</a></div> <div><a href=\"#option-delay\">delay</a></div> <div><a href=\"#option-disabled\">disabled</a></div> <div><a href=\"#option-distance\">distance</a></div> <div><a href=\"#option-filter\">filter</a></div> <div><a href=\"#option-tolerance\">tolerance</a></div> </div> <div class=\"quick-nav-section\"> <h3>Methods</h3> <div><a href=\"#method-destroy\">destroy</a></div> <div><a href=\"#method-disable\">disable</a></div> <div><a href=\"#method-enable\">enable</a></div> <div><a href=\"#method-instance\">instance</a></div> <div><a href=\"#method-option\">option</a></div> <div><a href=\"#method-refresh\">refresh</a></div> <div><a href=\"#method-widget\">widget</a></div> </div> <div class=\"quick-nav-section\"> <h3>Events</h3> <div><a href=\"#event-create\">create</a></div> <div><a href=\"#event-selected\">selected</a></div> <div><a href=\"#event-selecting\">selecting</a></div> <div><a href=\"#event-start\">start</a></div> <div><a href=\"#event-stop\">stop</a></div> <div><a href=\"#event-unselected\">unselected</a></div> <div><a href=\"#event-unselecting\">unselecting</a></div> </div></section><div class=\"longdesc\" id=\"entry-longdesc\"> <p>The jQuery UI Selectable plugin allows for elements to be selected by dragging a box (sometimes called a lasso) with the mouse over the elements. Elements can also be selected via click or drag while holding the ctrl/meta key, allowing for multiple (non-contiguous) selections.</p> <h3>Dependencies</h3> <ul> <li><a href=\"https://api.jqueryui.com/category/ui-core/\">UI Core</a></li> <li><a href=\"jquery.widget\">Widget Factory</a></li> <li><a href=\"mouse\">Mouse Interaction</a></li> </ul> </div> <h3>Additional Notes:</h3> <div class=\"longdesc\"><ul><li> This widget requires some functional CSS, otherwise it won't work. If you build a custom theme, use the widget's specific CSS file as a starting point. </li></ul></div> <section id=\"options\"><h2>Options</h2>\n<div id=\"option-appendTo\" class=\"api-item first-item\"> <h3>appendTo </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Selector\">Selector</a> </div> <div class=\"default\"> <strong>Default: </strong><code>\"body\"</code> </div> <div>Which element the selection helper (the lasso) should be appended to.</div> <strong>Code examples:</strong><p>Initialize the selectable with the <code>appendTo</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).selectable({\n  appendTo: \"#someElem\"\n});</pre> <p>Get or set the <code>appendTo</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar appendTo = $( \".selector\" ).selectable( \"option\", \"appendTo\" );\n \n// Setter\n$( \".selector\" ).selectable( \"option\", \"appendTo\", \"#someElem\" );</pre> </div> <div id=\"option-autoRefresh\" class=\"api-item\"> <h3>autoRefresh </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> </div> <div class=\"default\"> <strong>Default: </strong><code>true</code> </div> <div>This determines whether to refresh (recalculate) the position and size of each selectee at the beginning of each select operation. If you have many items, you may want to set this to false and call the <a href=\"#method-refresh\"><code>refresh()</code></a> method manually.</div> <strong>Code examples:</strong><p>Initialize the selectable with the <code>autoRefresh</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).selectable({\n  autoRefresh: false\n});</pre> <p>Get or set the <code>autoRefresh</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar autoRefresh = $( \".selector\" ).selectable( \"option\", \"autoRefresh\" );\n \n// Setter\n$( \".selector\" ).selectable( \"option\", \"autoRefresh\", false );</pre> </div> <div id=\"option-cancel\" class=\"api-item\"> <h3>cancel </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Selector\">Selector</a> </div> <div class=\"default\"> <strong>Default: </strong><code>\"input,textarea,button,select,option\"</code> </div> <div>Prevents selecting if you start on elements matching the selector.</div> <strong>Code examples:</strong><p>Initialize the selectable with the <code>cancel</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).selectable({\n  cancel: \"a,.cancel\"\n});</pre> <p>Get or set the <code>cancel</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar cancel = $( \".selector\" ).selectable( \"option\", \"cancel\" );\n \n// Setter\n$( \".selector\" ).selectable( \"option\", \"cancel\", \"a,.cancel\" );</pre> </div> <div id=\"option-delay\" class=\"api-item\"> <h3>delay </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Integer\">Integer</a> </div> <div class=\"default\"> <strong>Default: </strong><code>0</code> </div> <div>Time in milliseconds to define when the selecting should start. This helps prevent unwanted selections when clicking on an element.</div> <strong>Code examples:</strong><p>Initialize the selectable with the <code>delay</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).selectable({\n  delay: 150\n});</pre> <p>Get or set the <code>delay</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar delay = $( \".selector\" ).selectable( \"option\", \"delay\" );\n \n// Setter\n$( \".selector\" ).selectable( \"option\", \"delay\", 150 );</pre> </div> <div id=\"option-disabled\" class=\"api-item\"> <h3>disabled </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> </div> <div class=\"default\"> <strong>Default: </strong><code>false</code> </div> <div>Disables the selectable if set to <code>true</code>.</div> <strong>Code examples:</strong><p>Initialize the selectable with the <code>disabled</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).selectable({\n  disabled: true\n});</pre> <p>Get or set the <code>disabled</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar disabled = $( \".selector\" ).selectable( \"option\", \"disabled\" );\n \n// Setter\n$( \".selector\" ).selectable( \"option\", \"disabled\", true );</pre> </div> <div id=\"option-distance\" class=\"api-item\"> <h3>distance </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Number\">Number</a> </div> <div class=\"default\"> <strong>Default: </strong><code>0</code> </div> <div>Tolerance, in pixels, for when selecting should start. If specified, selecting will not start until the mouse has been dragged beyond the specified distance.</div> <strong>Code examples:</strong><p>Initialize the selectable with the <code>distance</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).selectable({\n  distance: 30\n});</pre> <p>Get or set the <code>distance</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar distance = $( \".selector\" ).selectable( \"option\", \"distance\" );\n \n// Setter\n$( \".selector\" ).selectable( \"option\", \"distance\", 30 );</pre> </div> <div id=\"option-filter\" class=\"api-item\"> <h3>filter </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Selector\">Selector</a> </div> <div class=\"default\"> <strong>Default: </strong><code>\"*\"</code> </div> <div>The matching child elements will be made selectees (able to be selected).</div> <strong>Code examples:</strong><p>Initialize the selectable with the <code>filter</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).selectable({\n  filter: \"li\"\n});</pre> <p>Get or set the <code>filter</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar filter = $( \".selector\" ).selectable( \"option\", \"filter\" );\n \n// Setter\n$( \".selector\" ).selectable( \"option\", \"filter\", \"li\" );</pre> </div> <div id=\"option-tolerance\" class=\"api-item\"> <h3>tolerance </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div class=\"default\"> <strong>Default: </strong><code>\"touch\"</code> </div> <div> Specifies which mode to use for testing whether the lasso should select an item. Possible values: <ul> <li> <code>\"fit\"</code>: Lasso overlaps the item entirely.</li> <li> <code>\"touch\"</code>: Lasso overlaps the item by any amount.</li> </ul> </div> <strong>Code examples:</strong><p>Initialize the selectable with the <code>tolerance</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).selectable({\n  tolerance: \"fit\"\n});</pre> <p>Get or set the <code>tolerance</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar tolerance = $( \".selector\" ).selectable( \"option\", \"tolerance\" );\n \n// Setter\n$( \".selector\" ).selectable( \"option\", \"tolerance\", \"fit\" );</pre> </div></section><section id=\"methods\"><h2>Methods</h2>\n<div id=\"method-destroy\"><div class=\"api-item first-item\"> <h3>destroy()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Removes the selectable functionality completely. This will return the element back to its pre-init state. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the destroy method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).selectable( \"destroy\" );</pre> </div> </div></div> <div id=\"method-disable\"><div class=\"api-item\"> <h3>disable()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Disables the selectable. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the disable method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).selectable( \"disable\" );</pre> </div> </div></div> <div id=\"method-enable\"><div class=\"api-item\"> <h3>enable()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Enables the selectable. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the enable method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).selectable( \"enable\" );</pre> </div> </div></div> <div id=\"method-instance\"><div class=\"api-item\"> <h3>instance()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#Object\">Object</a></span> </h3> <div> <p>Retrieves the selectable's instance object. If the element does not have an associated instance, <code>undefined</code> is returned.</p> <p>Unlike other widget methods, <code>instance()</code> is safe to call on any element after the selectable plugin has loaded.</p> </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the instance method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).selectable( \"instance\" );</pre> </div> </div></div> <div id=\"method-option\"> <div class=\"api-item\"> <h3>option( optionName )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#Object\">Object</a></span> </h3> <div> <p>Gets the value currently associated with the specified <code>optionName</code>.</p> <p><strong>Note:</strong> For options that have objects as their value, you can get the value of a specific key by using dot notation. For example, <code>\"foo.bar\"</code> would get the value of the <code>bar</code> property on the <code>foo</code> option.</p> </div> <ul><li> <div><strong>optionName</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>The name of the option to get.</div> </li></ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">var isDisabled = $( \".selector\" ).selectable( \"option\", \"disabled\" );</pre> </div> </div> <div class=\"api-item\"> <h3>option()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#PlainObject\">PlainObject</a></span> </h3> <div>Gets an object containing key/value pairs representing the current selectable options hash.</div> <ul><li><div class=\"null-signature\">This signature does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">var options = $( \".selector\" ).selectable( \"option\" );</pre> </div> </div> <div class=\"api-item\"> <h3>option( optionName, value )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> <p>Sets the value of the selectable option associated with the specified <code>optionName</code>.</p> <p><strong>Note:</strong> For options that have objects as their value, you can set the value of just one property by using dot notation for <code>optionName</code>. For example, <code>\"foo.bar\"</code> would update only the <code>bar</code> property of the <code>foo</code> option.</p> </div> <ul> <li> <div><strong>optionName</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>The name of the option to set.</div> </li> <li> <div><strong>value</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>A value to set for the option.</div> </li> </ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).selectable( \"option\", \"disabled\", true );</pre> </div> </div> <div class=\"api-item\"> <h3>option( options )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div>Sets one or more options for the selectable.</div> <ul><li> <div><strong>options</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>A map of option-value pairs to set.</div> </li></ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).selectable( \"option\", { disabled: true } );</pre> </div> </div> </div> <div id=\"method-refresh\"><div class=\"api-item\"> <h3>refresh()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div>Refresh the position and size of each selectee element. This method can be used to manually recalculate the position and size of each selectee when the <a href=\"#option-autoRefresh\"><code>autoRefresh</code></a> option is set to <code>false</code>.</div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the refresh method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).selectable( \"refresh\" );</pre> </div> </div></div> <div id=\"method-widget\"><div class=\"api-item\"> <h3>widget()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a></span> </h3> <div> Returns a <code>jQuery</code> object containing the selectable element. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the widget method:</p> <pre class=\"syntaxhighlighter javascript\">var widget = $( \".selector\" ).selectable( \"widget\" );</pre> </div> </div></div></section><section id=\"events\"><h2>Events</h2>\n<div id=\"event-create\" class=\"api-item first-item\"> <h3>create( event, ui )<span class=\"returns\">Type: <code>selectablecreate</code></span> </h3> <div> Triggered when the selectable is created. </div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  </li> </ul> <p><em>Note: The <code>ui</code> object is empty but included for consistency with other events.</em></p> <div> <strong>Code examples:</strong><p>Initialize the selectable with the create callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).selectable({\n  create: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the selectablecreate event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"selectablecreate\", function( event, ui ) {} );</pre> </div> </div> <div id=\"event-selected\" class=\"api-item\"> <h3>selected( event, ui )<span class=\"returns\">Type: <code>selectableselected</code></span> </h3> <div>Triggered at the end of the select operation, on each element added to the selection.</div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  <ul><li> <div><strong>selected</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Element\">Element</a> </div> <div>The selectable item that has been selected.</div> </li></ul> </li> </ul> <div> <strong>Code examples:</strong><p>Initialize the selectable with the selected callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).selectable({\n  selected: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the selectableselected event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"selectableselected\", function( event, ui ) {} );</pre> </div> </div> <div id=\"event-selecting\" class=\"api-item\"> <h3>selecting( event, ui )<span class=\"returns\">Type: <code>selectableselecting</code></span> </h3> <div>Triggered during the select operation, on each element added to the selection.</div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  <ul><li> <div><strong>selecting</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Element\">Element</a> </div> <div>The current selectable item being selected.</div> </li></ul> </li> </ul> <div> <strong>Code examples:</strong><p>Initialize the selectable with the selecting callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).selectable({\n  selecting: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the selectableselecting event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"selectableselecting\", function( event, ui ) {} );</pre> </div> </div> <div id=\"event-start\" class=\"api-item\"> <h3>start( event, ui )<span class=\"returns\">Type: <code>selectablestart</code></span> </h3> <div>Triggered at the beginning of the select operation.</div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  </li> </ul> <p><em>Note: The <code>ui</code> object is empty but included for consistency with other events.</em></p> <div> <strong>Code examples:</strong><p>Initialize the selectable with the start callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).selectable({\n  start: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the selectablestart event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"selectablestart\", function( event, ui ) {} );</pre> </div> </div> <div id=\"event-stop\" class=\"api-item\"> <h3>stop( event, ui )<span class=\"returns\">Type: <code>selectablestop</code></span> </h3> <div>Triggered at the end of the select operation.</div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  </li> </ul> <p><em>Note: The <code>ui</code> object is empty but included for consistency with other events.</em></p> <div> <strong>Code examples:</strong><p>Initialize the selectable with the stop callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).selectable({\n  stop: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the selectablestop event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"selectablestop\", function( event, ui ) {} );</pre> </div> </div> <div id=\"event-unselected\" class=\"api-item\"> <h3>unselected( event, ui )<span class=\"returns\">Type: <code>selectableunselected</code></span> </h3> <div>Triggered at the end of the select operation, on each element removed from the selection.</div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  <ul><li> <div><strong>unselected</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Element\">Element</a> </div> <div>The selectable item that has been unselected.</div> </li></ul> </li> </ul> <div> <strong>Code examples:</strong><p>Initialize the selectable with the unselected callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).selectable({\n  unselected: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the selectableunselected event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"selectableunselected\", function( event, ui ) {} );</pre> </div> </div> <div id=\"event-unselecting\" class=\"api-item\"> <h3>unselecting( event, ui )<span class=\"returns\">Type: <code>selectableunselecting</code></span> </h3> <div>Triggered during the select operation, on each element removed from the selection.</div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  <ul><li> <div><strong>unselecting</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Element\">Element</a> </div> <div>The current selectable item being unselected.</div> </li></ul> </li> </ul> <div> <strong>Code examples:</strong><p>Initialize the selectable with the unselecting callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).selectable({\n  unselecting: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the selectableunselecting event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"selectableunselecting\", function( event, ui ) {} );</pre> </div> </div></section><section class=\"entry-examples\" id=\"entry-examples\"><h2>Example:</h2>\n<div class=\"entry-example\" id=\"example-0\"> <p>A simple jQuery UI Selectable.</p> <pre class=\"syntaxhighlighter xml\">&lt;!doctype html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"utf-8\"&gt;\n  &lt;title&gt;selectable demo&lt;/title&gt;\n  &lt;link rel=\"stylesheet\" href=\"//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css\"&gt;\n  &lt;style&gt;\n  #selectable .ui-selecting {\n    background: #ccc;\n  }\n  #selectable .ui-selected {\n    background: #999;\n  }\n  &lt;/style&gt;\n  &lt;script src=\"//code.jquery.com/jquery-1.10.2.js\"&gt;&lt;/script&gt;\n  &lt;script src=\"//code.jquery.com/ui/1.11.4/jquery-ui.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n&lt;ul id=\"selectable\"&gt;\n  &lt;li&gt;Item 1&lt;/li&gt;\n  &lt;li&gt;Item 2&lt;/li&gt;\n  &lt;li&gt;Item 3&lt;/li&gt;\n  &lt;li&gt;Item 4&lt;/li&gt;\n  &lt;li&gt;Item 5&lt;/li&gt;\n&lt;/ul&gt;\n \n&lt;script&gt;\n$( \"#selectable\" ).selectable();\n&lt;/script&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;</pre> <h4>Demo:</h4>  </div></section> </div></article> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; The jQuery Foundation and other contributors<br>Licensed under the MIT License.<br>\n    <a href=\"https://api.jqueryui.com/selectable\" class=\"_attribution-link\">https://api.jqueryui.com/selectable</a>\n  </p>\n</div>\n","selectmenu":"<h1 class=\"entry-title\">Selectmenu Widget</h1> <div class=\"entry-content\"> <article id=\"selectmenu1\" class=\"entry widget\"><h2 class=\"section-title\"> <span>Selectmenu Widget</span><span class=\"version-details\">version added: 1.11</span> </h2> <div class=\"entry-wrapper\"> <p class=\"desc\"><strong>Description: </strong>Duplicates and extends the functionality of a native HTML select element to overcome the limitations of the native control.</p> <section id=\"quick-nav\"><h2>QuickNav<a href=\"#entry-examples\">Examples</a> </h2>\n<div class=\"quick-nav-section\"> <h3>Options</h3> <div><a href=\"#option-appendTo\">appendTo</a></div> <div><a href=\"#option-disabled\">disabled</a></div> <div><a href=\"#option-icons\">icons</a></div> <div><a href=\"#option-position\">position</a></div> <div><a href=\"#option-width\">width</a></div> </div> <div class=\"quick-nav-section\"> <h3>Methods</h3> <div><a href=\"#method-close\">close</a></div> <div><a href=\"#method-destroy\">destroy</a></div> <div><a href=\"#method-disable\">disable</a></div> <div><a href=\"#method-enable\">enable</a></div> <div><a href=\"#method-instance\">instance</a></div> <div><a href=\"#method-menuWidget\">menuWidget</a></div> <div><a href=\"#method-open\">open</a></div> <div><a href=\"#method-option\">option</a></div> <div><a href=\"#method-refresh\">refresh</a></div> <div><a href=\"#method-widget\">widget</a></div> <br><h3>Extension Points</h3> <div><a href=\"#method-_renderItem\">_renderItem</a></div> <div><a href=\"#method-_renderMenu\">_renderMenu</a></div> <div><a href=\"#method-_resizeMenu\">_resizeMenu</a></div> </div> <div class=\"quick-nav-section\"> <h3>Events</h3> <div><a href=\"#event-change\">change</a></div> <div><a href=\"#event-close\">close</a></div> <div><a href=\"#event-create\">create</a></div> <div><a href=\"#event-focus\">focus</a></div> <div><a href=\"#event-open\">open</a></div> <div><a href=\"#event-select\">select</a></div> </div></section><div class=\"longdesc\" id=\"entry-longdesc\"> <p>Selectmenu transforms a <code>&lt;select&gt;</code> element into a themeable and customizable control. The widget acts as a proxy to the original <code>&lt;select&gt;</code>; therefore the original element's state is maintained for form submission and serialization.</p> <p>Selectmenu supports <code>&lt;optgroup&gt;</code> elements and custom markup to render specific presentations like multiple lines. The <code>&lt;select&gt;</code> and its options can be disabled by adding a <code>disabled</code> attribute.</p> <div class=\"warning\"><p> <strong>Note:</strong> Support for <code>accesskey</code> on custom elements is extremely limited in browsers. As such, if there is an <code>accesskey</code> attribute on the <code>&lt;select&gt;</code> element, it will not work with the custom selectmenu. If there is an <code>accesskey</code> attribute on any of the <code>&lt;option&gt;</code> elements, using the accesskey may cause the original element and the custom element to be out of sync. However, most browsers don't support <code>accesskey</code> on <code>&lt;option&gt;</code> elements. </p></div> <h3>Keyboard interaction</h3> <p>When the menu is open, the following key commands are available:</p> <ul> <li> <code>UP</code>/<code>LEFT</code>: Move focus to the previous item.</li> <li> <code>DOWN</code>/<code>RIGHT</code>: Move focus to the next item.</li> <li> <code>END</code>/<code>PAGE DOWN</code>: Move focus to the last item.</li> <li> <code>HOME</code>/<code>PAGE UP</code>: Move focus to the first item.</li> <li> <code>ESCAPE</code>: Close the menu.</li> <li> <code>ENTER</code>/<code>SPACE</code>: Select the currently focused item and close the menu.</li> <li> <code>ALT</code>/<code>OPTION</code> + <code>UP</code>/<code>DOWN</code>: Toggle the visibility of the menu.</li> </ul> <p>When the menu is closed, the following key commands are available:</p> <ul> <li> <code>UP</code>/<code>LEFT</code>: Select the previous item.</li> <li> <code>DOWN</code>/<code>RIGHT</code>: Select the next item.</li> <li> <code>END</code>/<code>PAGE DOWN</code>: Select the last item.</li> <li> <code>HOME</code>/<code>PAGE UP</code>: Select the first item.</li> <li> <code>ALT</code>/<code>OPTION</code> + <code>UP</code>/<code>DOWN</code>: Toggle the visibility of the menu.</li> <li> <code>SPACE</code>: Open the menu.</li> </ul> </div> <h3>Additional Notes:</h3> <div class=\"longdesc\"><ul><li> This widget requires some functional CSS, otherwise it won't work. If you build a custom theme, use the widget's specific CSS file as a starting point. </li></ul></div> <section id=\"options\"><h2>Options</h2>\n<div id=\"option-appendTo\" class=\"api-item first-item\"> <h3>appendTo </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Selector\">Selector</a> </div> <div class=\"default\"> <strong>Default: </strong><code>null</code> </div> <div>Which element to append the menu to. When the value is <code>null</code>, the parents of the <code>&lt;select&gt;</code> are checked for a class name of <code>ui-front</code>. If an element with the <code>ui-front</code> class name is found, the menu is appended to that element. Regardless of the value, if no element is found, the menu is appended to the body.</div> <strong>Code examples:</strong><p>Initialize the selectmenu with the <code>appendTo</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).selectmenu({\n  appendTo: \"#someElem\"\n});</pre> <p>Get or set the <code>appendTo</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar appendTo = $( \".selector\" ).selectmenu( \"option\", \"appendTo\" );\n \n// Setter\n$( \".selector\" ).selectmenu( \"option\", \"appendTo\", \"#someElem\" );</pre> </div> <div id=\"option-disabled\" class=\"api-item\"> <h3>disabled </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> </div> <div class=\"default\"> <strong>Default: </strong><code>false</code> </div> <div>Disables the selectmenu if set to <code>true</code>.</div> <strong>Code examples:</strong><p>Initialize the selectmenu with the <code>disabled</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).selectmenu({\n  disabled: true\n});</pre> <p>Get or set the <code>disabled</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar disabled = $( \".selector\" ).selectmenu( \"option\", \"disabled\" );\n \n// Setter\n$( \".selector\" ).selectmenu( \"option\", \"disabled\", true );</pre> </div> <div id=\"option-icons\" class=\"api-item\"> <h3>icons </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div class=\"default\"> <strong>Default: </strong><code>{ button: \"ui-icon-triangle-1-s\" }</code> </div> <div> Icons to use for the button, matching <a href=\"theming/icons\">an icon defined by the jQuery UI CSS Framework</a>. <ul> <li>button (string, default: \"ui-icon-triangle-1-s\")</li> </ul> </div> <strong>Code examples:</strong><p>Initialize the selectmenu with the <code>icons</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).selectmenu({\n  icons: { button: \"ui-icon-circle-triangle-s\" }\n});</pre> <p>Get or set the <code>icons</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar icons = $( \".selector\" ).selectmenu( \"option\", \"icons\" );\n \n// Setter\n$( \".selector\" ).selectmenu( \"option\", \"icons\", { button: \"ui-icon-circle-triangle-s\" } );</pre> </div> <div id=\"option-position\" class=\"api-item\"> <h3>position </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div class=\"default\"> <strong>Default: </strong><code>{ my: \"left top\", at: \"left bottom\", collision: \"none\" }</code> </div> <div>Identifies the position of the menu in relation to the associated button element. You can refer to the <a href=\"position\">jQuery UI Position</a> utility for more details about the various options.</div> <strong>Code examples:</strong><p>Initialize the selectmenu with the <code>position</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).selectmenu({\n  position: { my : \"left+10 center\", at: \"right center\" }\n});</pre> <p>Get or set the <code>position</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar position = $( \".selector\" ).selectmenu( \"option\", \"position\" );\n \n// Setter\n$( \".selector\" ).selectmenu( \"option\", \"position\", { my : \"left+10 center\", at: \"right center\" } );</pre> </div> <div id=\"option-width\" class=\"api-item\"> <h3>width </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Number\">Number</a> </div> <div class=\"default\"> <strong>Default: </strong><code>null</code> </div> <div>The width of the menu, in pixels. When the value is <code>null</code>, the width of the native select is used.</div> <strong>Code examples:</strong><p>Initialize the selectmenu with the <code>width</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).selectmenu({\n  width: 200\n});</pre> <p>Get or set the <code>width</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar width = $( \".selector\" ).selectmenu( \"option\", \"width\" );\n \n// Setter\n$( \".selector\" ).selectmenu( \"option\", \"width\", 200 );</pre> </div></section><section id=\"methods\"><h2>Methods</h2>\n<div id=\"method-close\"><div class=\"api-item first-item\"> <h3>close()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div>Closes the menu.</div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the close method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).selectmenu( \"close\" );</pre> </div> </div></div> <div id=\"method-destroy\"><div class=\"api-item\"> <h3>destroy()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Removes the selectmenu functionality completely. This will return the element back to its pre-init state. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the destroy method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).selectmenu( \"destroy\" );</pre> </div> </div></div> <div id=\"method-disable\"><div class=\"api-item\"> <h3>disable()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Disables the selectmenu. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the disable method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).selectmenu( \"disable\" );</pre> </div> </div></div> <div id=\"method-enable\"><div class=\"api-item\"> <h3>enable()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Enables the selectmenu. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the enable method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).selectmenu( \"enable\" );</pre> </div> </div></div> <div id=\"method-instance\"><div class=\"api-item\"> <h3>instance()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#Object\">Object</a></span> </h3> <div> <p>Retrieves the selectmenu's instance object. If the element does not have an associated instance, <code>undefined</code> is returned.</p> <p>Unlike other widget methods, <code>instance()</code> is safe to call on any element after the selectmenu plugin has loaded.</p> </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the instance method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).selectmenu( \"instance\" );</pre> </div> </div></div> <div id=\"method-menuWidget\"><div class=\"api-item\"> <h3>menuWidget()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div>Returns a <code>jQuery</code> object containing the menu element.</div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the menuWidget method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).selectmenu( \"menuWidget\" );</pre> </div> </div></div> <div id=\"method-open\"><div class=\"api-item\"> <h3>open()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div>Opens the menu.</div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the open method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).selectmenu( \"open\" );</pre> </div> </div></div> <div id=\"method-option\"> <div class=\"api-item\"> <h3>option( optionName )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#Object\">Object</a></span> </h3> <div> <p>Gets the value currently associated with the specified <code>optionName</code>.</p> <p><strong>Note:</strong> For options that have objects as their value, you can get the value of a specific key by using dot notation. For example, <code>\"foo.bar\"</code> would get the value of the <code>bar</code> property on the <code>foo</code> option.</p> </div> <ul><li> <div><strong>optionName</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>The name of the option to get.</div> </li></ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">var isDisabled = $( \".selector\" ).selectmenu( \"option\", \"disabled\" );</pre> </div> </div> <div class=\"api-item\"> <h3>option()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#PlainObject\">PlainObject</a></span> </h3> <div>Gets an object containing key/value pairs representing the current selectmenu options hash.</div> <ul><li><div class=\"null-signature\">This signature does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">var options = $( \".selector\" ).selectmenu( \"option\" );</pre> </div> </div> <div class=\"api-item\"> <h3>option( optionName, value )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> <p>Sets the value of the selectmenu option associated with the specified <code>optionName</code>.</p> <p><strong>Note:</strong> For options that have objects as their value, you can set the value of just one property by using dot notation for <code>optionName</code>. For example, <code>\"foo.bar\"</code> would update only the <code>bar</code> property of the <code>foo</code> option.</p> </div> <ul> <li> <div><strong>optionName</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>The name of the option to set.</div> </li> <li> <div><strong>value</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>A value to set for the option.</div> </li> </ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).selectmenu( \"option\", \"disabled\", true );</pre> </div> </div> <div class=\"api-item\"> <h3>option( options )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div>Sets one or more options for the selectmenu.</div> <ul><li> <div><strong>options</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>A map of option-value pairs to set.</div> </li></ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).selectmenu( \"option\", { disabled: true } );</pre> </div> </div> </div> <div id=\"method-refresh\"><div class=\"api-item\"> <h3>refresh()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Parses the original element and re-renders the menu. Processes any <code>&lt;option&gt;</code> or <code>&lt;optgroup&gt;</code> elements that were added, removed or disabled. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the refresh method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).selectmenu( \"refresh\" );</pre> </div> </div></div> <div id=\"method-widget\"><div class=\"api-item\"> <h3>widget()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div>Returns a <code>jQuery</code> object containing the button element.</div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the widget method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).selectmenu( \"widget\" );</pre> </div> </div></div></section><section id=\"extension-points\"><h2>Extension Points</h2>\n<p> The selectmenu widget is built with the <a href=\"jquery.widget\">widget factory</a> and can be extended. When extending widgets, you have the ability to override or add to the behavior of existing methods. The following methods are provided as extension points with the same API stability as the <a href=\"#methods\">plugin methods</a> listed above. For more information on widget extensions, see <a href=\"http://learn.jquery.com/jquery-ui/widget-factory/extending-widgets/\">Extending Widgets with the Widget Factory</a>. </p>  <div id=\"method-_renderItem\"><div class=\"api-item first-item\"> <h3>_renderItem( ul, item )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a></span> </h3> <div> <p>Method that controls the creation of each option in the widget's menu. The method must create a new <code>&lt;li&gt;</code> element, append it to the menu, and return it.</p> </div> <ul> <li> <div><strong>ul</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The <code>&lt;ul&gt;</code> element that the newly created <code>&lt;li&gt;</code> element must be appended to.</div> </li> <li> <div><strong>item</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  <ul> <li> <div><strong>element</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The original <code>&lt;option&gt;</code> element.</div> </li> <li> <div><strong>index</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Integer\">Integer</a> </div> <div>The index of the <code>&lt;option&gt;</code> within the <code>&lt;select&gt;</code>.</div> </li> <li> <div><strong>value</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>The value of the <code>&lt;option&gt;</code>.</div> </li> <li> <div><strong>label</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>The label of the <code>&lt;option&gt;</code>.</div> </li> <li> <div><strong>optgroup</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>The label for the parent <code>optgroup</code>, if any.</div> </li> <li> <div><strong>disabled</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> </div> <div>Whether the <code>&lt;option&gt;</code> is disabled.</div> </li> </ul> </li> </ul> <div> <strong>Code examples:</strong><p>Style the menu item background colors based on the value of their corresponding option elements.</p> <pre class=\"syntaxhighlighter javascript\">_renderItem: function( ul, item ) {\n  var li = $( \"&lt;li&gt;\" )\n    .css( \"background-color\", item.value );\n \n  if ( item.disabled ) {\n    li.addClass( \"ui-state-disabled\" );\n  }\n \n  this._setText( li, item.label );\n \n  return li.appendTo( ul );\n}</pre> </div> </div></div> <div id=\"method-_renderMenu\"><div class=\"api-item\"> <h3>_renderMenu( ul, items )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Method that controls building the widget's menu. The method is passed an empty <code>&lt;ul&gt;</code> and an array of items based on the <code>&lt;option&gt;</code> elements in the original <code>&lt;select&gt;</code>. Creation of the individual <code>&lt;li&gt;</code> elements should be delegated to <code>_renderItemData()</code>, which in turn delegates to the <a href=\"#method-_renderItem\"><code>_renderItem()</code></a> extension point. </div> <ul> <li> <div><strong>ul</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>An empty <code>&lt;ul&gt;</code> element to use as the widget's menu.</div> </li> <li> <div><strong>items</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Array\">Array</a> </div> <div>An array of items based on the <code>&lt;option&gt;</code> elements in the original <code>&lt;select&gt;</code>. See the <a href=\"#method-_renderItem\"><code>_renderItem()</code></a> extension point for details on the format of the item objects.</div> </li> </ul> <div> <strong>Code examples:</strong>\n<p>Add a CSS class name to the odd menu items.</p> <div class=\"warning\"> <strong>Note:</strong> For simplicity, this example does not support optgroups or disabled menu items.</div>  <pre class=\"syntaxhighlighter javascript\">_renderMenu: function( ul, items ) {\n  var that = this;\n  $.each( items, function( index, item ) {\n    that._renderItemData( ul, item );\n  });\n  $( ul ).find( \"li:odd\" ).addClass( \"odd\" );\n}</pre> </div> </div></div> <div id=\"method-_resizeMenu\"><div class=\"api-item\"> <h3>_resizeMenu()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div>Method responsible for sizing the menu before it is displayed. The menu element is available at <code>this.menu</code>.</div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Always display the menu as 500 pixels wide.</p> <pre class=\"syntaxhighlighter javascript\">_resizeMenu: function() {\n  this.menu.outerWidth( 500 );\n}</pre> </div> </div></div></section><section id=\"events\"><h2>Events</h2>\n<div id=\"event-change\" class=\"api-item first-item\"> <h3>change( event, ui )<span class=\"returns\">Type: <code>selectmenuchange</code></span> </h3> <div>Triggered when the selected item has changed. Not every <a href=\"#event-select\"><code>select</code></a> event will fire a <code>change</code> event.</div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  <ul><li> <div><strong>item</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The active item.</div> </li></ul> </li> </ul> <div> <strong>Code examples:</strong><p>Initialize the selectmenu with the change callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).selectmenu({\n  change: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the selectmenuchange event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"selectmenuchange\", function( event, ui ) {} );</pre> </div> </div> <div id=\"event-close\" class=\"api-item\"> <h3>close( event )<span class=\"returns\">Type: <code>selectmenuclose</code></span> </h3> <div>Triggered when the menu is hidden.</div> <ul><li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li></ul> <p><em>Note: The <code>ui</code> object is empty but included for consistency with other events.</em></p> <div> <strong>Code examples:</strong><p>Initialize the selectmenu with the close callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).selectmenu({\n  close: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the selectmenuclose event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"selectmenuclose\", function( event, ui ) {} );</pre> </div> </div> <div id=\"event-create\" class=\"api-item\"> <h3>create( event, ui )<span class=\"returns\">Type: <code>selectmenucreate</code></span> </h3> <div> Triggered when the selectmenu is created. </div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  </li> </ul> <p><em>Note: The <code>ui</code> object is empty but included for consistency with other events.</em></p> <div> <strong>Code examples:</strong><p>Initialize the selectmenu with the create callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).selectmenu({\n  create: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the selectmenucreate event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"selectmenucreate\", function( event, ui ) {} );</pre> </div> </div> <div id=\"event-focus\" class=\"api-item\"> <h3>focus( event, ui )<span class=\"returns\">Type: <code>selectmenufocus</code></span> </h3> <div> Triggered when an items gains focus. </div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  <ul><li> <div><strong>item</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The focused item.</div> </li></ul> </li> </ul> <div> <strong>Code examples:</strong><p>Initialize the selectmenu with the focus callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).selectmenu({\n  focus: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the selectmenufocus event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"selectmenufocus\", function( event, ui ) {} );</pre> </div> </div> <div id=\"event-open\" class=\"api-item\"> <h3>open( event )<span class=\"returns\">Type: <code>selectmenuopen</code></span> </h3> <div>Triggered when the menu is opened.</div> <ul><li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li></ul> <p><em>Note: The <code>ui</code> object is empty but included for consistency with other events.</em></p> <div> <strong>Code examples:</strong><p>Initialize the selectmenu with the open callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).selectmenu({\n  open: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the selectmenuopen event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"selectmenuopen\", function( event, ui ) {} );</pre> </div> </div> <div id=\"event-select\" class=\"api-item\"> <h3>select( event, ui )<span class=\"returns\">Type: <code>selectmenuselect</code></span> </h3> <div> Triggered when a menu item is selected. </div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  <ul><li> <div><strong>item</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The selected item.</div> </li></ul> </li> </ul> <div> <strong>Code examples:</strong><p>Initialize the selectmenu with the select callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).selectmenu({\n  select: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the selectmenuselect event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"selectmenuselect\", function( event, ui ) {} );</pre> </div> </div></section><section class=\"entry-examples\" id=\"entry-examples\"><h2>Examples:</h2>\n<div class=\"entry-example\" id=\"example-0\"> <p>A simple jQuery UI Selectmenu</p> <pre class=\"syntaxhighlighter xml\">&lt;!doctype html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"utf-8\"&gt;\n  &lt;title&gt;selectmenu demo&lt;/title&gt;\n  &lt;link rel=\"stylesheet\" href=\"//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css\"&gt;\n  &lt;style&gt;\n  label { display: block; }\n  select { width: 200px; }\n  &lt;/style&gt;\n  &lt;script src=\"//code.jquery.com/jquery-1.10.2.js\"&gt;&lt;/script&gt;\n  &lt;script src=\"//code.jquery.com/ui/1.11.4/jquery-ui.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n&lt;label for=\"speed\"&gt;Select a speed:&lt;/label&gt;\n&lt;select name=\"speed\" id=\"speed\"&gt;\n  &lt;option value=\"Slower\"&gt;Slower&lt;/option&gt;\n  &lt;option value=\"Slow\"&gt;Slow&lt;/option&gt;\n  &lt;option value=\"Medium\" selected&gt;Medium&lt;/option&gt;\n  &lt;option value=\"Fast\"&gt;Fast&lt;/option&gt;\n  &lt;option value=\"Faster\"&gt;Faster&lt;/option&gt;\n&lt;/select&gt;\n \n&lt;script&gt;\n$( \"#speed\" ).selectmenu();\n&lt;/script&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;</pre> <h4>Demo:</h4>  </div> <div class=\"entry-example\" id=\"example-1\"> <p>A simple jQuery UI Selectmenu with optgroups</p> <pre class=\"syntaxhighlighter xml\">&lt;!doctype html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"utf-8\"&gt;\n  &lt;title&gt;selectmenu demo&lt;/title&gt;\n  &lt;link rel=\"stylesheet\" href=\"//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css\"&gt;\n  &lt;style&gt;\n  label { display: block; }\n  select { width: 200px; }\n  &lt;/style&gt;\n  &lt;script src=\"//code.jquery.com/jquery-1.10.2.js\"&gt;&lt;/script&gt;\n  &lt;script src=\"//code.jquery.com/ui/1.11.4/jquery-ui.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n&lt;label for=\"files\"&gt;Select a file:&lt;/label&gt;\n&lt;select name=\"files\" id=\"files\"&gt;\n  &lt;optgroup label=\"Scripts\"&gt;\n    &lt;option value=\"jquery\"&gt;jQuery.js&lt;/option&gt;\n    &lt;option value=\"jqueryui\"&gt;ui.jQuery.js&lt;/option&gt;\n  &lt;/optgroup&gt;\n  &lt;optgroup label=\"Other files\"&gt;\n    &lt;option value=\"somefile\"&gt;Some unknown file&lt;/option&gt;\n    &lt;option value=\"someotherfile\"&gt;Some other file&lt;/option&gt;\n  &lt;/optgroup&gt;\n&lt;/select&gt;\n \n&lt;script&gt;\n$( \"#files\" ).selectmenu();\n&lt;/script&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;</pre> <h4>Demo:</h4>  </div> <div class=\"entry-example\" id=\"example-2\"> <p>A jQuery UI Selectmenu with overflow</p> <pre class=\"syntaxhighlighter xml\">&lt;!doctype html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"utf-8\"&gt;\n  &lt;title&gt;selectmenu demo&lt;/title&gt;\n  &lt;link rel=\"stylesheet\" href=\"//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css\"&gt;\n  &lt;style&gt;\n  label { display: block; }\n  select { width: 200px; }\n  .overflow { height: 200px; }\n  &lt;/style&gt;\n  &lt;script src=\"//code.jquery.com/jquery-1.10.2.js\"&gt;&lt;/script&gt;\n  &lt;script src=\"//code.jquery.com/ui/1.11.4/jquery-ui.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n&lt;label for=\"number\"&gt;Select a number:&lt;/label&gt;\n&lt;select name=\"number\" id=\"number\"&gt;\n  &lt;option value=\"1\"&gt;1&lt;/option&gt;\n  &lt;option value=\"2\" selected&gt;2&lt;/option&gt;\n  &lt;option value=\"3\"&gt;3&lt;/option&gt;\n  &lt;option value=\"4\"&gt;4&lt;/option&gt;\n  &lt;option value=\"5\"&gt;5&lt;/option&gt;\n  &lt;option value=\"6\"&gt;6&lt;/option&gt;\n  &lt;option value=\"7\"&gt;7&lt;/option&gt;\n  &lt;option value=\"8\"&gt;8&lt;/option&gt;\n  &lt;option value=\"9\"&gt;9&lt;/option&gt;\n  &lt;option value=\"10\"&gt;10&lt;/option&gt;\n  &lt;option value=\"11\"&gt;11&lt;/option&gt;\n  &lt;option value=\"12\"&gt;12&lt;/option&gt;\n  &lt;option value=\"13\"&gt;13&lt;/option&gt;\n  &lt;option value=\"14\"&gt;14&lt;/option&gt;\n  &lt;option value=\"15\"&gt;15&lt;/option&gt;\n  &lt;option value=\"16\"&gt;16&lt;/option&gt;\n  &lt;option value=\"17\"&gt;17&lt;/option&gt;\n  &lt;option value=\"18\"&gt;18&lt;/option&gt;\n  &lt;option value=\"19\"&gt;19&lt;/option&gt;\n&lt;/select&gt;\n \n&lt;script&gt;\n$( \"#number\" )\n  .selectmenu()\n  .selectmenu( \"menuWidget\" )\n    .addClass( \"overflow\" );\n&lt;/script&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;</pre> <h4>Demo:</h4>  </div></section> </div></article> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; The jQuery Foundation and other contributors<br>Licensed under the MIT License.<br>\n    <a href=\"https://api.jqueryui.com/selectmenu\" class=\"_attribution-link\">https://api.jqueryui.com/selectmenu</a>\n  </p>\n</div>\n","show":"<h1 class=\"entry-title\">.show()</h1> <div class=\"entry-content\"> <article id=\"show1\" class=\"entry method\"><h2 class=\"section-title\"> <span class=\"name\">.show( effect [, options ] [, duration ] [, complete ] )</span><span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a></span> </h2> <div class=\"entry-wrapper\"> <p class=\"desc\"><strong>Description: </strong>Display the matched elements, using custom effects.</p> <ul class=\"signatures\"> <li class=\"signature\"> <h4 class=\"name\"><a id=\"show-effect-options-duration-complete\" href=\"#show-effect-options-duration-complete\">.show( effect [, options ] [, duration ] [, complete ] )</a></h4> <ul> <li> <div><strong>effect</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>A string indicating which <a href=\"https://api.jqueryui.com/category/effects/\">effect</a> to use for the transition.</div> </li> <li> <div><strong>options</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>Effect-specific properties and <a href=\"easings\">easing</a>.</div> </li> <li> <div> <strong>duration</strong> (default: <code>400</code>)</div> <div>Type: <a href=\"http://api.jquery.com/Types/#Number\">Number</a> or <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>A string or number determining how long the animation will run.</div> </li> <li> <div><strong>complete</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Function\">Function</a>()</div> <div>A function to call once the animation is complete, called once per matched element.</div> </li> </ul> </li> <li class=\"signature\"> <h4 class=\"name\"><a id=\"show-options\" href=\"#show-options\">.show( options )</a></h4> <ul><li> <div><strong>options</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>All animation settings. The only required property is <code>effect</code>.</div> <ul> <li> <div><strong>effect</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>A string indicating which <a href=\"https://api.jqueryui.com/category/effects/\">effect</a> to use for the transition.</div> </li> <li> <div> <strong>easing</strong> (default: <code>\"swing\"</code>)</div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>A string indicating which <a href=\"easings\">easing</a> function to use for the transition.</div> </li> <li> <div> <strong>duration</strong> (default: <code>400</code>)</div> <div>Type: <a href=\"http://api.jquery.com/Types/#Number\">Number</a> or <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>A string or number determining how long the animation will run.</div> </li> <li> <div><strong>complete</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Function\">Function</a>()</div> <div>A function to call once the animation is complete, called once per matched element.</div> </li> <li> <div> <strong>queue</strong> (default: <code>true</code>)</div> <div>Type: <a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> or <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>A Boolean indicating whether to place the animation in the effects queue. If false, the animation will begin immediately. <strong>As of jQuery 1.7</strong>, the queue option can also accept a string, in which case the animation is added to the queue represented by that string.</div> </li> </ul> </li></ul> </li> </ul> <div class=\"longdesc\" id=\"entry-longdesc\"> <p>This plugin extends jQuery's built-in <a href=\"https://api.jquery.com/show/\"><code>.show()</code></a> method. If jQuery UI is not loaded, calling the <code>.show()</code> method may not fail directly, as the method still exists. However, the expected behavior will not occur.</p> </div> <section class=\"entry-examples\" id=\"entry-examples\"><h2>Example:</h2>\n<div class=\"entry-example\" id=\"example-0\"> <p>Show a div using the fold effect.</p> <pre class=\"syntaxhighlighter xml\">&lt;!doctype html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"utf-8\"&gt;\n  &lt;title&gt;show demo&lt;/title&gt;\n  &lt;link rel=\"stylesheet\" href=\"//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css\"&gt;\n  &lt;style&gt;\n  div {\n    display: none;\n    width: 100px;\n    height: 100px;\n    background: #ccc;\n    border: 1px solid #000;\n  }\n  &lt;/style&gt;\n  &lt;script src=\"//code.jquery.com/jquery-1.10.2.js\"&gt;&lt;/script&gt;\n  &lt;script src=\"//code.jquery.com/ui/1.11.4/jquery-ui.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n&lt;button&gt;show the div&lt;/button&gt;\n&lt;div&gt;&lt;/div&gt;\n \n&lt;script&gt;\n$( \"button\" ).click(function() {\n  $( \"div\" ).show( \"fold\", 1000 );\n});\n&lt;/script&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;</pre> <h4>Demo:</h4>  </div></section> </div></article> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; The jQuery Foundation and other contributors<br>Licensed under the MIT License.<br>\n    <a href=\"https://api.jqueryui.com/show\" class=\"_attribution-link\">https://api.jqueryui.com/show</a>\n  </p>\n</div>\n","size-effect":"<h1 class=\"entry-title\">Size Effect</h1> <div class=\"entry-content\"> <article id=\"size1\" class=\"entry effect\"><h2 class=\"section-title\"><span>Size Effect</span></h2> <div class=\"entry-wrapper\"> <p class=\"desc\"><strong>Description: </strong>Resize an element to a specified width and height.</p> <ul class=\"signatures\"><li class=\"signature\"> <h4 class=\"name\">size</h4> <ul> <li> <div><strong>to</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>Height and width to resize to.</div> </li> <li> <div> <strong>origin</strong> (default: <code>[ \"top\", \"left\" ]</code>)</div> <div>Type: <a href=\"http://api.jquery.com/Types/#Array\">Array</a> </div> <div>The vanishing point.</div> </li> <li> <div> <strong>scale</strong> (default: <code>\"both\"</code>)</div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>Which areas of the element will be resized: <code>\"both\"</code>, <code>\"box\"</code>, <code>\"content\"</code>. Box resizes the border and padding of the element; content resizes any content inside of the element.</div> </li> </ul> </li></ul> <section class=\"entry-examples\" id=\"entry-examples\"><h2>Example:</h2>\n<div class=\"entry-example\" id=\"example-0\"> <p>Resize the element using the size effect.</p> <pre class=\"syntaxhighlighter xml\">&lt;!doctype html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"utf-8\"&gt;\n  &lt;title&gt;size demo&lt;/title&gt;\n  &lt;link rel=\"stylesheet\" href=\"//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css\"&gt;\n  &lt;style&gt;\n  #toggle {\n    width: 100px;\n    height: 100px;\n    background: #ccc;\n  }\n  &lt;/style&gt;\n  &lt;script src=\"//code.jquery.com/jquery-1.10.2.js\"&gt;&lt;/script&gt;\n  &lt;script src=\"//code.jquery.com/ui/1.11.4/jquery-ui.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n&lt;p&gt;Click anywhere to resize the box.&lt;/p&gt;\n&lt;div id=\"toggle\"&gt;&lt;/div&gt;\n \n&lt;script&gt;\n$( document ).click(function() {\n  $( \"#toggle\" ).effect( \"size\", {\n    to: { width: 200, height: 60 }\n  }, 1000 );\n});\n&lt;/script&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;</pre> <h4>Demo:</h4>  </div></section> </div></article> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; The jQuery Foundation and other contributors<br>Licensed under the MIT License.<br>\n    <a href=\"https://api.jqueryui.com/size-effect\" class=\"_attribution-link\">https://api.jqueryui.com/size-effect</a>\n  </p>\n</div>\n","slider":"<h1 class=\"entry-title\">Slider Widget</h1> <div class=\"entry-content\"> <article id=\"slider1\" class=\"entry widget\"><h2 class=\"section-title\"> <span>Slider Widget</span><span class=\"version-details\">version added: 1.5</span> </h2> <div class=\"entry-wrapper\"> <p class=\"desc\"><strong>Description: </strong>Drag a handle to select a numeric value.</p> <section id=\"quick-nav\"><h2>QuickNav<a href=\"#entry-examples\">Examples</a> </h2>\n<div class=\"quick-nav-section\"> <h3>Options</h3> <div><a href=\"#option-animate\">animate</a></div> <div><a href=\"#option-disabled\">disabled</a></div> <div><a href=\"#option-max\">max</a></div> <div><a href=\"#option-min\">min</a></div> <div><a href=\"#option-orientation\">orientation</a></div> <div><a href=\"#option-range\">range</a></div> <div><a href=\"#option-step\">step</a></div> <div><a href=\"#option-value\">value</a></div> <div><a href=\"#option-values\">values</a></div> </div> <div class=\"quick-nav-section\"> <h3>Methods</h3> <div><a href=\"#method-destroy\">destroy</a></div> <div><a href=\"#method-disable\">disable</a></div> <div><a href=\"#method-enable\">enable</a></div> <div><a href=\"#method-instance\">instance</a></div> <div><a href=\"#method-option\">option</a></div> <div><a href=\"#method-value\">value</a></div> <div><a href=\"#method-values\">values</a></div> <div><a href=\"#method-widget\">widget</a></div> </div> <div class=\"quick-nav-section\"> <h3>Events</h3> <div><a href=\"#event-change\">change</a></div> <div><a href=\"#event-create\">create</a></div> <div><a href=\"#event-slide\">slide</a></div> <div><a href=\"#event-start\">start</a></div> <div><a href=\"#event-stop\">stop</a></div> </div></section><div class=\"longdesc\" id=\"entry-longdesc\"> <p>The jQuery UI Slider plugin makes selected elements into sliders. There are various options such as multiple handles and ranges. The handle can be moved with the mouse or the arrow keys.</p> <p>The slider widget will create handle elements with the class <code>ui-slider-handle</code> on initialization. You can specify custom handle elements by creating and appending the elements and adding the <code>ui-slider-handle</code> class before initialization. It will only create the number of handles needed to match the length of <a href=\"#option-value\"><code>value</code></a>/<a href=\"#option-values\"><code>values</code></a>. For example, if you specify <code>values: [ 1, 5, 18 ]</code> and create one custom handle, the plugin will create the other two.</p> <div> <h3 id=\"theming\">Theming</h3> <p>The slider widget uses the <a href=\"theming/css-framework\">jQuery UI CSS framework</a> to style its look and feel. If slider specific styling is needed, the following CSS class names can be used:</p> </div> <ul> <li> <code>ui-slider</code>: The track of the slider control. This element will additionally have a class name of <code>ui-slider-horizontal</code> or <code>ui-slider-vertical</code> depending on the <a href=\"#option-orientation\"><code>orientation</code></a> of the slider. <ul> <li> <code>ui-slider-handle</code>: The slider handles.</li> <li> <code>ui-slider-range</code>: The selected range used when the <a href=\"#option-range\"><code>range</code></a> option is set. This element can additionally have a class of <code>ui-slider-range-min</code> or <code>ui-slider-range-max</code> if the <code>range</code> option is set to <code>\"min\"</code> or <code>\"max\"</code> respectively.</li> </ul> </li> </ul> <h3>Dependencies</h3> <ul> <li><a href=\"https://api.jqueryui.com/category/ui-core/\">UI Core</a></li> <li><a href=\"jquery.widget\">Widget Factory</a></li> <li><a href=\"mouse\">Mouse Interaction</a></li> </ul> </div> <h3>Additional Notes:</h3> <div class=\"longdesc\"><ul><li> This widget requires some functional CSS, otherwise it won't work. If you build a custom theme, use the widget's specific CSS file as a starting point. </li></ul></div> <section id=\"options\"><h2>Options</h2>\n<div id=\"option-animate\" class=\"api-item first-item\"> <h3>animate </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> or <a href=\"http://api.jquery.com/Types/#String\">String</a> or <a href=\"http://api.jquery.com/Types/#Number\">Number</a> </div> <div class=\"default\"> <strong>Default: </strong><code>false</code> </div> <div>Whether to slide the handle smoothly when the user clicks on the slider track. Also accepts any valid <a href=\"https://api.jquery.com/animate/#duration\">animation duration</a>.</div> <strong>Multiple types supported:</strong><ul> <li> <strong>Boolean</strong>: When set to <code>true</code>, the handle will animate with the default duration.</li> <li> <strong>String</strong>: The name of a speed, such as <code>\"fast\"</code> or <code>\"slow\"</code>.</li> <li> <strong>Number</strong>: The duration of the animation, in milliseconds.</li> </ul> <strong>Code examples:</strong><p>Initialize the slider with the <code>animate</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).slider({\n  animate: \"fast\"\n});</pre> <p>Get or set the <code>animate</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar animate = $( \".selector\" ).slider( \"option\", \"animate\" );\n \n// Setter\n$( \".selector\" ).slider( \"option\", \"animate\", \"fast\" );</pre> </div> <div id=\"option-disabled\" class=\"api-item\"> <h3>disabled </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> </div> <div class=\"default\"> <strong>Default: </strong><code>false</code> </div> <div>Disables the slider if set to <code>true</code>.</div> <strong>Code examples:</strong><p>Initialize the slider with the <code>disabled</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).slider({\n  disabled: true\n});</pre> <p>Get or set the <code>disabled</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar disabled = $( \".selector\" ).slider( \"option\", \"disabled\" );\n \n// Setter\n$( \".selector\" ).slider( \"option\", \"disabled\", true );</pre> </div> <div id=\"option-max\" class=\"api-item\"> <h3>max </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Number\">Number</a> </div> <div class=\"default\"> <strong>Default: </strong><code>100</code> </div> <div>The maximum value of the slider.</div> <strong>Code examples:</strong><p>Initialize the slider with the <code>max</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).slider({\n  max: 50\n});</pre> <p>Get or set the <code>max</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar max = $( \".selector\" ).slider( \"option\", \"max\" );\n \n// Setter\n$( \".selector\" ).slider( \"option\", \"max\", 50 );</pre> </div> <div id=\"option-min\" class=\"api-item\"> <h3>min </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Number\">Number</a> </div> <div class=\"default\"> <strong>Default: </strong><code>0</code> </div> <div>The minimum value of the slider.</div> <strong>Code examples:</strong><p>Initialize the slider with the <code>min</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).slider({\n  min: 10\n});</pre> <p>Get or set the <code>min</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar min = $( \".selector\" ).slider( \"option\", \"min\" );\n \n// Setter\n$( \".selector\" ).slider( \"option\", \"min\", 10 );</pre> </div> <div id=\"option-orientation\" class=\"api-item\"> <h3>orientation </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div class=\"default\"> <strong>Default: </strong><code>\"horizontal\"</code> </div> <div>Determines whether the slider handles move horizontally (min on left, max on right) or vertically (min on bottom, max on top). Possible values: <code>\"horizontal\"</code>, <code>\"vertical\"</code>.</div> <strong>Code examples:</strong><p>Initialize the slider with the <code>orientation</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).slider({\n  orientation: \"vertical\"\n});</pre> <p>Get or set the <code>orientation</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar orientation = $( \".selector\" ).slider( \"option\", \"orientation\" );\n \n// Setter\n$( \".selector\" ).slider( \"option\", \"orientation\", \"vertical\" );</pre> </div> <div id=\"option-range\" class=\"api-item\"> <h3>range </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> or <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div class=\"default\"> <strong>Default: </strong><code>false</code> </div> <div>Whether the slider represents a range.</div> <strong>Multiple types supported:</strong><ul> <li> <strong>Boolean</strong>: If set to <code>true</code>, the slider will detect if you have two handles and create a styleable range element between these two.</li> <li> <strong>String</strong>: Either <code>\"min\"</code> or <code>\"max\"</code>. A min range goes from the slider min to one handle. A max range goes from one handle to the slider max.</li> </ul> <strong>Code examples:</strong><p>Initialize the slider with the <code>range</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).slider({\n  range: true\n});</pre> <p>Get or set the <code>range</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar range = $( \".selector\" ).slider( \"option\", \"range\" );\n \n// Setter\n$( \".selector\" ).slider( \"option\", \"range\", true );</pre> </div> <div id=\"option-step\" class=\"api-item\"> <h3>step </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Number\">Number</a> </div> <div class=\"default\"> <strong>Default: </strong><code>1</code> </div> <div>Determines the size or amount of each interval or step the slider takes between the min and max. The full specified value range of the slider (max - min) should be evenly divisible by the step.</div> <strong>Code examples:</strong><p>Initialize the slider with the <code>step</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).slider({\n  step: 5\n});</pre> <p>Get or set the <code>step</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar step = $( \".selector\" ).slider( \"option\", \"step\" );\n \n// Setter\n$( \".selector\" ).slider( \"option\", \"step\", 5 );</pre> </div> <div id=\"option-value\" class=\"api-item\"> <h3>value </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Number\">Number</a> </div> <div class=\"default\"> <strong>Default: </strong><code>0</code> </div> <div>Determines the value of the slider, if there's only one handle. If there is more than one handle, determines the value of the first handle.</div> <strong>Code examples:</strong><p>Initialize the slider with the <code>value</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).slider({\n  value: 10\n});</pre> <p>Get or set the <code>value</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar value = $( \".selector\" ).slider( \"option\", \"value\" );\n \n// Setter\n$( \".selector\" ).slider( \"option\", \"value\", 10 );</pre> </div> <div id=\"option-values\" class=\"api-item\"> <h3>values </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Array\">Array</a> </div> <div class=\"default\"> <strong>Default: </strong><code>null</code> </div> <div>This option can be used to specify multiple handles. If the <a href=\"#option-range\"><code>range</code></a> option is set to <code>true</code>, the length of <code>values</code> should be 2.</div> <strong>Code examples:</strong><p>Initialize the slider with the <code>values</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).slider({\n  values: [ 10, 25 ]\n});</pre> <p>Get or set the <code>values</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar values = $( \".selector\" ).slider( \"option\", \"values\" );\n \n// Setter\n$( \".selector\" ).slider( \"option\", \"values\", [ 10, 25 ] );</pre> </div></section><section id=\"methods\"><h2>Methods</h2>\n<div id=\"method-destroy\"><div class=\"api-item first-item\"> <h3>destroy()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Removes the slider functionality completely. This will return the element back to its pre-init state. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the destroy method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).slider( \"destroy\" );</pre> </div> </div></div> <div id=\"method-disable\"><div class=\"api-item\"> <h3>disable()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Disables the slider. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the disable method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).slider( \"disable\" );</pre> </div> </div></div> <div id=\"method-enable\"><div class=\"api-item\"> <h3>enable()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Enables the slider. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the enable method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).slider( \"enable\" );</pre> </div> </div></div> <div id=\"method-instance\"><div class=\"api-item\"> <h3>instance()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#Object\">Object</a></span> </h3> <div> <p>Retrieves the slider's instance object. If the element does not have an associated instance, <code>undefined</code> is returned.</p> <p>Unlike other widget methods, <code>instance()</code> is safe to call on any element after the slider plugin has loaded.</p> </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the instance method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).slider( \"instance\" );</pre> </div> </div></div> <div id=\"method-option\"> <div class=\"api-item\"> <h3>option( optionName )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#Object\">Object</a></span> </h3> <div> <p>Gets the value currently associated with the specified <code>optionName</code>.</p> <p><strong>Note:</strong> For options that have objects as their value, you can get the value of a specific key by using dot notation. For example, <code>\"foo.bar\"</code> would get the value of the <code>bar</code> property on the <code>foo</code> option.</p> </div> <ul><li> <div><strong>optionName</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>The name of the option to get.</div> </li></ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">var isDisabled = $( \".selector\" ).slider( \"option\", \"disabled\" );</pre> </div> </div> <div class=\"api-item\"> <h3>option()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#PlainObject\">PlainObject</a></span> </h3> <div>Gets an object containing key/value pairs representing the current slider options hash.</div> <ul><li><div class=\"null-signature\">This signature does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">var options = $( \".selector\" ).slider( \"option\" );</pre> </div> </div> <div class=\"api-item\"> <h3>option( optionName, value )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> <p>Sets the value of the slider option associated with the specified <code>optionName</code>.</p> <p><strong>Note:</strong> For options that have objects as their value, you can set the value of just one property by using dot notation for <code>optionName</code>. For example, <code>\"foo.bar\"</code> would update only the <code>bar</code> property of the <code>foo</code> option.</p> </div> <ul> <li> <div><strong>optionName</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>The name of the option to set.</div> </li> <li> <div><strong>value</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>A value to set for the option.</div> </li> </ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).slider( \"option\", \"disabled\", true );</pre> </div> </div> <div class=\"api-item\"> <h3>option( options )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div>Sets one or more options for the slider.</div> <ul><li> <div><strong>options</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>A map of option-value pairs to set.</div> </li></ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).slider( \"option\", { disabled: true } );</pre> </div> </div> </div> <div id=\"method-value\"> <div class=\"api-item\"> <h3>value()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#Number\">Number</a></span> </h3> <div>Get the value of the slider.</div> <ul><li><div class=\"null-signature\">This signature does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">var selection = $( \".selector\" ).slider( \"value\" );</pre> </div> </div> <div class=\"api-item\"> <h3>value( value )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div>Set the value of the slider.</div> <ul><li> <div><strong>value</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Number\">Number</a> </div> <div>The value to set.</div> </li></ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).slider( \"value\", 55 );</pre> </div> </div> </div> <div id=\"method-values\"> <div class=\"api-item\"> <h3>values()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#Array\">Array</a></span> </h3> <div>Get the value for all handles.</div> <ul><li><div class=\"null-signature\">This signature does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">var values = $( \".selector\" ).slider( \"values\" );</pre> </div> </div> <div class=\"api-item\"> <h3>values( index )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#Number\">Number</a></span> </h3> <div>Get the value for the specified handle.</div> <ul><li> <div><strong>index</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Integer\">Integer</a> </div> <div>The zero-based index of the handle.</div> </li></ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">var value = $( \".selector\" ).slider( \"values\", 0 );</pre> </div> </div> <div class=\"api-item\"> <h3>values( index, value )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div>Set the value for the specified handle.</div> <ul> <li> <div><strong>index</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Integer\">Integer</a> </div> <div>The zero-based index of the handle.</div> </li> <li> <div><strong>value</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Number\">Number</a> </div> <div>The value to set.</div> </li> </ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).slider( \"values\", 0, 55 );</pre> </div> </div> <div class=\"api-item\"> <h3>values( values )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div>Set the value for all handles.</div> <ul><li> <div><strong>values</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Array\">Array</a> </div> <div>The values to set.</div> </li></ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).slider( \"values\", [ 55, 105 ] );</pre> </div> </div> </div> <div id=\"method-widget\"><div class=\"api-item\"> <h3>widget()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a></span> </h3> <div> Returns a <code>jQuery</code> object containing the slider. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the widget method:</p> <pre class=\"syntaxhighlighter javascript\">var widget = $( \".selector\" ).slider( \"widget\" );</pre> </div> </div></div></section><section id=\"events\"><h2>Events</h2>\n<div id=\"event-change\" class=\"api-item first-item\"> <h3>change( event, ui )<span class=\"returns\">Type: <code>slidechange</code></span> </h3> <div>Triggered after the user slides a handle, if the value has changed; or if the value is changed programmatically via the <a href=\"#method-value\"><code>value</code></a> method.</div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  <ul> <li> <div><strong>handle</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The jQuery object representing the handle that was changed.</div> </li> <li> <div><strong>value</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Number\">Number</a> </div> <div>The current value of the slider.</div> </li> </ul> </li> </ul> <div> <strong>Code examples:</strong><p>Initialize the slider with the change callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).slider({\n  change: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the slidechange event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"slidechange\", function( event, ui ) {} );</pre> </div> </div> <div id=\"event-create\" class=\"api-item\"> <h3>create( event, ui )<span class=\"returns\">Type: <code>slidecreate</code></span> </h3> <div> Triggered when the slider is created. </div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  </li> </ul> <p><em>Note: The <code>ui</code> object is empty but included for consistency with other events.</em></p> <div> <strong>Code examples:</strong><p>Initialize the slider with the create callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).slider({\n  create: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the slidecreate event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"slidecreate\", function( event, ui ) {} );</pre> </div> </div> <div id=\"event-slide\" class=\"api-item\"> <h3>slide( event, ui )<span class=\"returns\">Type: <code>slide</code></span> </h3> <div>Triggered on every mouse move during slide. The value provided in the event as <code>ui.value</code> represents the value that the handle will have as a result of the current movement. Canceling the event will prevent the handle from moving and the handle will continue to have its previous value.</div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  <ul> <li> <div><strong>handle</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The jQuery object representing the handle being moved.</div> </li> <li> <div><strong>value</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Number\">Number</a> </div> <div>The value that the handle will move to if the event is not canceled.</div> </li> <li> <div><strong>values</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Array\">Array</a> </div> <div>An array of the current values of a multi-handled slider.</div> </li> </ul> </li> </ul> <div> <strong>Code examples:</strong><p>Initialize the slider with the slide callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).slider({\n  slide: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the slide event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"slide\", function( event, ui ) {} );</pre> </div> </div> <div id=\"event-start\" class=\"api-item\"> <h3>start( event, ui )<span class=\"returns\">Type: <code>slidestart</code></span> </h3> <div>Triggered when the user starts sliding.</div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  <ul> <li> <div><strong>handle</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The jQuery object representing the handle being moved.</div> </li> <li> <div><strong>value</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Number\">Number</a> </div> <div>The current value of the slider.</div> </li> </ul> </li> </ul> <div> <strong>Code examples:</strong><p>Initialize the slider with the start callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).slider({\n  start: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the slidestart event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"slidestart\", function( event, ui ) {} );</pre> </div> </div> <div id=\"event-stop\" class=\"api-item\"> <h3>stop( event, ui )<span class=\"returns\">Type: <code>slidestop</code></span> </h3> <div>Triggered after the user slides a handle.</div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  <ul> <li> <div><strong>handle</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The jQuery object representing the handle that was moved.</div> </li> <li> <div><strong>value</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Number\">Number</a> </div> <div>The current value of the slider.</div> </li> </ul> </li> </ul> <div> <strong>Code examples:</strong><p>Initialize the slider with the stop callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).slider({\n  stop: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the slidestop event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"slidestop\", function( event, ui ) {} );</pre> </div> </div></section><section class=\"entry-examples\" id=\"entry-examples\"><h2>Example:</h2>\n<div class=\"entry-example\" id=\"example-0\"> <p>A simple jQuery UI Slider.</p> <pre class=\"syntaxhighlighter xml\">&lt;!doctype html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"utf-8\"&gt;\n  &lt;title&gt;slider demo&lt;/title&gt;\n  &lt;link rel=\"stylesheet\" href=\"//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css\"&gt;\n  &lt;style&gt;#slider { margin: 10px; }\t&lt;/style&gt;\n  &lt;script src=\"//code.jquery.com/jquery-1.10.2.js\"&gt;&lt;/script&gt;\n  &lt;script src=\"//code.jquery.com/ui/1.11.4/jquery-ui.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n&lt;div id=\"slider\"&gt;&lt;/div&gt;\n \n&lt;script&gt;\n$( \"#slider\" ).slider();\n&lt;/script&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;</pre> <h4>Demo:</h4>  </div></section> </div></article> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; The jQuery Foundation and other contributors<br>Licensed under the MIT License.<br>\n    <a href=\"https://api.jqueryui.com/slider\" class=\"_attribution-link\">https://api.jqueryui.com/slider</a>\n  </p>\n</div>\n","tabbable-selector":"<h1 class=\"entry-title\">:tabbable Selector</h1> <div class=\"entry-content\"> <article id=\"tabbable1\" class=\"entry selector\"><h2 class=\"section-title\"><span>tabbable selector</span></h2> <div class=\"entry-wrapper\"> <p class=\"desc\"><strong>Description: </strong>Selects elements which the user can focus via tabbing.</p> <ul class=\"signatures\"><li class=\"signature\"><h4 class=\"name\">jQuery( \":tabbable\" )</h4></li></ul> <div class=\"longdesc\" id=\"entry-longdesc\"> <p>Some elements are natively tabbable, while others require explicitly setting a positive tab index. In all cases, the element must be visible in order to be tabbable.</p> <p>Elements of the following type are tabbable if they do not have a negative tab index and are not disabled: <code>input</code>, <code>select</code>, <code>textarea</code>, <code>button</code>, and <code>object</code>. Anchors are focusable if they have an <code>href</code> or positive <code>tabindex</code> attribute. <code>area</code> elements are focusable if they are inside a named map, have an <code>href</code> attribute, and there is a visible image using the map. All other elements are tabbable based solely on their <code>tabindex</code> attribute and visibility.</p> <p><em>Note: Elements with a negative tab index are <a href=\"focusable-selector\"><code>:focusable</code></a>, but not <code>:tabbable</code>.</em></p> </div> <section class=\"entry-examples\" id=\"entry-examples\"><h2>Example:</h2>\n<div class=\"entry-example\" id=\"example-0\"> <p>Select tabbable elements and highlight them with a red border.</p> <pre class=\"syntaxhighlighter xml\">&lt;!doctype html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"utf-8\"&gt;\n  &lt;title&gt;tabbable demo&lt;/title&gt;\n  &lt;link rel=\"stylesheet\" href=\"//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css\"&gt;\n  &lt;style&gt;\n  input {\n    border: 1px solid #000;\n  }\n  div {\n    padding: 5px;\n  }\n  &lt;/style&gt;\n  &lt;script src=\"//code.jquery.com/jquery-1.10.2.js\"&gt;&lt;/script&gt;\n  &lt;script src=\"//code.jquery.com/ui/1.11.4/jquery-ui.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n&lt;div&gt;&lt;input value=\"no tabindex\"&gt;&lt;/div&gt;\n&lt;div&gt;&lt;input tabindex=\"5\" value=\"positive tabindex\"&gt;&lt;/div&gt;\n&lt;div&gt;&lt;input tabindex=\"-1\" value=\"negative tabindex\"&gt;&lt;/div&gt;\n \n&lt;script&gt;\n$( \":tabbable\" ).css( \"border-color\", \"red\" );\n&lt;/script&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;</pre> <h4>Demo:</h4>  </div></section> </div></article> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; The jQuery Foundation and other contributors<br>Licensed under the MIT License.<br>\n    <a href=\"https://api.jqueryui.com/tabbable-selector\" class=\"_attribution-link\">https://api.jqueryui.com/tabbable-selector</a>\n  </p>\n</div>\n","theming/stacking-elements":"<h1 class=\"entry-title\">Stacking Elements</h1>  <p>Widgets that stack, or move in front of other elements, often present challenges when placed into real world pages. It's usually easy to either change the <code>z-index</code> or parent of the stacked element to avoid any collisions on the page. However, jQuery UI needs a generic solution that doesn't require manually playing with <code>z-index</code> values. This is accomplished via the <code>ui-front</code> class, and usually an accompanying <code>appendTo</code> option on stacking widgets.</p> <h2 class=\"toc-linked\"> The <code>ui-front</code> class</h2>\n<p>The <code>ui-front</code> class is very basic. It just sets a static <code>z-index</code> value on the element. However, the existence of the class is used to indicate where stacking elements should be appended. This allows us to take advantage of nested stacking contexts, resulting in a default DOM position that works for most use cases.</p> <p><em>Note: When using <code>ui-front</code>, you must also set <code>position</code> to <code>relative</code>, <code>absolute</code> or <code>fixed</code> in order for the <code>z-index</code> to be applied.</em></p> <h2 class=\"toc-linked\"> The stacking technique</h2>\n<p>Any widget that appends a stacking element to the page must use the <code>ui-front</code> class, and in many cases should have an <code>appendTo</code> option. The following logic should be applied to the stacking element:</p> <ul> <li>If a value is provided for the <code>appendTo</code> option, then append the stacking element to the specified element.</li> <li>If the <code>appendTo</code> option is set to <code>null</code> (default), then the widget should walk up the DOM from the associated element. For example, when the autocomplete menu is appended to the DOM, the walking starts from the associated input element.<ul> <li>If an element with the <code>ui-front</code> class is found, append to that element.</li> <li>If no element with the <code>ui-front</code> class is found, append to the body.</li> </ul> </li> <li>The stacking element must also have <code>position</code> set to <code>relative</code>, <code>absolute</code>, or <code>fixed</code> in order for the <code>z-index</code> from the <code>ui-front</code> class to be applied. Using <a href=\"../position\">.position()</a> will automatically set <code>position</code>.</li> </ul><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; The jQuery Foundation and other contributors<br>Licensed under the MIT License.<br>\n    <a href=\"https://api.jqueryui.com/theming/stacking-elements\" class=\"_attribution-link\">https://api.jqueryui.com/theming/stacking-elements</a>\n  </p>\n</div>\n","switchclass":"<h1 class=\"entry-title\">.switchClass()</h1> <div class=\"entry-content\"> <article id=\"switchClass1\" class=\"entry method\"><h2 class=\"section-title\"> <span class=\"name\">.switchClass( removeClassName, addClassName [, duration ] [, easing ] [, complete ] )</span><span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a></span> </h2> <div class=\"entry-wrapper\"> <p class=\"desc\"><strong>Description: </strong>Adds and removes the specified class(es) to each of the set of matched elements while animating all style changes.</p> <ul class=\"signatures\"> <li class=\"signature\"> <h4 class=\"name\"><a id=\"switchClass-removeClassName-addClassName-duration-easing-complete\" href=\"#switchClass-removeClassName-addClassName-duration-easing-complete\">.switchClass( removeClassName, addClassName [, duration ] [, easing ] [, complete ] )</a></h4> <ul> <li> <div><strong>removeClassName</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>One or more class names (space separated) to be removed from the class attribute of each matched element.</div> </li> <li> <div><strong>addClassName</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>One or more class names (space separated) to be added to the class attribute of each matched element.</div> </li> <li> <div> <strong>duration</strong> (default: <code>400</code>)</div> <div>Type: <a href=\"http://api.jquery.com/Types/#Number\">Number</a> or <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>A string or number determining how long the animation will run.</div> </li> <li> <div> <strong>easing</strong> (default: <code>swing</code>)</div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>A string indicating which <a href=\"easings\">easing</a> function to use for the transition.</div> </li> <li> <div><strong>complete</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Function\">Function</a>()</div> <div>A function to call once the animation is complete, called once per matched element.</div> </li> </ul> </li> <li class=\"signature\"> <h4 class=\"name\"><a id=\"switchClass-removeClassName-addClassName-options\" href=\"#switchClass-removeClassName-addClassName-options\">.switchClass( removeClassName, addClassName [, options ] )</a></h4> <ul> <li> <div><strong>removeClassName</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>One or more class names (space separated) to be removed from the class attribute of each matched element.</div> </li> <li> <div><strong>addClassName</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>One or more class names (space separated) to be added to the class attribute of each matched element.</div> </li> <li> <div><strong>options</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>All animation settings. All properties are optional.</div> <ul> <li> <div> <strong>duration</strong> (default: <code>400</code>)</div> <div>Type: <a href=\"http://api.jquery.com/Types/#Number\">Number</a> or <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>A string or number determining how long the animation will run.</div> </li> <li> <div> <strong>easing</strong> (default: <code>swing</code>)</div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>A string indicating which <a href=\"easings\">easing</a> function to use for the transition.</div> </li> <li> <div><strong>complete</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Function\">Function</a>()</div> <div>A function to call once the animation is complete, called once per matched element.</div> </li> <li> <div> <strong>children</strong> (default: <code>false</code>)</div> <div>Type: <a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> </div> <div>Whether the animation should additionally be applied to all descendants of the matched elements. This feature should be used with caution as the cost of determining which descendants to animate can be very expensive, and grows linearly with the number of descendants.</div> </li> <li> <div> <strong>queue</strong> (default: <code>true</code>)</div> <div>Type: <a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> or <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>A Boolean indicating whether to place the animation in the effects queue. If false, the animation will begin immediately. <strong>As of jQuery 1.7</strong>, the queue option can also accept a string, in which case the animation is added to the queue represented by that string.</div> </li> </ul> </li> </ul> </li> </ul> <div class=\"longdesc\" id=\"entry-longdesc\"> <p>The <code>.switchClass()</code> method allows you to animate the transition of adding and removing classes at the same time.</p> <div> <p>Similar to native CSS transitions, jQuery UI's class animations provide a smooth transition from one state to another while allowing you to keep all the details about which styles to change in CSS and out of your JavaScript. All class animation methods, including <code>.switchClass()</code>, support custom durations and easings, as well as provide a callback for when the animation completes.</p> <p>Not all styles can be animated. For example, there is no way to animate a background image. Any styles that cannot be animated will be changed at the end of the animation.</p> </div> </div> <section class=\"entry-examples\" id=\"entry-examples\"><h2>Example:</h2>\n<div class=\"entry-example\" id=\"example-0\"> <p>Adds the class \"blue\" and removes the class \"big\" from the matched elements.</p> <pre class=\"syntaxhighlighter xml\">&lt;!doctype html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"utf-8\"&gt;\n  &lt;title&gt;switchClass demo&lt;/title&gt;\n  &lt;link rel=\"stylesheet\" href=\"//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css\"&gt;\n  &lt;style&gt;\n  div {\n    width: 100px;\n    height: 100px;\n    background-color: #ccc;\n  }\n  .big {\n    width: 200px;\n    height: 200px;\n  }\n  .blue {\n    background-color: #00f;\n  }\n  &lt;/style&gt;\n  &lt;script src=\"//code.jquery.com/jquery-1.10.2.js\"&gt;&lt;/script&gt;\n  &lt;script src=\"//code.jquery.com/ui/1.11.4/jquery-ui.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n&lt;div class=\"big\"&gt;&lt;/div&gt;\n \n&lt;script&gt;\n$( \"div\" ).click(function() {\n  $( this ).switchClass( \"big\", \"blue\", 1000, \"easeInOutQuad\" );\n});\n&lt;/script&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;</pre> <h4>Demo:</h4>  </div></section> </div></article> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; The jQuery Foundation and other contributors<br>Licensed under the MIT License.<br>\n    <a href=\"https://api.jqueryui.com/switchClass\" class=\"_attribution-link\">https://api.jqueryui.com/switchClass</a>\n  </p>\n</div>\n","toggleclass":"<h1 class=\"entry-title\">.toggleClass()</h1> <div class=\"entry-content\"> <article id=\"toggleClass1\" class=\"entry method\"><h2 class=\"section-title\"> <span class=\"name\">.toggleClass( className [, switch ] [, duration ] [, easing ] [, complete ] )</span><span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a></span> </h2> <div class=\"entry-wrapper\"> <p class=\"desc\"><strong>Description: </strong>Add or remove one or more classes from each element in the set of matched elements, depending on either the class's presence or the value of the switch argument, while animating all style changes.</p> <ul class=\"signatures\"> <li class=\"signature\"> <h4 class=\"name\"><a id=\"toggleClass-className-switch-duration-easing-complete\" href=\"#toggleClass-className-switch-duration-easing-complete\">.toggleClass( className [, switch ] [, duration ] [, easing ] [, complete ] )</a></h4> <ul> <li> <div><strong>className</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>One or more class names (space separated) to be toggled for each element in the matched set.</div> </li> <li> <div><strong>switch</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> </div> <div>A boolean value to determine whether the class should be added or removed.</div> </li> <li> <div> <strong>duration</strong> (default: <code>400</code>)</div> <div>Type: <a href=\"http://api.jquery.com/Types/#Number\">Number</a> or <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>A string or number determining how long the animation will run.</div> </li> <li> <div> <strong>easing</strong> (default: <code>swing</code>)</div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>A string indicating which <a href=\"easings\">easing</a> function to use for the transition.</div> </li> <li> <div><strong>complete</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Function\">Function</a>()</div> <div>A function to call once the animation is complete, called once per matched element.</div> </li> </ul> </li> <li class=\"signature\"> <h4 class=\"name\"><a id=\"toggleClass-className-switch-options\" href=\"#toggleClass-className-switch-options\">.toggleClass( className [, switch ] [, options ] )</a></h4> <ul> <li> <div><strong>className</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>One or more class names (space separated) to be toggled for each element in the matched set.</div> </li> <li> <div><strong>switch</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> </div> <div>A boolean value to determine whether the class should be added or removed.</div> </li> <li> <div><strong>options</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>All animation settings. All properties are optional.</div> <ul> <li> <div> <strong>duration</strong> (default: <code>400</code>)</div> <div>Type: <a href=\"http://api.jquery.com/Types/#Number\">Number</a> or <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>A string or number determining how long the animation will run.</div> </li> <li> <div> <strong>easing</strong> (default: <code>swing</code>)</div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>A string indicating which <a href=\"easings\">easing</a> function to use for the transition.</div> </li> <li> <div><strong>complete</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Function\">Function</a>()</div> <div>A function to call once the animation is complete, called once per matched element.</div> </li> <li> <div> <strong>children</strong> (default: <code>false</code>)</div> <div>Type: <a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> </div> <div>Whether the animation should additionally be applied to all descendants of the matched elements. This feature should be used with caution as the cost of determining which descendants to animate can be very expensive, and grows linearly with the number of descendants.</div> </li> <li> <div> <strong>queue</strong> (default: <code>true</code>)</div> <div>Type: <a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> or <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>A Boolean indicating whether to place the animation in the effects queue. If false, the animation will begin immediately. <strong>As of jQuery 1.7</strong>, the queue option can also accept a string, in which case the animation is added to the queue represented by that string.</div> </li> </ul> </li> </ul> </li> </ul> <div class=\"longdesc\" id=\"entry-longdesc\"> <div> <p>Similar to native CSS transitions, jQuery UI's class animations provide a smooth transition from one state to another while allowing you to keep all the details about which styles to change in CSS and out of your JavaScript. All class animation methods, including <code>.toggleClass()</code>, support custom durations and easings, as well as provide a callback for when the animation completes.</p> <p>Not all styles can be animated. For example, there is no way to animate a background image. Any styles that cannot be animated will be changed at the end of the animation.</p> </div> <p>This plugin extends jQuery's built-in <a href=\"https://api.jquery.com/toggleClass/\"><code>.toggleClass()</code></a> method. If jQuery UI is not loaded, calling the <code>.toggleClass()</code> method may not fail directly, as the method still exists. However, the expected behavior will not occur.</p> </div> <section class=\"entry-examples\" id=\"entry-examples\"><h2>Example:</h2>\n<div class=\"entry-example\" id=\"example-0\"> <p>Toggles the class \"big-blue\" for the matched elements.</p> <pre class=\"syntaxhighlighter xml\">&lt;!doctype html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"utf-8\"&gt;\n  &lt;title&gt;toggleClass demo&lt;/title&gt;\n  &lt;link rel=\"stylesheet\" href=\"//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css\"&gt;\n  &lt;style&gt;\n  div {\n    width: 100px;\n    height: 100px;\n    background-color: #ccc;\n  }\n  .big-blue {\n    width: 200px;\n    height: 200px;\n    background-color: #00f;\n  }\n  &lt;/style&gt;\n  &lt;script src=\"//code.jquery.com/jquery-1.10.2.js\"&gt;&lt;/script&gt;\n  &lt;script src=\"//code.jquery.com/ui/1.11.4/jquery-ui.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n&lt;div&gt;&lt;/div&gt;\n \n&lt;script&gt;\n$( \"div\" ).click(function() {\n  $( this ).toggleClass( \"big-blue\", 1000, \"easeOutSine\" );\n});\n&lt;/script&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;</pre> <h4>Demo:</h4>  </div></section> </div></article> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; The jQuery Foundation and other contributors<br>Licensed under the MIT License.<br>\n    <a href=\"https://api.jqueryui.com/toggleClass\" class=\"_attribution-link\">https://api.jqueryui.com/toggleClass</a>\n  </p>\n</div>\n","tooltip":"<h1 class=\"entry-title\">Tooltip Widget</h1> <div class=\"entry-content\"> <article id=\"tooltip1\" class=\"entry widget\"><h2 class=\"section-title\"> <span>Tooltip Widget</span><span class=\"version-details\">version added: 1.9</span> </h2> <div class=\"entry-wrapper\"> <p class=\"desc\"><strong>Description: </strong>Customizable, themeable tooltips, replacing native tooltips.</p> <section id=\"quick-nav\"><h2>QuickNav<a href=\"#entry-examples\">Examples</a> </h2>\n<div class=\"quick-nav-section\"> <h3>Options</h3> <div><a href=\"#option-content\">content</a></div> <div><a href=\"#option-disabled\">disabled</a></div> <div><a href=\"#option-hide\">hide</a></div> <div><a href=\"#option-items\">items</a></div> <div><a href=\"#option-position\">position</a></div> <div><a href=\"#option-show\">show</a></div> <div><a href=\"#option-tooltipClass\">tooltipClass</a></div> <div><a href=\"#option-track\">track</a></div> </div> <div class=\"quick-nav-section\"> <h3>Methods</h3> <div><a href=\"#method-close\">close</a></div> <div><a href=\"#method-destroy\">destroy</a></div> <div><a href=\"#method-disable\">disable</a></div> <div><a href=\"#method-enable\">enable</a></div> <div><a href=\"#method-instance\">instance</a></div> <div><a href=\"#method-open\">open</a></div> <div><a href=\"#method-option\">option</a></div> <div><a href=\"#method-widget\">widget</a></div> </div> <div class=\"quick-nav-section\"> <h3>Events</h3> <div><a href=\"#event-close\">close</a></div> <div><a href=\"#event-create\">create</a></div> <div><a href=\"#event-open\">open</a></div> </div></section><div class=\"longdesc\" id=\"entry-longdesc\"> <p>Tooltip replaces native tooltips, making them themeable as well as allowing various customizations:</p> <ul> <li>Display other content than just the title, like inline footnotes or extra content retrieved via Ajax.</li> <li>Customize the positioning, e.g., to center the tooltip above elements.</li> <li>Add extra styling to customize the appearance, for warning or error fields.</li> </ul> <p>A fade animation is used by default to show and hide the tooltip, making the appearance a bit more organic, compared to just toggling the visibility. This can be customized with the <a href=\"#option-show\"><code>show</code></a> and <a href=\"#option-hide\"><code>hide</code></a> options.</p> <p>The <a href=\"#option-items\"><code>items</code></a> and <a href=\"#option-content\"><code>content</code></a> options need to stay in-sync. If you change one of them, you need to change the other.</p> <p>In general, disabled elements do not trigger any DOM events. Therefore, it is not possible to properly control tooltips for disabled elements, since we need to listen to events to determine when to show and hide the tooltip. As a result, jQuery UI does not guarantee any level of support for tooltips attached to disabled elements. Unfortunately, this means that if you require tooltips on disabled elements, you may end up with a mixture of native tooltips and jQuery UI tooltips.</p> <h3>Keyboard interaction</h3> <p>When the tooltip is open and the corresponding item has focus, the following key commands are available:</p> <ul> <li> <code>ESCAPE</code>: Close the tooltip.</li> </ul> <div> <h3 id=\"theming\">Theming</h3> <p>The tooltip widget uses the <a href=\"theming/css-framework\">jQuery UI CSS framework</a> to style its look and feel. If tooltip specific styling is needed, the following CSS class names can be used:</p> </div> <ul> <li> <code>ui-tooltip</code>: The outer container for the tooltip. <ul> <li> <code>ui-tooltip-content</code>: The content of the tooltip.</li> </ul> </li> </ul> <h3>Dependencies</h3> <ul> <li><a href=\"https://api.jqueryui.com/category/ui-core/\">UI Core</a></li> <li><a href=\"jquery.widget\">Widget Factory</a></li> <li><a href=\"position\">Position</a></li> <li> <a href=\"https://api.jqueryui.com/category/effects-core/\">Effects Core</a> (optional; for use with the <a href=\"#option-show\"><code>show</code></a> and <a href=\"#option-hide\"><code>hide</code></a> options)</li> </ul> </div> <h3>Additional Notes:</h3> <div class=\"longdesc\"><ul><li> This widget requires some functional CSS, otherwise it won't work. If you build a custom theme, use the widget's specific CSS file as a starting point. </li></ul></div> <section id=\"options\"><h2>Options</h2>\n<div id=\"option-content\" class=\"api-item first-item\"> <h3>content </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Function\">Function</a>() or <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div class=\"default\"> <strong>Default: </strong><code>function returning the title attribute</code> </div> <div> <p>The content of the tooltip.</p> <p><em>When changing this option, you likely need to also change the <a href=\"#option-items\"><code>items</code></a> option.</em></p> </div> <strong>Multiple types supported:</strong><ul> <li> <strong>Function</strong>: A callback which can either return the content directly, or call the first argument, passing in the content, e.g., for Ajax content.</li> <li> <strong>String</strong>: A string of HTML to use for the tooltip content.</li> </ul> <strong>Code examples:</strong><p>Initialize the tooltip with the <code>content</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).tooltip({\n  content: \"Awesome title!\"\n});</pre> <p>Get or set the <code>content</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar content = $( \".selector\" ).tooltip( \"option\", \"content\" );\n \n// Setter\n$( \".selector\" ).tooltip( \"option\", \"content\", \"Awesome title!\" );</pre> </div> <div id=\"option-disabled\" class=\"api-item\"> <h3>disabled </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> </div> <div class=\"default\"> <strong>Default: </strong><code>false</code> </div> <div>Disables the tooltip if set to <code>true</code>.</div> <strong>Code examples:</strong><p>Initialize the tooltip with the <code>disabled</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).tooltip({\n  disabled: true\n});</pre> <p>Get or set the <code>disabled</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar disabled = $( \".selector\" ).tooltip( \"option\", \"disabled\" );\n \n// Setter\n$( \".selector\" ).tooltip( \"option\", \"disabled\", true );</pre> </div> <div id=\"option-hide\" class=\"api-item\"> <h3>hide </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> or <a href=\"http://api.jquery.com/Types/#Number\">Number</a> or <a href=\"http://api.jquery.com/Types/#String\">String</a> or <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div class=\"default\"> <strong>Default: </strong><code>true</code> </div> <div>If and how to animate the hiding of the tooltip.</div> <strong>Multiple types supported:</strong><ul> <li> <strong>Boolean</strong>: When set to <code>false</code>, no animation will be used and the tooltip will be hidden immediately. When set to <code>true</code>, the tooltip will fade out with the default duration and the default easing. </li> <li> <strong>Number</strong>: The tooltip will fade out with the specified duration and the default easing. </li> <li> <strong>String</strong>: The tooltip will be hidden using the specified effect. The value can either be the name of a built-in jQuery animation method, such as <code>\"slideUp\"</code>, or the name of a <a href=\"https://api.jqueryui.com/category/effects/\">jQuery UI effect</a>, such as <code>\"fold\"</code>. In either case the effect will be used with the default duration and the default easing. </li> <li> <strong>Object</strong>: If the value is an object, then <code>effect</code>, <code>delay</code>, <code>duration</code>, and <code>easing</code> properties may be provided. If the <code>effect</code> property contains the name of a jQuery method, then that method will be used; otherwise it is assumed to be the name of a jQuery UI effect. When using a jQuery UI effect that supports additional settings, you may include those settings in the object and they will be passed to the effect. If <code>duration</code> or <code>easing</code> is omitted, then the default values will be used. If <code>effect</code> is omitted, then <code>\"fadeOut\"</code> will be used. If <code>delay</code> is omitted, then no delay is used.</li> </ul> <strong>Code examples:</strong><p>Initialize the tooltip with the <code>hide</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).tooltip({\n  hide: { effect: \"explode\", duration: 1000 }\n});</pre> <p>Get or set the <code>hide</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar hide = $( \".selector\" ).tooltip( \"option\", \"hide\" );\n \n// Setter\n$( \".selector\" ).tooltip( \"option\", \"hide\", { effect: \"explode\", duration: 1000 } );</pre> </div> <div id=\"option-items\" class=\"api-item\"> <h3>items </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Selector\">Selector</a> </div> <div class=\"default\"> <strong>Default: </strong><code>[title]</code> </div> <div> <p>A selector indicating which items should show tooltips. Customize if you're using something other than the title attribute for the tooltip content, or if you need a different selector for event delegation.</p> <p><em>When changing this option, you likely need to also change the <a href=\"#option-content\"><code>content</code></a> option.</em></p> </div> <strong>Code examples:</strong><p>Initialize the tooltip with the <code>items</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).tooltip({\n  items: \"img[alt]\"\n});</pre> <p>Get or set the <code>items</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar items = $( \".selector\" ).tooltip( \"option\", \"items\" );\n \n// Setter\n$( \".selector\" ).tooltip( \"option\", \"items\", \"img[alt]\" );</pre> </div> <div id=\"option-position\" class=\"api-item\"> <h3>position </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div class=\"default\"> <strong>Default: </strong><code>{ my: \"left top+15\", at: \"left bottom\", collision: \"flipfit\" }</code> </div> <div> <p>Identifies the position of the tooltip in relation to the associated target element. The <code>of</code> option defaults to the target element, but you can specify another element to position against. You can refer to the <a href=\"position\">jQuery UI Position</a> utility for more details about the various options.</p> </div> <strong>Code examples:</strong><p>Initialize the tooltip with the <code>position</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).tooltip({\n  position: { my: \"left+15 center\", at: \"right center\" }\n});</pre> <p>Get or set the <code>position</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar position = $( \".selector\" ).tooltip( \"option\", \"position\" );\n \n// Setter\n$( \".selector\" ).tooltip( \"option\", \"position\", { my: \"left+15 center\", at: \"right center\" } );</pre> </div> <div id=\"option-show\" class=\"api-item\"> <h3>show </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> or <a href=\"http://api.jquery.com/Types/#Number\">Number</a> or <a href=\"http://api.jquery.com/Types/#String\">String</a> or <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div class=\"default\"> <strong>Default: </strong><code>true</code> </div> <div>If and how to animate the showing of the tooltip.</div> <strong>Multiple types supported:</strong><ul> <li> <strong>Boolean</strong>: When set to <code>false</code>, no animation will be used and the tooltip will be shown immediately. When set to <code>true</code>, the tooltip will fade in with the default duration and the default easing. </li> <li> <strong>Number</strong>: The tooltip will fade in with the specified duration and the default easing. </li> <li> <strong>String</strong>: The tooltip will be shown using the specified effect. The value can either be the name of a built-in jQuery animation method, such as <code>\"slideDown\"</code>, or the name of a <a href=\"https://api.jqueryui.com/category/effects/\">jQuery UI effect</a>, such as <code>\"fold\"</code>. In either case the effect will be used with the default duration and the default easing. </li> <li> <strong>Object</strong>: If the value is an object, then <code>effect</code>, <code>delay</code>, <code>duration</code>, and <code>easing</code> properties may be provided. If the <code>effect</code> property contains the name of a jQuery method, then that method will be used; otherwise it is assumed to be the name of a jQuery UI effect. When using a jQuery UI effect that supports additional settings, you may include those settings in the object and they will be passed to the effect. If <code>duration</code> or <code>easing</code> is omitted, then the default values will be used. If <code>effect</code> is omitted, then <code>\"fadeIn\"</code> will be used. If <code>delay</code> is omitted, then no delay is used.</li> </ul> <strong>Code examples:</strong><p>Initialize the tooltip with the <code>show</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).tooltip({\n  show: { effect: \"blind\", duration: 800 }\n});</pre> <p>Get or set the <code>show</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar show = $( \".selector\" ).tooltip( \"option\", \"show\" );\n \n// Setter\n$( \".selector\" ).tooltip( \"option\", \"show\", { effect: \"blind\", duration: 800 } );</pre> </div> <div id=\"option-tooltipClass\" class=\"api-item\"> <h3>tooltipClass </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div class=\"default\"> <strong>Default: </strong><code>null</code> </div> <div> A class to add to the widget, can be used to display various tooltip types, like warnings or errors. <p>This may get replaced by the <a href=\"http://bugs.jqueryui.com/ticket/7053\">classes option</a>.</p> </div> <strong>Code examples:</strong><p>Initialize the tooltip with the <code>tooltipClass</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).tooltip({\n  tooltipClass: \"custom-tooltip-styling\"\n});</pre> <p>Get or set the <code>tooltipClass</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar tooltipClass = $( \".selector\" ).tooltip( \"option\", \"tooltipClass\" );\n \n// Setter\n$( \".selector\" ).tooltip( \"option\", \"tooltipClass\", \"custom-tooltip-styling\" );</pre> </div> <div id=\"option-track\" class=\"api-item\"> <h3>track </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> </div> <div class=\"default\"> <strong>Default: </strong><code>false</code> </div> <div> Whether the tooltip should track (follow) the mouse. </div> <strong>Code examples:</strong><p>Initialize the tooltip with the <code>track</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).tooltip({\n  track: true\n});</pre> <p>Get or set the <code>track</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar track = $( \".selector\" ).tooltip( \"option\", \"track\" );\n \n// Setter\n$( \".selector\" ).tooltip( \"option\", \"track\", true );</pre> </div></section><section id=\"methods\"><h2>Methods</h2>\n<div id=\"method-close\"><div class=\"api-item first-item\"> <h3>close()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Closes a tooltip. This is only intended to be called for non-delegated tooltips. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the close method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).tooltip( \"close\" );</pre> </div> </div></div> <div id=\"method-destroy\"><div class=\"api-item\"> <h3>destroy()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Removes the tooltip functionality completely. This will return the element back to its pre-init state. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the destroy method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).tooltip( \"destroy\" );</pre> </div> </div></div> <div id=\"method-disable\"><div class=\"api-item\"> <h3>disable()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Disables the tooltip. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the disable method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).tooltip( \"disable\" );</pre> </div> </div></div> <div id=\"method-enable\"><div class=\"api-item\"> <h3>enable()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Enables the tooltip. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the enable method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).tooltip( \"enable\" );</pre> </div> </div></div> <div id=\"method-instance\"><div class=\"api-item\"> <h3>instance()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#Object\">Object</a></span> </h3> <div> <p>Retrieves the tooltip's instance object. If the element does not have an associated instance, <code>undefined</code> is returned.</p> <p>Unlike other widget methods, <code>instance()</code> is safe to call on any element after the tooltip plugin has loaded.</p> </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the instance method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).tooltip( \"instance\" );</pre> </div> </div></div> <div id=\"method-open\"><div class=\"api-item\"> <h3>open()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Programmatically open a tooltip. This is only intended to be called for non-delegated tooltips. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the open method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).tooltip( \"open\" );</pre> </div> </div></div> <div id=\"method-option\"> <div class=\"api-item\"> <h3>option( optionName )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#Object\">Object</a></span> </h3> <div> <p>Gets the value currently associated with the specified <code>optionName</code>.</p> <p><strong>Note:</strong> For options that have objects as their value, you can get the value of a specific key by using dot notation. For example, <code>\"foo.bar\"</code> would get the value of the <code>bar</code> property on the <code>foo</code> option.</p> </div> <ul><li> <div><strong>optionName</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>The name of the option to get.</div> </li></ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">var isDisabled = $( \".selector\" ).tooltip( \"option\", \"disabled\" );</pre> </div> </div> <div class=\"api-item\"> <h3>option()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#PlainObject\">PlainObject</a></span> </h3> <div>Gets an object containing key/value pairs representing the current tooltip options hash.</div> <ul><li><div class=\"null-signature\">This signature does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">var options = $( \".selector\" ).tooltip( \"option\" );</pre> </div> </div> <div class=\"api-item\"> <h3>option( optionName, value )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> <p>Sets the value of the tooltip option associated with the specified <code>optionName</code>.</p> <p><strong>Note:</strong> For options that have objects as their value, you can set the value of just one property by using dot notation for <code>optionName</code>. For example, <code>\"foo.bar\"</code> would update only the <code>bar</code> property of the <code>foo</code> option.</p> </div> <ul> <li> <div><strong>optionName</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>The name of the option to set.</div> </li> <li> <div><strong>value</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>A value to set for the option.</div> </li> </ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).tooltip( \"option\", \"disabled\", true );</pre> </div> </div> <div class=\"api-item\"> <h3>option( options )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div>Sets one or more options for the tooltip.</div> <ul><li> <div><strong>options</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>A map of option-value pairs to set.</div> </li></ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).tooltip( \"option\", { disabled: true } );</pre> </div> </div> </div> <div id=\"method-widget\"><div class=\"api-item\"> <h3>widget()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a></span> </h3> <div> Returns a <code>jQuery</code> object containing the original element. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the widget method:</p> <pre class=\"syntaxhighlighter javascript\">var widget = $( \".selector\" ).tooltip( \"widget\" );</pre> </div> </div></div></section><section id=\"events\"><h2>Events</h2>\n<div id=\"event-close\" class=\"api-item first-item\"> <h3>close( event, ui )<span class=\"returns\">Type: <code>tooltipclose</code></span> </h3> <div> Triggered when a tooltip is closed, triggered on <code>focusout</code> or <code>mouseleave</code>. </div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  <ul><li> <div><strong>tooltip</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The generated tooltip element.</div> </li></ul> </li> </ul> <div> <strong>Code examples:</strong><p>Initialize the tooltip with the close callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).tooltip({\n  close: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the tooltipclose event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"tooltipclose\", function( event, ui ) {} );</pre> </div> </div> <div id=\"event-create\" class=\"api-item\"> <h3>create( event, ui )<span class=\"returns\">Type: <code>tooltipcreate</code></span> </h3> <div> Triggered when the tooltip is created. </div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  </li> </ul> <p><em>Note: The <code>ui</code> object is empty but included for consistency with other events.</em></p> <div> <strong>Code examples:</strong><p>Initialize the tooltip with the create callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).tooltip({\n  create: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the tooltipcreate event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"tooltipcreate\", function( event, ui ) {} );</pre> </div> </div> <div id=\"event-open\" class=\"api-item\"> <h3>open( event, ui )<span class=\"returns\">Type: <code>tooltipopen</code></span> </h3> <div> Triggered when a tooltip is shown, triggered on <code>focusin</code> or <code>mouseover</code>. </div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  <ul><li> <div><strong>tooltip</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The generated tooltip element.</div> </li></ul> </li> </ul> <div> <strong>Code examples:</strong><p>Initialize the tooltip with the open callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).tooltip({\n  open: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the tooltipopen event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"tooltipopen\", function( event, ui ) {} );</pre> </div> </div></section><section class=\"entry-examples\" id=\"entry-examples\"><h2>Example:</h2>\n<div class=\"entry-example\" id=\"example-0\"> <p>Create a tooltip on the document, using event delegation for all elements with a title attribute.</p> <pre class=\"syntaxhighlighter xml\">&lt;!doctype html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"utf-8\"&gt;\n  &lt;title&gt;tooltip demo&lt;/title&gt;\n  &lt;link rel=\"stylesheet\" href=\"//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css\"&gt;\n  &lt;script src=\"//code.jquery.com/jquery-1.10.2.js\"&gt;&lt;/script&gt;\n  &lt;script src=\"//code.jquery.com/ui/1.11.4/jquery-ui.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n&lt;p&gt;\n  &lt;a href=\"#\" title=\"Anchor description\"&gt;Anchor text&lt;/a&gt;\n  &lt;input title=\"Input help\"&gt;\n&lt;/p&gt;\n&lt;script&gt;\n  $( document ).tooltip();\n&lt;/script&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;</pre> <h4>Demo:</h4>  </div></section> </div></article> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; The jQuery Foundation and other contributors<br>Licensed under the MIT License.<br>\n    <a href=\"https://api.jqueryui.com/tooltip\" class=\"_attribution-link\">https://api.jqueryui.com/tooltip</a>\n  </p>\n</div>\n","uniqueid":"<h1 class=\"entry-title\">.uniqueId()</h1> <div class=\"entry-content\"> <article id=\"uniqueId1\" class=\"entry method\"><h2 class=\"section-title\"> <span class=\"name\">.uniqueId()</span><span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a></span> </h2> <div class=\"entry-wrapper\"> <p class=\"desc\"><strong>Description: </strong>Generate and apply a unique id for the set of matched elements.</p> <ul class=\"signatures\"><li class=\"signature\"> <h4 class=\"name\"> <span class=\"version-details\">version added: 1.9</span><a id=\"uniqueId\" href=\"#uniqueId\">.uniqueId()</a> </h4> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> </li></ul> <div class=\"longdesc\" id=\"entry-longdesc\"> <p>Many widgets need to generate unique ids for elements. <code>.uniqueId()</code> will check if the element has an id, and if not, it will generate one and set it on the element. It is safe to call <code>.uniqueId()</code> on an element without checking if it already has an id. If/when the widget needs to clean up after itself, the <a href=\"removeuniqueid\"><code>.removeUniqueId()</code></a> method will remove the id from the element if it was added by <code>.uniqueId()</code> and leave the id alone if it was not. <code>.removeUniqueId()</code> is able to be smart about this because the generated ids have a prefix of <code>\"ui-id-\"</code>.</p> </div> </div></article> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; The jQuery Foundation and other contributors<br>Licensed under the MIT License.<br>\n    <a href=\"https://api.jqueryui.com/uniqueId\" class=\"_attribution-link\">https://api.jqueryui.com/uniqueId</a>\n  </p>\n</div>\n","zindex":"<h1 class=\"entry-title\">.zIndex()</h1> <div class=\"entry-content\"> <div class=\"toc\"> <h4><span>Contents:</span></h4> <ul class=\"toc-list\"> <li> <a href=\"#zIndex1\">.zIndex()</a><ul><li><a href=\"#zIndex\">.zIndex()</a></li></ul> </li> <li> <a href=\"#zIndex2\">.zIndex( zIndex )</a><ul><li><a href=\"#zIndex-zIndex\">.zIndex( zIndex )</a></li></ul> </li> </ul> </div>\n<article id=\"zIndex1\" class=\"entry method\"><h2 class=\"section-title\"> <span class=\"name\">.zIndex()</span><span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#Integer\">Integer</a></span> </h2> <div class=\"entry-wrapper\"> <p class=\"desc\"><strong>Description: </strong>Get the z-index for an element.</p> <ul class=\"signatures\"><li class=\"signature\"> <h4 class=\"name\"><a id=\"zIndex\" href=\"#zIndex\">.zIndex()</a></h4> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> </li></ul> <div class=\"longdesc\" id=\"entry-longdesc\"> <p>The <code>.zIndex()</code> method is useful for finding the z-index of an element, regardless of whether the z-index is set directly on the element or on one of its ancestors. In order to determine the z-index, this method will start at the specified element and walk up the DOM until it finds an element that is positioned and has a z-index set. If no such element is found, then the method will return a value of <code>0</code>.</p> <p>This method assumes that elements with nested z-indexes would not have a z-index of <code>0</code>. For example, given the following DOM the inner element will be treated as if it does not have a z-index set because it is impossible to differentiate between an explicit value of <code>0</code> and no value in Internet Explorer.</p> <pre class=\"syntaxhighlighter xml\">&lt;div style=\"z-index: -10;\"&gt;\n  &lt;div style=\"z-index: 0;\"&gt;&lt;/div&gt;\n&lt;/div&gt;</pre> </div> </div></article><article id=\"zIndex2\" class=\"entry method\"><h2 class=\"section-title\"> <span class=\"name\">.zIndex( zIndex )</span><span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a></span> </h2> <div class=\"entry-wrapper\"> <p class=\"desc\"><strong>Description: </strong>Set the z-index for an element.</p> <ul class=\"signatures\"><li class=\"signature\"> <h4 class=\"name\"><a id=\"zIndex-zIndex\" href=\"#zIndex-zIndex\">.zIndex( zIndex )</a></h4> <ul><li> <div><strong>zIndex</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Integer\">Integer</a> </div> <div>The z-index to set.</div> </li></ul> </li></ul> <div class=\"longdesc\" id=\"entry-longdesc-1\"> <p>This is equivalent to <code>.css( \"zIndex\", zIndex )</code>.</p> </div> </div></article> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; The jQuery Foundation and other contributors<br>Licensed under the MIT License.<br>\n    <a href=\"https://api.jqueryui.com/zIndex\" class=\"_attribution-link\">https://api.jqueryui.com/zIndex</a>\n  </p>\n</div>\n","toggle":"<h1 class=\"entry-title\">.toggle()</h1> <div class=\"entry-content\"> <article id=\"toggle1\" class=\"entry method\"><h2 class=\"section-title\"> <span class=\"name\">.toggle( effect [, options ] [, duration ] [, complete ] )</span><span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a></span> </h2> <div class=\"entry-wrapper\"> <p class=\"desc\"><strong>Description: </strong>Display or hide the matched elements, using custom effects.</p> <ul class=\"signatures\"> <li class=\"signature\"> <h4 class=\"name\"><a id=\"toggle-effect-options-duration-complete\" href=\"#toggle-effect-options-duration-complete\">.toggle( effect [, options ] [, duration ] [, complete ] )</a></h4> <ul> <li> <div><strong>effect</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>A string indicating which <a href=\"https://api.jqueryui.com/category/effects/\">effect</a> to use for the transition.</div> </li> <li> <div><strong>options</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>Effect-specific properties and <a href=\"easings\">easing</a>.</div> </li> <li> <div> <strong>duration</strong> (default: <code>400</code>)</div> <div>Type: <a href=\"http://api.jquery.com/Types/#Number\">Number</a> or <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>A string or number determining how long the animation will run.</div> </li> <li> <div><strong>complete</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Function\">Function</a>()</div> <div>A function to call once the animation is complete, called once per matched element.</div> </li> </ul> </li> <li class=\"signature\"> <h4 class=\"name\"><a id=\"toggle-options\" href=\"#toggle-options\">.toggle( options )</a></h4> <ul><li> <div><strong>options</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>All animation settings. The only required property is <code>effect</code>.</div> <ul> <li> <div><strong>effect</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>A string indicating which <a href=\"https://api.jqueryui.com/category/effects/\">effect</a> to use for the transition.</div> </li> <li> <div> <strong>easing</strong> (default: <code>\"swing\"</code>)</div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>A string indicating which <a href=\"easings\">easing</a> function to use for the transition.</div> </li> <li> <div> <strong>duration</strong> (default: <code>400</code>)</div> <div>Type: <a href=\"http://api.jquery.com/Types/#Number\">Number</a> or <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>A string or number determining how long the animation will run.</div> </li> <li> <div><strong>complete</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Function\">Function</a>()</div> <div>A function to call once the animation is complete, called once per matched element.</div> </li> <li> <div> <strong>queue</strong> (default: <code>true</code>)</div> <div>Type: <a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> or <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>A Boolean indicating whether to place the animation in the effects queue. If false, the animation will begin immediately. <strong>As of jQuery 1.7</strong>, the queue option can also accept a string, in which case the animation is added to the queue represented by that string.</div> </li> </ul> </li></ul> </li> </ul> <div class=\"longdesc\" id=\"entry-longdesc\"> <p>This plugin extends jQuery's built-in <a href=\"https://api.jquery.com/toggle/\"><code>.toggle()</code></a> method. If jQuery UI is not loaded, calling the <code>.toggle()</code> method may not fail directly, as the method still exists. However, the expected behavior will not occur.</p> </div> <section class=\"entry-examples\" id=\"entry-examples\"><h2>Example:</h2>\n<div class=\"entry-example\" id=\"example-0\"> <p>Toggle a div using the fold effect.</p> <pre class=\"syntaxhighlighter xml\">&lt;!doctype html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"utf-8\"&gt;\n  &lt;title&gt;toggle demo&lt;/title&gt;\n  &lt;link rel=\"stylesheet\" href=\"//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css\"&gt;\n  &lt;style&gt;\n  div {\n    width: 100px;\n    height: 100px;\n    background: #ccc;\n    border: 1px solid #000;\n  }\n  &lt;/style&gt;\n  &lt;script src=\"//code.jquery.com/jquery-1.10.2.js\"&gt;&lt;/script&gt;\n  &lt;script src=\"//code.jquery.com/ui/1.11.4/jquery-ui.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n&lt;button&gt;toggle the div&lt;/button&gt;\n&lt;div&gt;&lt;/div&gt;\n \n&lt;script&gt;\n$( \"button\" ).click(function() {\n  $( \"div\" ).toggle( \"fold\", 1000 );\n});\n&lt;/script&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;</pre> <h4>Demo:</h4>  </div></section> </div></article> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; The jQuery Foundation and other contributors<br>Licensed under the MIT License.<br>\n    <a href=\"https://api.jqueryui.com/toggle\" class=\"_attribution-link\">https://api.jqueryui.com/toggle</a>\n  </p>\n</div>\n","transfer-effect":"<h1 class=\"entry-title\">Transfer Effect</h1> <div class=\"entry-content\"> <article id=\"transfer1\" class=\"entry effect\"><h2 class=\"section-title\"><span>Transfer Effect</span></h2> <div class=\"entry-wrapper\"> <p class=\"desc\"><strong>Description: </strong>Transfers the outline of an element to another element</p> <ul class=\"signatures\"><li class=\"signature\"> <h4 class=\"name\">transfer</h4> <ul> <li> <div><strong>className</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>argumental class name the transfer element will receive.</div> </li> <li> <div><strong>to</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>jQuery selector, the element to transfer to.</div> </li> </ul> </li></ul> <div class=\"longdesc\" id=\"entry-longdesc\"> <p>Very useful when trying to visualize interaction between two elements.</p> <p>The transfer element itself has the class <code>ui-effects-transfer</code>, and needs to be styled by you, for example by adding a background or border.</p> </div> <section class=\"entry-examples\" id=\"entry-examples\"><h2>Example:</h2>\n<div class=\"entry-example\" id=\"example-0\"> <p>Clicking on the green element transfers to the other.</p> <pre class=\"syntaxhighlighter xml\">&lt;!doctype html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"utf-8\"&gt;\n  &lt;title&gt;transfer demo&lt;/title&gt;\n  &lt;link rel=\"stylesheet\" href=\"//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css\"&gt;\n  &lt;style&gt;\n  div.green {\n    width: 100px;\n    height: 80px;\n    background: green;\n    border: 1px solid black;\n    position: relative;\n  }\n  div.red {\n    margin-top: 10px;\n    width: 50px;\n    height: 30px;\n    background: red;\n    border: 1px solid black;\n    position: relative;\n  }\n  .ui-effects-transfer {\n    border: 1px dotted black;\n  }\n  &lt;/style&gt;\n  &lt;script src=\"//code.jquery.com/jquery-1.10.2.js\"&gt;&lt;/script&gt;\n  &lt;script src=\"//code.jquery.com/ui/1.11.4/jquery-ui.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n&lt;div class=\"green\"&gt;&lt;/div&gt;\n&lt;div class=\"red\"&gt;&lt;/div&gt;\n \n&lt;script&gt;\n$( \"div\" ).click(function() {\n  var i = 1 - $( \"div\" ).index( this );\n  $( this ).effect( \"transfer\", { to: $( \"div\" ).eq( i ) }, 1000 );\n});\n&lt;/script&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;</pre> <h4>Demo:</h4>  </div></section> </div></article> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; The jQuery Foundation and other contributors<br>Licensed under the MIT License.<br>\n    <a href=\"https://api.jqueryui.com/transfer-effect\" class=\"_attribution-link\">https://api.jqueryui.com/transfer-effect</a>\n  </p>\n</div>\n","tabs":"<h1 class=\"entry-title\">Tabs Widget</h1> <div class=\"entry-content\"> <article id=\"tabs1\" class=\"entry widget\"><h2 class=\"section-title\"> <span>Tabs Widget</span><span class=\"version-details\">version added: 1.0</span> </h2> <div class=\"entry-wrapper\"> <p class=\"desc\"><strong>Description: </strong>A single content area with multiple panels, each associated with a header in a list.</p> <section id=\"quick-nav\"><h2>QuickNav<a href=\"#entry-examples\">Examples</a> </h2>\n<div class=\"quick-nav-section\"> <h3>Options</h3> <div><a href=\"#option-active\">active</a></div> <div><a href=\"#option-collapsible\">collapsible</a></div> <div><a href=\"#option-disabled\">disabled</a></div> <div><a href=\"#option-event\">event</a></div> <div><a href=\"#option-heightStyle\">heightStyle</a></div> <div><a href=\"#option-hide\">hide</a></div> <div><a href=\"#option-show\">show</a></div> </div> <div class=\"quick-nav-section\"> <h3>Methods</h3> <div><a href=\"#method-destroy\">destroy</a></div> <div><a href=\"#method-disable\">disable</a></div> <div><a href=\"#method-enable\">enable</a></div> <div><a href=\"#method-instance\">instance</a></div> <div><a href=\"#method-load\">load</a></div> <div><a href=\"#method-option\">option</a></div> <div><a href=\"#method-refresh\">refresh</a></div> <div><a href=\"#method-widget\">widget</a></div> <br><h3>Extension Points</h3> <div><a href=\"#method-_getList\">_getList</a></div> </div> <div class=\"quick-nav-section\"> <h3>Events</h3> <div><a href=\"#event-activate\">activate</a></div> <div><a href=\"#event-beforeActivate\">beforeActivate</a></div> <div><a href=\"#event-beforeLoad\">beforeLoad</a></div> <div><a href=\"#event-create\">create</a></div> <div><a href=\"#event-load\">load</a></div> </div></section><div class=\"longdesc\" id=\"entry-longdesc\"> <p>Tabs are generally used to break content into multiple sections that can be swapped to save space, much like an accordion.</p> <p>Tabs have a particular set of markup that must be used in order for them to work properly:</p> <ul> <li>The tabs themselves must be in either an ordered (<code>&lt;ol&gt;</code>) or unordered (<code>&lt;ul&gt;</code>) list</li> <li>Each tab \"title\" must be inside of a list item (<code>&lt;li&gt;</code>) and wrapped by an anchor (<code>&lt;a&gt;</code>) with an <code>href</code> attribute</li> <li>Each tab panel may be any valid element but it must have an id which corresponds to the hash in the anchor of the associated tab.</li> </ul> <p>The content for each tab panel can be defined in-page or can be loaded via Ajax; both are handled automatically based on the <code>href</code> of the anchor associated with the tab. By default tabs are activated on click, but the events can be changed to hover via the <a href=\"#option-event\"><code>event</code></a> option.</p> <p>Below is some sample markup:</p> <pre class=\"syntaxhighlighter xml\">&lt;div id=\"tabs\"&gt;\n  &lt;ul&gt;\n    &lt;li&gt;&lt;a href=\"#fragment-1\"&gt;One&lt;/a&gt;&lt;/li&gt;\n    &lt;li&gt;&lt;a href=\"#fragment-2\"&gt;Two&lt;/a&gt;&lt;/li&gt;\n    &lt;li&gt;&lt;a href=\"#fragment-3\"&gt;Three&lt;/a&gt;&lt;/li&gt;\n  &lt;/ul&gt;\n  &lt;div id=\"fragment-1\"&gt;\n    Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat.\n  &lt;/div&gt;\n  &lt;div id=\"fragment-2\"&gt;\n    Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat.\n  &lt;/div&gt;\n  &lt;div id=\"fragment-3\"&gt;\n    Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat.\n  &lt;/div&gt;\n&lt;/div&gt;</pre> <h3>Keyboard interaction</h3> <p>When focus is on a tab, the following key commands are available:</p> <ul> <li> <code>UP</code>/<code>LEFT</code>: Move focus to the previous tab. If on first tab, moves focus to last tab. Activate focused tab after a short delay.</li> <li> <code>DOWN</code>/<code>RIGHT</code>: Move focus to the next tab. If on last tab, moves focus to first tab. Activate focused tab after a short delay.</li> <li> <code>CTRL</code> + <code>UP</code>/<code>LEFT</code>: Move focus to the previous tab. If on first tab, moves focus to last tab. The focused tab must be manually activated.</li> <li> <code>CTRL</code> + <code>DOWN</code>/<code>RIGHT</code>: Move focus to the next tab. If on last tab, moves focus to first tab. The focused tab must be manually activated.</li> <li> <code>HOME</code>: Move focus to the first tab. Activate focused tab after a short delay.</li> <li> <code>END</code>: Move focus to the last tab. Activate focused tab after a short delay.</li> <li> <code>CTRL</code> + <code>HOME</code>: Move focus to the first tab. The focused tab must be manually activated.</li> <li> <code>CTRL</code> + <code>END</code>: Move focus to the last tab. The focused tab must be manually activated.</li> <li> <code>SPACE</code>: Activate panel associated with focused tab.</li> <li> <code>ENTER</code>: Activate or toggle panel associated with focused tab.</li> <li> <code>ALT</code>/<code>OPTION</code> + <code>PAGE UP</code>: Move focus to the previous tab and immediately activate.</li> <li> <code>ALT</code>/<code>OPTION</code> + <code>PAGE DOWN</code>: Move focus to the next tab and immediately activate.</li> </ul> <p>When focus is in a panel, the following key commands are available:</p> <ul> <li> <code>CTRL</code> + <code>UP</code>: Move focus to associated tab.</li> <li> <code>ALT</code>/<code>OPTION</code> + <code>PAGE UP</code>: Move focus to the previous tab and immediately activate.</li> <li> <code>ALT</code>/<code>OPTION</code> + <code>PAGE DOWN</code>: Move focus to the next tab and immediately activate.</li> </ul> <div> <h3 id=\"theming\">Theming</h3> <p>The tabs widget uses the <a href=\"theming/css-framework\">jQuery UI CSS framework</a> to style its look and feel. If tabs specific styling is needed, the following CSS class names can be used:</p> </div> <ul> <li> <code>ui-tabs</code>: The outer container of the tabs. This element will additionally have a class of <code>ui-tabs-collapsible</code> when the <a href=\"#option-collapsible\"><code>collapsible</code></a> option is set. <ul> <li> <code>ui-tabs-nav</code>: The list of tabs. <ul> <li>The active list item in the nav will have a <code>ui-tabs-active</code> class. Any list item whose associated content is loading via an Ajax call will have a <code>ui-tabs-loading</code> class. <ul> <li> <code>ui-tabs-anchor</code>: The anchors used to switch panels.</li> </ul> </li> </ul> </li> <li> <code>ui-tabs-panel</code>: The panels associated with the tabs. Only the panel whose corresponding tab is active will be visible.</li> </ul> </li> </ul> <h3>Dependencies</h3> <ul> <li><a href=\"https://api.jqueryui.com/category/ui-core/\">UI Core</a></li> <li><a href=\"jquery.widget\">Widget Factory</a></li> <li> <a href=\"https://api.jqueryui.com/category/effects-core/\">Effects Core</a> (optional; for use with the <a href=\"#option-show\"><code>show</code></a> and <a href=\"#option-hide\"><code>hide</code></a> options)</li> </ul> </div> <h3>Additional Notes:</h3> <div class=\"longdesc\"><ul><li> This widget requires some functional CSS, otherwise it won't work. If you build a custom theme, use the widget's specific CSS file as a starting point. </li></ul></div> <section id=\"options\"><h2>Options</h2>\n<div id=\"option-active\" class=\"api-item first-item\"> <h3>active </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> or <a href=\"http://api.jquery.com/Types/#Integer\">Integer</a> </div> <div class=\"default\"> <strong>Default: </strong><code>0</code> </div> <div> Which panel is currently open. </div> <strong>Multiple types supported:</strong><ul> <li> <strong>Boolean</strong>: Setting <code>active</code> to <code>false</code> will collapse all panels. This requires the <a href=\"#option-collapsible\"><code>collapsible</code></a> option to be <code>true</code>.</li> <li> <strong>Integer</strong>: The zero-based index of the panel that is active (open). A negative value selects panels going backward from the last panel.</li> </ul> <strong>Code examples:</strong><p>Initialize the tabs with the <code>active</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).tabs({\n  active: 1\n});</pre> <p>Get or set the <code>active</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar active = $( \".selector\" ).tabs( \"option\", \"active\" );\n \n// Setter\n$( \".selector\" ).tabs( \"option\", \"active\", 1 );</pre> </div> <div id=\"option-collapsible\" class=\"api-item\"> <h3>collapsible </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> </div> <div class=\"default\"> <strong>Default: </strong><code>false</code> </div> <div>When set to <code>true</code>, the active panel can be closed.</div> <strong>Code examples:</strong><p>Initialize the tabs with the <code>collapsible</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).tabs({\n  collapsible: true\n});</pre> <p>Get or set the <code>collapsible</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar collapsible = $( \".selector\" ).tabs( \"option\", \"collapsible\" );\n \n// Setter\n$( \".selector\" ).tabs( \"option\", \"collapsible\", true );</pre> </div> <div id=\"option-disabled\" class=\"api-item\"> <h3>disabled </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> or <a href=\"http://api.jquery.com/Types/#Array\">Array</a> </div> <div class=\"default\"> <strong>Default: </strong><code>false</code> </div> <div>Which tabs are disabled.</div> <strong>Multiple types supported:</strong><ul> <li> <strong>Boolean</strong>: Enable or disable all tabs.</li> <li> <strong>Array</strong>: An array containing the zero-based indexes of the tabs that should be disabled, e.g., <code>[ 0, 2 ]</code> would disable the first and third tab.</li> </ul> <strong>Code examples:</strong><p>Initialize the tabs with the <code>disabled</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).tabs({\n  disabled: [ 0, 2 ]\n});</pre> <p>Get or set the <code>disabled</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar disabled = $( \".selector\" ).tabs( \"option\", \"disabled\" );\n \n// Setter\n$( \".selector\" ).tabs( \"option\", \"disabled\", [ 0, 2 ] );</pre> </div> <div id=\"option-event\" class=\"api-item\"> <h3>event </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div class=\"default\"> <strong>Default: </strong><code>\"click\"</code> </div> <div>The type of event that the tabs should react to in order to activate the tab. To activate on hover, use <code>\"mouseover\"</code>.</div> <strong>Code examples:</strong><p>Initialize the tabs with the <code>event</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).tabs({\n  event: \"mouseover\"\n});</pre> <p>Get or set the <code>event</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar event = $( \".selector\" ).tabs( \"option\", \"event\" );\n \n// Setter\n$( \".selector\" ).tabs( \"option\", \"event\", \"mouseover\" );</pre> </div> <div id=\"option-heightStyle\" class=\"api-item\"> <h3>heightStyle </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div class=\"default\"> <strong>Default: </strong><code>\"content\"</code> </div> <div> Controls the height of the tabs widget and each panel. Possible values: <ul> <li> <code>\"auto\"</code>: All panels will be set to the height of the tallest panel.</li> <li> <code>\"fill\"</code>: Expand to the available height based on the tabs' parent height.</li> <li> <code>\"content\"</code>: Each panel will be only as tall as its content.</li> </ul> </div> <strong>Code examples:</strong><p>Initialize the tabs with the <code>heightStyle</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).tabs({\n  heightStyle: \"fill\"\n});</pre> <p>Get or set the <code>heightStyle</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar heightStyle = $( \".selector\" ).tabs( \"option\", \"heightStyle\" );\n \n// Setter\n$( \".selector\" ).tabs( \"option\", \"heightStyle\", \"fill\" );</pre> </div> <div id=\"option-hide\" class=\"api-item\"> <h3>hide </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> or <a href=\"http://api.jquery.com/Types/#Number\">Number</a> or <a href=\"http://api.jquery.com/Types/#String\">String</a> or <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div class=\"default\"> <strong>Default: </strong><code>null</code> </div> <div>If and how to animate the hiding of the panel.</div> <strong>Multiple types supported:</strong><ul> <li> <strong>Boolean</strong>: When set to <code>false</code>, no animation will be used and the panel will be hidden immediately. When set to <code>true</code>, the panel will fade out with the default duration and the default easing. </li> <li> <strong>Number</strong>: The panel will fade out with the specified duration and the default easing. </li> <li> <strong>String</strong>: The panel will be hidden using the specified effect. The value can either be the name of a built-in jQuery animation method, such as <code>\"slideUp\"</code>, or the name of a <a href=\"https://api.jqueryui.com/category/effects/\">jQuery UI effect</a>, such as <code>\"fold\"</code>. In either case the effect will be used with the default duration and the default easing. </li> <li> <strong>Object</strong>: If the value is an object, then <code>effect</code>, <code>delay</code>, <code>duration</code>, and <code>easing</code> properties may be provided. If the <code>effect</code> property contains the name of a jQuery method, then that method will be used; otherwise it is assumed to be the name of a jQuery UI effect. When using a jQuery UI effect that supports additional settings, you may include those settings in the object and they will be passed to the effect. If <code>duration</code> or <code>easing</code> is omitted, then the default values will be used. If <code>effect</code> is omitted, then <code>\"fadeOut\"</code> will be used. If <code>delay</code> is omitted, then no delay is used.</li> </ul> <strong>Code examples:</strong><p>Initialize the tabs with the <code>hide</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).tabs({\n  hide: { effect: \"explode\", duration: 1000 }\n});</pre> <p>Get or set the <code>hide</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar hide = $( \".selector\" ).tabs( \"option\", \"hide\" );\n \n// Setter\n$( \".selector\" ).tabs( \"option\", \"hide\", { effect: \"explode\", duration: 1000 } );</pre> </div> <div id=\"option-show\" class=\"api-item\"> <h3>show </h3> <div class=\"option-type\"> <strong>Type: </strong><a href=\"http://api.jquery.com/Types/#Boolean\">Boolean</a> or <a href=\"http://api.jquery.com/Types/#Number\">Number</a> or <a href=\"http://api.jquery.com/Types/#String\">String</a> or <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div class=\"default\"> <strong>Default: </strong><code>null</code> </div> <div>If and how to animate the showing of the panel.</div> <strong>Multiple types supported:</strong><ul> <li> <strong>Boolean</strong>: When set to <code>false</code>, no animation will be used and the panel will be shown immediately. When set to <code>true</code>, the panel will fade in with the default duration and the default easing. </li> <li> <strong>Number</strong>: The panel will fade in with the specified duration and the default easing. </li> <li> <strong>String</strong>: The panel will be shown using the specified effect. The value can either be the name of a built-in jQuery animation method, such as <code>\"slideDown\"</code>, or the name of a <a href=\"https://api.jqueryui.com/category/effects/\">jQuery UI effect</a>, such as <code>\"fold\"</code>. In either case the effect will be used with the default duration and the default easing. </li> <li> <strong>Object</strong>: If the value is an object, then <code>effect</code>, <code>delay</code>, <code>duration</code>, and <code>easing</code> properties may be provided. If the <code>effect</code> property contains the name of a jQuery method, then that method will be used; otherwise it is assumed to be the name of a jQuery UI effect. When using a jQuery UI effect that supports additional settings, you may include those settings in the object and they will be passed to the effect. If <code>duration</code> or <code>easing</code> is omitted, then the default values will be used. If <code>effect</code> is omitted, then <code>\"fadeIn\"</code> will be used. If <code>delay</code> is omitted, then no delay is used.</li> </ul> <strong>Code examples:</strong><p>Initialize the tabs with the <code>show</code> option specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).tabs({\n  show: { effect: \"blind\", duration: 800 }\n});</pre> <p>Get or set the <code>show</code> option, after initialization:</p> <pre class=\"syntaxhighlighter javascript\">// Getter\nvar show = $( \".selector\" ).tabs( \"option\", \"show\" );\n \n// Setter\n$( \".selector\" ).tabs( \"option\", \"show\", { effect: \"blind\", duration: 800 } );</pre> </div></section><section id=\"methods\"><h2>Methods</h2>\n<div id=\"method-destroy\"><div class=\"api-item first-item\"> <h3>destroy()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Removes the tabs functionality completely. This will return the element back to its pre-init state. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the destroy method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).tabs( \"destroy\" );</pre> </div> </div></div> <div id=\"method-disable\"> <div class=\"api-item\"> <h3>disable()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div>Disables all tabs.</div> <ul><li><div class=\"null-signature\">This signature does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).tabs( \"disable\" );</pre> </div> </div> <div class=\"api-item\"> <h3>disable( index )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Disables a tab. The selected tab cannot be disabled. To disable more than one tab at once, set the <a href=\"#option-disabled\"><code>disabled</code></a> option: <code>$( \"#tabs\" ).tabs( \"option\", \"disabled\", [ 1, 2, 3 ] )</code>. </div> <ul><li> <div><strong>index</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Number\">Number</a> </div> <div>The zero-based index of the tab to disable.</div> </li></ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).tabs( \"disable\", 1 );</pre> </div> </div> <div class=\"api-item\"> <h3>disable( href )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> Disables a tab. The selected tab cannot be disabled. </div> <ul><li> <div><strong>href</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>The <code>href</code> of the tab to disable.</div> </li></ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).tabs( \"disable\", \"#foo\" );</pre> </div> </div> </div> <div id=\"method-enable\"> <div class=\"api-item\"> <h3>enable()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div>Enables all tabs.</div> <ul><li><div class=\"null-signature\">This signature does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).tabs( \"enable\" );</pre> </div> </div> <div class=\"api-item\"> <h3>enable( index )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div>Enables a tab. To enable more than one tab at once reset the disabled property like: <code>$( \"#example\" ).tabs( \"option\", \"disabled\", [] );</code>.</div> <ul><li> <div><strong>index</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Number\">Number</a> </div> <div>The zero-based index of the tab to enable.</div> </li></ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).tabs( \"enable\", 1 );</pre> </div> </div> <div class=\"api-item\"> <h3>enable( href )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div>Enables a tab.</div> <ul><li> <div><strong>href</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>The <code>href</code> of the tab to enable.</div> </li></ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).tabs( \"enable\", \"#foo\" );</pre> </div> </div> </div> <div id=\"method-instance\"><div class=\"api-item\"> <h3>instance()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#Object\">Object</a></span> </h3> <div> <p>Retrieves the tabs's instance object. If the element does not have an associated instance, <code>undefined</code> is returned.</p> <p>Unlike other widget methods, <code>instance()</code> is safe to call on any element after the tabs plugin has loaded.</p> </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the instance method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).tabs( \"instance\" );</pre> </div> </div></div> <div id=\"method-load\"> <div class=\"api-item\"> <h3>load( index )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div>Loads the panel content of a remote tab.</div> <ul><li> <div><strong>index</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Number\">Number</a> </div> <div>The zero-based index of the tab to load.</div> </li></ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).tabs( \"load\", 1 );</pre> </div> </div> <div class=\"api-item\"> <h3>load( href )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div>Loads the panel content of a remote tab.</div> <ul><li> <div><strong>href</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>The <code>href</code> of the tab to load.</div> </li></ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).tabs( \"load\", \"#foo\" );</pre> </div> </div> </div> <div id=\"method-option\"> <div class=\"api-item\"> <h3>option( optionName )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#Object\">Object</a></span> </h3> <div> <p>Gets the value currently associated with the specified <code>optionName</code>.</p> <p><strong>Note:</strong> For options that have objects as their value, you can get the value of a specific key by using dot notation. For example, <code>\"foo.bar\"</code> would get the value of the <code>bar</code> property on the <code>foo</code> option.</p> </div> <ul><li> <div><strong>optionName</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>The name of the option to get.</div> </li></ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">var isDisabled = $( \".selector\" ).tabs( \"option\", \"disabled\" );</pre> </div> </div> <div class=\"api-item\"> <h3>option()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#PlainObject\">PlainObject</a></span> </h3> <div>Gets an object containing key/value pairs representing the current tabs options hash.</div> <ul><li><div class=\"null-signature\">This signature does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">var options = $( \".selector\" ).tabs( \"option\" );</pre> </div> </div> <div class=\"api-item\"> <h3>option( optionName, value )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div> <p>Sets the value of the tabs option associated with the specified <code>optionName</code>.</p> <p><strong>Note:</strong> For options that have objects as their value, you can set the value of just one property by using dot notation for <code>optionName</code>. For example, <code>\"foo.bar\"</code> would update only the <code>bar</code> property of the <code>foo</code> option.</p> </div> <ul> <li> <div><strong>optionName</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#String\">String</a> </div> <div>The name of the option to set.</div> </li> <li> <div><strong>value</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>A value to set for the option.</div> </li> </ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).tabs( \"option\", \"disabled\", true );</pre> </div> </div> <div class=\"api-item\"> <h3>option( options )<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div>Sets one or more options for the tabs.</div> <ul><li> <div><strong>options</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>A map of option-value pairs to set.</div> </li></ul> <div> <strong>Code examples:</strong><p>Invoke the method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).tabs( \"option\", { disabled: true } );</pre> </div> </div> </div> <div id=\"method-refresh\"><div class=\"api-item\"> <h3>refresh()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> (<a href=\"http://learn.jquery.com/jquery-ui/widget-factory/widget-method-invocation/\">plugin only</a>)</span> </h3> <div>Process any tabs that were added or removed directly in the DOM and recompute the height of the tab panels. Results depend on the content and the <a href=\"#option-heightStyle\"><code>heightStyle</code></a> option.</div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the refresh method:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).tabs( \"refresh\" );</pre> </div> </div></div> <div id=\"method-widget\"><div class=\"api-item\"> <h3>widget()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a></span> </h3> <div> Returns a <code>jQuery</code> object containing the tabs container. </div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Invoke the widget method:</p> <pre class=\"syntaxhighlighter javascript\">var widget = $( \".selector\" ).tabs( \"widget\" );</pre> </div> </div></div></section><section id=\"extension-points\"><h2>Extension Points</h2>\n<p> The tabs widget is built with the <a href=\"jquery.widget\">widget factory</a> and can be extended. When extending widgets, you have the ability to override or add to the behavior of existing methods. The following methods are provided as extension points with the same API stability as the <a href=\"#methods\">plugin methods</a> listed above. For more information on widget extensions, see <a href=\"http://learn.jquery.com/jquery-ui/widget-factory/extending-widgets/\">Extending Widgets with the Widget Factory</a>. </p>  <div id=\"method-_getList\"><div class=\"api-item first-item\"> <h3>_getList()<span class=\"returns\">Returns: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a></span> </h3> <div>Determine which list should be converted to tabs. By default the first descendant list is used.</div> <ul><li><div class=\"null-signature\">This method does not accept any arguments.</div></li></ul> <div> <strong>Code examples:</strong><p>Use the list with the class <code>my-tabs</code> or fall back to the default implementation.</p> <pre class=\"syntaxhighlighter javascript\">_getList: function() {\n  var list = this.element.find( \".my-tabs\" );\n  return list.length ? list.eq( 0 ) : this._super();\n}</pre> </div> </div></div></section><section id=\"events\"><h2>Events</h2>\n<div id=\"event-activate\" class=\"api-item first-item\"> <h3>activate( event, ui )<span class=\"returns\">Type: <code>tabsactivate</code></span> </h3> <div> <p>Triggered after a tab has been activated (after animation completes). If the tabs were previously collapsed, <code>ui.oldTab</code> and <code>ui.oldPanel</code> will be empty jQuery objects. If the tabs are collapsing, <code>ui.newTab</code> and <code>ui.newPanel</code> will be empty jQuery objects.</p> <div class=\"warning\"> <strong>Note:</strong> Since the <code>activate</code> event is only fired on tab activation, it is not fired for the initial tab when the tabs widget is created. If you need a hook for widget creation use the <a href=\"#event-create\"><code>create</code></a> event.</div> </div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  <ul> <li> <div><strong>newTab</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The tab that was just activated.</div> </li> <li> <div><strong>oldTab</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The tab that was just deactivated.</div> </li> <li> <div><strong>newPanel</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The panel that was just activated.</div> </li> <li> <div><strong>oldPanel</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The panel that was just deactivated.</div> </li> </ul> </li> </ul> <div> <strong>Code examples:</strong><p>Initialize the tabs with the activate callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).tabs({\n  activate: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the tabsactivate event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"tabsactivate\", function( event, ui ) {} );</pre> </div> </div> <div id=\"event-beforeActivate\" class=\"api-item\"> <h3>beforeActivate( event, ui )<span class=\"returns\">Type: <code>tabsbeforeactivate</code></span> </h3> <div>Triggered immediately before a tab is activated. Can be canceled to prevent the tab from activating. If the tabs are currently collapsed, <code>ui.oldTab</code> and <code>ui.oldPanel</code> will be empty jQuery objects. If the tabs are collapsing, <code>ui.newTab</code> and <code>ui.newPanel</code> will be empty jQuery objects.</div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  <ul> <li> <div><strong>newTab</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The tab that is about to be activated.</div> </li> <li> <div><strong>oldTab</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The tab that is about to be deactivated.</div> </li> <li> <div><strong>newPanel</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The panel that is about to be activated.</div> </li> <li> <div><strong>oldPanel</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The panel that is about to be deactivated.</div> </li> </ul> </li> </ul> <div> <strong>Code examples:</strong><p>Initialize the tabs with the beforeActivate callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).tabs({\n  beforeActivate: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the tabsbeforeactivate event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"tabsbeforeactivate\", function( event, ui ) {} );</pre> </div> </div> <div id=\"event-beforeLoad\" class=\"api-item\"> <h3>beforeLoad( event, ui )<span class=\"returns\">Type: <code>tabsbeforeload</code></span> </h3> <div> <p>Triggered when a remote tab is about to be loaded, after the <a href=\"#event-beforeActivate\"><code>beforeActivate</code></a> event. Can be canceled to prevent the tab panel from loading content; though the panel will still be activated. This event is triggered just before the Ajax request is made, so modifications can be made to <code>ui.jqXHR</code> and <code>ui.ajaxSettings</code>.</p> <p><em>Note: Although <code>ui.ajaxSettings</code> is provided and can be modified, some of these properties have already been processed by jQuery. For example, <a href=\"https://api.jquery.com/jQuery.ajaxPrefilter/\">prefilters</a> have been applied, <code>data</code> has been processed, and <code>type</code> has been determined. The <code>beforeLoad</code> event occurs at the same time, and therefore has the same restrictions, as the <code>beforeSend</code> callback from <a href=\"https://api.jquery.com/jQuery.ajax/\"><code>jQuery.ajax()</code></a>.</em></p> </div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  <ul> <li> <div><strong>tab</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The tab that is being loaded.</div> </li> <li> <div><strong>panel</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The panel which will be populated by the Ajax response.</div> </li> <li> <div><strong>jqXHR</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jqXHR\">jqXHR</a> </div> <div>The <code>jqXHR</code> object that is requesting the content.</div> </li> <li> <div><strong>ajaxSettings</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div> <div>The properties that will be used by <a href=\"https://api.jquery.com/jQuery.ajax/\"><code>jQuery.ajax</code></a> to request the content.</div> </li> </ul> </li> </ul> <div> <strong>Code examples:</strong><p>Initialize the tabs with the beforeLoad callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).tabs({\n  beforeLoad: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the tabsbeforeload event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"tabsbeforeload\", function( event, ui ) {} );</pre> </div> </div> <div id=\"event-create\" class=\"api-item\"> <h3>create( event, ui )<span class=\"returns\">Type: <code>tabscreate</code></span> </h3> <div>Triggered when the tabs are created. If the tabs are collapsed, <code>ui.tab</code> and <code>ui.panel</code> will be empty jQuery objects.</div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  <ul> <li> <div><strong>tab</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The active tab.</div> </li> <li> <div><strong>panel</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The active panel.</div> </li> </ul> </li> </ul> <div> <strong>Code examples:</strong><p>Initialize the tabs with the create callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).tabs({\n  create: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the tabscreate event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"tabscreate\", function( event, ui ) {} );</pre> </div> </div> <div id=\"event-load\" class=\"api-item\"> <h3>load( event, ui )<span class=\"returns\">Type: <code>tabsload</code></span> </h3> <div>Triggered after a remote tab has been loaded.</div> <ul> <li> <div><strong>event</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Event\">Event</a> </div>  </li> <li> <div><strong>ui</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#Object\">Object</a> </div>  <ul> <li> <div><strong>tab</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The tab that was just loaded.</div> </li> <li> <div><strong>panel</strong></div> <div>Type: <a href=\"http://api.jquery.com/Types/#jQuery\">jQuery</a> </div> <div>The panel which was just populated by the Ajax response.</div> </li> </ul> </li> </ul> <div> <strong>Code examples:</strong><p>Initialize the tabs with the load callback specified:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).tabs({\n  load: function( event, ui ) {}\n});</pre> <p>Bind an event listener to the tabsload event:</p> <pre class=\"syntaxhighlighter javascript\">$( \".selector\" ).on( \"tabsload\", function( event, ui ) {} );</pre> </div> </div></section><section class=\"entry-examples\" id=\"entry-examples\"><h2>Example:</h2>\n<div class=\"entry-example\" id=\"example-0\"> <p>A simple jQuery UI Tabs</p> <pre class=\"syntaxhighlighter xml\">&lt;!doctype html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"utf-8\"&gt;\n  &lt;title&gt;tabs demo&lt;/title&gt;\n  &lt;link rel=\"stylesheet\" href=\"//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css\"&gt;\n  &lt;script src=\"//code.jquery.com/jquery-1.10.2.js\"&gt;&lt;/script&gt;\n  &lt;script src=\"//code.jquery.com/ui/1.11.4/jquery-ui.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n&lt;div id=\"tabs\"&gt;\n  &lt;ul&gt;\n    &lt;li&gt;&lt;a href=\"#fragment-1\"&gt;&lt;span&gt;One&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;\n    &lt;li&gt;&lt;a href=\"#fragment-2\"&gt;&lt;span&gt;Two&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;\n    &lt;li&gt;&lt;a href=\"#fragment-3\"&gt;&lt;span&gt;Three&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;\n  &lt;/ul&gt;\n  &lt;div id=\"fragment-1\"&gt;\n    &lt;p&gt;First tab is active by default:&lt;/p&gt;\n    &lt;pre&gt;&lt;code&gt;$( \"#tabs\" ).tabs(); &lt;/code&gt;&lt;/pre&gt;\n  &lt;/div&gt;\n  &lt;div id=\"fragment-2\"&gt;\n    Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat.\n    Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat.\n  &lt;/div&gt;\n  &lt;div id=\"fragment-3\"&gt;\n    Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat.\n    Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat.\n    Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat.\n  &lt;/div&gt;\n&lt;/div&gt;\n \n&lt;script&gt;\n$( \"#tabs\" ).tabs();\n&lt;/script&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;</pre> <h4>Demo:</h4>  </div></section> </div></article> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; The jQuery Foundation and other contributors<br>Licensed under the MIT License.<br>\n    <a href=\"https://api.jqueryui.com/tabs\" class=\"_attribution-link\">https://api.jqueryui.com/tabs</a>\n  </p>\n</div>\n"}