{"index":"<h1>Dojo Toolkit</h1><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/</a>\n  </p>\n</div>\n","dojo/_base/browser":"<h1>dojo/_base/browser</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>This module causes the browser-only base modules to be loaded.</p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/_base/browser.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/_base/browser.html</a>\n  </p>\n</div>\n","dojo/_base/config.modulepaths":"<h1>dojo/_base/config.modulePaths</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>A map of module names to paths relative to <code>dojo.baseUrl</code>. The key/value pairs correspond directly to the arguments which <code>dojo.registerModulePath</code> accepts. Specifying <code>djConfig.modulePaths = { \"foo\": \"../../bar\" }</code> is the equivalent of calling <code>dojo.registerModulePath(\"foo\", \"../../bar\");</code>. Multiple modules may be configured via <code>djConfig.modulePaths</code>.</p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/_base/config.modulePaths.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/_base/config.modulePaths.html</a>\n  </p>\n</div>\n","dojo/_base/kernel._hasresource":"<h1>dojo/_base/kernel._hasResource</h1><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/_base/kernel._hasResource.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/_base/kernel._hasResource.html</a>\n  </p>\n</div>\n","dojo/_base/kernel._nodedatacache":"<h1>dojo/_base/kernel._nodeDataCache</h1><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/_base/kernel._nodeDataCache.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/_base/kernel._nodeDataCache.html</a>\n  </p>\n</div>\n","dojo/_base/declare.__declarecreatedobject":"<h1>dojo/_base/declare.__DeclareCreatedObject</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p><a class=\"jsdoc-link\" href=\"declare\">dojo/_base/declare()</a> returns a constructor <code>C</code>. <code>new C()</code> returns an Object with the following methods, in addition to the methods and properties specified via the arguments passed to declare().</p>  <p> <strong>Note:</strong> This is not a real constructor, but just a description of the type of object that should be passed as a parameter to some method(s), and/or the return value from some method(s). In other words, the type exists only for documentation purposes, and you <strong>cannot</strong> call <code>new declare.__DeclareCreatedObject()</code> </p>          <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_declare___DeclareCreatedObject_createSubclass\">\n<span class=\"functionIcon\">createSubclass</span><span class=\"parameters\">(mixins,props)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"declare\" class=\"jsdoc-link\">dojo/_base/declare</a> </p> <p>Create a subclass of the declared class from a list of base classes.</p>  <p>Create a constructor using a compact notation for inheritance and prototype extension. </p> <p>Mixin ancestors provide a type of multiple inheritance. Prototypes of mixin ancestors are copied to the new class: changes to mixin prototypes will not affect classes to which they have been mixed in. </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">mixins</td> <td class=\"jsdoc-param-type\">Function[]</td> <td class=\"jsdoc-param-description\">\n<p>Specifies a list of bases (the left-most one is the most deepest base).</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">props</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>An optional object whose properties are copied to the created prototype.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\"><a class=\"jsdoc-link\" href=\"declare.__declarecreatedobject\">dojo/_base/declare.__DeclareCreatedObject</a></span></p> <p>New constructor function.</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>var A = declare(null, {\n    m1: function(){},\n    s1: \"bar\"\n});\nvar B = declare(null, {\n    m2: function(){},\n    s2: \"foo\"\n});\nvar C = declare(null, {\n});\nvar D1 = A.createSubclass([B, C], {\n    m1: function(){},\n    d1: 42\n});\nvar d1 = new D1();\n\n// this is equivalent to:\nvar D2 = declare([A, B, C], {\n    m1: function(){},\n    d1: 42\n});\nvar d2 = new D2();</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_declare___DeclareCreatedObject_extend\">\n<span class=\"functionIcon\">extend</span><span class=\"parameters\">(source)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"declare\" class=\"jsdoc-link\">dojo/_base/declare</a> </p> <p>Adds all properties and methods of source to constructor's prototype, making them available to all instances created with constructor. This method is specific to constructors created with declare().</p>  <p>Adds source properties to the constructor's prototype. It can override existing properties. </p> <p>This method is similar to dojo.extend function, but it is specific to constructors produced by declare(). It is implemented using dojo.safeMixin, and it skips a constructor property, and properly decorates copied functions. </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">source</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>Source object which properties are going to be copied to the constructor's prototype.</p> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>var A = declare(null, {\n    m1: function(){},\n    s1: \"Popokatepetl\"\n});\nA.extend({\n    m1: function(){},\n    m2: function(){},\n    f1: true,\n    d1: 42\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_declare___DeclareCreatedObject_getInherited\">\n<span class=\"functionIcon\">getInherited</span><span class=\"parameters\">(name,args)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"declare\" class=\"jsdoc-link\">dojo/_base/declare</a> </p> <p>Returns a super method.</p>  <p>This method is a convenience method for \"this.inherited()\". It uses the same algorithm but instead of executing a super method, it returns it, or \"undefined\" if not found. </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">name</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>The optional method name. Should be the same as the caller's name. Usually \"name\" is specified in complex dynamic cases, when the calling method was dynamically added, undecorated by declare(), and it cannot be determined.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">args</td> <td class=\"jsdoc-param-type\">Arguments</td> <td class=\"jsdoc-param-description\">\n<p>The caller supply this argument, which should be the original \"arguments\".</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | object</span></p> <p>Returns a super method (Function) or \"undefined\".</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>var B = declare(A, {\n    method: function(a, b){\n        var super = this.getInherited(arguments);\n        // ...\n        if(!super){\n            console.log(\"there is no super method\");\n            return 0;\n        }\n        return super.apply(this, arguments);\n    }\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_declare___DeclareCreatedObject_inherited\">\n<span class=\"functionIcon\">inherited</span><span class=\"parameters\">(name,args,newArgs)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"declare\" class=\"jsdoc-link\">dojo/_base/declare</a> </p> <p>Calls a super method.</p>  <p>This method is used inside method of classes produced with declare() to call a super method (next in the chain). It is used for manually controlled chaining. Consider using the regular chaining, because it is faster. Use \"this.inherited()\" only in complex cases. </p> <p>This method cannot me called from automatically chained constructors including the case of a special (legacy) constructor chaining. It cannot be called from chained methods. </p> <p>If \"this.inherited()\" cannot find the next-in-chain method, it does nothing and returns \"undefined\". The last method in chain can be a default method implemented in Object, which will be called last. </p> <p>If \"name\" is specified, it is assumed that the method that received \"args\" is the parent method for this call. It is looked up in the chain list and if it is found the next-in-chain method is called. If it is not found, the first-in-chain method is called. </p> <p>If \"name\" is not specified, it will be derived from the calling method (using a methoid property \"nom\"). </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">name</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>The optional method name. Should be the same as the caller's name. Usually \"name\" is specified in complex dynamic cases, when the calling method was dynamically added, undecorated by declare(), and it cannot be determined.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">args</td> <td class=\"jsdoc-param-type\">Arguments</td> <td class=\"jsdoc-param-description\">\n<p>The caller supply this argument, which should be the original \"arguments\".</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">newArgs</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>If \"true\", the found function will be returned without executing it. If Array, it will be used to call a super method. Otherwise \"args\" will be used.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | object</span></p> <p>Whatever is returned by a super method, or a super method itself, if \"true\" was specified as newArgs.</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>var B = declare(A, {\n    method1: function(a, b, c){\n        this.inherited(arguments);\n    },\n    method2: function(a, b){\n        return this.inherited(arguments, [a + b]);\n    }\n});\n// next method is not in the chain list because it is added\n// manually after the class was created.\nB.prototype.method3 = function(){\n    console.log(\"This is a dynamically-added method.\");\n    this.inherited(\"method3\", arguments);\n};</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<pre><code>var B = declare(A, {\n    method: function(a, b){\n        var super = this.inherited(arguments, true);\n        // ...\n        if(!super){\n            console.log(\"there is no super method\");\n            return 0;\n        }\n        return super.apply(this, arguments);\n    }\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_declare___DeclareCreatedObject_isInstanceOf\">\n<span class=\"functionIcon\">isInstanceOf</span><span class=\"parameters\">(cls)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"declare\" class=\"jsdoc-link\">dojo/_base/declare</a> </p> <p>Checks the inheritance chain to see if it is inherited from this class.</p>  <p>This method is used with instances of classes produced with declare() to determine of they support a certain interface or not. It models \"instanceof\" operator. </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">cls</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\">\n<p>Class constructor.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | object</span></p> <p>\"true\", if this object is inherited from this class, \"false\" otherwise.</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>var A = declare(null, {\n    // constructor, properties, and methods go here\n    // ...\n});\nvar B = declare(null, {\n    // constructor, properties, and methods go here\n    // ...\n});\nvar C = declare([A, B], {\n    // constructor, properties, and methods go here\n    // ...\n});\nvar D = declare(A, {\n    // constructor, properties, and methods go here\n    // ...\n});\n\nvar a = new A(), b = new B(), c = new C(), d = new D();\n\nconsole.log(a.isInstanceOf(A)); // true\nconsole.log(b.isInstanceOf(A)); // false\nconsole.log(c.isInstanceOf(A)); // true\nconsole.log(d.isInstanceOf(A)); // true\n\nconsole.log(a.isInstanceOf(B)); // false\nconsole.log(b.isInstanceOf(B)); // true\nconsole.log(c.isInstanceOf(B)); // true\nconsole.log(d.isInstanceOf(B)); // false\n\nconsole.log(a.isInstanceOf(C)); // false\nconsole.log(b.isInstanceOf(C)); // false\nconsole.log(c.isInstanceOf(C)); // true\nconsole.log(d.isInstanceOf(C)); // false\n\nconsole.log(a.isInstanceOf(D)); // false\nconsole.log(b.isInstanceOf(D)); // false\nconsole.log(c.isInstanceOf(D)); // false\nconsole.log(d.isInstanceOf(D)); // true</code></pre> </div> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/_base/declare.__DeclareCreatedObject.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/_base/declare.__DeclareCreatedObject.html</a>\n  </p>\n</div>\n","dojo/_base/array":"<h1>dojo/_base/array</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>The Javascript v1.6 array extensions.</p>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/_base/array.html\" target=\"_blank\">dojo/_base/array reference documentation</a> for more information.</p>          <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_array_clearCache\">\n<span class=\"functionIcon\">clearCache</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"array\" class=\"jsdoc-link\">dojo/_base/array</a> </p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_array_every\">\n<span class=\"functionIcon\">every</span><span class=\"parameters\">(arr,callback,thisObject)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"array\" class=\"jsdoc-link\">dojo/_base/array</a> </p> <p>Determines whether or not every item in arr satisfies the condition implemented by callback.</p>  <p>This function corresponds to the JavaScript 1.6 Array.every() method, with one difference: when run over sparse arrays, this implementation passes the \"holes\" in the sparse array to the callback function with a value of undefined. JavaScript 1.6's every skips the holes in the sparse array. For more details, see: <a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/every\">https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/every</a></p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">arr</td> <td class=\"jsdoc-param-type\">Array | String</td> <td class=\"jsdoc-param-description\">\n<p>the array to iterate on. If a string, operates on individual characters.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">callback</td> <td class=\"jsdoc-param-type\">Function | String</td> <td class=\"jsdoc-param-description\">\n<p>a function is invoked with three arguments: item, index, and array and returns true if the condition is met.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">thisObject</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>may be used to scope the call to callback</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Boolean</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>// returns false\narray.every([1, 2, 3, 4], function(item){ return item&gt;1; });</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<pre><code>// returns true\narray.every([1, 2, 3, 4], function(item){ return item&gt;0; });</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_array_filter\">\n<span class=\"functionIcon\">filter</span><span class=\"parameters\">(arr,callback,thisObject)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"array\" class=\"jsdoc-link\">dojo/_base/array</a> </p> <p>Returns a new Array with those items from arr that match the condition implemented by callback.</p>  <p>This function corresponds to the JavaScript 1.6 Array.filter() method, with one difference: when run over sparse arrays, this implementation passes the \"holes\" in the sparse array to the callback function with a value of undefined. JavaScript 1.6's filter skips the holes in the sparse array. For more details, see: <a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/filter\">https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/filter</a></p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">arr</td> <td class=\"jsdoc-param-type\">Array</td> <td class=\"jsdoc-param-description\">\n<p>the array to iterate over.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">callback</td> <td class=\"jsdoc-param-type\">Function | String</td> <td class=\"jsdoc-param-description\">\n<p>a function that is invoked with three arguments (item, index, array). The return of this function is expected to be a boolean which determines whether the passed-in item will be included in the returned array.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">thisObject</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>may be used to scope the call to callback</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Array</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>// returns [2, 3, 4]\narray.filter([1, 2, 3, 4], function(item){ return item&gt;1; });</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_array_forEach\">\n<span class=\"functionIcon\">forEach</span><span class=\"parameters\">(arr,callback,thisObject)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"array\" class=\"jsdoc-link\">dojo/_base/array</a> </p> <p>for every item in arr, callback is invoked. Return values are ignored. If you want to break out of the loop, consider using array.every() or array.some(). forEach does not allow breaking out of the loop over the items in arr.</p>  <p>This function corresponds to the JavaScript 1.6 Array.forEach() method, with one difference: when run over sparse arrays, this implementation passes the \"holes\" in the sparse array to the callback function with a value of undefined. JavaScript 1.6's forEach skips the holes in the sparse array. For more details, see: <a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/forEach\">https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/forEach</a></p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">arr</td> <td class=\"jsdoc-param-type\">Array | String</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">callback</td> <td class=\"jsdoc-param-type\">Function | String</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">thisObject</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>// log out all members of the array:\narray.forEach(\n      [ \"thinger\", \"blah\", \"howdy\", 10 ],\n      function(item){\n          console.log(item);\n      }\n);</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<pre><code>// log out the members and their indexes\narray.forEach(\n      [ \"thinger\", \"blah\", \"howdy\", 10 ],\n      function(item, idx, arr){\n          console.log(item, \"at index:\", idx);\n      }\n);</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<pre><code>// use a scoped object member as the callback\n\nvar obj = {\n      prefix: \"logged via obj.callback:\",\n      callback: function(item){\n          console.log(this.prefix, item);\n      }\n};\n\n// specifying the scope function executes the callback in that scope\narray.forEach(\n      [ \"thinger\", \"blah\", \"howdy\", 10 ],\n      obj.callback,\n      obj\n);\n\n// alternately, we can accomplish the same thing with lang.hitch()\narray.forEach(\n      [ \"thinger\", \"blah\", \"howdy\", 10 ],\n      lang.hitch(obj, \"callback\")\n);</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_array_indexOf\">\n<span class=\"functionIcon\">indexOf</span><span class=\"parameters\">(arr,value,fromIndex,findLast)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"array\" class=\"jsdoc-link\">dojo/_base/array</a> </p> <p>locates the first index of the provided value in the passed array. If the value is not found, -1 is returned.</p>  <p>This method corresponds to the JavaScript 1.6 Array.indexOf method, with two differences: </p> <ol> <li>when run over sparse arrays, the Dojo function invokes the callback for every index whereas JavaScript 1.6's indexOf skips the holes in the sparse array.</li> <li>uses equality (==) rather than strict equality (===)</li> </ol> <p>For details on this method, see: <a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/indexOf\">https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/indexOf</a></p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">arr</td> <td class=\"jsdoc-param-type\">Array</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">value</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">fromIndex</td> <td class=\"jsdoc-param-type\">Integer</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> <tr> <td class=\"jsdoc-param-name\">findLast</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Makes indexOf() work like lastIndexOf(). Used internally; not meant for external usage.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Number</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_array_lastIndexOf\">\n<span class=\"functionIcon\">lastIndexOf</span><span class=\"parameters\">(arr,value,fromIndex)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"array\" class=\"jsdoc-link\">dojo/_base/array</a> </p> <p>locates the last index of the provided value in the passed array. If the value is not found, -1 is returned.</p>  <p>This method corresponds to the JavaScript 1.6 Array.lastIndexOf method, with two differences: </p> <ol> <li>when run over sparse arrays, the Dojo function invokes the callback for every index whereas JavaScript 1.6's lasIndexOf skips the holes in the sparse array.</li> <li>uses equality (==) rather than strict equality (===)</li> </ol> <p>For details on this method, see: <a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/lastIndexOf\">https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/lastIndexOf</a></p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">arr</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">value</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">fromIndex</td> <td class=\"jsdoc-param-type\">Integer</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Number</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_array_map\">\n<span class=\"functionIcon\">map</span><span class=\"parameters\">(arr,callback,thisObject,Ctr)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"array\" class=\"jsdoc-link\">dojo/_base/array</a> </p> <p>applies callback to each element of arr and returns an Array with the results</p>  <p>This function corresponds to the JavaScript 1.6 Array.map() method, with one difference: when run over sparse arrays, this implementation passes the \"holes\" in the sparse array to the callback function with a value of undefined. JavaScript 1.6's map skips the holes in the sparse array. For more details, see: <a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/map\">https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/map</a></p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">arr</td> <td class=\"jsdoc-param-type\">Array | String</td> <td class=\"jsdoc-param-description\">\n<p>the array to iterate on. If a string, operates on individual characters.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">callback</td> <td class=\"jsdoc-param-type\">Function | String</td> <td class=\"jsdoc-param-description\">\n<p>a function is invoked with three arguments, (item, index, array), and returns a value</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">thisObject</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>may be used to scope the call to callback</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">Ctr</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Array | instance</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>// returns [2, 3, 4, 5]\narray.map([1, 2, 3, 4], function(item){ return item+1 });</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_array_some\">\n<span class=\"functionIcon\">some</span><span class=\"parameters\">(arr,callback,thisObject)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"array\" class=\"jsdoc-link\">dojo/_base/array</a> </p> <p>Determines whether or not any item in arr satisfies the condition implemented by callback.</p>  <p>This function corresponds to the JavaScript 1.6 Array.some() method, with one difference: when run over sparse arrays, this implementation passes the \"holes\" in the sparse array to the callback function with a value of undefined. JavaScript 1.6's some skips the holes in the sparse array. For more details, see: <a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/some\">https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/some</a></p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">arr</td> <td class=\"jsdoc-param-type\">Array | String</td> <td class=\"jsdoc-param-description\">\n<p>the array to iterate over. If a string, operates on individual characters.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">callback</td> <td class=\"jsdoc-param-type\">Function | String</td> <td class=\"jsdoc-param-description\">\n<p>a function is invoked with three arguments: item, index, and array and returns true if the condition is met.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">thisObject</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>may be used to scope the call to callback</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Boolean</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>// is true\narray.some([1, 2, 3, 4], function(item){ return item&gt;1; });</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<pre><code>// is false\narray.some([1, 2, 3, 4], function(item){ return item&lt;1; });</code></pre> </div> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/_base/array.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/_base/array.html</a>\n  </p>\n</div>\n","dojo/_base/color":"<h1>dojo/_base/Color</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>Takes a named string, hex string, array of rgb or rgba values, an object with r, g, b, and a properties, or another <code>Color</code> object and creates a new Color instance to work from. </p>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">Color<span class=\"parameters\"><span class=\"paren\">(</span><span class=\"args\">color</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">color</td> <td class=\"jsdoc-param-type\">Array | String | Object</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/_base/Color.html\" target=\"_blank\">dojo/_base/Color reference documentation</a> for more information.</p>    <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Work with a Color instance: </p> <pre><code>require([\"dojo/_base/color\"], function(Color){\n    var c = new Color();\n    c.setColor([0,0,0]); // black\n    var hex = c.toHex(); // #000000\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>Work with a node's color: </p> <pre><code>  require([\"dojo/_base/color\", \"dojo/dom-style\"], function(Color, domStyle){\n      var color = domStyle(\"someNode\", \"backgroundColor\");\n      var n = new Color(color);\n      // adjust the color some\n      n.r *= .5;\n      console.log(n.toString()); // rgb(128, 255, 255);\n  });</code></pre> </div> </div>         <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_a\">\n<span class=\"numberIcon\">a</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"color\" class=\"jsdoc-link\">dojo/_base/Color</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_b\">\n<span class=\"numberIcon\">b</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"color\" class=\"jsdoc-link\">dojo/_base/Color</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_g\">\n<span class=\"numberIcon\">g</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"color\" class=\"jsdoc-link\">dojo/_base/Color</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named\">\n<span class=\"objectIcon\">named</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"color\" class=\"jsdoc-link\">dojo/_base/Color</a> </p> <div class=\"jsdoc-summary\">\n<p>Dictionary list of all CSS named colors, by name. Values are 3-item arrays with corresponding RG and B values.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_r\">\n<span class=\"numberIcon\">r</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"color\" class=\"jsdoc-link\">dojo/_base/Color</a> </p>    <h2 id=\"methods\">Methods</h2>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_blendColors\">\n<span class=\"functionIcon\">blendColors</span><span class=\"parameters\">(start,end,weight,obj)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"color\" class=\"jsdoc-link\">dojo/_base/Color</a> </p> <p>Blend colors end and start with weight from 0 to 1, 0.5 being a 50/50 blend, can reuse a previously allocated Color object for the result</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">start</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"color\">dojo/_base/Color</a></td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">end</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"color\">dojo/_base/Color</a></td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">weight</td> <td class=\"jsdoc-param-type\">Number</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">obj</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"color\">dojo/_base/Color</a></td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_fromArray\">\n<span class=\"functionIcon\">fromArray</span><span class=\"parameters\">(a,obj)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"color\" class=\"jsdoc-link\">dojo/_base/Color</a> </p> <p>Builds a <code>Color</code> from a 3 or 4 element array, mapping each element in sequence to the rgb(a) values of the color.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">a</td> <td class=\"jsdoc-param-type\">Array</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">obj</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"color\">dojo/_base/Color</a></td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | undefined</span></p> <p>A Color object. If obj is passed, it will be the return value.</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>require([\"dojo/_base/color\"], function(Color){\n    var myColor = new Color().fromArray([237,237,237,0.5]); // grey, 50% alpha\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_fromHex\">\n<span class=\"functionIcon\">fromHex</span><span class=\"parameters\">(color,obj)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"color\" class=\"jsdoc-link\">dojo/_base/Color</a> </p> <p>Converts a hex string with a '#' prefix to a color object. Supports 12-bit #rgb shorthand. Optionally accepts a <code>Color</code> object to update with the parsed value. </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">color</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">obj</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"color\">dojo/_base/Color</a></td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any</span></p> <p>A Color object. If obj is passed, it will be the return value. </p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>require([\"dojo/_base/color\"], function(Color){\n    var thing = new Color().fromHex(\"#ededed\"); // grey, longhand\n    var thing2 = new Color().fromHex(\"#000\"); // black, shorthand\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_fromRgb\">\n<span class=\"functionIcon\">fromRgb</span><span class=\"parameters\">(color,obj)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p> <p>get rgb(a) array from css-style color declarations</p>  <p>this function can handle all 4 CSS3 Color Module formats: rgb, rgba, hsl, hsla, including rgb(a) with percentage values.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">color</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">obj</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"color\">dojo/_base/Color</a></td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">null</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_fromString\">\n<span class=\"functionIcon\">fromString</span><span class=\"parameters\">(str,obj)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"color\" class=\"jsdoc-link\">dojo/_base/Color</a> </p> <p>Parses <code>str</code> for a color value. Accepts hex, rgb, and rgba style color values.</p>  <p>Acceptable input values for str may include arrays of any form accepted by dojo.colorFromArray, hex strings such as \"#aaaaaa\", or rgb or rgba strings such as \"rgb(133, 200, 16)\" or \"rgba(10, 10, 10, 50)\"</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">str</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">obj</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"color\">dojo/_base/Color</a></td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any</span></p> <p>A Color object. If obj is passed, it will be the return value.</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_makeGrey\">\n<span class=\"functionIcon\">makeGrey</span><span class=\"parameters\">(g,a)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p> <p>creates a greyscale color with an optional alpha</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">g</td> <td class=\"jsdoc-param-type\">Number</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">a</td> <td class=\"jsdoc-param-type\">Number</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_sanitize\">\n<span class=\"functionIcon\">sanitize</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p> <p>makes sure that the object has correct attributes</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_setColor\">\n<span class=\"functionIcon\">setColor</span><span class=\"parameters\">(color)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"color\" class=\"jsdoc-link\">dojo/_base/Color</a> </p> <p>Takes a named string, hex string, array of rgb or rgba values, an object with r, g, b, and a properties, or another <code>Color</code> object and sets this color instance to that value. </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">color</td> <td class=\"jsdoc-param-type\">Array | String | Object</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">function</span></p> <p>Takes a named string, hex string, array of rgb or rgba values, an object with r, g, b, and a properties, or another <code>Color</code> object and sets this color instance to that value. </p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>require([\"dojo/_base/color\"], function(Color){\n    var c = new Color(); // no color\n    c.setColor(\"#ededed\"); // greyish\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_toCmy\">\n<span class=\"functionIcon\">toCmy</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"http://dojotoolkit.org/api/1.10/dojox/color/_base\" class=\"jsdoc-link\">dojox/color/_base</a> </p> <p>Convert this Color to a CMY definition.</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">object</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_toCmyk\">\n<span class=\"functionIcon\">toCmyk</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"http://dojotoolkit.org/api/1.10/dojox/color/_base\" class=\"jsdoc-link\">dojox/color/_base</a> </p> <p>Convert this Color to a CMYK definition.</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">object</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_toCss\">\n<span class=\"functionIcon\">toCss</span><span class=\"parameters\">(includeAlpha)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"color\" class=\"jsdoc-link\">dojo/_base/Color</a> </p> <p>Returns a css color string in rgb(a) representation</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">includeAlpha</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">string</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>require([\"dojo/_base/color\"], function(Color){\n    var c = new Color(\"#FFF\").toCss();\n    console.log(c); // rgb('255','255','255')\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_toHex\">\n<span class=\"functionIcon\">toHex</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"color\" class=\"jsdoc-link\">dojo/_base/Color</a> </p> <p>Returns a CSS color string in hexadecimal representation</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">string</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>require([\"dojo/_base/color\"], function(Color){\n    console.log(new Color([0,0,0]).toHex()); // #000000\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_toHsl\">\n<span class=\"functionIcon\">toHsl</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"http://dojotoolkit.org/api/1.10/dojox/color/_base\" class=\"jsdoc-link\">dojox/color/_base</a> </p> <p>Convert this Color to an HSL definition.</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">object</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_toHsv\">\n<span class=\"functionIcon\">toHsv</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"http://dojotoolkit.org/api/1.10/dojox/color/_base\" class=\"jsdoc-link\">dojox/color/_base</a> </p> <p>Convert this Color to an HSV definition.</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">object</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_toRgb\">\n<span class=\"functionIcon\">toRgb</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"color\" class=\"jsdoc-link\">dojo/_base/Color</a> </p> <p>Returns 3 component array of rgb values</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Array</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>require([\"dojo/_base/color\"], function(Color){\n    var c = new Color(\"#000000\");\n    console.log(c.toRgb()); // [0,0,0]\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_toRgba\">\n<span class=\"functionIcon\">toRgba</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"color\" class=\"jsdoc-link\">dojo/_base/Color</a> </p> <p>Returns a 4 component array of rgba values from the color represented by this object.</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Array</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_toString\">\n<span class=\"functionIcon\">toString</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"color\" class=\"jsdoc-link\">dojo/_base/Color</a> </p> <p>Returns a visual representation of the color</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/_base/Color.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/_base/Color.html</a>\n  </p>\n</div>\n","dojo/_base/config":"<h1>dojo/_base/config</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>This module defines the user configuration during bootstrap.</p>  <p>By defining user configuration as a module value, an entire configuration can be specified in a build, thereby eliminating the need for sniffing and or explicitly setting in the global variable dojoConfig. Also, when multiple instances of dojo exist in a single application, each will necessarily be located at an unique absolute module identifier as given by the package configuration. Implementing configuration as a module allows for specifying unique, per-instance configurations.</p>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/_base/config.html\" target=\"_blank\">dojo/_base/config reference documentation</a> for more information.</p>    <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Create a second instance of dojo with a different, instance-unique configuration (assume the loader and dojo.js are already loaded). </p> <pre><code>// specify a configuration that creates a new instance of dojo at the absolute module identifier \"myDojo\"\nrequire({\n    packages:[{\n        name:\"myDojo\",\n        location:\".\", //assume baseUrl points to dojo.js\n    }]\n});\n\n// specify a configuration for the myDojo instance\ndefine(\"myDojo/config\", {\n    // normal configuration variables go here, e.g.,\n    locale:\"fr-ca\"\n});\n\n// load and use the new instance of dojo\nrequire([\"myDojo\"], function(dojo){\n    // dojo is the new instance of dojo\n    // use as required\n});</code></pre> </div> </div>       <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_config_addOnLoad\">\n<span class=\"functionIcon\">addOnLoad</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"config\" class=\"jsdoc-link\">dojo/_base/config</a> </p> <div class=\"jsdoc-summary\">\n<p>Adds a callback via <a class=\"jsdoc-link\" href=\"../ready\">dojo/ready</a>. Useful when Dojo is added after the page loads and djConfig.afterOnLoad is true. Supports the same arguments as <a class=\"jsdoc-link\" href=\"../ready\">dojo/ready</a>. When using a function reference, use <code>djConfig.addOnLoad = function(){};</code>. For object with function name use <code>djConfig.addOnLoad = [myObject, \"functionName\"];</code> and for object with function reference use <code>djConfig.addOnLoad = [myObject, function(){}];</code></p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_config_afterOnLoad\">\n<span class=\"booleanIcon\">afterOnLoad</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../ready\" class=\"jsdoc-link\">dojo/ready</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_config_baseUrl\">\n<span class=\"objectIcon\">baseUrl</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"kernel\" class=\"jsdoc-link\">dojo/_base/kernel</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_config_callback\">\n<span class=\"functionIcon\">callback</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"config\" class=\"jsdoc-link\">dojo/_base/config</a> </p> <div class=\"jsdoc-summary\">\n<p>Defines a callback to be used when dependencies are defined before the loader has been loaded. When provided, they cause the loader to execute require(deps, callback) once it has finished loading. Should be used with deps.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_config_debugContainerId\">\n<span class=\"stringIcon\">debugContainerId</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../_firebug/firebug\" class=\"jsdoc-link\">dojo/_firebug/firebug</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_config_debugHeight\">\n<span class=\"numberIcon\">debugHeight</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../robotx\" class=\"jsdoc-link\">dojo/robotx</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_config_defaultDuration\">\n<span class=\"numberIcon\">defaultDuration</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"config\" class=\"jsdoc-link\">dojo/_base/config</a> </p> <div class=\"jsdoc-summary\">\n<p>Default duration, in milliseconds, for wipe and fade animations within dijits. Assigned to dijit.defaultDuration.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_config_deferredInstrumentation\">\n<span class=\"booleanIcon\">deferredInstrumentation</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"config\" class=\"jsdoc-link\">dojo/_base/config</a> </p> <div class=\"jsdoc-summary\">\n<p>Whether deferred instrumentation should be loaded or included in builds.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_config_deps\">\n<span class=\"functionIcon\">deps</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"config\" class=\"jsdoc-link\">dojo/_base/config</a> </p> <div class=\"jsdoc-summary\">\n<p>Defines dependencies to be used before the loader has been loaded. When provided, they cause the loader to execute require(deps, callback) once it has finished loading. Should be used with callback.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_config_dojoBlankHtmlUrl\">\n<span class=\"stringIcon\">dojoBlankHtmlUrl</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"config\" class=\"jsdoc-link\">dojo/_base/config</a> </p> <div class=\"jsdoc-summary\">\n<p>Used by some modules to configure an empty iframe. Used by <a class=\"jsdoc-link\" href=\"../io/iframe\">dojo/io/iframe</a> and <a class=\"jsdoc-link\" href=\"../back\">dojo/back</a>, and <a class=\"jsdoc-link\" href=\"http://dojotoolkit.org/api/1.10/dijit/popup\">dijit/popup</a> support in IE where an iframe is needed to make sure native controls do not bleed through the popups. Normally this configuration variable does not need to be set, except when using cross-domain/CDN Dojo builds. Save dojo/resources/blank.html to your domain and set <code>djConfig.dojoBlankHtmlUrl</code> to the path on your domain your copy of blank.html.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_config_extraLocale\">\n<span class=\"arrayIcon\">extraLocale</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"config\" class=\"jsdoc-link\">dojo/_base/config</a> </p> <div class=\"jsdoc-summary\">\n<p>No default value. Specifies additional locales whose resources should also be loaded alongside the default locale when calls to <code>dojo.requireLocalization()</code> are processed.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_config_ioPublish\">\n<span class=\"objectIcon\">ioPublish</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"config\" class=\"jsdoc-link\">dojo/_base/config</a> </p> <div class=\"jsdoc-summary\">\n<p>Set this to true to enable publishing of topics for the different phases of IO operations. Publishing is done via <a class=\"jsdoc-link\" href=\"../topic#publish\">dojo/topic.publish()</a>. See <a class=\"jsdoc-link\" href=\"../main.__iopublish\">dojo/main.__IoPublish</a> for a list of topics that are published.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_config_isDebug\">\n<span class=\"booleanIcon\">isDebug</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"config\" class=\"jsdoc-link\">dojo/_base/config</a> </p> <div class=\"jsdoc-summary\">\n<p>Defaults to <code>false</code>. If set to <code>true</code>, ensures that Dojo provides extended debugging feedback via Firebug. If Firebug is not available on your platform, setting <code>isDebug</code> to <code>true</code> will force Dojo to pull in (and display) the version of Firebug Lite which is integrated into the Dojo distribution, thereby always providing a debugging/logging console when <code>isDebug</code> is enabled. Note that Firebug's <code>console.*</code> methods are ALWAYS defined by Dojo. If <code>isDebug</code> is false and you are on a platform without Firebug, these methods will be defined as no-ops.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_config_locale\">\n<span class=\"stringIcon\">locale</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"config\" class=\"jsdoc-link\">dojo/_base/config</a> </p> <div class=\"jsdoc-summary\">\n<p>The locale to assume for loading localized resources in this page, specified according to <a href=\"http://www.ietf.org/rfc/rfc3066.txt\">RFC 3066</a>. Must be specified entirely in lowercase, e.g. <code>en-us</code> and <code>zh-cn</code>. See the documentation for <code>dojo.i18n</code> and <code>dojo.requireLocalization</code> for details on loading localized resources. If no locale is specified, Dojo assumes the locale of the user agent, according to <code>navigator.userLanguage</code> or <code>navigator.language</code> properties.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_config_modulePaths\">\n<span class=\"objectIcon\">modulePaths</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"config\" class=\"jsdoc-link\">dojo/_base/config</a> </p> <div class=\"jsdoc-summary\">\n<p>A map of module names to paths relative to <code>dojo.baseUrl</code>. The key/value pairs correspond directly to the arguments which <code>dojo.registerModulePath</code> accepts. Specifying <code>djConfig.modulePaths = { \"foo\": \"../../bar\" }</code> is the equivalent of calling <code>dojo.registerModulePath(\"foo\", \"../../bar\");</code>. Multiple modules may be configured via <code>djConfig.modulePaths</code>.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_config_parseOnLoad\">\n<span class=\"booleanIcon\">parseOnLoad</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"config\" class=\"jsdoc-link\">dojo/_base/config</a> </p> <div class=\"jsdoc-summary\">\n<p>Run the parser after the page is loaded</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_config_require\">\n<span class=\"objectIcon\">require</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"config\" class=\"jsdoc-link\">dojo/_base/config</a> </p> <div class=\"jsdoc-summary\">\n<p>An array of module names to be loaded immediately after dojo.js has been included in a page.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_config_transparentColor\">\n<span class=\"arrayIcon\">transparentColor</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"config\" class=\"jsdoc-link\">dojo/_base/config</a> </p> <div class=\"jsdoc-summary\">\n<p>Array containing the r, g, b components used as transparent color in dojo.Color; if undefined, [255,255,255] (white) will be used.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_config_urchin\">\n<span class=\"stringIcon\">urchin</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"http://dojotoolkit.org/api/1.10/dojox/analytics/Urchin\" class=\"jsdoc-link\">dojox/analytics/Urchin</a> </p> <div class=\"jsdoc-summary\">\n<p>Used by <code>dojox.analytics.Urchin</code> as the default UA-123456-7 account number used when being created. Alternately, you can pass an acct:\"\" parameter to the constructor a la: new dojox.analytics.Urchin({ acct:\"UA-123456-7\" });</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_config_useCustomLogger\">\n<span class=\"objectIcon\">useCustomLogger</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"config\" class=\"jsdoc-link\">dojo/_base/config</a> </p> <div class=\"jsdoc-summary\">\n<p>If set to a value that evaluates to true such as a string or array and isDebug is true and Firebug is not available or running, then it bypasses the creation of Firebug Lite allowing you to define your own console object.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_config_useDeferredInstrumentation\">\n<span class=\"booleanIcon\">useDeferredInstrumentation</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"config\" class=\"jsdoc-link\">dojo/_base/config</a> </p> <div class=\"jsdoc-summary\">\n<p>Whether the deferred instrumentation should be used. </p> <ul> <li>\n<code>\"report-rejections\"</code>: report each rejection as it occurs.</li> <li>\n<code>true</code> or <code>1</code> or <code>\"report-unhandled-rejections\"</code>: wait 1 second in an attempt to detect unhandled rejections.</li> </ul> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/_base/config.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/_base/config.html</a>\n  </p>\n</div>\n","dojo/_base/connect":"<h1>dojo/_base/connect</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>This module defines the dojo.connect API. This modules also provides keyboard event handling helpers. This module exports an extension event for emulating Firefox's keypress handling. However, this extension event exists primarily for backwards compatibility and is not recommended. WebKit and IE uses an alternate keypress handling (only firing for printable characters, to distinguish from keydown events), and most consider the WebKit/IE behavior more desirable.</p>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/_base/connect.html\" target=\"_blank\">dojo/_base/connect reference documentation</a> for more information.</p>          <h2 id=\"methods\">Methods</h2>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_connect_connect\">\n<span class=\"functionIcon\">connect</span><span class=\"parameters\">(obj,event,context,method,dontFix)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"connect\" class=\"jsdoc-link\">dojo/_base/connect</a> </p> <p><code>dojo.connect</code> is a deprecated event handling and delegation method in Dojo. It allows one function to \"listen in\" on the execution of any other, triggering the second whenever the first is called. Many listeners may be attached to a function, and source functions may be either regular function calls or DOM events. </p>  <p>Connects listeners to actions, so that after event fires, a listener is called with the same arguments passed to the original function. </p> <p>Since <code>dojo.connect</code> allows the source of events to be either a \"regular\" JavaScript function or a DOM event, it provides a uniform interface for listening to all the types of events that an application is likely to deal with though a single, unified interface. DOM programmers may want to think of it as \"addEventListener for everything and anything\". </p> <p>When setting up a connection, the <code>event</code> parameter must be a string that is the name of the method/event to be listened for. If <code>obj</code> is null, <code>kernel.global</code> is assumed, meaning that connections to global methods are supported but also that you may inadvertently connect to a global by passing an incorrect object name or invalid reference. </p> <p><code>dojo.connect</code> generally is forgiving. If you pass the name of a function or method that does not yet exist on <code>obj</code>, connect will not fail, but will instead set up a stub method. Similarly, null arguments may simply be omitted such that fewer than 4 arguments may be required to set up a connection See the examples for details. </p> <p>The return value is a handle that is needed to remove this connection with <code>dojo.disconnect</code>. </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">obj</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>The source object for the event function. Defaults to <code>kernel.global</code> if null. If obj is a DOM node, the connection is delegated to the DOM event manager (unless dontFix is true). </p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">event</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>String name of the event function in obj. I.e. identifies a property <code>obj[event]</code>. </p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">context</td> <td class=\"jsdoc-param-type\">Object | null</td> <td class=\"jsdoc-param-description\">\n<p>The object that method will receive as \"this\". </p> <p>If context is null and method is a function, then method inherits the context of event. </p> <p>If method is a string then context must be the source object object for method (context[method]). If context is null, kernel.global is used. </p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">method</td> <td class=\"jsdoc-param-type\">String | Function</td> <td class=\"jsdoc-param-description\">\n<p>A function reference, or name of a function in context. The function identified by method fires after event does. method receives the same arguments as the event. See context argument comments for information on method's scope. </p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">dontFix</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>If obj is a DOM node, set dontFix to true to prevent delegation of this connection to the DOM event manager. </p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>When obj.onchange(), do ui.update(): </p> <pre><code>dojo.connect(obj, \"onchange\", ui, \"update\");\ndojo.connect(obj, \"onchange\", ui, ui.update); // same</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>Using return value for disconnect: </p> <pre><code>var link = dojo.connect(obj, \"onchange\", ui, \"update\");\n...\ndojo.disconnect(link);</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<p>When onglobalevent executes, watcher.handler is invoked: </p> <pre><code>dojo.connect(null, \"onglobalevent\", watcher, \"handler\");</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 4</h3>\n<p>When ob.onCustomEvent executes, customEventHandler is invoked: </p> <pre><code>dojo.connect(ob, \"onCustomEvent\", null, \"customEventHandler\");\ndojo.connect(ob, \"onCustomEvent\", \"customEventHandler\"); // same</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 5</h3>\n<p>When ob.onCustomEvent executes, customEventHandler is invoked with the same scope (this): </p> <pre><code>dojo.connect(ob, \"onCustomEvent\", null, customEventHandler);\ndojo.connect(ob, \"onCustomEvent\", customEventHandler); // same</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 6</h3>\n<p>When globalEvent executes, globalHandler is invoked with the same scope (this): </p> <pre><code>dojo.connect(null, \"globalEvent\", null, globalHandler);\ndojo.connect(\"globalEvent\", globalHandler); // same</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_connect_connectPublisher\">\n<span class=\"functionIcon\">connectPublisher</span><span class=\"parameters\">(topic,obj,event)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"connect\" class=\"jsdoc-link\">dojo/_base/connect</a> </p> <p>Ensure that every time obj.event() is called, a message is published on the topic. Returns a handle which can be passed to dojo.disconnect() to disable subsequent automatic publication on the topic.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">topic</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>The name of the topic to publish.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">obj</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>The source object for the event function. Defaults to kernel.global if null.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">event</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>The name of the event function in obj. I.e. identifies a property obj[event].</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>dojo.connectPublisher(\"/ajax/start\", dojo, \"xhrGet\");</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_connect_disconnect\">\n<span class=\"functionIcon\">disconnect</span><span class=\"parameters\">(handle)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"connect\" class=\"jsdoc-link\">dojo/_base/connect</a> </p> <p>Remove a link created by dojo.connect.</p>  <p>Removes the connection between event and the method referenced by handle.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">handle</td> <td class=\"jsdoc-param-type\">Handle</td> <td class=\"jsdoc-param-description\">\n<p>the return value of the dojo.connect call that created the connection.</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_connect_isCopyKey\">\n<span class=\"functionIcon\">isCopyKey</span><span class=\"parameters\">(e)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"connect\" class=\"jsdoc-link\">dojo/_base/connect</a> </p> <p>Checks an event for the copy key (meta on Mac, and ctrl anywhere else)</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">e</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\">\n<p>Event object to examine</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_connect_publish\">\n<span class=\"functionIcon\">publish</span><span class=\"parameters\">(topic,args)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"connect\" class=\"jsdoc-link\">dojo/_base/connect</a> </p> <p>Invoke all listener method subscribed to topic.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">topic</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>The name of the topic to publish.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">args</td> <td class=\"jsdoc-param-type\">Array</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>An array of arguments. The arguments will be applied to each topic subscriber (as first class parameters, via apply).</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>dojo.subscribe(\"alerts\", null, function(caption, message){ alert(caption + \"\\n\" + message); };\ndojo.publish(\"alerts\", [ \"read this\", \"hello world\" ]);</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_connect_subscribe\">\n<span class=\"functionIcon\">subscribe</span><span class=\"parameters\">(topic,context,method)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"connect\" class=\"jsdoc-link\">dojo/_base/connect</a> </p> <p>Attach a listener to a named topic. The listener function is invoked whenever the named topic is published (see: dojo.publish). Returns a handle which is needed to unsubscribe this listener.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">topic</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>The topic to which to subscribe.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">context</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Scope in which method will be invoked, or null for default scope.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">method</td> <td class=\"jsdoc-param-type\">String | Function</td> <td class=\"jsdoc-param-description\">\n<p>The name of a function in context, or a function reference. This is the function that is invoked when topic is published.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>dojo.subscribe(\"alerts\", null, function(caption, message){ alert(caption + \"\\n\" + message); });\ndojo.publish(\"alerts\", [ \"read this\", \"hello world\" ]);</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_connect_unsubscribe\">\n<span class=\"functionIcon\">unsubscribe</span><span class=\"parameters\">(handle)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"connect\" class=\"jsdoc-link\">dojo/_base/connect</a> </p> <p>Remove a topic listener.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">handle</td> <td class=\"jsdoc-param-type\">Handle</td> <td class=\"jsdoc-param-description\">\n<p>The handle returned from a call to subscribe.</p> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>var alerter = dojo.subscribe(\"alerts\", null, function(caption, message){ alert(caption + \"\\n\" + message); };\n...\ndojo.unsubscribe(alerter);</code></pre> </div> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/_base/connect.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/_base/connect.html</a>\n  </p>\n</div>\n","dojo/_base/declare":"<h1>dojo/_base/declare</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>Create a feature-rich constructor from compact notation.</p>  <p>Create a constructor using a compact notation for inheritance and prototype extension. </p> <p>Mixin ancestors provide a type of multiple inheritance. Prototypes of mixin ancestors are copied to the new class: changes to mixin prototypes will not affect classes to which they have been mixed in. </p> <p>Ancestors can be compound classes created by this version of declare(). In complex cases all base classes are going to be linearized according to C3 MRO algorithm (see <a href=\"http://www.python.org/download/releases/2.3/mro/\">http://www.python.org/download/releases/2.3/mro/</a> for more details). </p> <p>\"className\" is cached in \"declaredClass\" property of the new class, if it was supplied. The immediate super class will be cached in \"superclass\" property of the new class. </p> <p>Methods in \"props\" will be copied and modified: \"nom\" property (the declared name of the method) will be added to all copied functions to help identify them for the internal machinery. Be very careful, while reusing methods: if you use the same function under different names, it can produce errors in some cases. </p> <p>It is possible to use constructors created \"manually\" (without declare()) as bases. They will be called as usual during the creation of an instance, their methods will be chained, and even called by \"this.inherited()\". </p> <p>Special property \"-chains-\" governs how to chain methods. It is a dictionary, which uses method names as keys, and hint strings as values. If a hint string is \"after\", this method will be called after methods of its base classes. If a hint string is \"before\", this method will be called before methods of its base classes. </p> <p>If \"constructor\" is not mentioned in \"-chains-\" property, it will be chained using the legacy mode: using \"after\" chaining, calling preamble() method before each constructor, if available, and calling postscript() after all constructors were executed. If the hint is \"after\", it is chained as a regular method, but postscript() will be called after the chain of constructors. \"constructor\" cannot be chained \"before\", but it allows a special hint string: \"manual\", which means that constructors are not going to be chained in any way, and programmer will call them manually using this.inherited(). In the latter case postscript() will be called after the construction. </p> <p>All chaining hints are \"inherited\" from base classes and potentially can be overridden. Be very careful when overriding hints! Make sure that all chained methods can work in a proposed manner of chaining. </p> <p>Once a method was chained, it is impossible to unchain it. The only exception is \"constructor\". You don't need to define a method in order to supply a chaining hint. </p> <p>If a method is chained, it cannot use this.inherited() because all other methods in the hierarchy will be called automatically. </p> <p>Usually constructors and initializers of any kind are chained using \"after\" and destructors of any kind are chained as \"before\". Note that chaining assumes that chained methods do not return any value: any returned value will be discarded. </p>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">declare<span class=\"parameters\"><span class=\"paren\">(</span><span class=\"args\">className,superclass,props</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">className</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>The optional name of the constructor (loosely, a \"class\") stored in the \"declaredClass\" property in the created prototype. It will be used as a global name for a created constructor.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">superclass</td> <td class=\"jsdoc-param-type\">Function | Function[]</td> <td class=\"jsdoc-param-description\">\n<p>May be null, a Function, or an Array of Functions. This argument specifies a list of bases (the left-most one is the most deepest base).</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">props</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>An object whose properties are copied to the created prototype. Add an instance-initialization function by making it a property named \"constructor\".</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\"><a class=\"jsdoc-link\" href=\"declare.__declarecreatedobject\">dojo/_base/declare.__DeclareCreatedObject</a> | undefined</span></p> <p>New constructor function.</p>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/_base/declare.html\" target=\"_blank\">dojo/_base/declare reference documentation</a> for more information.</p>    <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>declare(\"my.classes.bar\", my.classes.foo, {\n    // properties to be added to the class prototype\n    someValue: 2,\n    // initialization function\n    constructor: function(){\n        this.myComplicatedObject = new ReallyComplicatedObject();\n    },\n    // other functions\n    someMethod: function(){\n        doStuff();\n    }\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<pre><code>var MyBase = declare(null, {\n    // constructor, properties, and methods go here\n    // ...\n});\nvar MyClass1 = declare(MyBase, {\n    // constructor, properties, and methods go here\n    // ...\n});\nvar MyClass2 = declare(MyBase, {\n    // constructor, properties, and methods go here\n    // ...\n});\nvar MyDiamond = declare([MyClass1, MyClass2], {\n    // constructor, properties, and methods go here\n    // ...\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<pre><code>var F = function(){ console.log(\"raw constructor\"); };\nF.prototype.method = function(){\n    console.log(\"raw method\");\n};\nvar A = declare(F, {\n    constructor: function(){\n        console.log(\"A.constructor\");\n    },\n    method: function(){\n        console.log(\"before calling F.method...\");\n        this.inherited(arguments);\n        console.log(\"...back in A\");\n    }\n});\nnew A().method();\n// will print:\n// raw constructor\n// A.constructor\n// before calling F.method...\n// raw method\n// ...back in A</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 4</h3>\n<pre><code>var A = declare(null, {\n    \"-chains-\": {\n        destroy: \"before\"\n    }\n});\nvar B = declare(A, {\n    constructor: function(){\n        console.log(\"B.constructor\");\n    },\n    destroy: function(){\n        console.log(\"B.destroy\");\n    }\n});\nvar C = declare(B, {\n    constructor: function(){\n        console.log(\"C.constructor\");\n    },\n    destroy: function(){\n        console.log(\"C.destroy\");\n    }\n});\nnew C().destroy();\n// prints:\n// B.constructor\n// C.constructor\n// C.destroy\n// B.destroy</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 5</h3>\n<pre><code>var A = declare(null, {\n    \"-chains-\": {\n        constructor: \"manual\"\n    }\n});\nvar B = declare(A, {\n    constructor: function(){\n        // ...\n        // call the base constructor with new parameters\n        this.inherited(arguments, [1, 2, 3]);\n        // ...\n    }\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 6</h3>\n<pre><code>var A = declare(null, {\n    \"-chains-\": {\n        m1: \"before\"\n    },\n    m1: function(){\n        console.log(\"A.m1\");\n    },\n    m2: function(){\n        console.log(\"A.m2\");\n    }\n});\nvar B = declare(A, {\n    \"-chains-\": {\n        m2: \"after\"\n    },\n    m1: function(){\n        console.log(\"B.m1\");\n    },\n    m2: function(){\n        console.log(\"B.m2\");\n    }\n});\nvar x = new B();\nx.m1();\n// prints:\n// B.m1\n// A.m1\nx.m2();\n// prints:\n// A.m2\n// B.m2</code></pre> </div> </div>         <h2 id=\"properties\">Properties</h2>    <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_declare_safeMixin\">\n<span class=\"functionIcon\">safeMixin</span><span class=\"parameters\">(target,source)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"declare\" class=\"jsdoc-link\">dojo/_base/declare</a> </p> <p>Mix in properties skipping a constructor and decorating functions like it is done by declare().</p>  <p>This function is used to mix in properties like lang.mixin does, but it skips a constructor property and decorates functions like declare() does. </p> <p>It is meant to be used with classes and objects produced with declare. Functions mixed in with dojo.safeMixin can use this.inherited() like normal methods. </p> <p>This function is used to implement extend() method of a constructor produced with declare(). </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">target</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>Target object to accept new properties.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">source</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>Source object for new properties.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Object</span></p> <p>Target object to accept new properties.</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>var A = declare(null, {\n    m1: function(){\n        console.log(\"A.m1\");\n    },\n    m2: function(){\n        console.log(\"A.m2\");\n    }\n});\nvar B = declare(A, {\n    m1: function(){\n        this.inherited(arguments);\n        console.log(\"B.m1\");\n    }\n});\nB.extend({\n    m2: function(){\n        this.inherited(arguments);\n        console.log(\"B.m2\");\n    }\n});\nvar x = new B();\ndojo.safeMixin(x, {\n    m1: function(){\n        this.inherited(arguments);\n        console.log(\"X.m1\");\n    },\n    m2: function(){\n        this.inherited(arguments);\n        console.log(\"X.m2\");\n    }\n});\nx.m2();\n// prints:\n// A.m1\n// B.m1\n// X.m1</code></pre> </div> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/_base/declare.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/_base/declare.html</a>\n  </p>\n</div>\n","dojo/_base/kernel.__xhrargs":"<h1>dojo/_base/kernel.__XhrArgs</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>In addition to the properties listed for the dojo._IoArgs type, the following properties are allowed for dojo.xhr* methods.</p>  <p> <strong>Note:</strong> This is not a real constructor, but just a description of the type of object that should be passed as a parameter to some method(s), and/or the return value from some method(s). In other words, the type exists only for documentation purposes, and you <strong>cannot</strong> call <code>new kernel.__XhrArgs()</code> </p>            <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel___XhrArgs_content\">\n<span class=\"objectIcon\">content</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>Contains properties with string values. These properties will be serialized as name1=value2 and passed in the request.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel___XhrArgs_contentType\">\n<span class=\"stringIcon\">contentType</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>\"application/x-www-form-urlencoded\" is default. Set to false to prevent a Content-Type header from being sent, or to a string to send a different Content-Type.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel___XhrArgs_failOk\">\n<span class=\"booleanIcon\">failOk</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>false is default. Indicates whether a request should be allowed to fail (and therefore no console error message in the event of a failure)</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel___XhrArgs_form\">\n<span class=\"domnodeIcon\">form</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>DOM node for a form. Used to extract the form values and send to the server.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel___XhrArgs_handleAs\">\n<span class=\"stringIcon\">handleAs</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>Acceptable values are: text (default), json, json-comment-optional, json-comment-filtered, javascript, xml. See <a class=\"jsdoc-link\" href=\"xhr.contenthandlers\">dojo/_base/xhr.contentHandlers</a></p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel___XhrArgs_headers\">\n<span class=\"objectIcon\">headers</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>Additional HTTP headers to send in the request.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel___XhrArgs_ioPublish\">\n<span class=\"booleanIcon\">ioPublish</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>Set this explicitly to false to prevent publishing of topics related to IO operations. Otherwise, if djConfig.ioPublish is set to true, topics will be published via <a class=\"jsdoc-link\" href=\"../topic#publish\">dojo/topic.publish()</a> for different phases of an IO operation. See <a class=\"jsdoc-link\" href=\"../main.__iopublish\">dojo/main.__IoPublish</a> for a list of topics that are published.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel___XhrArgs_preventCache\">\n<span class=\"booleanIcon\">preventCache</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>Default is false. If true, then a \"dojo.preventCache\" parameter is sent in the request with a value that changes with each request (timestamp). Useful only with GET-type requests.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel___XhrArgs_rawBody\">\n<span class=\"stringIcon\">rawBody</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>Sets the raw body for an HTTP request. If this is used, then the content property is ignored. This is mostly useful for HTTP methods that have a body to their requests, like PUT or POST. This property can be used instead of postData and putData for <a class=\"jsdoc-link\" href=\"xhr#rawXhrPost\">dojo/_base/xhr.rawXhrPost</a> and <a class=\"jsdoc-link\" href=\"xhr#rawXhrPut\">dojo/_base/xhr.rawXhrPut</a> respectively.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel___XhrArgs_sync\">\n<span class=\"booleanIcon\">sync</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>false is default. Indicates whether the request should be a synchronous (blocking) request.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel___XhrArgs_timeout\">\n<span class=\"numberIcon\">timeout</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>Milliseconds to wait for the response. If this time passes, the then error callbacks are called.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel___XhrArgs_url\">\n<span class=\"stringIcon\">url</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>URL to server endpoint.</p> </div>    <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel___XhrArgs_error\">\n<span class=\"functionIcon\">error</span><span class=\"parameters\">(response,ioArgs)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <p>This function will be called when the request fails due to a network or server error, the url is invalid, etc. It will also be called if the load or handle callback throws an exception, unless djConfig.debugAtAllCosts is true. This allows deployed applications to continue to run even when a logic error happens in the callback, while making it easier to troubleshoot while in debug mode.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">response</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>The response in the format as defined with handleAs.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">ioArgs</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"../main.__iocallbackargs\">dojo/main.__IoCallbackArgs</a></td> <td class=\"jsdoc-param-description\">\n<p>Provides additional information about the request.</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel___XhrArgs_handle\">\n<span class=\"functionIcon\">handle</span><span class=\"parameters\">(loadOrError,response,ioArgs)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <p>This function will be called at the end of every request, whether or not an error occurs.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">loadOrError</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>Provides a string that tells you whether this function was called because of success (load) or failure (error).</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">response</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>The response in the format as defined with handleAs.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">ioArgs</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"../main.__iocallbackargs\">dojo/main.__IoCallbackArgs</a></td> <td class=\"jsdoc-param-description\">\n<p>Provides additional information about the request.</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel___XhrArgs_load\">\n<span class=\"functionIcon\">load</span><span class=\"parameters\">(response,ioArgs)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <p>This function will be called on a successful HTTP response code.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">response</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>The response in the format as defined with handleAs.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">ioArgs</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"../main.__iocallbackargs\">dojo/main.__IoCallbackArgs</a></td> <td class=\"jsdoc-param-description\">\n<p>Provides additional information about the request.</p> </td> </tr> </table><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/_base/kernel.__XhrArgs.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/_base/kernel.__XhrArgs.html</a>\n  </p>\n</div>\n","dojo/_base/kernel.back":"<h1>dojo/_base/kernel.back</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>Browser history management resources</p>           <h2 id=\"methods\">Methods</h2>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_back_addToHistory\">\n<span class=\"functionIcon\">addToHistory</span><span class=\"parameters\">(args)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../back\" class=\"jsdoc-link\">dojo/back</a> </p> <p>adds a state object (args) to the history list.</p>  <p>To support getting back button notifications, the object argument should implement a function called either \"back\", \"backButton\", or \"handle\". The string \"back\" will be passed as the first and only argument to this callback. </p> <p>To support getting forward button notifications, the object argument should implement a function called either \"forward\", \"forwardButton\", or \"handle\". The string \"forward\" will be passed as the first and only argument to this callback. </p> <p>If you want the browser location string to change, define \"changeUrl\" on the object. If the value of \"changeUrl\" is true, then a unique number will be appended to the URL as a fragment identifier (<a href=\"http://some.domain.com/path#uniquenumber\">http://some.domain.com/path#uniquenumber</a>). If it is any other value that does not evaluate to false, that value will be used as the fragment identifier. For example, if changeUrl: 'page1', then the URL will look like: <a href=\"http://some.domain.com/path#page1\">http://some.domain.com/path#page1</a> </p> <p>There are problems with using <a class=\"jsdoc-link\" href=\"../back\">dojo/back</a> with semantically-named fragment identifiers (\"hash values\" on an URL). In most browsers it will be hard for <a class=\"jsdoc-link\" href=\"../back\">dojo/back</a> to know distinguish a back from a forward event in those cases. For back/forward support to work best, the fragment ID should always be a unique value (something using new Date().getTime() for example). If you want to detect hash changes using semantic fragment IDs, then consider using <a class=\"jsdoc-link\" href=\"../hash\">dojo/hash</a> instead (in Dojo 1.4+). </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">args</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>The state object that will be added to the history list.</p> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>back.addToHistory({\n    back: function(){ console.log('back pressed'); },\n    forward: function(){ console.log('forward pressed'); },\n    changeUrl: true\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_back_getHash\">\n<span class=\"functionIcon\">getHash</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../back\" class=\"jsdoc-link\">dojo/back</a> </p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_back_goBack\">\n<span class=\"functionIcon\">goBack</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../back\" class=\"jsdoc-link\">dojo/back</a> </p> <p>private method. Do not call this directly.</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_back_goForward\">\n<span class=\"functionIcon\">goForward</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../back\" class=\"jsdoc-link\">dojo/back</a> </p> <p>private method. Do not call this directly.</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_back_init\">\n<span class=\"functionIcon\">init</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../back\" class=\"jsdoc-link\">dojo/back</a> </p> <p>Initializes the undo stack. This must be called from a </p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/_base/kernel.back.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/_base/kernel.back.html</a>\n  </p>\n</div>\n","dojo/_base/kernel.cldr":"<h1>dojo/_base/kernel.cldr</h1>           <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_cldr_monetary\">\n<span class=\"objectIcon\">monetary</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../cldr/monetary\" class=\"jsdoc-link\">dojo/cldr/monetary</a> </p> <div class=\"jsdoc-summary\">\n<p>TODOC</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_cldr_supplemental\">\n<span class=\"objectIcon\">supplemental</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../cldr/supplemental\" class=\"jsdoc-link\">dojo/cldr/supplemental</a> </p> <div class=\"jsdoc-summary\">\n<p>TODOC</p> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/_base/kernel.cldr.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/_base/kernel.cldr.html</a>\n  </p>\n</div>\n","dojo/_base/event":"<h1>dojo/_base/event</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>This module defines dojo DOM event API. Usually you should use <a class=\"jsdoc-link\" href=\"../on\">dojo/on</a>, and evt.stopPropagation() + evt.preventDefault(), rather than this module.</p>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/_base/event.html\" target=\"_blank\">dojo/_base/event reference documentation</a> for more information.</p>          <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_event_fix\">\n<span class=\"functionIcon\">fix</span><span class=\"parameters\">(evt,sender)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"event\" class=\"jsdoc-link\">dojo/_base/event</a> </p> <p>normalizes properties on the event object including event bubbling methods, keystroke normalization, and x/y positions</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">evt</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\">\n<p>native event object</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">sender</td> <td class=\"jsdoc-param-type\">DOMNode</td> <td class=\"jsdoc-param-description\">\n<p>node to treat as \"currentTarget\"</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Event</span></p> <p>native event object</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_event_stop\">\n<span class=\"functionIcon\">stop</span><span class=\"parameters\">(evt)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"event\" class=\"jsdoc-link\">dojo/_base/event</a> </p> <p>prevents propagation and clobbers the default action of the passed event</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">evt</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\">\n<p>The event object. If omitted, window.event is used on IE.</p> </td> </tr> </table><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/_base/event.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/_base/event.html</a>\n  </p>\n</div>\n","dojo/_base/html":"<h1>dojo/_base/html</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>This module is a stub for the core dojo DOM API.</p>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/_base/html.html\" target=\"_blank\">dojo/_base/html reference documentation</a> for more information.</p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/_base/html.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/_base/html.html</a>\n  </p>\n</div>\n","dojo/_base/json":"<h1>dojo/_base/json</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>This module defines the dojo JSON API.</p>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/_base/json.html\" target=\"_blank\">dojo/_base/json reference documentation</a> for more information.</p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/_base/json.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/_base/json.html</a>\n  </p>\n</div>\n","dojo/_base/kernel.__iocallbackargs":"<h1>dojo/_base/kernel.__IoCallbackArgs</h1>  <p> <strong>Note:</strong> This is not a real constructor, but just a description of the type of object that should be passed as a parameter to some method(s), and/or the return value from some method(s). In other words, the type exists only for documentation purposes, and you <strong>cannot</strong> call <code>new kernel.__IoCallbackArgs()</code> </p>          <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel___IoCallbackArgs_args\">\n<span class=\"objectIcon\">args</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>the original object argument to the IO call.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel___IoCallbackArgs_canDelete\">\n<span class=\"booleanIcon\">canDelete</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>For <a class=\"jsdoc-link\" href=\"../io/script\">dojo/io/script</a> calls only, indicates whether the script tag that represents the request can be deleted after callbacks have been called. Used internally to know when cleanup can happen on JSONP-type requests.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel___IoCallbackArgs_handleAs\">\n<span class=\"stringIcon\">handleAs</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>The final indicator on how the response will be handled.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel___IoCallbackArgs_id\">\n<span class=\"stringIcon\">id</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>For <a class=\"jsdoc-link\" href=\"../io/script\">dojo/io/script</a> calls only, the internal script ID used for the request.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel___IoCallbackArgs_json\">\n<span class=\"objectIcon\">json</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>For <a class=\"jsdoc-link\" href=\"../io/script\">dojo/io/script</a> calls only: holds the JSON response for JSONP-type requests. Used internally to hold on to the JSON responses. You should not need to access it directly -- the same object should be passed to the success callbacks directly.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel___IoCallbackArgs_query\">\n<span class=\"stringIcon\">query</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>For non-GET requests, the name1=value1&amp;name2=value2 parameters sent up in the request.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel___IoCallbackArgs_url\">\n<span class=\"stringIcon\">url</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>The final URL used for the call. Many times it will be different than the original args.url value.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel___IoCallbackArgs_xhr\">\n<span class=\"objectIcon\">xhr</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>For XMLHttpRequest calls only, the XMLHttpRequest object that was used for the request.</p> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/_base/kernel.__IoCallbackArgs.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/_base/kernel.__IoCallbackArgs.html</a>\n  </p>\n</div>\n","dojo/_base/kernel.colors":"<h1>dojo/_base/kernel.colors</h1>           <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_colors_makeGrey\">\n<span class=\"functionIcon\">makeGrey</span><span class=\"parameters\">(g,a)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p> <p>creates a greyscale color with an optional alpha</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">g</td> <td class=\"jsdoc-param-type\">Number</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">a</td> <td class=\"jsdoc-param-type\">Number</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/_base/kernel.colors.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/_base/kernel.colors.html</a>\n  </p>\n</div>\n","dojo/_base/fx":"<h1>dojo/_base/fx</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>This module defines the base <a class=\"jsdoc-link\" href=\"fx\">dojo/_base/fx</a> implementation.</p>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/_base/fx.html\" target=\"_blank\">dojo/_base/fx reference documentation</a> for more information.</p>          <h2 id=\"methods\">Methods</h2>       <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_fx_anim\">\n<span class=\"functionIcon\">anim</span><span class=\"parameters\">(node,properties,duration,easing,onEnd,delay)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"fx\" class=\"jsdoc-link\">dojo/_base/fx</a> </p> <p>A simpler interface to <code>animateProperty()</code>, also returns an instance of <code>Animation</code> but begins the animation immediately, unlike nearly every other Dojo animation API.</p>  <p>Simpler (but somewhat less powerful) version of <code>animateProperty</code>. It uses defaults for many basic properties and allows for positional parameters to be used in place of the packed \"property bag\" which is used for other Dojo animation methods. </p> <p>The <code>Animation</code> object returned will be already playing, so calling play() on it again is (usually) a no-op.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode | String</td> <td class=\"jsdoc-param-description\">\n<p>a DOM node or the id of a node to animate CSS properties on</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">properties</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">duration</td> <td class=\"jsdoc-param-type\">Integer</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>The number of milliseconds over which the animation should run. Defaults to the global animation default duration (350ms).</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">easing</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>An easing function over which to calculate acceleration and deceleration of the animation through its duration. A default easing algorithm is provided, but you may plug in any you wish. A large selection of easing algorithms are available in <code>dojo/fx/easing</code>.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">onEnd</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>A function to be called when the animation finishes running.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">delay</td> <td class=\"jsdoc-param-type\">Integer</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>The number of milliseconds to delay beginning the animation by. The default is 0.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Fade out a node </p> <pre><code>basefx.anim(\"id\", { opacity: 0 });</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>Fade out a node over a full second </p> <pre><code>basefx.anim(\"id\", { opacity: 0 }, 1000);</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_fx_animateProperty\">\n<span class=\"functionIcon\">animateProperty</span><span class=\"parameters\">(args)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"fx\" class=\"jsdoc-link\">dojo/_base/fx</a> </p> <p>Returns an animation that will transition the properties of node defined in <code>args</code> depending how they are defined in <code>args.properties</code> </p>  <p>Foundation of most <a class=\"jsdoc-link\" href=\"fx\">dojo/_base/fx</a> animations. It takes an object of \"properties\" corresponding to style properties, and animates them in parallel over a set duration. </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">args</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>An object with the following properties:</p>\n<ul>\n<li>properties (Object, optional): <p>A hash map of style properties to Objects describing the transition, such as the properties of _Line with an additional 'units' property</p> </li>\n<li>node (DOMNode|String): <p>The node referenced in the animation</p> </li>\n<li>duration (Integer, optional): <p>Duration of the animation in milliseconds.</p> </li>\n<li>easing (Function, optional): <p>An easing function.</p> </li>\n</ul> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">instance</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>A simple animation that changes the width of the specified node. </p> <pre><code>basefx.animateProperty({\n    node: \"nodeId\",\n    properties: { width: 400 },\n}).play();</code></pre> <p>Dojo figures out the start value for the width and converts the </p> <p>integer specified for the width to the more expressive but verbose form <code>{ width: { end: '400', units: 'px' } }</code> which you can also specify directly. Defaults to 'px' if omitted. </p> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>Animate width, height, and padding over 2 seconds... the pedantic way: </p> <pre><code>basefx.animateProperty({ node: node, duration:2000,\n    properties: {\n        width: { start: '200', end: '400', units:\"px\" },\n        height: { start:'200', end: '400', units:\"px\" },\n        paddingTop: { start:'5', end:'50', units:\"px\" }\n    }\n}).play();</code></pre> <p>Note 'paddingTop' is used over 'padding-top'. Multi-name CSS properties </p> <p>are written using \"mixed case\", as the hyphen is illegal as an object key. </p> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<p>Plug in a different easing function and register a callback for when the animation ends. Easing functions accept values between zero and one and return a value on that basis. In this case, an exponential-in curve. </p> <pre><code>basefx.animateProperty({\n    node: \"nodeId\",\n    // dojo figures out the start value\n    properties: { width: { end: 400 } },\n    easing: function(n){\n        return (n==0) ? 0 : Math.pow(2, 10 * (n - 1));\n    },\n    onEnd: function(node){\n        // called when the animation finishes. The animation\n        // target is passed to this function\n    }\n}).play(500); // delay playing half a second</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 4</h3>\n<p>Like all <code>Animation</code>s, animateProperty returns a handle to the Animation instance, which fires the events common to Dojo FX. Use <code>aspect.after</code> to access these events outside of the Animation definition: </p> <pre><code>var anim = basefx.animateProperty({\n    node:\"someId\",\n    properties:{\n        width:400, height:500\n    }\n});\naspect.after(anim, \"onEnd\", function(){\n    console.log(\"animation ended\");\n}, true);\n// play the animation now:\nanim.play();</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 5</h3>\n<p>Each property can be a function whose return value is substituted along. Additionally, each measurement (eg: start, end) can be a function. The node reference is passed directly to callbacks. </p> <pre><code>basefx.animateProperty({\n    node:\"mine\",\n    properties:{\n        height:function(node){\n            // shrink this node by 50%\n            return domGeom.position(node).h / 2\n        },\n        width:{\n            start:function(node){ return 100; },\n            end:function(node){ return 200; }\n        }\n    }\n}).play();</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_fx_Animation\">\n<span class=\"functionIcon\">Animation</span><span class=\"parameters\">(args)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"fx\" class=\"jsdoc-link\">dojo/_base/fx</a> </p> <p>A generic animation class that fires callbacks into its handlers object at various states.</p>  <p>A generic animation class that fires callbacks into its handlers object at various states. Nearly all dojo animation functions return an instance of this method, usually without calling the .play() method beforehand. Therefore, you will likely need to call .play() on instances of <code>Animation</code> when one is returned.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">args</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>The 'magic argument', mixing all the properties into this animation instance.</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_fx_fadeIn\">\n<span class=\"functionIcon\">fadeIn</span><span class=\"parameters\">(args)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"fx\" class=\"jsdoc-link\">dojo/_base/fx</a> </p> <p>Returns an animation that will fade node defined in 'args' from its current opacity to fully opaque.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">args</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>An object with the following properties:</p>\n<ul>\n<li>node (DOMNode|String): <p>The node referenced in the animation</p> </li>\n<li>duration (Integer, optional): <p>Duration of the animation in milliseconds.</p> </li>\n<li>easing (Function, optional): <p>An easing function.</p> </li>\n</ul> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_fx_fadeOut\">\n<span class=\"functionIcon\">fadeOut</span><span class=\"parameters\">(args)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"fx\" class=\"jsdoc-link\">dojo/_base/fx</a> </p> <p>Returns an animation that will fade node defined in 'args' from its current opacity to fully transparent.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">args</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>An object with the following properties:</p>\n<ul>\n<li>node (DOMNode|String): <p>The node referenced in the animation</p> </li>\n<li>duration (Integer, optional): <p>Duration of the animation in milliseconds.</p> </li>\n<li>easing (Function, optional): <p>An easing function.</p> </li>\n</ul> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/_base/fx.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/_base/fx.html</a>\n  </p>\n</div>\n","dojo/_base/kernel.__ioargs":"<h1>dojo/_base/kernel.__IoArgs</h1>  <p> <strong>Note:</strong> This is not a real constructor, but just a description of the type of object that should be passed as a parameter to some method(s), and/or the return value from some method(s). In other words, the type exists only for documentation purposes, and you <strong>cannot</strong> call <code>new kernel.__IoArgs()</code> </p>            <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel___IoArgs_content\">\n<span class=\"objectIcon\">content</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>Contains properties with string values. These properties will be serialized as name1=value2 and passed in the request.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel___IoArgs_form\">\n<span class=\"domnodeIcon\">form</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>DOM node for a form. Used to extract the form values and send to the server.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel___IoArgs_handleAs\">\n<span class=\"stringIcon\">handleAs</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>Acceptable values depend on the type of IO transport (see specific IO calls for more information).</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel___IoArgs_ioPublish\">\n<span class=\"booleanIcon\">ioPublish</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>Set this explicitly to false to prevent publishing of topics related to IO operations. Otherwise, if djConfig.ioPublish is set to true, topics will be published via <a class=\"jsdoc-link\" href=\"../topic#publish\">dojo/topic.publish()</a> for different phases of an IO operation. See <a class=\"jsdoc-link\" href=\"../main.__iopublish\">dojo/main.__IoPublish</a> for a list of topics that are published.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel___IoArgs_preventCache\">\n<span class=\"booleanIcon\">preventCache</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>Default is false. If true, then a \"dojo.preventCache\" parameter is sent in the request with a value that changes with each request (timestamp). Useful only with GET-type requests.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel___IoArgs_rawBody\">\n<span class=\"stringIcon\">rawBody</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>Sets the raw body for an HTTP request. If this is used, then the content property is ignored. This is mostly useful for HTTP methods that have a body to their requests, like PUT or POST. This property can be used instead of postData and putData for <a class=\"jsdoc-link\" href=\"xhr#rawXhrPost\">dojo/_base/xhr.rawXhrPost</a> and <a class=\"jsdoc-link\" href=\"xhr#rawXhrPut\">dojo/_base/xhr.rawXhrPut</a> respectively.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel___IoArgs_timeout\">\n<span class=\"numberIcon\">timeout</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>Milliseconds to wait for the response. If this time passes, the then error callbacks are called.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel___IoArgs_url\">\n<span class=\"stringIcon\">url</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>URL to server endpoint.</p> </div>    <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel___IoArgs_error\">\n<span class=\"functionIcon\">error</span><span class=\"parameters\">(response,ioArgs)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <p>This function will be called when the request fails due to a network or server error, the url is invalid, etc. It will also be called if the load or handle callback throws an exception, unless djConfig.debugAtAllCosts is true. This allows deployed applications to continue to run even when a logic error happens in the callback, while making it easier to troubleshoot while in debug mode.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">response</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>The response in the format as defined with handleAs.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">ioArgs</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"../main.__iocallbackargs\">dojo/main.__IoCallbackArgs</a></td> <td class=\"jsdoc-param-description\">\n<p>Provides additional information about the request.</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel___IoArgs_handle\">\n<span class=\"functionIcon\">handle</span><span class=\"parameters\">(loadOrError,response,ioArgs)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <p>This function will be called at the end of every request, whether or not an error occurs.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">loadOrError</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>Provides a string that tells you whether this function was called because of success (load) or failure (error).</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">response</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>The response in the format as defined with handleAs.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">ioArgs</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"../main.__iocallbackargs\">dojo/main.__IoCallbackArgs</a></td> <td class=\"jsdoc-param-description\">\n<p>Provides additional information about the request.</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel___IoArgs_load\">\n<span class=\"functionIcon\">load</span><span class=\"parameters\">(response,ioArgs)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <p>This function will be called on a successful HTTP response code.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">response</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>The response in the format as defined with handleAs.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">ioArgs</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"../main.__iocallbackargs\">dojo/main.__IoCallbackArgs</a></td> <td class=\"jsdoc-param-description\">\n<p>Provides additional information about the request.</p> </td> </tr> </table><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/_base/kernel.__IoArgs.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/_base/kernel.__IoArgs.html</a>\n  </p>\n</div>\n","dojo/_base/kernel.data":"<h1>dojo/_base/kernel.data</h1>             <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_data_api\">\n<span class=\"objectIcon\">api</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../data/api/read\" class=\"jsdoc-link\">dojo/data/api/Read</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_data_util\">\n<span class=\"objectIcon\">util</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../data/util/filter\" class=\"jsdoc-link\">dojo/data/util/filter</a> </p>    <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_data_ItemFileReadStore\">\n<span class=\"functionIcon\">ItemFileReadStore</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../data/itemfilereadstore\" class=\"jsdoc-link\">dojo/data/ItemFileReadStore</a> </p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_data_ItemFileWriteStore\">\n<span class=\"functionIcon\">ItemFileWriteStore</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../data/itemfilewritestore\" class=\"jsdoc-link\">dojo/data/ItemFileWriteStore</a> </p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_data_ObjectStore\">\n<span class=\"functionIcon\">ObjectStore</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../data/objectstore\" class=\"jsdoc-link\">dojo/data/ObjectStore</a> </p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/_base/kernel.data.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/_base/kernel.data.html</a>\n  </p>\n</div>\n","dojo/_base/kernel.doc":"<h1>dojo/_base/kernel.doc</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>Alias for the current document. 'doc' can be modified for temporary context shifting. See also withDoc().</p>  <p>Use this rather than referring to 'window.document' to ensure your code runs correctly in managed contexts.</p>     <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>n.appendChild(dojo.doc.createElement('div'));</code></pre> </div> </div>       <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_doc_documentElement\">\n<span class=\"objectIcon\">documentElement</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"http://dojotoolkit.org/api/1.10/dojox/gfx/_base\" class=\"jsdoc-link\">dojox/gfx/_base</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_doc_dojoClick\">\n<span class=\"booleanIcon\">dojoClick</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"http://dojotoolkit.org/api/1.10/dojox/mobile/common\" class=\"jsdoc-link\">dojox/mobile/common</a> </p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/_base/kernel.doc.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/_base/kernel.doc.html</a>\n  </p>\n</div>\n","dojo/_base/deferred":"<h1>dojo/_base/Deferred</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>Deprecated. This module defines the legacy <a class=\"jsdoc-link\" href=\"deferred\">dojo/_base/Deferred</a> API. New code should use <a class=\"jsdoc-link\" href=\"../deferred\">dojo/Deferred</a> instead.</p>  <p>The Deferred API is based on the concept of promises that provide a generic interface into the eventual completion of an asynchronous action. The motivation for promises fundamentally is about creating a separation of concerns that allows one to achieve the same type of call patterns and logical data flow in asynchronous code as can be achieved in synchronous code. Promises allows one to be able to call a function purely with arguments needed for execution, without conflating the call with concerns of whether it is sync or async. One shouldn't need to alter a call's arguments if the implementation switches from sync to async (or vice versa). By having async functions return promises, the concerns of making the call are separated from the concerns of asynchronous interaction (which are handled by the promise). </p> <p>The Deferred is a type of promise that provides methods for fulfilling the promise with a successful result or an error. The most important method for working with Dojo's promises is the then() method, which follows the CommonJS proposed promise API. An example of using a Dojo promise: </p> <pre><code>var resultingPromise = someAsyncOperation.then(function(result){\n    ... handle result ...\n},\nfunction(error){\n    ... handle error ...\n});</code></pre> <p>The .then() call returns a new promise that represents the result of the execution of the callback. The callbacks will never affect the original promises value. </p> <p>The Deferred instances also provide the following functions for backwards compatibility: </p> <ul> <li>addCallback(handler)</li> <li>addErrback(handler)</li> <li>callback(result)</li> <li>errback(result)</li> </ul> <p>Callbacks are allowed to return promises themselves, so you can build complicated sequences of events with ease. </p> <p>The creator of the Deferred may specify a canceller. The canceller is a function that will be called if Deferred.cancel is called before the Deferred fires. You can use this to implement clean aborting of an XMLHttpRequest, etc. Note that cancel will fire the deferred with a CancelledError (unless your canceller returns another kind of error), so the errbacks should be prepared to handle that error for cancellable Deferreds.</p>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">Deferred<span class=\"parameters\"><span class=\"paren\">(</span><span class=\"args\">canceller</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">canceller</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/_base/Deferred.html\" target=\"_blank\">dojo/_base/Deferred reference documentation</a> for more information.</p>    <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>var deferred = new Deferred();\nsetTimeout(function(){ deferred.callback({success: true}); }, 1000);\nreturn deferred;</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>Deferred objects are often used when making code asynchronous. It may be easiest to write functions in a synchronous manner and then split code using a deferred to trigger a response to a long-lived operation. For example, instead of register a callback function to denote when a rendering operation completes, the function can simply return a deferred: </p> <pre><code>// callback style:\nfunction renderLotsOfData(data, callback){\n    var success = false\n    try{\n        for(var x in data){\n            renderDataitem(data[x]);\n        }\n        success = true;\n    }catch(e){ }\n    if(callback){\n        callback(success);\n    }\n}\n\n\n// using callback style\nrenderLotsOfData(someDataObj, function(success){\n    // handles success or failure\n    if(!success){\n        promptUserToRecover();\n    }\n});\n// NOTE: no way to add another callback here!!</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<p>Using a Deferred doesn't simplify the sending code any, but it provides a standard interface for callers and senders alike, providing both with a simple way to service multiple callbacks for an operation and freeing both sides from worrying about details such as \"did this get called already?\". With Deferreds, new callbacks can be added at any time. </p> <pre><code>// Deferred style:\nfunction renderLotsOfData(data){\n    var d = new Deferred();\n    try{\n        for(var x in data){\n            renderDataitem(data[x]);\n        }\n        d.callback(true);\n    }catch(e){\n        d.errback(new Error(\"rendering failed\"));\n    }\n    return d;\n}\n\n\n// using Deferred style\nrenderLotsOfData(someDataObj).then(null, function(){\n    promptUserToRecover();\n});\n// NOTE: addErrback and addCallback both return the Deferred\n// again, so we could chain adding callbacks or save the\n// deferred for later should we need to be notified again.</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 4</h3>\n<p>In this example, renderLotsOfData is synchronous and so both versions are pretty artificial. Putting the data display on a timeout helps show why Deferreds rock: </p> <pre><code>// Deferred style and async func\nfunction renderLotsOfData(data){\n    var d = new Deferred();\n    setTimeout(function(){\n        try{\n            for(var x in data){\n                renderDataitem(data[x]);\n            }\n            d.callback(true);\n        }catch(e){\n            d.errback(new Error(\"rendering failed\"));\n        }\n    }, 100);\n    return d;\n}\n\n\n// using Deferred style\nrenderLotsOfData(someDataObj).then(null, function(){\n    promptUserToRecover();\n});</code></pre> <p>Note that the caller doesn't have to change his code at all to handle the asynchronous case.</p> </div> </div>         <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Deferred_fired\">\n<span class=\"numberIcon\">fired</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"deferred\" class=\"jsdoc-link\">dojo/_base/Deferred</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Deferred_promise\">\n<span class=\"objectIcon\">promise</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"deferred\" class=\"jsdoc-link\">dojo/_base/Deferred</a> </p>    <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Deferred_addBoth\">\n<span class=\"functionIcon\">addBoth</span><span class=\"parameters\">(callback)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"deferred\" class=\"jsdoc-link\">dojo/_base/Deferred</a> </p> <p>Add handler as both successful callback and error callback for this deferred instance.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">callback</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | undefined</span></p> <p>Returns this deferred object.</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Deferred_addCallback\">\n<span class=\"functionIcon\">addCallback</span><span class=\"parameters\">(callback)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"deferred\" class=\"jsdoc-link\">dojo/_base/Deferred</a> </p> <p>Adds successful callback for this deferred instance.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">callback</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | undefined</span></p> <p>Returns this deferred object.</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Deferred_addCallbacks\">\n<span class=\"functionIcon\">addCallbacks</span><span class=\"parameters\">(callback,errback)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"deferred\" class=\"jsdoc-link\">dojo/_base/Deferred</a> </p> <p>Adds callback and error callback for this deferred instance.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">callback</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>The callback attached to this deferred object.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">errback</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>The error callback attached to this deferred object.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any</span></p> <p>Returns this deferred object.</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Deferred_addErrback\">\n<span class=\"functionIcon\">addErrback</span><span class=\"parameters\">(errback)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"deferred\" class=\"jsdoc-link\">dojo/_base/Deferred</a> </p> <p>Adds error callback for this deferred instance.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">errback</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | undefined</span></p> <p>Returns this deferred object.</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Deferred_callback\">\n<span class=\"functionIcon\">callback</span><span class=\"parameters\">(value)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"deferred\" class=\"jsdoc-link\">dojo/_base/Deferred</a> </p> <p>Fulfills the Deferred instance successfully with the provide value</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">value</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Deferred_cancel\">\n<span class=\"functionIcon\">cancel</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"deferred\" class=\"jsdoc-link\">dojo/_base/Deferred</a> </p> <p>Cancels the asynchronous operation</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Deferred_errback\">\n<span class=\"functionIcon\">errback</span><span class=\"parameters\">(error)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"deferred\" class=\"jsdoc-link\">dojo/_base/Deferred</a> </p> <p>Fulfills the Deferred instance as an error with the provided error</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">error</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Deferred_isCanceled\">\n<span class=\"functionIcon\">isCanceled</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"deferred\" class=\"jsdoc-link\">dojo/_base/Deferred</a> </p> <p>Checks whether the deferred has been canceled.</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Boolean</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Deferred_isFulfilled\">\n<span class=\"functionIcon\">isFulfilled</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"deferred\" class=\"jsdoc-link\">dojo/_base/Deferred</a> </p> <p>Checks whether the deferred has been resolved or rejected.</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Boolean</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Deferred_isRejected\">\n<span class=\"functionIcon\">isRejected</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"deferred\" class=\"jsdoc-link\">dojo/_base/Deferred</a> </p> <p>Checks whether the deferred has been rejected.</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Boolean</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Deferred_isResolved\">\n<span class=\"functionIcon\">isResolved</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"deferred\" class=\"jsdoc-link\">dojo/_base/Deferred</a> </p> <p>Checks whether the deferred has been resolved.</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Boolean</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Deferred_progress\">\n<span class=\"functionIcon\">progress</span><span class=\"parameters\">(update)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"deferred\" class=\"jsdoc-link\">dojo/_base/Deferred</a> </p> <p>Send progress events to all listeners</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">update</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Deferred_reject\">\n<span class=\"functionIcon\">reject</span><span class=\"parameters\">(error)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"deferred\" class=\"jsdoc-link\">dojo/_base/Deferred</a> </p> <p>Fulfills the Deferred instance as an error with the provided error</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">error</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Deferred_resolve\">\n<span class=\"functionIcon\">resolve</span><span class=\"parameters\">(value)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"deferred\" class=\"jsdoc-link\">dojo/_base/Deferred</a> </p> <p>Fulfills the Deferred instance successfully with the provide value</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">value</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Deferred_then\">\n<span class=\"functionIcon\">then</span><span class=\"parameters\">(resolvedCallback,errorCallback,progressCallback)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"deferred\" class=\"jsdoc-link\">dojo/_base/Deferred</a> </p> <p>Adds a fulfilledHandler, errorHandler, and progressHandler to be called for completion of a promise. The fulfilledHandler is called when the promise is fulfilled. The errorHandler is called when a promise fails. The progressHandler is called for progress events. All arguments are optional and non-function values are ignored. The progressHandler is not only an optional argument, but progress events are purely optional. Promise providers are not required to ever create progress events. </p> <p>This function will return a new promise that is fulfilled when the given fulfilledHandler or errorHandler callback is finished. This allows promise operations to be chained together. The value returned from the callback handler is the fulfillment value for the returned promise. If the callback throws an error, the returned promise will be moved to failed state. </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">resolvedCallback</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> <tr> <td class=\"jsdoc-param-name\">errorCallback</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> <tr> <td class=\"jsdoc-param-name\">progressCallback</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any</span></p> <p>Returns a new promise that represents the result of the execution of the callback. The callbacks will never affect the original promises value.</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>An example of using a CommonJS compliant promise: </p> <pre><code>asyncComputeTheAnswerToEverything().\n    then(addTwo).\n    then(printResult, onError);\n&gt;44</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Deferred_when\">\n<span class=\"functionIcon\">when</span><span class=\"parameters\">(valueOrPromise,callback,errback,progback)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../when\" class=\"jsdoc-link\">dojo/when</a> </p> <p>Transparently applies callbacks to values and/or promises.</p>  <p>Accepts promises but also transparently handles non-promises. If no callbacks are provided returns a promise, regardless of the initial value. Foreign promises are converted. </p> <p>If callbacks are provided and the initial value is not a promise, the callback is executed immediately with no error handling. Returns a promise if the initial value is a promise, or the result of the callback otherwise.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">valueOrPromise</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\">\n<p>Either a regular value or an object with a <code>then()</code> method that follows the Promises/A specification.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">callback</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Callback to be invoked when the promise is resolved, or a non-promise is received.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">errback</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Callback to be invoked when the promise is rejected.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">progback</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Callback to be invoked when the promise emits a progress update.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\"><a class=\"jsdoc-link\" href=\"../promise/promise\">dojo/promise/Promise</a> | summary: | name:</span></p> <p>Promise, or if a callback is provided, the result of the callback.</p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/_base/Deferred.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/_base/Deferred.html</a>\n  </p>\n</div>\n","dojo/_base/kernel.contenthandlers":"<h1>dojo/_base/kernel.contentHandlers</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>A map of available XHR transport handle types. Name matches the <code>handleAs</code> attribute passed to XHR calls.</p>  <p>A map of available XHR transport handle types. Name matches the <code>handleAs</code> attribute passed to XHR calls. Each contentHandler is called, passing the xhr object for manipulation. The return value from the contentHandler will be passed to the <code>load</code> or <code>handle</code> functions defined in the original xhr call.</p>     <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Creating a custom content-handler: </p> <pre><code>xhr.contentHandlers.makeCaps = function(xhr){\n    return xhr.responseText.toUpperCase();\n}\n// and later:\ndojo.xhrGet({\n    url:\"foo.txt\",\n    handleAs:\"makeCaps\",\n    load: function(data){ /* data is a toUpper version of foo.txt */ }\n});</code></pre> </div> </div>       <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_contentHandlers_auto\">\n<span class=\"functionIcon\">auto</span><span class=\"parameters\">(xhr)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"http://dojotoolkit.org/api/1.10/dojox/rpc/Service\" class=\"jsdoc-link\">dojox/rpc/Service</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">xhr</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_contentHandlers_javascript\">\n<span class=\"functionIcon\">javascript</span><span class=\"parameters\">(xhr)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <p>A contentHandler which evaluates the response data, expecting it to be valid JavaScript</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">xhr</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_contentHandlers_json\">\n<span class=\"functionIcon\">json</span><span class=\"parameters\">(xhr)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <p>A contentHandler which returns a JavaScript object created from the response data</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">xhr</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_contentHandlers_json-comment-filtered\">\n<span class=\"functionIcon\">json-comment-filtered</span><span class=\"parameters\">(xhr)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <p>A contentHandler which expects comment-filtered JSON.</p>  <p>A contentHandler which expects comment-filtered JSON. the json-comment-filtered option was implemented to prevent \"JavaScript Hijacking\", but it is less secure than standard JSON. Use standard JSON instead. JSON prefixing can be used to subvert hijacking. </p> <p>Will throw a notice suggesting to use application/json mimetype, as json-commenting can introduce security issues. To decrease the chances of hijacking, use the standard <code>json</code> contentHandler, and prefix your \"JSON\" with: {}&amp;&amp; </p> <p>use djConfig.useCommentedJson = true to turn off the notice</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">xhr</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_contentHandlers_json-comment-optional\">\n<span class=\"functionIcon\">json-comment-optional</span><span class=\"parameters\">(xhr)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <p>A contentHandler which checks the presence of comment-filtered JSON and alternates between the <code>json</code> and <code>json-comment-filtered</code> contentHandlers.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">xhr</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_contentHandlers_text\">\n<span class=\"functionIcon\">text</span><span class=\"parameters\">(xhr)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <p>A contentHandler which simply returns the plaintext response data</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">xhr</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_contentHandlers_xml\">\n<span class=\"functionIcon\">xml</span><span class=\"parameters\">(xhr)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <p>A contentHandler returning an XML Document parsed from the response data</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">xhr</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/_base/kernel.contentHandlers.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/_base/kernel.contentHandlers.html</a>\n  </p>\n</div>\n","dojo/_base/kernel.currency":"<h1>dojo/_base/kernel.currency</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>localized formatting and parsing routines for currencies</p>  <p>extends dojo.number to provide culturally-appropriate formatting of values in various world currencies, including use of a currency symbol. The currencies are specified by a three-letter international symbol in all uppercase, and support for the currencies is provided by the data in <code>dojo.cldr</code>. The scripts generating dojo.cldr specify which currency support is included. A fixed number of decimal places is determined based on the currency type and is not determined by the 'pattern' argument. The fractional portion is optional, by default, and variable length decimals are not supported.</p>           <h2 id=\"methods\">Methods</h2>       <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_currency_format\">\n<span class=\"functionIcon\">format</span><span class=\"parameters\">(value,options)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../currency\" class=\"jsdoc-link\">dojo/currency</a> </p> <p>Format a Number as a currency, using locale-specific settings </p>  <p>Create a string from a Number using a known, localized pattern. <a href=\"http://www.unicode.org/reports/tr35/#Number_Elements\">Formatting patterns</a> appropriate to the locale are chosen from the <a href=\"http://unicode.org/cldr\">CLDR</a> as well as the appropriate symbols and delimiters and number of decimal places. </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">value</td> <td class=\"jsdoc-param-type\">Number</td> <td class=\"jsdoc-param-description\">\n<p>the number to be formatted.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">options</td> <td class=\"jsdoc-param-type\">__FormatOptions</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_currency_parse\">\n<span class=\"functionIcon\">parse</span><span class=\"parameters\">(expression,options)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../currency\" class=\"jsdoc-link\">dojo/currency</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">expression</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">options</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>An object with the following properties:</p>\n<ul>\n<li>type (String, optional): <p>Should not be set. Value is assumed to be currency.</p> </li>\n<li>currency (String, optional): <p>an <a href=\"http://en.wikipedia.org/wiki/ISO_4217\">ISO4217</a> currency code, a three letter sequence like \"USD\". For use with dojo.currency only.</p> </li>\n<li>symbol (String, optional): <p>localized currency symbol. The default will be looked up in table of supported currencies in <code>dojo.cldr</code> A <a href=\"http://en.wikipedia.org/wiki/ISO_4217\">ISO4217</a> currency code will be used if not found.</p> </li>\n<li>places (Number, optional): <p>fixed number of decimal places to accept. The default is determined based on which currency is used.</p> </li>\n<li>fractional (Boolean|Array, optional): <p>Whether to include the fractional portion, where the number of decimal places are implied by the currency or explicit 'places' parameter. The value [true,false] makes the fractional portion optional. By default for currencies, it the fractional portion is optional.</p> </li>\n<li>pattern (String, optional): <p>override <a href=\"http://www.unicode.org/reports/tr35/#Number_Format_Patterns\">formatting pattern</a> with this string. Default value is based on locale. Overriding this property will defeat localization. Literal characters in patterns are not supported.</p> </li>\n<li>locale (String, optional): <p>override the locale used to determine formatting rules</p> </li>\n<li>strict (Boolean, optional): <p>strict parsing, false by default. Strict parsing requires input as produced by the format() method. Non-strict is more permissive, e.g. flexible on white space, omitting thousands separators</p> </li>\n</ul> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_currency_regexp\">\n<span class=\"functionIcon\">regexp</span><span class=\"parameters\">(options)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../currency\" class=\"jsdoc-link\">dojo/currency</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">options</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>An object with the following properties:</p>\n<ul>\n<li>pattern (String, optional): <p>override <a href=\"http://www.unicode.org/reports/tr35/#Number_Format_Patterns\">formatting pattern</a> with this string. Default value is based on locale. Overriding this property will defeat localization.</p> </li>\n<li>type (String, optional): <p>choose a format type based on the locale from the following: decimal, scientific (not yet supported), percent, currency. decimal by default.</p> </li>\n<li>locale (String, optional): <p>override the locale used to determine formatting rules</p> </li>\n<li>strict (Boolean, optional): <p>strict parsing, false by default. Strict parsing requires input as produced by the format() method. Non-strict is more permissive, e.g. flexible on white space, omitting thousands separators</p> </li>\n<li>places (Number|String, optional): <p>number of decimal places to accept: Infinity, a positive number, or a range \"n,m\". Defined by pattern or Infinity if pattern not provided.</p> </li>\n</ul> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/_base/kernel.currency.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/_base/kernel.currency.html</a>\n  </p>\n</div>\n","dojo/_base/kernel.date":"<h1>dojo/_base/kernel.date</h1>             <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_date_stamp\">\n<span class=\"objectIcon\">stamp</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../date/stamp\" class=\"jsdoc-link\">dojo/date/stamp</a> </p> <div class=\"jsdoc-summary\">\n<p>TODOC</p> </div>    <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_date_add\">\n<span class=\"functionIcon\">add</span><span class=\"parameters\">(date,interval,amount)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../date\" class=\"jsdoc-link\">dojo/date</a> </p> <p>Add to a Date in intervals of different size, from milliseconds to years</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">date</td> <td class=\"jsdoc-param-type\">Date</td> <td class=\"jsdoc-param-description\">\n<p>Date object to start with</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">interval</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>A string representing the interval. One of the following: \"year\", \"month\", \"day\", \"hour\", \"minute\", \"second\", \"millisecond\", \"quarter\", \"week\", \"weekday\"</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">amount</td> <td class=\"jsdoc-param-type\">int</td> <td class=\"jsdoc-param-description\">\n<p>How much to add to the date.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">instance</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_date_compare\">\n<span class=\"functionIcon\">compare</span><span class=\"parameters\">(date1,date2,portion)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../date\" class=\"jsdoc-link\">dojo/date</a> </p> <p>Compare two date objects by date, time, or both.</p>  <p>Returns 0 if equal, positive if a &gt; b, else negative.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">date1</td> <td class=\"jsdoc-param-type\">Date</td> <td class=\"jsdoc-param-description\">\n<p>Date object</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">date2</td> <td class=\"jsdoc-param-type\">Date</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Date object. If not specified, the current Date is used.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">portion</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>A string indicating the \"date\" or \"time\" portion of a Date object. Compares both \"date\" and \"time\" by default. One of the following: \"date\", \"time\", \"datetime\"</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">number</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_date_difference\">\n<span class=\"functionIcon\">difference</span><span class=\"parameters\">(date1,date2,interval)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../date\" class=\"jsdoc-link\">dojo/date</a> </p> <p>Get the difference in a specific unit of time (e.g., number of months, weeks, days, etc.) between two dates, rounded to the nearest integer.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">date1</td> <td class=\"jsdoc-param-type\">Date</td> <td class=\"jsdoc-param-description\">\n<p>Date object</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">date2</td> <td class=\"jsdoc-param-type\">Date</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Date object. If not specified, the current Date is used.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">interval</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>A string representing the interval. One of the following: \"year\", \"month\", \"day\", \"hour\", \"minute\", \"second\", \"millisecond\", \"quarter\", \"week\", \"weekday\" </p> <p>Defaults to \"day\".</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_date_getDaysInMonth\">\n<span class=\"functionIcon\">getDaysInMonth</span><span class=\"parameters\">(dateObject)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../date\" class=\"jsdoc-link\">dojo/date</a> </p> <p>Returns the number of days in the month used by dateObject</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">dateObject</td> <td class=\"jsdoc-param-type\">Date</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">number | undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_date_getTimezoneName\">\n<span class=\"functionIcon\">getTimezoneName</span><span class=\"parameters\">(dateObject)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../date\" class=\"jsdoc-link\">dojo/date</a> </p> <p>Get the user's time zone as provided by the browser</p>  <p>Try to get time zone info from toString or toLocaleString method of the Date object -- UTC offset is not a time zone. See <a href=\"http://www.twinsun.com/tz/tz-link.htm\">http://www.twinsun.com/tz/tz-link.htm</a> Note: results may be inconsistent across browsers.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">dateObject</td> <td class=\"jsdoc-param-type\">Date</td> <td class=\"jsdoc-param-description\">\n<p>Needed because the timezone may vary with time (daylight savings)</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_date_isLeapYear\">\n<span class=\"functionIcon\">isLeapYear</span><span class=\"parameters\">(dateObject)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../date\" class=\"jsdoc-link\">dojo/date</a> </p> <p>Determines if the year of the dateObject is a leap year</p>  <p>Leap years are years with an additional day YYYY-02-29, where the year number is a multiple of four with the following exception: If a year is a multiple of 100, then it is only a leap year if it is also a multiple of 400. For example, 1900 was not a leap year, but 2000 is one.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">dateObject</td> <td class=\"jsdoc-param-type\">Date</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">boolean</span></p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/_base/kernel.date.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/_base/kernel.date.html</a>\n  </p>\n</div>\n","dojo/_base/kernel.dnd":"<h1>dojo/_base/kernel.dnd</h1>             <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_dnd_autoscroll\">\n<span class=\"objectIcon\">autoscroll</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../dnd/autoscroll\" class=\"jsdoc-link\">dojo/dnd/autoscroll</a> </p> <div class=\"jsdoc-summary\">\n<p>Used by <a class=\"jsdoc-link\" href=\"../dnd/manager\">dojo/dnd/Manager</a> to scroll document or internal node when the user drags near the edge of the viewport or a scrollable node</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_dnd_move\">\n<span class=\"objectIcon\">move</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../dnd/move\" class=\"jsdoc-link\">dojo/dnd/move</a> </p>    <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_dnd_AutoSource\">\n<span class=\"functionIcon\">AutoSource</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../dnd/autosource\" class=\"jsdoc-link\">dojo/dnd/AutoSource</a> </p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_dnd_Avatar\">\n<span class=\"functionIcon\">Avatar</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../dnd/avatar\" class=\"jsdoc-link\">dojo/dnd/Avatar</a> </p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_dnd_Container\">\n<span class=\"functionIcon\">Container</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../dnd/container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_dnd_Manager\">\n<span class=\"functionIcon\">Manager</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../dnd/manager\" class=\"jsdoc-link\">dojo/dnd/Manager</a> </p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_dnd_Moveable\">\n<span class=\"functionIcon\">Moveable</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../dnd/moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_dnd_Mover\">\n<span class=\"functionIcon\">Mover</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../dnd/mover\" class=\"jsdoc-link\">dojo/dnd/Mover</a> </p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_dnd_Selector\">\n<span class=\"functionIcon\">Selector</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../dnd/selector\" class=\"jsdoc-link\">dojo/dnd/Selector</a> </p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_dnd_Source\">\n<span class=\"functionIcon\">Source</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../dnd/source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_dnd_Target\">\n<span class=\"functionIcon\">Target</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../dnd/target\" class=\"jsdoc-link\">dojo/dnd/Target</a> </p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_dnd_TimedMoveable\">\n<span class=\"functionIcon\">TimedMoveable</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../dnd/timedmoveable\" class=\"jsdoc-link\">dojo/dnd/TimedMoveable</a> </p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/_base/kernel.dnd.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/_base/kernel.dnd.html</a>\n  </p>\n</div>\n","dojo/_base/kernel.fx":"<h1>dojo/_base/kernel.fx</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>Effects library on top of Base animations</p>             <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_fx_easing\">\n<span class=\"objectIcon\">easing</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../fx/easing\" class=\"jsdoc-link\">dojo/fx/easing</a> </p> <div class=\"jsdoc-summary\">\n<p>Collection of easing functions to use beyond the default <code>dojo._defaultEasing</code> function.</p> </div>    <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_fx_chain\">\n<span class=\"functionIcon\">chain</span><span class=\"parameters\">(animations)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../fx\" class=\"jsdoc-link\">dojo/fx</a> </p> <p>Chain a list of <code>dojo/_base/fx.Animation</code>s to run in sequence </p>  <p>Return a <a class=\"jsdoc-link\" href=\"fx#Animation\">dojo/_base/fx.Animation</a> which will play all passed <a class=\"jsdoc-link\" href=\"fx#Animation\">dojo/_base/fx.Animation</a> instances in sequence, firing its own synthesized events simulating a single animation. (eg: onEnd of this animation means the end of the chain, not the individual animations within) </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">animations</td> <td class=\"jsdoc-param-type\">\n<a class=\"jsdoc-link\" href=\"fx#Animation\">dojo/_base/fx.Animation</a>[]</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">instance</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Once <code>node</code> is faded out, fade in <code>otherNode</code> </p> <pre><code>require([\"dojo/fx\"], function(fx){\n    fx.chain([\n        fx.fadeIn({ node:node }),\n        fx.fadeOut({ node:otherNode })\n    ]).play();\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_fx_combine\">\n<span class=\"functionIcon\">combine</span><span class=\"parameters\">(animations)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../fx\" class=\"jsdoc-link\">dojo/fx</a> </p> <p>Combine a list of <code>dojo/_base/fx.Animation</code>s to run in parallel </p>  <p>Combine an array of <a class=\"jsdoc-link\" href=\"fx#Animation\">dojo/_base/fx.Animation</a>s to run in parallel, providing a new <a class=\"jsdoc-link\" href=\"fx#Animation\">dojo/_base/fx.Animation</a> instance encompasing each animation, firing standard animation events. </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">animations</td> <td class=\"jsdoc-param-type\">\n<a class=\"jsdoc-link\" href=\"fx#Animation\">dojo/_base/fx.Animation</a>[]</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">instance</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Fade out <code>node</code> while fading in <code>otherNode</code> simultaneously </p> <pre><code>require([\"dojo/fx\"], function(fx){\n    fx.combine([\n        fx.fadeIn({ node:node }),\n        fx.fadeOut({ node:otherNode })\n    ]).play();\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>When the longest animation ends, execute a function: </p> <pre><code>require([\"dojo/fx\"], function(fx){\n    var anim = fx.combine([\n        fx.fadeIn({ node: n, duration:700 }),\n        fx.fadeOut({ node: otherNode, duration: 300 })\n    ]);\n    aspect.after(anim, \"onEnd\", function(){\n        // overall animation is done.\n    }, true);\n    anim.play(); // play the animation\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_fx_slideTo\">\n<span class=\"functionIcon\">slideTo</span><span class=\"parameters\">(args)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../fx\" class=\"jsdoc-link\">dojo/fx</a> </p> <p>Slide a node to a new top/left position </p>  <p>Returns an animation that will slide \"node\" defined in args Object from its current position to the position defined by (args.left, args.top). </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">args</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>A hash-map of standard <code>dojo/_base/fx.Animation</code> constructor properties (such as easing: node: duration: and so on). Special args members are <code>top</code> and <code>left</code>, which indicate the new position to slide to. </p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>.slideTo({ node: node, left:\"40\", top:\"50\", units:\"px\" }).play()</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_fx_Toggler\">\n<span class=\"functionIcon\">Toggler</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../fx/toggler\" class=\"jsdoc-link\">dojo/fx/Toggler</a> </p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_fx_wipeIn\">\n<span class=\"functionIcon\">wipeIn</span><span class=\"parameters\">(args)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../fx\" class=\"jsdoc-link\">dojo/fx</a> </p> <p>Expand a node to it's natural height. </p>  <p>Returns an animation that will expand the node defined in 'args' object from it's current height to it's natural height (with no scrollbar). Node must have no margin/border/padding. </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">args</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>A hash-map of standard <code>dojo/_base/fx.Animation</code> constructor properties (such as easing: node: duration: and so on) </p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>require([\"dojo/fx\"], function(fx){\n    fx.wipeIn({\n        node:\"someId\"\n    }).play()\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_fx_wipeOut\">\n<span class=\"functionIcon\">wipeOut</span><span class=\"parameters\">(args)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../fx\" class=\"jsdoc-link\">dojo/fx</a> </p> <p>Shrink a node to nothing and hide it. </p>  <p>Returns an animation that will shrink node defined in \"args\" from it's current height to 1px, and then hide it. </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">args</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>A hash-map of standard <code>dojo/_base/fx.Animation</code> constructor properties (such as easing: node: duration: and so on) </p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>require([\"dojo/fx\"], function(fx){\n    fx.wipeOut({ node:\"someId\" }).play()\n});</code></pre> </div> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/_base/kernel.fx.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/_base/kernel.fx.html</a>\n  </p>\n</div>\n","dojo/_base/kernel.gears":"<h1>dojo/_base/kernel.gears</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>TODOC</p>             <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_gears_available\">\n<span class=\"objectIcon\">available</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../gears\" class=\"jsdoc-link\">dojo/gears</a> </p> <div class=\"jsdoc-summary\">\n<p>True if client is using Google Gears</p> </div>    <h2 id=\"methods\">Methods</h2><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/_base/kernel.gears.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/_base/kernel.gears.html</a>\n  </p>\n</div>\n","dojo/_base/kernel.global":"<h1>dojo/_base/kernel.global</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>Alias for the current window. 'global' can be modified for temporary context shifting. See also withGlobal().</p>  <p>Use this rather than referring to 'window' to ensure your code runs correctly in managed contexts.</p>           <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_global_$\">\n<span class=\"functionIcon\">$</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"http://dojotoolkit.org/api/1.10/dojox/jq\" class=\"jsdoc-link\">dojox/jq</a> </p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_global_GoogleSearchStoreCallback_undefined_NaN\">\n<span class=\"functionIcon\">GoogleSearchStoreCallback_undefined_NaN</span><span class=\"parameters\">(start,data,responseCode,errorMsg)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"http://dojotoolkit.org/api/1.10/dojox/data/GoogleSearchStore\" class=\"jsdoc-link\">dojox/data/GoogleSearchStore</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">start</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">data</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">responseCode</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">errorMsg</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_global_jQuery\">\n<span class=\"functionIcon\">jQuery</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"http://dojotoolkit.org/api/1.10/dojox/jq\" class=\"jsdoc-link\">dojox/jq</a> </p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_global_swfIsInHTML\">\n<span class=\"functionIcon\">swfIsInHTML</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"http://dojotoolkit.org/api/1.10/dojox/av/FLVideo\" class=\"jsdoc-link\">dojox/av/FLVideo</a> </p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_global_undefined_onload\">\n<span class=\"functionIcon\">undefined_onload</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../request/iframe\" class=\"jsdoc-link\">dojo/request/iframe</a> </p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/_base/kernel.global.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/_base/kernel.global.html</a>\n  </p>\n</div>\n","dojo/_base/kernel.html":"<h1>dojo/_base/kernel.html</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>TODOC</p>           <h2 id=\"methods\">Methods</h2>        <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_html_set\">\n<span class=\"functionIcon\">set</span><span class=\"parameters\">(node,cont,params)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../html\" class=\"jsdoc-link\">dojo/html</a> </p> <p>inserts (replaces) the given content into the given node. dojo/dom-construct.place(cont, node, \"only\") may be a better choice for simple HTML insertion.</p>  <p>Unless you need to use the params capabilities of this method, you should use <a class=\"jsdoc-link\" href=\"../dom-construct#place\">dojo/dom-construct.place(cont, node, \"only\")</a>. <a class=\"jsdoc-link\" href=\"../dom-construct\">dojo/dom-construct</a>..place() has more robust support for injecting an HTML string into the DOM, but it only handles inserting an HTML string as DOM elements, or inserting a DOM node. <a class=\"jsdoc-link\" href=\"../dom-construct\">dojo/dom-construct</a>..place does not handle NodeList insertions <a class=\"jsdoc-link\" href=\"../dom-construct#place\">dojo/dom-construct.place(cont, node, \"only\")</a>. <a class=\"jsdoc-link\" href=\"../dom-construct#place\">dojo/dom-construct.place()</a> has more robust support for injecting an HTML string into the DOM, but it only handles inserting an HTML string as DOM elements, or inserting a DOM node. <a class=\"jsdoc-link\" href=\"../dom-construct#place\">dojo/dom-construct.place</a> does not handle NodeList insertions or the other capabilities as defined by the params object for this method.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DomNode</td> <td class=\"jsdoc-param-description\">\n<p>the parent element that will receive the content</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">cont</td> <td class=\"jsdoc-param-type\">String | DomNode | NodeList</td> <td class=\"jsdoc-param-description\">\n<p>the content to be set on the parent element. This can be an html string, a node reference or a NodeList, dojo/NodeList, Array or other enumerable list of nodes</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">params</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Optional flags/properties to configure the content-setting. See dojo/html/_ContentSetter</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>A safe string/node/nodelist content replacement/injection with hooks for extension Example Usage: </p> <pre><code>html.set(node, \"some string\");\nhtml.set(node, contentNode, {options});\nhtml.set(node, myNode.childNodes, {options});</code></pre> </div> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/_base/kernel.html.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/_base/kernel.html.html</a>\n  </p>\n</div>\n","dojo/_base/kernel.io":"<h1>dojo/_base/kernel.io</h1>           <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_io_iframe\">\n<span class=\"objectIcon\">iframe</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../io/iframe\" class=\"jsdoc-link\">dojo/io/iframe</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_io_script\">\n<span class=\"objectIcon\">script</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../io/script\" class=\"jsdoc-link\">dojo/io/script</a> </p> <div class=\"jsdoc-summary\">\n<p>TODOC</p> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/_base/kernel.io.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/_base/kernel.io.html</a>\n  </p>\n</div>\n","dojo/_base/kernel.__iopublish":"<h1>dojo/_base/kernel.__IoPublish</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>This is a list of IO topics that can be published if djConfig.ioPublish is set to true. IO topics can be published for any Input/Output, network operation. So, dojo.xhr, dojo.io.script and dojo.io.iframe can all trigger these topics to be published.</p>  <p> <strong>Note:</strong> This is not a real constructor, but just a description of the type of object that should be passed as a parameter to some method(s), and/or the return value from some method(s). In other words, the type exists only for documentation purposes, and you <strong>cannot</strong> call <code>new kernel.__IoPublish()</code> </p>          <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel___IoPublish_done\">\n<span class=\"stringIcon\">done</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>\"/dojo/io/done\" is sent whenever an IO request has completed, either by loading or by erroring. It passes the error and the dojo.Deferred for the request with the topic.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel___IoPublish_error\">\n<span class=\"stringIcon\">error</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>\"/dojo/io/error\" is sent whenever an IO request has errored. It passes the error and the dojo.Deferred for the request with the topic.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel___IoPublish_load\">\n<span class=\"stringIcon\">load</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>\"/dojo/io/load\" is sent whenever an IO request has loaded successfully. It passes the response and the dojo.Deferred for the request with the topic.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel___IoPublish_send\">\n<span class=\"stringIcon\">send</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>\"/dojo/io/send\" is sent whenever a new IO request is started. It passes the dojo.Deferred for the request with the topic.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel___IoPublish_start\">\n<span class=\"stringIcon\">start</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>\"/dojo/io/start\" is sent when there are no outstanding IO requests, and a new IO request is started. No arguments are passed with this topic.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel___IoPublish_stop\">\n<span class=\"stringIcon\">stop</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>\"/dojo/io/stop\" is sent when all outstanding IO requests have finished. No arguments are passed with this topic.</p> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/_base/kernel.__IoPublish.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/_base/kernel.__IoPublish.html</a>\n  </p>\n</div>\n","dojo/_base/kernel._contenthandlers":"<h1>dojo/_base/kernel._contentHandlers</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>A map of available XHR transport handle types. Name matches the <code>handleAs</code> attribute passed to XHR calls.</p>  <p>A map of available XHR transport handle types. Name matches the <code>handleAs</code> attribute passed to XHR calls. Each contentHandler is called, passing the xhr object for manipulation. The return value from the contentHandler will be passed to the <code>load</code> or <code>handle</code> functions defined in the original xhr call.</p>     <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Creating a custom content-handler: </p> <pre><code>xhr.contentHandlers.makeCaps = function(xhr){\n    return xhr.responseText.toUpperCase();\n}\n// and later:\ndojo.xhrGet({\n    url:\"foo.txt\",\n    handleAs:\"makeCaps\",\n    load: function(data){ /* data is a toUpper version of foo.txt */ }\n});</code></pre> </div> </div>       <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel__contentHandlers_auto\">\n<span class=\"functionIcon\">auto</span><span class=\"parameters\">(xhr)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"http://dojotoolkit.org/api/1.10/dojox/rpc/Service\" class=\"jsdoc-link\">dojox/rpc/Service</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">xhr</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel__contentHandlers_javascript\">\n<span class=\"functionIcon\">javascript</span><span class=\"parameters\">(xhr)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <p>A contentHandler which evaluates the response data, expecting it to be valid JavaScript</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">xhr</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel__contentHandlers_json\">\n<span class=\"functionIcon\">json</span><span class=\"parameters\">(xhr)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <p>A contentHandler which returns a JavaScript object created from the response data</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">xhr</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel__contentHandlers_json-comment-filtered\">\n<span class=\"functionIcon\">json-comment-filtered</span><span class=\"parameters\">(xhr)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <p>A contentHandler which expects comment-filtered JSON.</p>  <p>A contentHandler which expects comment-filtered JSON. the json-comment-filtered option was implemented to prevent \"JavaScript Hijacking\", but it is less secure than standard JSON. Use standard JSON instead. JSON prefixing can be used to subvert hijacking. </p> <p>Will throw a notice suggesting to use application/json mimetype, as json-commenting can introduce security issues. To decrease the chances of hijacking, use the standard <code>json</code> contentHandler, and prefix your \"JSON\" with: {}&amp;&amp; </p> <p>use djConfig.useCommentedJson = true to turn off the notice</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">xhr</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel__contentHandlers_json-comment-optional\">\n<span class=\"functionIcon\">json-comment-optional</span><span class=\"parameters\">(xhr)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <p>A contentHandler which checks the presence of comment-filtered JSON and alternates between the <code>json</code> and <code>json-comment-filtered</code> contentHandlers.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">xhr</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel__contentHandlers_text\">\n<span class=\"functionIcon\">text</span><span class=\"parameters\">(xhr)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <p>A contentHandler which simply returns the plaintext response data</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">xhr</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel__contentHandlers_xml\">\n<span class=\"functionIcon\">xml</span><span class=\"parameters\">(xhr)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <p>A contentHandler returning an XML Document parsed from the response data</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">xhr</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/_base/kernel._contentHandlers.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/_base/kernel._contentHandlers.html</a>\n  </p>\n</div>\n","dojo/_base/kernel.config":"<h1>dojo/_base/kernel.config</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>This module defines the user configuration during bootstrap.</p>  <p>By defining user configuration as a module value, an entire configuration can be specified in a build, thereby eliminating the need for sniffing and or explicitly setting in the global variable dojoConfig. Also, when multiple instances of dojo exist in a single application, each will necessarily be located at an unique absolute module identifier as given by the package configuration. Implementing configuration as a module allows for specifying unique, per-instance configurations.</p>     <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Create a second instance of dojo with a different, instance-unique configuration (assume the loader and dojo.js are already loaded). </p> <pre><code>// specify a configuration that creates a new instance of dojo at the absolute module identifier \"myDojo\"\nrequire({\n    packages:[{\n        name:\"myDojo\",\n        location:\".\", //assume baseUrl points to dojo.js\n    }]\n});\n\n// specify a configuration for the myDojo instance\ndefine(\"myDojo/config\", {\n    // normal configuration variables go here, e.g.,\n    locale:\"fr-ca\"\n});\n\n// load and use the new instance of dojo\nrequire([\"myDojo\"], function(dojo){\n    // dojo is the new instance of dojo\n    // use as required\n});</code></pre> </div> </div>       <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_config_addOnLoad\">\n<span class=\"functionIcon\">addOnLoad</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"config\" class=\"jsdoc-link\">dojo/_base/config</a> </p> <div class=\"jsdoc-summary\">\n<p>Adds a callback via <a class=\"jsdoc-link\" href=\"../ready\">dojo/ready</a>. Useful when Dojo is added after the page loads and djConfig.afterOnLoad is true. Supports the same arguments as <a class=\"jsdoc-link\" href=\"../ready\">dojo/ready</a>. When using a function reference, use <code>djConfig.addOnLoad = function(){};</code>. For object with function name use <code>djConfig.addOnLoad = [myObject, \"functionName\"];</code> and for object with function reference use <code>djConfig.addOnLoad = [myObject, function(){}];</code></p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_config_afterOnLoad\">\n<span class=\"booleanIcon\">afterOnLoad</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../ready\" class=\"jsdoc-link\">dojo/ready</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_config_baseUrl\">\n<span class=\"objectIcon\">baseUrl</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"kernel\" class=\"jsdoc-link\">dojo/_base/kernel</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_config_callback\">\n<span class=\"functionIcon\">callback</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"config\" class=\"jsdoc-link\">dojo/_base/config</a> </p> <div class=\"jsdoc-summary\">\n<p>Defines a callback to be used when dependencies are defined before the loader has been loaded. When provided, they cause the loader to execute require(deps, callback) once it has finished loading. Should be used with deps.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_config_debugContainerId\">\n<span class=\"stringIcon\">debugContainerId</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../_firebug/firebug\" class=\"jsdoc-link\">dojo/_firebug/firebug</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_config_debugHeight\">\n<span class=\"numberIcon\">debugHeight</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../robotx\" class=\"jsdoc-link\">dojo/robotx</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_config_defaultDuration\">\n<span class=\"numberIcon\">defaultDuration</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"config\" class=\"jsdoc-link\">dojo/_base/config</a> </p> <div class=\"jsdoc-summary\">\n<p>Default duration, in milliseconds, for wipe and fade animations within dijits. Assigned to dijit.defaultDuration.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_config_deferredInstrumentation\">\n<span class=\"booleanIcon\">deferredInstrumentation</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"config\" class=\"jsdoc-link\">dojo/_base/config</a> </p> <div class=\"jsdoc-summary\">\n<p>Whether deferred instrumentation should be loaded or included in builds.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_config_deps\">\n<span class=\"functionIcon\">deps</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"config\" class=\"jsdoc-link\">dojo/_base/config</a> </p> <div class=\"jsdoc-summary\">\n<p>Defines dependencies to be used before the loader has been loaded. When provided, they cause the loader to execute require(deps, callback) once it has finished loading. Should be used with callback.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_config_dojoBlankHtmlUrl\">\n<span class=\"stringIcon\">dojoBlankHtmlUrl</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"config\" class=\"jsdoc-link\">dojo/_base/config</a> </p> <div class=\"jsdoc-summary\">\n<p>Used by some modules to configure an empty iframe. Used by <a class=\"jsdoc-link\" href=\"../io/iframe\">dojo/io/iframe</a> and <a class=\"jsdoc-link\" href=\"../back\">dojo/back</a>, and <a class=\"jsdoc-link\" href=\"http://dojotoolkit.org/api/1.10/dijit/popup\">dijit/popup</a> support in IE where an iframe is needed to make sure native controls do not bleed through the popups. Normally this configuration variable does not need to be set, except when using cross-domain/CDN Dojo builds. Save dojo/resources/blank.html to your domain and set <code>djConfig.dojoBlankHtmlUrl</code> to the path on your domain your copy of blank.html.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_config_extraLocale\">\n<span class=\"arrayIcon\">extraLocale</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"config\" class=\"jsdoc-link\">dojo/_base/config</a> </p> <div class=\"jsdoc-summary\">\n<p>No default value. Specifies additional locales whose resources should also be loaded alongside the default locale when calls to <code>dojo.requireLocalization()</code> are processed.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_config_ioPublish\">\n<span class=\"objectIcon\">ioPublish</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"config\" class=\"jsdoc-link\">dojo/_base/config</a> </p> <div class=\"jsdoc-summary\">\n<p>Set this to true to enable publishing of topics for the different phases of IO operations. Publishing is done via <a class=\"jsdoc-link\" href=\"../topic#publish\">dojo/topic.publish()</a>. See <a class=\"jsdoc-link\" href=\"../main.__iopublish\">dojo/main.__IoPublish</a> for a list of topics that are published.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_config_isDebug\">\n<span class=\"booleanIcon\">isDebug</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"config\" class=\"jsdoc-link\">dojo/_base/config</a> </p> <div class=\"jsdoc-summary\">\n<p>Defaults to <code>false</code>. If set to <code>true</code>, ensures that Dojo provides extended debugging feedback via Firebug. If Firebug is not available on your platform, setting <code>isDebug</code> to <code>true</code> will force Dojo to pull in (and display) the version of Firebug Lite which is integrated into the Dojo distribution, thereby always providing a debugging/logging console when <code>isDebug</code> is enabled. Note that Firebug's <code>console.*</code> methods are ALWAYS defined by Dojo. If <code>isDebug</code> is false and you are on a platform without Firebug, these methods will be defined as no-ops.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_config_locale\">\n<span class=\"stringIcon\">locale</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"config\" class=\"jsdoc-link\">dojo/_base/config</a> </p> <div class=\"jsdoc-summary\">\n<p>The locale to assume for loading localized resources in this page, specified according to <a href=\"http://www.ietf.org/rfc/rfc3066.txt\">RFC 3066</a>. Must be specified entirely in lowercase, e.g. <code>en-us</code> and <code>zh-cn</code>. See the documentation for <code>dojo.i18n</code> and <code>dojo.requireLocalization</code> for details on loading localized resources. If no locale is specified, Dojo assumes the locale of the user agent, according to <code>navigator.userLanguage</code> or <code>navigator.language</code> properties.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_config_modulePaths\">\n<span class=\"objectIcon\">modulePaths</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"config\" class=\"jsdoc-link\">dojo/_base/config</a> </p> <div class=\"jsdoc-summary\">\n<p>A map of module names to paths relative to <code>dojo.baseUrl</code>. The key/value pairs correspond directly to the arguments which <code>dojo.registerModulePath</code> accepts. Specifying <code>djConfig.modulePaths = { \"foo\": \"../../bar\" }</code> is the equivalent of calling <code>dojo.registerModulePath(\"foo\", \"../../bar\");</code>. Multiple modules may be configured via <code>djConfig.modulePaths</code>.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_config_parseOnLoad\">\n<span class=\"booleanIcon\">parseOnLoad</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"config\" class=\"jsdoc-link\">dojo/_base/config</a> </p> <div class=\"jsdoc-summary\">\n<p>Run the parser after the page is loaded</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_config_require\">\n<span class=\"objectIcon\">require</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"config\" class=\"jsdoc-link\">dojo/_base/config</a> </p> <div class=\"jsdoc-summary\">\n<p>An array of module names to be loaded immediately after dojo.js has been included in a page.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_config_transparentColor\">\n<span class=\"arrayIcon\">transparentColor</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"config\" class=\"jsdoc-link\">dojo/_base/config</a> </p> <div class=\"jsdoc-summary\">\n<p>Array containing the r, g, b components used as transparent color in dojo.Color; if undefined, [255,255,255] (white) will be used.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_config_urchin\">\n<span class=\"stringIcon\">urchin</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"http://dojotoolkit.org/api/1.10/dojox/analytics/Urchin\" class=\"jsdoc-link\">dojox/analytics/Urchin</a> </p> <div class=\"jsdoc-summary\">\n<p>Used by <code>dojox.analytics.Urchin</code> as the default UA-123456-7 account number used when being created. Alternately, you can pass an acct:\"\" parameter to the constructor a la: new dojox.analytics.Urchin({ acct:\"UA-123456-7\" });</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_config_useCustomLogger\">\n<span class=\"objectIcon\">useCustomLogger</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"config\" class=\"jsdoc-link\">dojo/_base/config</a> </p> <div class=\"jsdoc-summary\">\n<p>If set to a value that evaluates to true such as a string or array and isDebug is true and Firebug is not available or running, then it bypasses the creation of Firebug Lite allowing you to define your own console object.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_config_useDeferredInstrumentation\">\n<span class=\"booleanIcon\">useDeferredInstrumentation</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"config\" class=\"jsdoc-link\">dojo/_base/config</a> </p> <div class=\"jsdoc-summary\">\n<p>Whether the deferred instrumentation should be used. </p> <ul> <li>\n<code>\"report-rejections\"</code>: report each rejection as it occurs.</li> <li>\n<code>true</code> or <code>1</code> or <code>\"report-unhandled-rejections\"</code>: wait 1 second in an attempt to detect unhandled rejections.</li> </ul> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/_base/kernel.config.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/_base/kernel.config.html</a>\n  </p>\n</div>\n","dojo/_base/kernel.i18n":"<h1>dojo/_base/kernel.i18n</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>This module implements the <a class=\"jsdoc-link\" href=\"../i18n\">dojo/i18n</a>! plugin and the v1.6- i18n API</p>  <p>We choose to include our own plugin to leverage functionality already contained in dojo and thereby reduce the size of the plugin compared to various loader implementations. Also, this allows foreign AMD loaders to be used without their plugins.</p>             <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_i18n_cache\">\n<span class=\"objectIcon\">cache</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../i18n\" class=\"jsdoc-link\">dojo/i18n</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_i18n_dynamic\">\n<span class=\"booleanIcon\">dynamic</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../i18n\" class=\"jsdoc-link\">dojo/i18n</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_i18n_unitTests\">\n<span class=\"arrayIcon\">unitTests</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../i18n\" class=\"jsdoc-link\">dojo/i18n</a> </p>    <h2 id=\"methods\">Methods</h2>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_i18n_getL10nName\">\n<span class=\"functionIcon\">getL10nName</span><span class=\"parameters\">(moduleName,bundleName,locale)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../i18n\" class=\"jsdoc-link\">dojo/i18n</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">moduleName</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">bundleName</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">locale</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">string</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_i18n_getLocalization\">\n<span class=\"functionIcon\">getLocalization</span><span class=\"parameters\">(moduleName,bundleName,locale)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../i18n\" class=\"jsdoc-link\">dojo/i18n</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">moduleName</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">bundleName</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">locale</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_i18n_load\">\n<span class=\"functionIcon\">load</span><span class=\"parameters\">(id,require,load)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../i18n\" class=\"jsdoc-link\">dojo/i18n</a> </p> <p>id is in one of the following formats </p> <ol> <li>\n<p><path>/nls/<bundle> =&gt; load the bundle, localized to config.locale; load all bundles localized to config.extraLocale (if any); return the loaded bundle localized to config.locale.</bundle></path></p> </li> <li>\n<p><path>/nls/<locale>/<bundle> =&gt; load then return the bundle localized to </bundle></locale></path></p> </li> <li>\n<p><em>preload</em><path>/nls/<module>*<json array of available locales> =&gt; for config.locale and all config.extraLocale, load all bundles found in the best-matching bundle rollup. A value of 1 is returned, which is meaningless other than to say the plugin is executing the requested preloads</json></module></path></p> </li> </ol> <p>In cases 1 and 2, <path> is always normalized to an absolute module id upon entry; see normalize. In case 3, it <path> is assumed to be absolute; this is arranged by the builder. </path></path></p> <p>To load a bundle means to insert the bundle into the plugin's cache and publish the bundle value to the loader. Given <path>, <bundle>, and a particular <locale>, the cache key </locale></bundle></path></p> <pre><code>&lt;path&gt;/nls/&lt;bundle&gt;/&lt;locale&gt;</code></pre> <p>will hold the value. Similarly, then plugin will publish this value to the loader by </p> <pre><code>define(\"&lt;path&gt;/nls/&lt;bundle&gt;/&lt;locale&gt;\", &lt;bundle-value&gt;);</code></pre> <p>Given this algorithm, other machinery can provide fast load paths be preplacing values in the plugin's cache, which is public. When a load is demanded the cache is inspected before starting any loading. Explicitly placing values in the plugin cache is an advanced/experimental feature that should not be needed; use at your own risk. </p> <p>For the normal AMD algorithm, the root bundle is loaded first, which instructs the plugin what additional localized bundles are required for a particular locale. These additional locales are loaded and a mix of the root and each progressively-specific locale is returned. For example: </p> <ol> <li>\n<p>The client demands \"dojo/i18n!some/path/nls/someBundle</p> </li> <li>\n<p>The loader demands load(some/path/nls/someBundle)</p> </li> <li>\n<p>This plugin require's \"some/path/nls/someBundle\", which is the root bundle.</p> </li> <li>\n<p>Assuming config.locale is \"ab-cd-ef\" and the root bundle indicates that localizations are available for \"ab\" and \"ab-cd-ef\" (note the missing \"ab-cd\", then the plugin requires \"some/path/nls/ab/someBundle\" and \"some/path/nls/ab-cd-ef/someBundle\"</p> </li> <li>\n<p>Upon receiving all required bundles, the plugin constructs the value of the bundle ab-cd-ef as...</p> <pre><code> mixin(mixin(mixin({}, require(\"some/path/nls/someBundle\"),\n     require(\"some/path/nls/ab/someBundle\")),\n     require(\"some/path/nls/ab-cd-ef/someBundle\"));</code></pre> </li> </ol> <p>This value is inserted into the cache and published to the loader at the key/module-id some/path/nls/someBundle/ab-cd-ef. </p> <p>The special preload signature (case 3) instructs the plugin to stop servicing all normal requests (further preload requests will be serviced) until all ongoing preloading has completed. </p> <p>The preload signature instructs the plugin that a special rollup module is available that contains one or more flattened, localized bundles. The JSON array of available locales indicates which locales are available. Here is an example: </p> <pre><code>*preload*some/path/nls/someModule*[\"root\", \"ab\", \"ab-cd-ef\"]</code></pre> <p>This indicates the following rollup modules are available: </p> <pre><code>some/path/nls/someModule_ROOT\nsome/path/nls/someModule_ab\nsome/path/nls/someModule_ab-cd-ef</code></pre> <p>Each of these modules is a normal AMD module that contains one or more flattened bundles in a hash. For example, assume someModule contained the bundles some/bundle/path/someBundle and some/bundle/path/someOtherBundle, then some/path/nls/someModule_ab would be expressed as follows: </p> <pre><code>define({\n    some/bundle/path/someBundle:&lt;value of someBundle, flattened with respect to locale ab&gt;,\n    some/bundle/path/someOtherBundle:&lt;value of someOtherBundle, flattened with respect to locale ab&gt;,\n});</code></pre> <p>E.g., given this design, preloading for locale==\"ab\" can execute the following algorithm: </p> <pre><code>require([\"some/path/nls/someModule_ab\"], function(rollup){\n    for(var p in rollup){\n        var id = p + \"/ab\",\n        cache[id] = rollup[p];\n        define(id, rollup[p]);\n    }\n});</code></pre> <p>Similarly, if \"ab-cd\" is requested, the algorithm can determine that \"ab\" is the best available and load accordingly. </p> <p>The builder will write such rollups for every layer if a non-empty localeList profile property is provided. Further, the builder will include the following cache entry in the cache associated with any layer. </p> <pre><code>\"*now\":function(r){r(['dojo/i18n!*preload*&lt;path&gt;/nls/&lt;module&gt;*&lt;JSON array of available locales&gt;']);}</code></pre> <p>The *now special cache module instructs the loader to apply the provided function to context-require with respect to the particular layer being defined. This causes the plugin to hold all normal service requests until all preloading is complete. </p> <p>Notice that this algorithm is rarely better than the standard AMD load algorithm. Consider the normal case where the target locale has a single segment and a layer depends on a single bundle: </p> <p>Without Preloads: </p> <ol> <li>Layer loads root bundle.</li> <li>bundle is demanded; plugin loads single localized bundle.</li> </ol> <p>With Preloads: </p> <ol> <li>Layer causes preloading of target bundle.</li> <li>bundle is demanded; service is delayed until preloading complete; bundle is returned.</li> </ol> <p>In each case a single transaction is required to load the target bundle. In cases where multiple bundles are required and/or the locale has multiple segments, preloads still requires a single transaction whereas the normal path requires an additional transaction for each additional bundle/locale-segment. However all of these additional transactions can be done concurrently. Owing to this analysis, the entire preloading algorithm can be discard during a build by setting the has feature dojo-preload-i18n-Api to false.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">id</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">require</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">load</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_i18n_normalize\">\n<span class=\"functionIcon\">normalize</span><span class=\"parameters\">(id,toAbsMid)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../i18n\" class=\"jsdoc-link\">dojo/i18n</a> </p> <p>id may be relative. preload has form <code>*preload*&lt;path&gt;/nls/&lt;module&gt;*&lt;flattened locales&gt;</code> and therefore never looks like a relative</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">id</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">toAbsMid</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_i18n_normalizeLocale\">\n<span class=\"functionIcon\">normalizeLocale</span><span class=\"parameters\">(locale)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../i18n\" class=\"jsdoc-link\">dojo/i18n</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">locale</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/_base/kernel.i18n.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/_base/kernel.i18n.html</a>\n  </p>\n</div>\n","dojo/_base/kernel.mousebuttons":"<h1>dojo/_base/kernel.mouseButtons</h1>             <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_mouseButtons_LEFT\">\n<span class=\"numberIcon\">LEFT</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../mouse\" class=\"jsdoc-link\">dojo/mouse</a> </p> <div class=\"jsdoc-summary\">\n<p>Numeric value of the left mouse button for the platform.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_mouseButtons_MIDDLE\">\n<span class=\"numberIcon\">MIDDLE</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../mouse\" class=\"jsdoc-link\">dojo/mouse</a> </p> <div class=\"jsdoc-summary\">\n<p>Numeric value of the middle mouse button for the platform.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_mouseButtons_RIGHT\">\n<span class=\"numberIcon\">RIGHT</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../mouse\" class=\"jsdoc-link\">dojo/mouse</a> </p> <div class=\"jsdoc-summary\">\n<p>Numeric value of the right mouse button for the platform.</p> </div>    <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_mouseButtons_isButton\">\n<span class=\"functionIcon\">isButton</span><span class=\"parameters\">(e,button)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../mouse\" class=\"jsdoc-link\">dojo/mouse</a> </p> <p>Checks an event object for a pressed button</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">e</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\">\n<p>Event object to examine</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">button</td> <td class=\"jsdoc-param-type\">Number</td> <td class=\"jsdoc-param-description\">\n<p>The button value (example: dojo.mouseButton.LEFT)</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">boolean</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_mouseButtons_isLeft\">\n<span class=\"functionIcon\">isLeft</span><span class=\"parameters\">(e)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../mouse\" class=\"jsdoc-link\">dojo/mouse</a> </p> <p>Checks an event object for the pressed left button</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">e</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\">\n<p>Event object to examine</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">boolean</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_mouseButtons_isMiddle\">\n<span class=\"functionIcon\">isMiddle</span><span class=\"parameters\">(e)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../mouse\" class=\"jsdoc-link\">dojo/mouse</a> </p> <p>Checks an event object for the pressed middle button</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">e</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\">\n<p>Event object to examine</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">boolean</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_mouseButtons_isRight\">\n<span class=\"functionIcon\">isRight</span><span class=\"parameters\">(e)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../mouse\" class=\"jsdoc-link\">dojo/mouse</a> </p> <p>Checks an event object for the pressed right button</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">e</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\">\n<p>Event object to examine</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">boolean</span></p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/_base/kernel.mouseButtons.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/_base/kernel.mouseButtons.html</a>\n  </p>\n</div>\n","dojo/_base/kernel.regexp":"<h1>dojo/_base/kernel.regexp</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>Regular expressions and Builder resources</p>           <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_regexp_buildGroupRE\">\n<span class=\"functionIcon\">buildGroupRE</span><span class=\"parameters\">(arr,re,nonCapture)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../regexp\" class=\"jsdoc-link\">dojo/regexp</a> </p> <p>Builds a regular expression that groups subexpressions</p>  <p>A utility function used by some of the RE generators. The subexpressions are constructed by the function, re, in the second parameter. re builds one subexpression for each elem in the array a, in the first parameter. Returns a string for a regular expression that groups all the subexpressions.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">arr</td> <td class=\"jsdoc-param-type\">Object | Array</td> <td class=\"jsdoc-param-description\">\n<p>A single value or an array of values.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">re</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\">\n<p>A function. Takes one parameter and converts it to a regular expression.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">nonCapture</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>If true, uses non-capturing match, otherwise matches are retained by regular expression. Defaults to false</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_regexp_escapeString\">\n<span class=\"functionIcon\">escapeString</span><span class=\"parameters\">(str,except)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../regexp\" class=\"jsdoc-link\">dojo/regexp</a> </p> <p>Adds escape sequences for special characters in regular expressions</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">str</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">except</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>a String with special characters to be left unescaped</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_regexp_group\">\n<span class=\"functionIcon\">group</span><span class=\"parameters\">(expression,nonCapture)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../regexp\" class=\"jsdoc-link\">dojo/regexp</a> </p> <p>adds group match to expression</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">expression</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">nonCapture</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>If true, uses non-capturing match, otherwise matches are retained by regular expression.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">string</span></p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/_base/kernel.regexp.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/_base/kernel.regexp.html</a>\n  </p>\n</div>\n","dojo/_base/color.named":"<h1>dojo/_base/Color.named</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>Dictionary list of all CSS named colors, by name. Values are 3-item arrays with corresponding RG and B values.</p>           <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_aliceblue\">\n<span class=\"arrayIcon\">aliceblue</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_antiquewhite\">\n<span class=\"arrayIcon\">antiquewhite</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_aqua\">\n<span class=\"arrayIcon\">aqua</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"color\" class=\"jsdoc-link\">dojo/_base/Color</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_aquamarine\">\n<span class=\"arrayIcon\">aquamarine</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_azure\">\n<span class=\"arrayIcon\">azure</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_beige\">\n<span class=\"arrayIcon\">beige</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_bisque\">\n<span class=\"arrayIcon\">bisque</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_black\">\n<span class=\"arrayIcon\">black</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"color\" class=\"jsdoc-link\">dojo/_base/Color</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_blanchedalmond\">\n<span class=\"arrayIcon\">blanchedalmond</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_blue\">\n<span class=\"arrayIcon\">blue</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"color\" class=\"jsdoc-link\">dojo/_base/Color</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_blueviolet\">\n<span class=\"arrayIcon\">blueviolet</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_brown\">\n<span class=\"arrayIcon\">brown</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_burlywood\">\n<span class=\"arrayIcon\">burlywood</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_cadetblue\">\n<span class=\"arrayIcon\">cadetblue</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_chartreuse\">\n<span class=\"arrayIcon\">chartreuse</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_chocolate\">\n<span class=\"arrayIcon\">chocolate</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_coral\">\n<span class=\"arrayIcon\">coral</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_cornflowerblue\">\n<span class=\"arrayIcon\">cornflowerblue</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_cornsilk\">\n<span class=\"arrayIcon\">cornsilk</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_crimson\">\n<span class=\"arrayIcon\">crimson</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_cyan\">\n<span class=\"arrayIcon\">cyan</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_darkblue\">\n<span class=\"arrayIcon\">darkblue</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_darkcyan\">\n<span class=\"arrayIcon\">darkcyan</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_darkgoldenrod\">\n<span class=\"arrayIcon\">darkgoldenrod</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_darkgray\">\n<span class=\"arrayIcon\">darkgray</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_darkgreen\">\n<span class=\"arrayIcon\">darkgreen</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_darkgrey\">\n<span class=\"arrayIcon\">darkgrey</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_darkkhaki\">\n<span class=\"arrayIcon\">darkkhaki</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_darkmagenta\">\n<span class=\"arrayIcon\">darkmagenta</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_darkolivegreen\">\n<span class=\"arrayIcon\">darkolivegreen</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_darkorange\">\n<span class=\"arrayIcon\">darkorange</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_darkorchid\">\n<span class=\"arrayIcon\">darkorchid</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_darkred\">\n<span class=\"arrayIcon\">darkred</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_darksalmon\">\n<span class=\"arrayIcon\">darksalmon</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_darkseagreen\">\n<span class=\"arrayIcon\">darkseagreen</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_darkslateblue\">\n<span class=\"arrayIcon\">darkslateblue</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_darkslategray\">\n<span class=\"arrayIcon\">darkslategray</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_darkslategrey\">\n<span class=\"arrayIcon\">darkslategrey</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_darkturquoise\">\n<span class=\"arrayIcon\">darkturquoise</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_darkviolet\">\n<span class=\"arrayIcon\">darkviolet</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_deeppink\">\n<span class=\"arrayIcon\">deeppink</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_deepskyblue\">\n<span class=\"arrayIcon\">deepskyblue</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_dimgray\">\n<span class=\"arrayIcon\">dimgray</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_dimgrey\">\n<span class=\"arrayIcon\">dimgrey</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_dodgerblue\">\n<span class=\"arrayIcon\">dodgerblue</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_firebrick\">\n<span class=\"arrayIcon\">firebrick</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_floralwhite\">\n<span class=\"arrayIcon\">floralwhite</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_forestgreen\">\n<span class=\"arrayIcon\">forestgreen</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_fuchsia\">\n<span class=\"arrayIcon\">fuchsia</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"color\" class=\"jsdoc-link\">dojo/_base/Color</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_gainsboro\">\n<span class=\"arrayIcon\">gainsboro</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_ghostwhite\">\n<span class=\"arrayIcon\">ghostwhite</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_gold\">\n<span class=\"arrayIcon\">gold</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_goldenrod\">\n<span class=\"arrayIcon\">goldenrod</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_gray\">\n<span class=\"arrayIcon\">gray</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"color\" class=\"jsdoc-link\">dojo/_base/Color</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_green\">\n<span class=\"arrayIcon\">green</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"color\" class=\"jsdoc-link\">dojo/_base/Color</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_greenyellow\">\n<span class=\"arrayIcon\">greenyellow</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_grey\">\n<span class=\"arrayIcon\">grey</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_honeydew\">\n<span class=\"arrayIcon\">honeydew</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_hotpink\">\n<span class=\"arrayIcon\">hotpink</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_indianred\">\n<span class=\"arrayIcon\">indianred</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_indigo\">\n<span class=\"arrayIcon\">indigo</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_ivory\">\n<span class=\"arrayIcon\">ivory</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_khaki\">\n<span class=\"arrayIcon\">khaki</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_lavender\">\n<span class=\"arrayIcon\">lavender</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_lavenderblush\">\n<span class=\"arrayIcon\">lavenderblush</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_lawngreen\">\n<span class=\"arrayIcon\">lawngreen</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_lemonchiffon\">\n<span class=\"arrayIcon\">lemonchiffon</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_lightblue\">\n<span class=\"arrayIcon\">lightblue</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_lightcoral\">\n<span class=\"arrayIcon\">lightcoral</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_lightcyan\">\n<span class=\"arrayIcon\">lightcyan</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_lightgoldenrodyellow\">\n<span class=\"arrayIcon\">lightgoldenrodyellow</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_lightgray\">\n<span class=\"arrayIcon\">lightgray</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_lightgreen\">\n<span class=\"arrayIcon\">lightgreen</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_lightgrey\">\n<span class=\"arrayIcon\">lightgrey</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_lightpink\">\n<span class=\"arrayIcon\">lightpink</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_lightsalmon\">\n<span class=\"arrayIcon\">lightsalmon</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_lightseagreen\">\n<span class=\"arrayIcon\">lightseagreen</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_lightskyblue\">\n<span class=\"arrayIcon\">lightskyblue</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_lightslategray\">\n<span class=\"arrayIcon\">lightslategray</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_lightslategrey\">\n<span class=\"arrayIcon\">lightslategrey</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_lightsteelblue\">\n<span class=\"arrayIcon\">lightsteelblue</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_lightyellow\">\n<span class=\"arrayIcon\">lightyellow</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_lime\">\n<span class=\"arrayIcon\">lime</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"color\" class=\"jsdoc-link\">dojo/_base/Color</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_limegreen\">\n<span class=\"arrayIcon\">limegreen</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_linen\">\n<span class=\"arrayIcon\">linen</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_magenta\">\n<span class=\"arrayIcon\">magenta</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_maroon\">\n<span class=\"arrayIcon\">maroon</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"color\" class=\"jsdoc-link\">dojo/_base/Color</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_mediumaquamarine\">\n<span class=\"arrayIcon\">mediumaquamarine</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_mediumblue\">\n<span class=\"arrayIcon\">mediumblue</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_mediumorchid\">\n<span class=\"arrayIcon\">mediumorchid</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_mediumpurple\">\n<span class=\"arrayIcon\">mediumpurple</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_mediumseagreen\">\n<span class=\"arrayIcon\">mediumseagreen</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_mediumslateblue\">\n<span class=\"arrayIcon\">mediumslateblue</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_mediumspringgreen\">\n<span class=\"arrayIcon\">mediumspringgreen</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_mediumturquoise\">\n<span class=\"arrayIcon\">mediumturquoise</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_mediumvioletred\">\n<span class=\"arrayIcon\">mediumvioletred</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_midnightblue\">\n<span class=\"arrayIcon\">midnightblue</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_mintcream\">\n<span class=\"arrayIcon\">mintcream</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_mistyrose\">\n<span class=\"arrayIcon\">mistyrose</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_moccasin\">\n<span class=\"arrayIcon\">moccasin</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_navajowhite\">\n<span class=\"arrayIcon\">navajowhite</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_navy\">\n<span class=\"arrayIcon\">navy</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"color\" class=\"jsdoc-link\">dojo/_base/Color</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_oldlace\">\n<span class=\"arrayIcon\">oldlace</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_olive\">\n<span class=\"arrayIcon\">olive</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"color\" class=\"jsdoc-link\">dojo/_base/Color</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_olivedrab\">\n<span class=\"arrayIcon\">olivedrab</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_orange\">\n<span class=\"arrayIcon\">orange</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_orangered\">\n<span class=\"arrayIcon\">orangered</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_orchid\">\n<span class=\"arrayIcon\">orchid</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_palegoldenrod\">\n<span class=\"arrayIcon\">palegoldenrod</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_palegreen\">\n<span class=\"arrayIcon\">palegreen</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_paleturquoise\">\n<span class=\"arrayIcon\">paleturquoise</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_palevioletred\">\n<span class=\"arrayIcon\">palevioletred</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_papayawhip\">\n<span class=\"arrayIcon\">papayawhip</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_peachpuff\">\n<span class=\"arrayIcon\">peachpuff</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_peru\">\n<span class=\"arrayIcon\">peru</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_pink\">\n<span class=\"arrayIcon\">pink</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_plum\">\n<span class=\"arrayIcon\">plum</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_powderblue\">\n<span class=\"arrayIcon\">powderblue</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_purple\">\n<span class=\"arrayIcon\">purple</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"color\" class=\"jsdoc-link\">dojo/_base/Color</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_red\">\n<span class=\"arrayIcon\">red</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"color\" class=\"jsdoc-link\">dojo/_base/Color</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_rosybrown\">\n<span class=\"arrayIcon\">rosybrown</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_royalblue\">\n<span class=\"arrayIcon\">royalblue</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_saddlebrown\">\n<span class=\"arrayIcon\">saddlebrown</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_salmon\">\n<span class=\"arrayIcon\">salmon</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_sandybrown\">\n<span class=\"arrayIcon\">sandybrown</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_seagreen\">\n<span class=\"arrayIcon\">seagreen</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_seashell\">\n<span class=\"arrayIcon\">seashell</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_sienna\">\n<span class=\"arrayIcon\">sienna</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_silver\">\n<span class=\"arrayIcon\">silver</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"color\" class=\"jsdoc-link\">dojo/_base/Color</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_skyblue\">\n<span class=\"arrayIcon\">skyblue</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_slateblue\">\n<span class=\"arrayIcon\">slateblue</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_slategray\">\n<span class=\"arrayIcon\">slategray</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_slategrey\">\n<span class=\"arrayIcon\">slategrey</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_snow\">\n<span class=\"arrayIcon\">snow</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_springgreen\">\n<span class=\"arrayIcon\">springgreen</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_steelblue\">\n<span class=\"arrayIcon\">steelblue</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_tan\">\n<span class=\"arrayIcon\">tan</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_teal\">\n<span class=\"arrayIcon\">teal</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"color\" class=\"jsdoc-link\">dojo/_base/Color</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_thistle\">\n<span class=\"arrayIcon\">thistle</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_tomato\">\n<span class=\"arrayIcon\">tomato</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_transparent\">\n<span class=\"objectIcon\">transparent</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"color\" class=\"jsdoc-link\">dojo/_base/Color</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_turquoise\">\n<span class=\"arrayIcon\">turquoise</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_violet\">\n<span class=\"arrayIcon\">violet</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_wheat\">\n<span class=\"arrayIcon\">wheat</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_white\">\n<span class=\"arrayIcon\">white</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"color\" class=\"jsdoc-link\">dojo/_base/Color</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_whitesmoke\">\n<span class=\"arrayIcon\">whitesmoke</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_yellow\">\n<span class=\"arrayIcon\">yellow</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"color\" class=\"jsdoc-link\">dojo/_base/Color</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_Color_named_yellowgreen\">\n<span class=\"arrayIcon\">yellowgreen</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/_base/Color.named.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/_base/Color.named.html</a>\n  </p>\n</div>\n","dojo/_base/kernel.rpc":"<h1>dojo/_base/kernel.rpc</h1>           <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_rpc_JsonpService\">\n<span class=\"functionIcon\">JsonpService</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../rpc/jsonpservice\" class=\"jsdoc-link\">dojo/rpc/JsonpService</a> </p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_rpc_JsonService\">\n<span class=\"functionIcon\">JsonService</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../rpc/jsonservice\" class=\"jsdoc-link\">dojo/rpc/JsonService</a> </p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_rpc_RpcService\">\n<span class=\"functionIcon\">RpcService</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../rpc/rpcservice\" class=\"jsdoc-link\">dojo/rpc/RpcService</a> </p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/_base/kernel.rpc.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/_base/kernel.rpc.html</a>\n  </p>\n</div>\n","dojo/_base/kernel.scopemap":"<h1>dojo/_base/kernel.scopeMap</h1>           <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_scopeMap_dijit\">\n<span class=\"arrayIcon\">dijit</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"kernel\" class=\"jsdoc-link\">dojo/_base/kernel</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_scopeMap_dojo\">\n<span class=\"arrayIcon\">dojo</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"kernel\" class=\"jsdoc-link\">dojo/_base/kernel</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_scopeMap_dojox\">\n<span class=\"arrayIcon\">dojox</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"kernel\" class=\"jsdoc-link\">dojo/_base/kernel</a> </p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/_base/kernel.scopeMap.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/_base/kernel.scopeMap.html</a>\n  </p>\n</div>\n","dojo/_base/kernel.store":"<h1>dojo/_base/kernel.store</h1>             <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_store_util\">\n<span class=\"objectIcon\">util</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../store/util/queryresults\" class=\"jsdoc-link\">dojo/store/util/QueryResults</a> </p>    <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_store_Cache\">\n<span class=\"functionIcon\">Cache</span><span class=\"parameters\">(masterStore,cachingStore,options)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../store/cache\" class=\"jsdoc-link\">dojo/store/Cache</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">masterStore</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">cachingStore</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">options</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_store_DataStore\">\n<span class=\"functionIcon\">DataStore</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../store/datastore\" class=\"jsdoc-link\">dojo/store/DataStore</a> </p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_store_JsonRest\">\n<span class=\"functionIcon\">JsonRest</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../store/jsonrest\" class=\"jsdoc-link\">dojo/store/JsonRest</a> </p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_store_Memory\">\n<span class=\"functionIcon\">Memory</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../store/memory\" class=\"jsdoc-link\">dojo/store/Memory</a> </p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_store_Observable\">\n<span class=\"functionIcon\">Observable</span><span class=\"parameters\">(store)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../store/observable\" class=\"jsdoc-link\">dojo/store/Observable</a> </p> <p>The Observable store wrapper takes a store and sets an observe method on query() results that can be used to monitor results for changes. </p>  <p>Observable wraps an existing store so that notifications can be made when a query is performed. </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">store</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"../store/api/store\">dojo/store/api/Store</a></td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Create a Memory store that returns an observable query, and then log some information about that query. </p> <pre><code>var store = Observable(new Memory({\n    data: [\n        {id: 1, name: \"one\", prime: false},\n        {id: 2, name: \"two\", even: true, prime: true},\n        {id: 3, name: \"three\", prime: true},\n        {id: 4, name: \"four\", even: true, prime: false},\n        {id: 5, name: \"five\", prime: true}\n    ]\n}));\nvar changes = [], results = store.query({ prime: true });\nvar observer = results.observe(function(object, previousIndex, newIndex){\n    changes.push({previousIndex:previousIndex, newIndex:newIndex, object:object});\n});</code></pre> <p>See the Observable tests for more information.</p> </div> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/_base/kernel.store.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/_base/kernel.store.html</a>\n  </p>\n</div>\n","dojo/_base/kernel.string":"<h1>dojo/_base/kernel.string</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>String utilities for Dojo</p>           <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_string_escape\">\n<span class=\"functionIcon\">escape</span><span class=\"parameters\">(str)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../string\" class=\"jsdoc-link\">dojo/string</a> </p> <p>Efficiently escape a string for insertion into HTML (innerHTML or attributes), replacing &amp;, &lt;, &gt;, \", ', and / characters.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">str</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>the string to escape</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_string_pad\">\n<span class=\"functionIcon\">pad</span><span class=\"parameters\">(text,size,ch,end)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../string\" class=\"jsdoc-link\">dojo/string</a> </p> <p>Pad a string to guarantee that it is at least <code>size</code> length by filling with the character <code>ch</code> at either the start or end of the string. Pads at the start, by default.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">text</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>the string to pad</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">size</td> <td class=\"jsdoc-param-type\">Integer</td> <td class=\"jsdoc-param-description\">\n<p>length to provide padding</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">ch</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>character to pad, defaults to '0'</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">end</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>adds padding at the end if true, otherwise pads at start</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">number</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>// Fill the string to length 10 with \"+\" characters on the right.  Yields \"Dojo++++++\".\nstring.pad(\"Dojo\", 10, \"+\", true);</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_string_rep\">\n<span class=\"functionIcon\">rep</span><span class=\"parameters\">(str,num)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../string\" class=\"jsdoc-link\">dojo/string</a> </p> <p>Efficiently replicate a string <code>n</code> times.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">str</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>the string to replicate</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">num</td> <td class=\"jsdoc-param-type\">Integer</td> <td class=\"jsdoc-param-description\">\n<p>number of times to replicate the string</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">string | undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_string_substitute\">\n<span class=\"functionIcon\">substitute</span><span class=\"parameters\">(template,map,transform,thisObject)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../string\" class=\"jsdoc-link\">dojo/string</a> </p> <p>Performs parameterized substitutions on a string. Throws an exception if any parameter is unmatched.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">template</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>a string with expressions in the form <code>${key}</code> to be replaced or <code>${key:format}</code> which specifies a format function. keys are case-sensitive.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">map</td> <td class=\"jsdoc-param-type\">Object | Array</td> <td class=\"jsdoc-param-description\">\n<p>hash to search for substitutions</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">transform</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>a function to process all parameters before substitution takes place, e.g. mylib.encodeXML</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">thisObject</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>where to look for optional format function; default to the global namespace</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Substitutes two expressions in a string from an Array or Object </p> <pre><code>// returns \"File 'foo.html' is not found in directory '/temp'.\"\n// by providing substitution data in an Array\nstring.substitute(\n    \"File '${0}' is not found in directory '${1}'.\",\n    [\"foo.html\",\"/temp\"]\n);\n\n// also returns \"File 'foo.html' is not found in directory '/temp'.\"\n// but provides substitution data in an Object structure.  Dotted\n// notation may be used to traverse the structure.\nstring.substitute(\n    \"File '${name}' is not found in directory '${info.dir}'.\",\n    { name: \"foo.html\", info: { dir: \"/temp\" } }\n);</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>Use a transform function to modify the values: </p> <pre><code>// returns \"file 'foo.html' is not found in directory '/temp'.\"\nstring.substitute(\n    \"${0} is not found in ${1}.\",\n    [\"foo.html\",\"/temp\"],\n    function(str){\n        // try to figure out the type\n        var prefix = (str.charAt(0) == \"/\") ? \"directory\": \"file\";\n        return prefix + \" '\" + str + \"'\";\n    }\n);</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<p>Use a formatter </p> <pre><code>// returns \"thinger -- howdy\"\nstring.substitute(\n    \"${0:postfix}\", [\"thinger\"], null, {\n        postfix: function(value, key){\n            return value + \" -- howdy\";\n        }\n    }\n);</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_string_trim\">\n<span class=\"functionIcon\">trim</span><span class=\"parameters\">(str)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../string\" class=\"jsdoc-link\">dojo/string</a> </p> <p>Trims whitespace from both sides of the string</p>  <p>This version of trim() was taken from <a href=\"http://blog.stevenlevithan.com/archives/faster-trim-javascript\">Steven Levithan's blog</a>. The short yet performant version of this function is <a class=\"jsdoc-link\" href=\"lang#trim\">dojo/_base/lang.trim()</a>, which is part of Dojo base. Uses String.prototype.trim instead, if available.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">str</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>String to be trimmed</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">String | string</span></p> <p>Returns the trimmed string</p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/_base/kernel.string.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/_base/kernel.string.html</a>\n  </p>\n</div>\n","dojo/_base/kernel.tests":"<h1>dojo/_base/kernel.tests</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>D.O.H. Test files for Dojo unit testing.</p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/_base/kernel.tests.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/_base/kernel.tests.html</a>\n  </p>\n</div>\n","dojo/_base/kernel.version":"<h1>dojo/_base/kernel.version</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>Version number of the Dojo Toolkit</p>  <p>Hash about the version, including </p> <ul> <li>major: Integer: Major version. If total version is \"1.2.0beta1\", will be 1</li> <li>minor: Integer: Minor version. If total version is \"1.2.0beta1\", will be 2</li> <li>patch: Integer: Patch version. If total version is \"1.2.0beta1\", will be 0</li> <li>flag: String: Descriptor flag. If total version is \"1.2.0beta1\", will be \"beta1\"</li> <li>revision: Number: The Git rev from which dojo was pulled</li> </ul>             <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_version_flag\">\n<span class=\"stringIcon\">flag</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"kernel\" class=\"jsdoc-link\">dojo/_base/kernel</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_version_major\">\n<span class=\"numberIcon\">major</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"kernel\" class=\"jsdoc-link\">dojo/_base/kernel</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_version_minor\">\n<span class=\"numberIcon\">minor</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"kernel\" class=\"jsdoc-link\">dojo/_base/kernel</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_version_patch\">\n<span class=\"numberIcon\">patch</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"kernel\" class=\"jsdoc-link\">dojo/_base/kernel</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_version_revision\">\n<span class=\"numberIcon\">revision</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"kernel\" class=\"jsdoc-link\">dojo/_base/kernel</a> </p>    <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_version_toString\">\n<span class=\"functionIcon\">toString</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"kernel\" class=\"jsdoc-link\">dojo/_base/kernel</a> </p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">string</span></p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/_base/kernel.version.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/_base/kernel.version.html</a>\n  </p>\n</div>\n","dojo/_base/kernel.window":"<h1>dojo/_base/kernel.window</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>TODOC</p>           <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_window_get\">\n<span class=\"functionIcon\">get</span><span class=\"parameters\">(doc)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../window\" class=\"jsdoc-link\">dojo/window</a> </p> <p>Get window object associated with document doc.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">doc</td> <td class=\"jsdoc-param-type\">Document</td> <td class=\"jsdoc-param-description\">\n<p>The document to get the associated window for.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_window_getBox\">\n<span class=\"functionIcon\">getBox</span><span class=\"parameters\">(doc)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../window\" class=\"jsdoc-link\">dojo/window</a> </p> <p>Returns the dimensions and scroll position of the viewable area of a browser window</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">doc</td> <td class=\"jsdoc-param-type\">Document</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">object</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_window_scrollIntoView\">\n<span class=\"functionIcon\">scrollIntoView</span><span class=\"parameters\">(node,pos)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../window\" class=\"jsdoc-link\">dojo/window</a> </p> <p>Scroll the passed node into view using minimal movement, if it is not already.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DomNode</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">pos</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/_base/kernel.window.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/_base/kernel.window.html</a>\n  </p>\n</div>\n","dojo/_base/kernel.keys":"<h1>dojo/_base/kernel.keys</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>Definitions for common key values. Client code should test keyCode against these named constants, as the actual codes can vary by browser.</p>           <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_keys_ALT\">\n<span class=\"numberIcon\">ALT</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_keys_BACKSPACE\">\n<span class=\"numberIcon\">BACKSPACE</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_keys_CAPS_LOCK\">\n<span class=\"numberIcon\">CAPS_LOCK</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_keys_CLEAR\">\n<span class=\"numberIcon\">CLEAR</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_keys_copyKey\">\n<span class=\"numberIcon\">copyKey</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_keys_CTRL\">\n<span class=\"numberIcon\">CTRL</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_keys_DELETE\">\n<span class=\"numberIcon\">DELETE</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_keys_DOWN_ARROW\">\n<span class=\"numberIcon\">DOWN_ARROW</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_keys_DOWN_DPAD\">\n<span class=\"numberIcon\">DOWN_DPAD</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_keys_END\">\n<span class=\"numberIcon\">END</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_keys_ENTER\">\n<span class=\"numberIcon\">ENTER</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_keys_ESCAPE\">\n<span class=\"numberIcon\">ESCAPE</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_keys_F1\">\n<span class=\"numberIcon\">F1</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_keys_F10\">\n<span class=\"numberIcon\">F10</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_keys_F11\">\n<span class=\"numberIcon\">F11</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_keys_F12\">\n<span class=\"numberIcon\">F12</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_keys_F13\">\n<span class=\"numberIcon\">F13</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_keys_F14\">\n<span class=\"numberIcon\">F14</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_keys_F15\">\n<span class=\"numberIcon\">F15</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_keys_F2\">\n<span class=\"numberIcon\">F2</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_keys_F3\">\n<span class=\"numberIcon\">F3</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_keys_F4\">\n<span class=\"numberIcon\">F4</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_keys_F5\">\n<span class=\"numberIcon\">F5</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_keys_F6\">\n<span class=\"numberIcon\">F6</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_keys_F7\">\n<span class=\"numberIcon\">F7</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_keys_F8\">\n<span class=\"numberIcon\">F8</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_keys_F9\">\n<span class=\"numberIcon\">F9</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_keys_HELP\">\n<span class=\"numberIcon\">HELP</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_keys_HOME\">\n<span class=\"numberIcon\">HOME</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_keys_INSERT\">\n<span class=\"numberIcon\">INSERT</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_keys_LEFT_ARROW\">\n<span class=\"numberIcon\">LEFT_ARROW</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_keys_LEFT_DPAD\">\n<span class=\"numberIcon\">LEFT_DPAD</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_keys_LEFT_WINDOW\">\n<span class=\"numberIcon\">LEFT_WINDOW</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_keys_META\">\n<span class=\"numberIcon\">META</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_keys_NUM_LOCK\">\n<span class=\"numberIcon\">NUM_LOCK</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_keys_NUMPAD_0\">\n<span class=\"numberIcon\">NUMPAD_0</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_keys_NUMPAD_1\">\n<span class=\"numberIcon\">NUMPAD_1</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_keys_NUMPAD_2\">\n<span class=\"numberIcon\">NUMPAD_2</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_keys_NUMPAD_3\">\n<span class=\"numberIcon\">NUMPAD_3</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_keys_NUMPAD_4\">\n<span class=\"numberIcon\">NUMPAD_4</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_keys_NUMPAD_5\">\n<span class=\"numberIcon\">NUMPAD_5</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_keys_NUMPAD_6\">\n<span class=\"numberIcon\">NUMPAD_6</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_keys_NUMPAD_7\">\n<span class=\"numberIcon\">NUMPAD_7</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_keys_NUMPAD_8\">\n<span class=\"numberIcon\">NUMPAD_8</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_keys_NUMPAD_9\">\n<span class=\"numberIcon\">NUMPAD_9</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_keys_NUMPAD_DIVIDE\">\n<span class=\"numberIcon\">NUMPAD_DIVIDE</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_keys_NUMPAD_ENTER\">\n<span class=\"numberIcon\">NUMPAD_ENTER</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_keys_NUMPAD_MINUS\">\n<span class=\"numberIcon\">NUMPAD_MINUS</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_keys_NUMPAD_MULTIPLY\">\n<span class=\"numberIcon\">NUMPAD_MULTIPLY</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_keys_NUMPAD_PERIOD\">\n<span class=\"numberIcon\">NUMPAD_PERIOD</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_keys_NUMPAD_PLUS\">\n<span class=\"numberIcon\">NUMPAD_PLUS</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_keys_PAGE_DOWN\">\n<span class=\"numberIcon\">PAGE_DOWN</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_keys_PAGE_UP\">\n<span class=\"numberIcon\">PAGE_UP</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_keys_PAUSE\">\n<span class=\"numberIcon\">PAUSE</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_keys_RIGHT_ARROW\">\n<span class=\"numberIcon\">RIGHT_ARROW</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_keys_RIGHT_DPAD\">\n<span class=\"numberIcon\">RIGHT_DPAD</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_keys_RIGHT_WINDOW\">\n<span class=\"numberIcon\">RIGHT_WINDOW</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_keys_SCROLL_LOCK\">\n<span class=\"numberIcon\">SCROLL_LOCK</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_keys_SELECT\">\n<span class=\"numberIcon\">SELECT</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_keys_SHIFT\">\n<span class=\"numberIcon\">SHIFT</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_keys_SPACE\">\n<span class=\"numberIcon\">SPACE</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_keys_TAB\">\n<span class=\"numberIcon\">TAB</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_keys_UP_ARROW\">\n<span class=\"numberIcon\">UP_ARROW</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_keys_UP_DPAD\">\n<span class=\"numberIcon\">UP_DPAD</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../keys\" class=\"jsdoc-link\">dojo/keys</a> </p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/_base/kernel.keys.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/_base/kernel.keys.html</a>\n  </p>\n</div>\n","dojo/_base/kernel.number":"<h1>dojo/_base/kernel.number</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>localized formatting and parsing routines for Number</p>             <h2 id=\"properties\">Properties</h2>    <h2 id=\"methods\">Methods</h2>               <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_number_format\">\n<span class=\"functionIcon\">format</span><span class=\"parameters\">(value,options)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../number\" class=\"jsdoc-link\">dojo/number</a> </p> <p>Format a Number as a String, using locale-specific settings</p>  <p>Create a string from a Number using a known localized pattern. Formatting patterns appropriate to the locale are chosen from the <a href=\"http://unicode.org/cldr\">Common Locale Data Repository</a> as well as the appropriate symbols and delimiters. If value is Infinity, -Infinity, or is not a valid JavaScript number, return null.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">value</td> <td class=\"jsdoc-param-type\">Number</td> <td class=\"jsdoc-param-description\">\n<p>the number to be formatted</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">options</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>An object with the following properties:</p>\n<ul>\n<li>pattern (String, optional): <p>override <a href=\"http://www.unicode.org/reports/tr35/#Number_Format_Patterns\">formatting pattern</a> with this string. Default value is based on locale. Overriding this property will defeat localization. Literal characters in patterns are not supported.</p> </li>\n<li>type (String, optional): <p>choose a format type based on the locale from the following: decimal, scientific (not yet supported), percent, currency. decimal by default.</p> </li>\n<li>places (Number, optional): <p>fixed number of decimal places to show. This overrides any information in the provided pattern.</p> </li>\n<li>round (Number, optional): <p>5 rounds to nearest .5; 0 rounds to nearest whole (default). -1 means do not round.</p> </li>\n<li>locale (String, optional): <p>override the locale used to determine formatting rules</p> </li>\n<li>fractional (Boolean, optional): <p>If false, show no decimal places, overriding places and pattern settings.</p> </li>\n</ul> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">null | undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_number_parse\">\n<span class=\"functionIcon\">parse</span><span class=\"parameters\">(expression,options)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../number\" class=\"jsdoc-link\">dojo/number</a> </p> <p>Convert a properly formatted string to a primitive Number, using locale-specific settings.</p>  <p>Create a Number from a string using a known localized pattern. Formatting patterns are chosen appropriate to the locale and follow the syntax described by <a href=\"http://www.unicode.org/reports/tr35/#Number_Format_Patterns\">unicode.org TR35</a> Note that literal characters in patterns are not supported.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">expression</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>A string representation of a Number</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">options</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>An object with the following properties:</p>\n<ul>\n<li>pattern (String, optional): <p>override <a href=\"http://www.unicode.org/reports/tr35/#Number_Format_Patterns\">formatting pattern</a> with this string. Default value is based on locale. Overriding this property will defeat localization. Literal characters in patterns are not supported.</p> </li>\n<li>type (String, optional): <p>choose a format type based on the locale from the following: decimal, scientific (not yet supported), percent, currency. decimal by default.</p> </li>\n<li>locale (String, optional): <p>override the locale used to determine formatting rules</p> </li>\n<li>strict (Boolean, optional): <p>strict parsing, false by default. Strict parsing requires input as produced by the format() method. Non-strict is more permissive, e.g. flexible on white space, omitting thousands separators</p> </li>\n<li>fractional (Boolean|Array, optional): <p>Whether to include the fractional portion, where the number of decimal places are implied by pattern or explicit 'places' parameter. The value [true,false] makes the fractional portion optional.</p> </li>\n</ul> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">number</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_number_regexp\">\n<span class=\"functionIcon\">regexp</span><span class=\"parameters\">(options)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../number\" class=\"jsdoc-link\">dojo/number</a> </p> <p>Builds the regular needed to parse a number</p>  <p>Returns regular expression with positive and negative match, group and decimal separators</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">options</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>An object with the following properties:</p>\n<ul>\n<li>pattern (String, optional): <p>override <a href=\"http://www.unicode.org/reports/tr35/#Number_Format_Patterns\">formatting pattern</a> with this string. Default value is based on locale. Overriding this property will defeat localization.</p> </li>\n<li>type (String, optional): <p>choose a format type based on the locale from the following: decimal, scientific (not yet supported), percent, currency. decimal by default.</p> </li>\n<li>locale (String, optional): <p>override the locale used to determine formatting rules</p> </li>\n<li>strict (Boolean, optional): <p>strict parsing, false by default. Strict parsing requires input as produced by the format() method. Non-strict is more permissive, e.g. flexible on white space, omitting thousands separators</p> </li>\n<li>places (Number|String, optional): <p>number of decimal places to accept: Infinity, a positive number, or a range \"n,m\". Defined by pattern or Infinity if pattern not provided.</p> </li>\n</ul> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_number_round\">\n<span class=\"functionIcon\">round</span><span class=\"parameters\">(value,places,increment)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../number\" class=\"jsdoc-link\">dojo/number</a> </p> <p>Rounds to the nearest value with the given number of decimal places, away from zero</p>  <p>Rounds to the nearest value with the given number of decimal places, away from zero if equal. Similar to Number.toFixed(), but compensates for browser quirks. Rounding can be done by fractional increments also, such as the nearest quarter. NOTE: Subject to floating point errors. See <a class=\"jsdoc-link\" href=\"http://dojotoolkit.org/api/1.10/dojox/math/round\">dojox/math/round</a> for experimental workaround.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">value</td> <td class=\"jsdoc-param-type\">Number</td> <td class=\"jsdoc-param-description\">\n<p>The number to round</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">places</td> <td class=\"jsdoc-param-type\">Number</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>The number of decimal places where rounding takes place. Defaults to 0 for whole rounding. Must be non-negative.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">increment</td> <td class=\"jsdoc-param-type\">Number</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Rounds next place to nearest value of increment/10. 10 by default.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">number</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>&gt;&gt;&gt; number.round(-0.5)\n-1\n&gt;&gt;&gt; number.round(162.295, 2)\n162.29  // note floating point error.  Should be 162.3\n&gt;&gt;&gt; number.round(10.71, 0, 2.5)\n10.75</code></pre> </div> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/_base/kernel.number.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/_base/kernel.number.html</a>\n  </p>\n</div>\n","dojo/_base/kernel.stateful":"<h1>dojo/_base/kernel.Stateful</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>Base class for objects that provide named properties with optional getter/setter control and the ability to watch for property changes </p> <p>The class also provides the functionality to auto-magically manage getters and setters for object attributes/properties. </p> <p>Getters and Setters should follow the format of _xxxGetter or _xxxSetter where the xxx is a name of the attribute to handle. So an attribute of \"foo\" would have a custom getter of _fooGetter and a custom setter of _fooSetter. </p>     <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>require([\"dojo/Stateful\", function(Stateful) {\n    var obj = new Stateful();\n    obj.watch(\"foo\", function(){\n        console.log(\"foo changed to \" + this.get(\"foo\"));\n    });\n    obj.set(\"foo\",\"bar\");\n});</code></pre> </div> </div>         <h2 id=\"properties\">Properties</h2>    <h2 id=\"methods\">Methods</h2>       <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_Stateful_get\">\n<span class=\"functionIcon\">get</span><span class=\"parameters\">(name)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../stateful\" class=\"jsdoc-link\">dojo/Stateful</a> </p> <p>Get a property on a Stateful instance.</p>  <p>Get a named property on a Stateful object. The property may potentially be retrieved via a getter method in subclasses. In the base class this just retrieves the object's property.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">name</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>The property to get.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | undefined</span></p> <p>The property value on this Stateful instance.</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>require([\"dojo/Stateful\", function(Stateful) {\n    var stateful = new Stateful({foo: 3});\n    stateful.get(\"foo\") // returns 3\n    stateful.foo // returns 3\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_Stateful_postscript\">\n<span class=\"functionIcon\">postscript</span><span class=\"parameters\">(params)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../stateful\" class=\"jsdoc-link\">dojo/Stateful</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">params</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_Stateful_set\">\n<span class=\"functionIcon\">set</span><span class=\"parameters\">(name,value)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../stateful\" class=\"jsdoc-link\">dojo/Stateful</a> </p> <p>Set a property on a Stateful instance</p>  <p>Sets named properties on a stateful object and notifies any watchers of the property. A programmatic setter may be defined in subclasses.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">name</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>The property to set.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">value</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>The value to set in the property.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | function</span></p> <p>The function returns this dojo.Stateful instance.</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>require([\"dojo/Stateful\", function(Stateful) {\n    var stateful = new Stateful();\n    stateful.watch(function(name, oldValue, value){\n        // this will be called on the set below\n    }\n    stateful.set(foo, 5);</code></pre> <p>set() may also be called with a hash of name/value pairs, ex: </p> <pre><code>stateful.set({\n    foo: \"Howdy\",\n    bar: 3\n});\n});</code></pre> <p>This is equivalent to calling set(foo, \"Howdy\") and set(bar, 3) </p> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_Stateful_watch\">\n<span class=\"functionIcon\">watch</span><span class=\"parameters\">(name,callback)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../stateful\" class=\"jsdoc-link\">dojo/Stateful</a> </p> <p>Watches a property for changes</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">name</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Indicates the property to watch. This is optional (the callback may be the only parameter), and if omitted, all the properties will be watched</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">callback</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\">\n<p>The function to execute when the property changes. This will be called after the property has been changed. The callback will be called with the |this| set to the instance, the first argument as the name of the property, the second argument as the old value and the third argument as the new value.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | object</span></p> <p>An object handle for the watch. The unwatch method of this object can be used to discontinue watching this property: </p> <pre><code>var watchHandle = obj.watch(\"foo\", callback);\nwatchHandle.unwatch(); // callback won't be called now</code></pre><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/_base/kernel.Stateful.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/_base/kernel.Stateful.html</a>\n  </p>\n</div>\n","dojo/_base/kernel.touch":"<h1>dojo/_base/kernel.touch</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>This module provides unified touch event handlers by exporting press, move, release and cancel which can also run well on desktop. Based on <a href=\"http://dvcs.w3.org/hg/webevents/raw-file/tip/touchevents.html\">http://dvcs.w3.org/hg/webevents/raw-file/tip/touchevents.html</a> Also, if the dojoClick property is set to truthy on a DOM node, <a class=\"jsdoc-link\" href=\"../touch\">dojo/touch</a> generates click events immediately for this node and its descendants (except for descendants that have a dojoClick property set to falsy), to avoid the delay before native browser click events, and regardless of whether evt.preventDefault() was called in a touch.press event listener. </p>     <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Used with dojo/on </p> <pre><code>define([\"dojo/on\", \"dojo/touch\"], function(on, touch){\n    on(node, touch.press, function(e){});\n    on(node, touch.move, function(e){});\n    on(node, touch.release, function(e){});\n    on(node, touch.cancel, function(e){});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>Used with touch.* directly </p> <pre><code>touch.press(node, function(e){});\ntouch.move(node, function(e){});\ntouch.release(node, function(e){});\ntouch.cancel(node, function(e){});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<p>Have dojo/touch generate clicks without delay, with a default move threshold of 4 pixels </p> <pre><code>node.dojoClick = true;</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 4</h3>\n<p>Have dojo/touch generate clicks without delay, with a move threshold of 10 pixels horizontally and vertically </p> <pre><code>node.dojoClick = 10;</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 5</h3>\n<p>Have dojo/touch generate clicks without delay, with a move threshold of 50 pixels horizontally and 10 pixels vertically </p> <pre><code>node.dojoClick = {x:50, y:5};</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 6</h3>\n<p>Disable clicks without delay generated by dojo/touch on a node that has an ancestor with property dojoClick set to truthy </p> <pre><code>node.dojoClick = false;</code></pre> </div> </div>       <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_touch_cancel\">\n<span class=\"functionIcon\">cancel</span><span class=\"parameters\">(node,listener)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../touch\" class=\"jsdoc-link\">dojo/touch</a> </p> <p>Register a listener to 'touchcancel'|'mouseleave' for the given node</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">Dom</td> <td class=\"jsdoc-param-description\">\n<p>Target node to listen to</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">listener</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\">\n<p>Callback function</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any</span></p> <p>A handle which will be used to remove the listener by handle.remove()</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_touch_enter\">\n<span class=\"functionIcon\">enter</span><span class=\"parameters\">(node,listener)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../touch\" class=\"jsdoc-link\">dojo/touch</a> </p> <p>Register a listener to mouse.enter or touch equivalent for the given node</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">Dom</td> <td class=\"jsdoc-param-description\">\n<p>Target node to listen to</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">listener</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\">\n<p>Callback function</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any</span></p> <p>A handle which will be used to remove the listener by handle.remove()</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_touch_leave\">\n<span class=\"functionIcon\">leave</span><span class=\"parameters\">(node,listener)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../touch\" class=\"jsdoc-link\">dojo/touch</a> </p> <p>Register a listener to mouse.leave or touch equivalent for the given node</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">Dom</td> <td class=\"jsdoc-param-description\">\n<p>Target node to listen to</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">listener</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\">\n<p>Callback function</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any</span></p> <p>A handle which will be used to remove the listener by handle.remove()</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_touch_move\">\n<span class=\"functionIcon\">move</span><span class=\"parameters\">(node,listener)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../touch\" class=\"jsdoc-link\">dojo/touch</a> </p> <p>Register a listener that fires when the mouse cursor or a finger is dragged over the given node.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">Dom</td> <td class=\"jsdoc-param-description\">\n<p>Target node to listen to</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">listener</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\">\n<p>Callback function</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any</span></p> <p>A handle which will be used to remove the listener by handle.remove()</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_touch_out\">\n<span class=\"functionIcon\">out</span><span class=\"parameters\">(node,listener)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../touch\" class=\"jsdoc-link\">dojo/touch</a> </p> <p>Register a listener to 'mouseout' or touch equivalent for the given node</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">Dom</td> <td class=\"jsdoc-param-description\">\n<p>Target node to listen to</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">listener</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\">\n<p>Callback function</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any</span></p> <p>A handle which will be used to remove the listener by handle.remove()</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_touch_over\">\n<span class=\"functionIcon\">over</span><span class=\"parameters\">(node,listener)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../touch\" class=\"jsdoc-link\">dojo/touch</a> </p> <p>Register a listener to 'mouseover' or touch equivalent for the given node</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">Dom</td> <td class=\"jsdoc-param-description\">\n<p>Target node to listen to</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">listener</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\">\n<p>Callback function</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any</span></p> <p>A handle which will be used to remove the listener by handle.remove()</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_touch_press\">\n<span class=\"functionIcon\">press</span><span class=\"parameters\">(node,listener)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../touch\" class=\"jsdoc-link\">dojo/touch</a> </p> <p>Register a listener to 'touchstart'|'mousedown' for the given node</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">Dom</td> <td class=\"jsdoc-param-description\">\n<p>Target node to listen to</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">listener</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\">\n<p>Callback function</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any</span></p> <p>A handle which will be used to remove the listener by handle.remove()</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_touch_release\">\n<span class=\"functionIcon\">release</span><span class=\"parameters\">(node,listener)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../touch\" class=\"jsdoc-link\">dojo/touch</a> </p> <p>Register a listener to releasing the mouse button while the cursor is over the given node (i.e. \"mouseup\") or for removing the finger from the screen while touching the given node.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">Dom</td> <td class=\"jsdoc-param-description\">\n<p>Target node to listen to</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">listener</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\">\n<p>Callback function</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any</span></p> <p>A handle which will be used to remove the listener by handle.remove()</p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/_base/kernel.touch.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/_base/kernel.touch.html</a>\n  </p>\n</div>\n","dojo/_base/loader":"<h1>dojo/_base/loader</h1>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/_base/loader.html\" target=\"_blank\">dojo/_base/loader reference documentation</a> for more information.</p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/_base/loader.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/_base/loader.html</a>\n  </p>\n</div>\n","dojo/_base/nodelist":"<h1>dojo/_base/NodeList</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>This module extends <a class=\"jsdoc-link\" href=\"../nodelist\">dojo/NodeList</a> with the legacy connect(), coords(), blur(), focus(), change(), click(), error(), keydown(), keypress(), keyup(), load(), mousedown(), mouseenter(), mouseleave(), mousemove(), mouseout(), mouseover(), mouseup(), and submit() methods.</p>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/_base/NodeList.html\" target=\"_blank\">dojo/_base/NodeList reference documentation</a> for more information.</p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/_base/NodeList.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/_base/NodeList.html</a>\n  </p>\n</div>\n","dojo/_base/query":"<h1>dojo/_base/query</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>Deprecated. Use <a class=\"jsdoc-link\" href=\"../query\">dojo/query</a> instead.</p>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/_base/query.html\" target=\"_blank\">dojo/_base/query reference documentation</a> for more information.</p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/_base/query.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/_base/query.html</a>\n  </p>\n</div>\n","dojo/_base/sniff":"<h1>dojo/_base/sniff</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>Deprecated. New code should use <a class=\"jsdoc-link\" href=\"../sniff\">dojo/sniff</a>. This module populates the dojo browser version sniffing properties like dojo.isIE.</p>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/_base/sniff.html\" target=\"_blank\">dojo/_base/sniff reference documentation</a> for more information.</p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/_base/sniff.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/_base/sniff.html</a>\n  </p>\n</div>\n","dojo/_base/unload":"<h1>dojo/_base/unload</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>This module contains the document and window unload detection API. This module is deprecated. Use on(window, \"unload\", func) and on(window, \"beforeunload\", func) instead.</p>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/_base/unload.html\" target=\"_blank\">dojo/_base/unload reference documentation</a> for more information.</p>          <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_unload_addOnUnload\">\n<span class=\"functionIcon\">addOnUnload</span><span class=\"parameters\">(obj,functionName)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"unload\" class=\"jsdoc-link\">dojo/_base/unload</a> </p> <p>Registers a function to be triggered when the page unloads. Deprecated, use on(window, \"beforeunload\", lang.hitch(obj, functionName)) instead.</p>  <p>The first time that addOnUnload is called Dojo will register a page listener to trigger your unload handler with. </p> <p>In a browser environment, the functions will be triggered during the window.onbeforeunload event. Be careful of doing too much work in an unload handler. onbeforeunload can be triggered if a link to download a file is clicked, or if the link is a javascript: link. In these cases, the onbeforeunload event fires, but the document is not actually destroyed. So be careful about doing destructive operations in a dojo.addOnUnload callback. </p> <p>Further note that calling dojo.addOnUnload will prevent browsers from using a \"fast back\" cache to make page loading via back button instantaneous.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">obj</td> <td class=\"jsdoc-param-type\">Object? | Function</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> <tr> <td class=\"jsdoc-param-name\">functionName</td> <td class=\"jsdoc-param-type\">String | Function</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>var afunc = function() {console.log(\"global function\");};\nrequire([\"dojo/_base/unload\"], function(unload) {\n    var foo = {bar: function(){ console.log(\"bar unloading...\");}, \n               data: \"mydata\"};\n    unload.addOnUnload(afunc);\n    unload.addOnUnload(foo, \"bar\");\n    unload.addOnUnload(foo, function(){console.log(\"\", this.data);});\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_unload_addOnWindowUnload\">\n<span class=\"functionIcon\">addOnWindowUnload</span><span class=\"parameters\">(obj,functionName)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"unload\" class=\"jsdoc-link\">dojo/_base/unload</a> </p> <p>Registers a function to be triggered when window.onunload fires. Deprecated, use on(window, \"unload\", lang.hitch(obj, functionName)) instead.</p>  <p>The first time that addOnWindowUnload is called Dojo will register a page listener to trigger your unload handler with. Note that registering these handlers may destroy \"fastback\" page caching in browsers that support it. Be careful trying to modify the DOM or access JavaScript properties during this phase of page unloading: they may not always be available. Consider addOnUnload() if you need to modify the DOM or do heavy JavaScript work since it fires at the equivalent of the page's \"onbeforeunload\" event.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">obj</td> <td class=\"jsdoc-param-type\">Object | Function</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> <tr> <td class=\"jsdoc-param-name\">functionName</td> <td class=\"jsdoc-param-type\">String | Function</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>var afunc = function() {console.log(\"global function\");};\nrequire([\"dojo/_base/unload\"], function(unload) {\n    var foo = {bar: function(){ console.log(\"bar unloading...\");}, \n               data: \"mydata\"};\n    unload.addOnWindowUnload(afunc);\n    unload.addOnWindowUnload(foo, \"bar\");\n    unload.addOnWindowUnload(foo, function(){console.log(\"\", this.data);});\n});</code></pre> </div> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/_base/unload.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/_base/unload.html</a>\n  </p>\n</div>\n","dojo/_base/url":"<h1>dojo/_base/url</h1>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">url<span class=\"parameters\"><span class=\"paren\">(</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/_base/url.html\" target=\"_blank\">dojo/_base/url reference documentation</a> for more information.</p>            <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_url_authority\">\n<span class=\"objectIcon\">authority</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"url\" class=\"jsdoc-link\">dojo/_base/url</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_url_fragment\">\n<span class=\"objectIcon\">fragment</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"url\" class=\"jsdoc-link\">dojo/_base/url</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_url_host\">\n<span class=\"objectIcon\">host</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"url\" class=\"jsdoc-link\">dojo/_base/url</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_url_password\">\n<span class=\"objectIcon\">password</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"url\" class=\"jsdoc-link\">dojo/_base/url</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_url_path\">\n<span class=\"objectIcon\">path</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"url\" class=\"jsdoc-link\">dojo/_base/url</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_url_port\">\n<span class=\"objectIcon\">port</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"url\" class=\"jsdoc-link\">dojo/_base/url</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_url_query\">\n<span class=\"objectIcon\">query</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"url\" class=\"jsdoc-link\">dojo/_base/url</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_url_scheme\">\n<span class=\"objectIcon\">scheme</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"url\" class=\"jsdoc-link\">dojo/_base/url</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_url_uri\">\n<span class=\"objectIcon\">uri</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"url\" class=\"jsdoc-link\">dojo/_base/url</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_url_user\">\n<span class=\"objectIcon\">user</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"url\" class=\"jsdoc-link\">dojo/_base/url</a> </p>    <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_url_toString\">\n<span class=\"functionIcon\">toString</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"url\" class=\"jsdoc-link\">dojo/_base/url</a> </p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/_base/url.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/_base/url.html</a>\n  </p>\n</div>\n","dojo/_base/lang":"<h1>dojo/_base/lang</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>This module defines Javascript language extensions.</p>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/_base/lang.html\" target=\"_blank\">dojo/_base/lang reference documentation</a> for more information.</p>            <h2 id=\"properties\">Properties</h2>    <h2 id=\"methods\">Methods</h2>       <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_lang_clone\">\n<span class=\"functionIcon\">clone</span><span class=\"parameters\">(src)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"lang\" class=\"jsdoc-link\">dojo/_base/lang</a> </p> <p>Clones objects (including DOM nodes) and all children. Warning: do not clone cyclic structures.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">src</td> <td class=\"jsdoc-param-type\">anything</td> <td class=\"jsdoc-param-description\">\n<p>The object to clone</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">anything | undefined | instance</span></p> <p>The object to clone</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_lang_delegate\">\n<span class=\"functionIcon\">delegate</span><span class=\"parameters\">(obj,props)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"lang\" class=\"jsdoc-link\">dojo/_base/lang</a> </p> <p>Returns a new object which \"looks\" to obj for properties which it does not have a value for. Optionally takes a bag of properties to seed the returned object with initially.</p>  <p>This is a small implementation of the Boodman/Crockford delegation pattern in JavaScript. An intermediate object constructor mediates the prototype chain for the returned object, using it to delegate down to obj for property lookup when object-local lookup fails. This can be thought of similarly to ES4's \"wrap\", save that it does not act on types but rather on pure objects.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">obj</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>The object to delegate to for properties not found directly on the return object or in props.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">props</td> <td class=\"jsdoc-param-type\">Object...</td> <td class=\"jsdoc-param-description\">\n<p>an object containing properties to assign to the returned object</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any</span></p> <p>an Object of anonymous type</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>var foo = { bar: \"baz\" };\nvar thinger = lang.delegate(foo, { thud: \"xyzzy\"});\nthinger.bar == \"baz\"; // delegated to foo\nfoo.thud == undefined; // by definition\nthinger.thud == \"xyzzy\"; // mixed in from props\nfoo.bar = \"thonk\";\nthinger.bar == \"thonk\"; // still delegated to foo's bar</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_lang_exists\">\n<span class=\"functionIcon\">exists</span><span class=\"parameters\">(name,obj)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"lang\" class=\"jsdoc-link\">dojo/_base/lang</a> </p> <p>determine if an object supports a given method</p>  <p>useful for longer api chains where you have to test each object in the chain. Useful for object and method detection.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">name</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>Path to an object, in the form \"A.B.C\".</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">obj</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Object to use as root of path. Defaults to 'dojo.global'. Null may be passed.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">boolean</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>// define an object\nvar foo = {\n      bar: { }\n};\n\n// search the global scope\nlang.exists(\"foo.bar\"); // true\nlang.exists(\"foo.bar.baz\"); // false\n\n// search from a particular scope\nlang.exists(\"bar\", foo); // true\nlang.exists(\"bar.baz\", foo); // false</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_lang_extend\">\n<span class=\"functionIcon\">extend</span><span class=\"parameters\">(ctor,props)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"lang\" class=\"jsdoc-link\">dojo/_base/lang</a> </p> <p>Adds all properties and methods of props to constructor's prototype, making them available to all instances created with constructor.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">ctor</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>Target constructor to extend.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">props</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>One or more objects to mix into ctor.prototype</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Object</span></p> <p>Target constructor to extend.</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_lang_getObject\">\n<span class=\"functionIcon\">getObject</span><span class=\"parameters\">(name,create,context)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"lang\" class=\"jsdoc-link\">dojo/_base/lang</a> </p> <p>Get a property from a dot-separated string, such as \"A.B.C\"</p>  <p>Useful for longer api chains where you have to test each object in the chain, or when you have an object reference in string format.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">name</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>Path to an property, in the form \"A.B.C\".</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">create</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Optional. Defaults to <code>false</code>. If <code>true</code>, Objects will be created at any point along the 'path' that is undefined.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">context</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Optional. Object to use as root of path. Defaults to 'dojo.global'. Null may be passed.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_lang_hitch\">\n<span class=\"functionIcon\">hitch</span><span class=\"parameters\">(scope,method)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"lang\" class=\"jsdoc-link\">dojo/_base/lang</a> </p> <p>Returns a function that will only ever execute in the given scope. This allows for easy use of object member functions in callbacks and other places in which the \"this\" keyword may otherwise not reference the expected scope. Any number of default positional arguments may be passed as parameters beyond \"method\". Each of these values will be used to \"placehold\" (similar to curry) for the hitched function.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">scope</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>The scope to use when method executes. If method is a string, scope is also the object containing method.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">method</td> <td class=\"jsdoc-param-type\">Function | String...</td> <td class=\"jsdoc-param-description\">\n<p>A function to be hitched to scope, or the name of the method in scope to be hitched.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined | function</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>lang.hitch(foo, \"bar\")();</code></pre> <p>runs foo.bar() in the scope of foo </p> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<pre><code>lang.hitch(foo, myFunction);</code></pre> <p>returns a function that runs myFunction in the scope of foo </p> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<p>Expansion on the default positional arguments passed along from hitch. Passed args are mixed first, additional args after. </p> <pre><code>var foo = { bar: function(a, b, c){ console.log(a, b, c); } };\nvar fn = lang.hitch(foo, \"bar\", 1, 2);\nfn(3); // logs \"1, 2, 3\"</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 4</h3>\n<pre><code>var foo = { bar: 2 };\nlang.hitch(foo, function(){ this.bar = 10; })();</code></pre> <p>execute an anonymous function in scope of foo </p> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_lang_isAlien\">\n<span class=\"functionIcon\">isAlien</span><span class=\"parameters\">(it)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"lang\" class=\"jsdoc-link\">dojo/_base/lang</a> </p> <p>Returns true if it is a built-in function or some other kind of oddball that <em>should</em> report as a function but doesn't</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">it</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_lang_isArray\">\n<span class=\"functionIcon\">isArray</span><span class=\"parameters\">(it)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"lang\" class=\"jsdoc-link\">dojo/_base/lang</a> </p> <p>Return true if it is an Array. Does not work on Arrays created in other windows.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">it</td> <td class=\"jsdoc-param-type\">anything</td> <td class=\"jsdoc-param-description\">\n<p>Item to test.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_lang_isArrayLike\">\n<span class=\"functionIcon\">isArrayLike</span><span class=\"parameters\">(it)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"lang\" class=\"jsdoc-link\">dojo/_base/lang</a> </p> <p>similar to isArray() but more permissive</p>  <p>Doesn't strongly test for \"arrayness\". Instead, settles for \"isn't a string or number and has a length property\". Arguments objects and DOM collections will return true when passed to isArrayLike(), but will return false when passed to isArray().</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">it</td> <td class=\"jsdoc-param-type\">anything</td> <td class=\"jsdoc-param-description\">\n<p>Item to test.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | Boolean</span></p> <p>If it walks like a duck and quacks like a duck, return <code>true</code></p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_lang_isFunction\">\n<span class=\"functionIcon\">isFunction</span><span class=\"parameters\">(it)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"lang\" class=\"jsdoc-link\">dojo/_base/lang</a> </p> <p>Return true if it is a Function</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">it</td> <td class=\"jsdoc-param-type\">anything</td> <td class=\"jsdoc-param-description\">\n<p>Item to test.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">boolean</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_lang_isObject\">\n<span class=\"functionIcon\">isObject</span><span class=\"parameters\">(it)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"lang\" class=\"jsdoc-link\">dojo/_base/lang</a> </p> <p>Returns true if it is a JavaScript object (or an Array, a Function or null)</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">it</td> <td class=\"jsdoc-param-type\">anything</td> <td class=\"jsdoc-param-description\">\n<p>Item to test.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">boolean</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_lang_isString\">\n<span class=\"functionIcon\">isString</span><span class=\"parameters\">(it)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"lang\" class=\"jsdoc-link\">dojo/_base/lang</a> </p> <p>Return true if it is a String</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">it</td> <td class=\"jsdoc-param-type\">anything</td> <td class=\"jsdoc-param-description\">\n<p>Item to test.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">boolean</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_lang_mixin\">\n<span class=\"functionIcon\">mixin</span><span class=\"parameters\">(dest,sources)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"lang\" class=\"jsdoc-link\">dojo/_base/lang</a> </p> <p>Copies/adds all properties of one or more sources to dest; returns dest.</p>  <p>All properties, including functions (sometimes termed \"methods\"), excluding any non-standard extensions found in Object.prototype, are copied/added from sources to dest. sources are processed left to right. The Javascript assignment operator is used to copy/add each property; therefore, by default, mixin executes a so-called \"shallow copy\" and aggregate types are copied/added by reference.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">dest</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>The object to which to copy/add all properties contained in source. If dest is falsy, then a new object is manufactured before copying/adding properties begins.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">sources</td> <td class=\"jsdoc-param-type\">Object...</td> <td class=\"jsdoc-param-description\">\n<p>One of more objects from which to draw all properties to copy into dest. sources are processed left-to-right and if more than one of these objects contain the same property name, the right-most value \"wins\".</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Object | object</span></p> <p>dest, as modified</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>make a shallow copy of an object </p> <pre><code>var copy = lang.mixin({}, source);</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>many class constructors often take an object which specifies values to be configured on the object. In this case, it is often simplest to call <code>lang.mixin</code> on the <code>this</code> object: </p> <pre><code>declare(\"acme.Base\", null, {\n    constructor: function(properties){\n        // property configuration:\n        lang.mixin(this, properties);\n\n        console.log(this.quip);\n        //  ...\n    },\n    quip: \"I wasn't born yesterday, you know - I've seen movies.\",\n    // ...\n});\n\n// create an instance of the class and configure it\nvar b = new acme.Base({quip: \"That's what it does!\" });</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<p>copy in properties from multiple objects </p> <pre><code>var flattened = lang.mixin(\n    {\n        name: \"Frylock\",\n        braces: true\n    },\n    {\n        name: \"Carl Brutanananadilewski\"\n    }\n);\n\n// will print \"Carl Brutanananadilewski\"\nconsole.log(flattened.name);\n// will print \"true\"\nconsole.log(flattened.braces);</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_lang_partial\">\n<span class=\"functionIcon\">partial</span><span class=\"parameters\">(method)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"lang\" class=\"jsdoc-link\">dojo/_base/lang</a> </p> <p>similar to hitch() except that the scope object is left to be whatever the execution context eventually becomes.</p>  <p>Calling lang.partial is the functional equivalent of calling: </p> <pre><code>lang.hitch(null, funcName, ...);</code></pre>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">method</td> <td class=\"jsdoc-param-type\">Function | String</td> <td class=\"jsdoc-param-description\">\n<p>The function to \"wrap\"</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_lang_replace\">\n<span class=\"functionIcon\">replace</span><span class=\"parameters\">(tmpl,map,pattern)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"lang\" class=\"jsdoc-link\">dojo/_base/lang</a> </p> <p>Performs parameterized substitutions on a string. Throws an exception if any parameter is unmatched.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">tmpl</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>String to be used as a template.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">map</td> <td class=\"jsdoc-param-type\">Object | Function</td> <td class=\"jsdoc-param-description\">\n<p>If an object, it is used as a dictionary to look up substitutions. If a function, it is called for every substitution with following parameters: a whole match, a name, an offset, and the whole template string (see <a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/String/replace\">https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/String/replace</a> for more details).</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">pattern</td> <td class=\"jsdoc-param-type\">RegEx</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Optional regular expression objects that overrides the default pattern. Must be global and match one item. The default is: /{([^}]+)}/g, which matches patterns like that: \"{xxx}\", where \"xxx\" is any sequence of characters, which doesn't include \"}\".</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">String | undefined</span></p> <p>Returns the substituted string.</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>// uses a dictionary for substitutions:\nlang.replace(\"Hello, {name.first} {name.last} AKA {nick}!\",\n    {\n        nick: \"Bob\",\n        name: {\n            first:  \"Robert\",\n            middle: \"X\",\n            last:       \"Cringely\"\n        }\n    });\n// returns: Hello, Robert Cringely AKA Bob!</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<pre><code>// uses an array for substitutions:\nlang.replace(\"Hello, {0} {2}!\",\n    [\"Robert\", \"X\", \"Cringely\"]);\n// returns: Hello, Robert Cringely!</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<pre><code>// uses a function for substitutions:\nfunction sum(a){\n    var t = 0;\n    arrayforEach(a, function(x){ t += x; });\n    return t;\n}\nlang.replace(\n    \"{count} payments averaging {avg} USD per payment.\",\n    lang.hitch(\n        { payments: [11, 16, 12] },\n        function(_, key){\n            switch(key){\n                case \"count\": return this.payments.length;\n                case \"min\":     return Math.min.apply(Math, this.payments);\n                case \"max\":     return Math.max.apply(Math, this.payments);\n                case \"sum\":     return sum(this.payments);\n                case \"avg\":     return sum(this.payments) / this.payments.length;\n            }\n        }\n    )\n);\n// prints: 3 payments averaging 13 USD per payment.</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 4</h3>\n<pre><code>// uses an alternative PHP-like pattern for substitutions:\nlang.replace(\"Hello, ${0} ${2}!\",\n    [\"Robert\", \"X\", \"Cringely\"], /\\$\\{([^\\}]+)\\}/g);\n// returns: Hello, Robert Cringely!</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_lang_setObject\">\n<span class=\"functionIcon\">setObject</span><span class=\"parameters\">(name,value,context)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"lang\" class=\"jsdoc-link\">dojo/_base/lang</a> </p> <p>Set a property from a dot-separated string, such as \"A.B.C\"</p>  <p>Useful for longer api chains where you have to test each object in the chain, or when you have an object reference in string format. Objects are created as needed along <code>path</code>. Returns the passed value if setting is successful or <code>undefined</code> if not.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">name</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>Path to a property, in the form \"A.B.C\".</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">value</td> <td class=\"jsdoc-param-type\">anything</td> <td class=\"jsdoc-param-description\">\n<p>value or object to place at location given by name</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">context</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Optional. Object to use as root of path. Defaults to <code>dojo.global</code>.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>set the value of <code>foo.bar.baz</code>, regardless of whether intermediate objects already exist: </p> <pre><code>lang.setObject(\"foo.bar.baz\", value);</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>without <code>lang.setObject</code>, we often see code like this: </p> <pre><code>// ensure that intermediate objects are available\nif(!obj[\"parent\"]){ obj.parent = {}; }\nif(!obj.parent[\"child\"]){ obj.parent.child = {}; }\n// now we can safely set the property\nobj.parent.child.prop = \"some value\";</code></pre> <p>whereas with <code>lang.setObject</code>, we can shorten that to: </p> <pre><code>lang.setObject(\"parent.child.prop\", \"some value\", obj);</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_lang_trim\">\n<span class=\"functionIcon\">trim</span><span class=\"parameters\">(str)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"lang\" class=\"jsdoc-link\">dojo/_base/lang</a> </p> <p>Trims whitespace from both sides of the string</p>  <p>This version of trim() was selected for inclusion into the base due to its compact size and relatively good performance (see <a href=\"http://blog.stevenlevithan.com/archives/faster-trim-javascript\">Steven Levithan's blog</a> Uses String.prototype.trim instead, if available. The fastest but longest version of this function is located at lang.string.trim()</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">str</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>String to be trimmed</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">String</span></p> <p>Returns the trimmed string</p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/_base/lang.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/_base/lang.html</a>\n  </p>\n</div>\n","dojo/_base/url.authority":"<h1>dojo/_base/url.authority</h1><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/_base/url.authority.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/_base/url.authority.html</a>\n  </p>\n</div>\n","dojo/_base/url.fragment":"<h1>dojo/_base/url.fragment</h1><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/_base/url.fragment.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/_base/url.fragment.html</a>\n  </p>\n</div>\n","dojo/_base/url.password":"<h1>dojo/_base/url.password</h1><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/_base/url.password.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/_base/url.password.html</a>\n  </p>\n</div>\n","dojo/_base/url.port":"<h1>dojo/_base/url.port</h1><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/_base/url.port.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/_base/url.port.html</a>\n  </p>\n</div>\n","dojo/_base/url.query":"<h1>dojo/_base/url.query</h1><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/_base/url.query.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/_base/url.query.html</a>\n  </p>\n</div>\n","dojo/_base/url.scheme":"<h1>dojo/_base/url.scheme</h1><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/_base/url.scheme.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/_base/url.scheme.html</a>\n  </p>\n</div>\n","dojo/_base/url.user":"<h1>dojo/_base/url.user</h1><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/_base/url.user.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/_base/url.user.html</a>\n  </p>\n</div>\n","dojo/_base/window":"<h1>dojo/_base/window</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>API to save/set/restore the global/document scope.</p>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/_base/window.html\" target=\"_blank\">dojo/_base/window reference documentation</a> for more information.</p>            <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_window_doc\">\n<span class=\"objectIcon\">doc</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"window\" class=\"jsdoc-link\">dojo/_base/window</a> </p> <div class=\"jsdoc-summary\">\n<p>Alias for the current document. 'doc' can be modified for temporary context shifting. See also withDoc().</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_window_global\">\n<span class=\"objectIcon\">global</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"window\" class=\"jsdoc-link\">dojo/_base/window</a> </p> <div class=\"jsdoc-summary\">\n<p>Alias for the current window. 'global' can be modified for temporary context shifting. See also withGlobal().</p> </div>    <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_window_body\">\n<span class=\"functionIcon\">body</span><span class=\"parameters\">(doc)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"window\" class=\"jsdoc-link\">dojo/_base/window</a> </p> <p>Return the body element of the specified document or of dojo/_base/window::doc.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">doc</td> <td class=\"jsdoc-param-type\">Document</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>win.body().appendChild(dojo.doc.createElement('div'));</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_window_setContext\">\n<span class=\"functionIcon\">setContext</span><span class=\"parameters\">(globalObject,globalDocument)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"window\" class=\"jsdoc-link\">dojo/_base/window</a> </p> <p>changes the behavior of many core Dojo functions that deal with namespace and DOM lookup, changing them to work in a new global context (e.g., an iframe). The varibles dojo.global and dojo.doc are modified as a result of calling this function and the result of <code>dojo.body()</code> likewise differs.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">globalObject</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">globalDocument</td> <td class=\"jsdoc-param-type\">DocumentElement</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_window_withDoc\">\n<span class=\"functionIcon\">withDoc</span><span class=\"parameters\">(documentObject,callback,thisObject,cbArguments)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"window\" class=\"jsdoc-link\">dojo/_base/window</a> </p> <p>Invoke callback with documentObject as dojo/_base/window::doc.</p>  <p>Invoke callback with documentObject as <a class=\"jsdoc-link\" href=\"window\">dojo/_base/window</a>::doc. If provided, callback will be executed in the context of object thisObject When callback() returns or throws an error, the <a class=\"jsdoc-link\" href=\"window\">dojo/_base/window</a>::doc will be restored to its previous state.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">documentObject</td> <td class=\"jsdoc-param-type\">DocumentElement</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">callback</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">thisObject</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> <tr> <td class=\"jsdoc-param-name\">cbArguments</td> <td class=\"jsdoc-param-type\">Array</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_window_withGlobal\">\n<span class=\"functionIcon\">withGlobal</span><span class=\"parameters\">(globalObject,callback,thisObject,cbArguments)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"window\" class=\"jsdoc-link\">dojo/_base/window</a> </p> <p>Invoke callback with globalObject as dojo.global and globalObject.document as dojo.doc.</p>  <p>Invoke callback with globalObject as dojo.global and globalObject.document as dojo.doc. If provided, globalObject will be executed in the context of object thisObject When callback() returns or throws an error, the dojo.global and dojo.doc will be restored to its previous state.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">globalObject</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">callback</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">thisObject</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> <tr> <td class=\"jsdoc-param-name\">cbArguments</td> <td class=\"jsdoc-param-type\">Array</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/_base/window.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/_base/window.html</a>\n  </p>\n</div>\n","dojo/_base/window.doc":"<h1>dojo/_base/window.doc</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>Alias for the current document. 'doc' can be modified for temporary context shifting. See also withDoc().</p>  <p>Use this rather than referring to 'window.document' to ensure your code runs correctly in managed contexts.</p>     <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>n.appendChild(dojo.doc.createElement('div'));</code></pre> </div> </div>       <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_window_doc_documentElement\">\n<span class=\"objectIcon\">documentElement</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"http://dojotoolkit.org/api/1.10/dojox/gfx/_base\" class=\"jsdoc-link\">dojox/gfx/_base</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_window_doc_dojoClick\">\n<span class=\"booleanIcon\">dojoClick</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"http://dojotoolkit.org/api/1.10/dojox/mobile/common\" class=\"jsdoc-link\">dojox/mobile/common</a> </p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/_base/window.doc.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/_base/window.doc.html</a>\n  </p>\n</div>\n","dojo/_base/window.global":"<h1>dojo/_base/window.global</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>Alias for the current window. 'global' can be modified for temporary context shifting. See also withGlobal().</p>  <p>Use this rather than referring to 'window' to ensure your code runs correctly in managed contexts.</p>           <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_window_global_$\">\n<span class=\"functionIcon\">$</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"http://dojotoolkit.org/api/1.10/dojox/jq\" class=\"jsdoc-link\">dojox/jq</a> </p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_window_global_GoogleSearchStoreCallback_undefined_NaN\">\n<span class=\"functionIcon\">GoogleSearchStoreCallback_undefined_NaN</span><span class=\"parameters\">(start,data,responseCode,errorMsg)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"http://dojotoolkit.org/api/1.10/dojox/data/GoogleSearchStore\" class=\"jsdoc-link\">dojox/data/GoogleSearchStore</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">start</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">data</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">responseCode</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">errorMsg</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_window_global_jQuery\">\n<span class=\"functionIcon\">jQuery</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"http://dojotoolkit.org/api/1.10/dojox/jq\" class=\"jsdoc-link\">dojox/jq</a> </p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_window_global_swfIsInHTML\">\n<span class=\"functionIcon\">swfIsInHTML</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"http://dojotoolkit.org/api/1.10/dojox/av/FLVideo\" class=\"jsdoc-link\">dojox/av/FLVideo</a> </p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_window_global_undefined_onload\">\n<span class=\"functionIcon\">undefined_onload</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../request/iframe\" class=\"jsdoc-link\">dojo/request/iframe</a> </p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/_base/window.global.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/_base/window.global.html</a>\n  </p>\n</div>\n","dojo/_base/xhr.contenthandlers":"<h1>dojo/_base/xhr.contentHandlers</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>A map of available XHR transport handle types. Name matches the <code>handleAs</code> attribute passed to XHR calls.</p>  <p>A map of available XHR transport handle types. Name matches the <code>handleAs</code> attribute passed to XHR calls. Each contentHandler is called, passing the xhr object for manipulation. The return value from the contentHandler will be passed to the <code>load</code> or <code>handle</code> functions defined in the original xhr call.</p>     <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Creating a custom content-handler: </p> <pre><code>xhr.contentHandlers.makeCaps = function(xhr){\n    return xhr.responseText.toUpperCase();\n}\n// and later:\ndojo.xhrGet({\n    url:\"foo.txt\",\n    handleAs:\"makeCaps\",\n    load: function(data){ /* data is a toUpper version of foo.txt */ }\n});</code></pre> </div> </div>       <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_xhr_contentHandlers_auto\">\n<span class=\"functionIcon\">auto</span><span class=\"parameters\">(xhr)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"http://dojotoolkit.org/api/1.10/dojox/rpc/Service\" class=\"jsdoc-link\">dojox/rpc/Service</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">xhr</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_xhr_contentHandlers_javascript\">\n<span class=\"functionIcon\">javascript</span><span class=\"parameters\">(xhr)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <p>A contentHandler which evaluates the response data, expecting it to be valid JavaScript</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">xhr</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_xhr_contentHandlers_json\">\n<span class=\"functionIcon\">json</span><span class=\"parameters\">(xhr)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <p>A contentHandler which returns a JavaScript object created from the response data</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">xhr</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_xhr_contentHandlers_json-comment-filtered\">\n<span class=\"functionIcon\">json-comment-filtered</span><span class=\"parameters\">(xhr)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <p>A contentHandler which expects comment-filtered JSON.</p>  <p>A contentHandler which expects comment-filtered JSON. the json-comment-filtered option was implemented to prevent \"JavaScript Hijacking\", but it is less secure than standard JSON. Use standard JSON instead. JSON prefixing can be used to subvert hijacking. </p> <p>Will throw a notice suggesting to use application/json mimetype, as json-commenting can introduce security issues. To decrease the chances of hijacking, use the standard <code>json</code> contentHandler, and prefix your \"JSON\" with: {}&amp;&amp; </p> <p>use djConfig.useCommentedJson = true to turn off the notice</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">xhr</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_xhr_contentHandlers_json-comment-optional\">\n<span class=\"functionIcon\">json-comment-optional</span><span class=\"parameters\">(xhr)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <p>A contentHandler which checks the presence of comment-filtered JSON and alternates between the <code>json</code> and <code>json-comment-filtered</code> contentHandlers.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">xhr</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_xhr_contentHandlers_text\">\n<span class=\"functionIcon\">text</span><span class=\"parameters\">(xhr)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <p>A contentHandler which simply returns the plaintext response data</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">xhr</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_xhr_contentHandlers_xml\">\n<span class=\"functionIcon\">xml</span><span class=\"parameters\">(xhr)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <p>A contentHandler returning an XML Document parsed from the response data</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">xhr</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/_base/xhr.contentHandlers.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/_base/xhr.contentHandlers.html</a>\n  </p>\n</div>\n","dojo/_firebug/firebug":"<h1>dojo/_firebug/firebug</h1><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/_firebug/firebug.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/_firebug/firebug.html</a>\n  </p>\n</div>\n","dojo/adapterregistry":"<h1>dojo/AdapterRegistry</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>A registry to make contextual calling/searching easier.</p>  <p>Objects of this class keep list of arrays in the form [name, check, wrap, directReturn] that are used to determine what the contextual result of a set of checked arguments is. All check/wrap functions in this registry should be of the same arity.</p>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">AdapterRegistry<span class=\"parameters\"><span class=\"paren\">(</span><span class=\"args\">returnWrappers</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">returnWrappers</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/AdapterRegistry.html\" target=\"_blank\">dojo/AdapterRegistry reference documentation</a> for more information.</p>    <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>// create a new registry\nrequire([\"dojo/AdapterRegistry\"],\nfunction(AdapterRegistry){\n    var reg = new AdapterRegistry();\n    reg.register(\"handleString\",\n        function(str){\n            return typeof val == \"string\"\n        },\n        function(str){\n            // do something with the string here\n        }\n    );\n    reg.register(\"handleArr\",\n        dojo.isArray,\n        function(arr){\n            // do something with the array here\n        }\n    );\n\n    // now we can pass reg.match() *either* an array or a string and\n    // the value we pass will get handled by the right function\n    reg.match(\"someValue\"); // will call the first function\n    reg.match([\"someValue\"]); // will call the second\n});</code></pre> </div> </div>         <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_AdapterRegistry_pairs\">\n<span class=\"arrayIcon\">pairs</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"adapterregistry\" class=\"jsdoc-link\">dojo/AdapterRegistry</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_AdapterRegistry_returnWrappers\">\n<span class=\"booleanIcon\">returnWrappers</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"adapterregistry\" class=\"jsdoc-link\">dojo/AdapterRegistry</a> </p>    <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_AdapterRegistry_match\">\n<span class=\"functionIcon\">match</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"adapterregistry\" class=\"jsdoc-link\">dojo/AdapterRegistry</a> </p> <p>Find an adapter for the given arguments. If no suitable adapter is found, throws an exception. match() accepts any number of arguments, all of which are passed to all matching functions from the registered pairs.</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_AdapterRegistry_register\">\n<span class=\"functionIcon\">register</span><span class=\"parameters\">(name,check,wrap,directReturn,override)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"adapterregistry\" class=\"jsdoc-link\">dojo/AdapterRegistry</a> </p> <p>register a check function to determine if the wrap function or object gets selected</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">name</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>a way to identify this matcher.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">check</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\">\n<p>a function that arguments are passed to from the adapter's match() function. The check function should return true if the given arguments are appropriate for the wrap function.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">wrap</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">directReturn</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>If directReturn is true, the value passed in for wrap will be returned instead of being called. Alternately, the AdapterRegistry can be set globally to \"return not call\" using the returnWrappers property. Either way, this behavior allows the registry to act as a \"search\" function instead of a function interception library.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">override</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>If override is given and true, the check function will be given highest priority. Otherwise, it will be the lowest priority adapter.</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_AdapterRegistry_unregister\">\n<span class=\"functionIcon\">unregister</span><span class=\"parameters\">(name)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"adapterregistry\" class=\"jsdoc-link\">dojo/AdapterRegistry</a> </p> <p>Remove a named adapter from the registry</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">name</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>The name of the adapter.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Boolean | boolean</span></p> <p>Returns true if operation is successful. Returns false if operation fails.</p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/AdapterRegistry.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/AdapterRegistry.html</a>\n  </p>\n</div>\n","dojo/aspect":"<h1>dojo/aspect</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>provides aspect oriented programming functionality, allowing for one to add before, around, or after advice on existing methods.</p>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/aspect.html\" target=\"_blank\">dojo/aspect reference documentation</a> for more information.</p>    <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>define([\"dojo/aspect\"], function(aspect){\n    var signal = aspect.after(targetObject, \"methodName\", function(someArgument){\n        this will be called when targetObject.methodName() is called, after the original function is called\n    });</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>The returned signal object can be used to cancel the advice. </p> <pre><code>signal.remove(); // this will stop the advice from being executed anymore\naspect.before(targetObject, \"methodName\", function(someArgument){\n    // this will be called when targetObject.methodName() is called, before the original function is called\n });</code></pre> </div> </div>       <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_aspect_after\">\n<span class=\"functionIcon\">after</span><span class=\"parameters\">(target,methodName,advice,receiveArguments)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"aspect\" class=\"jsdoc-link\">dojo/aspect</a> </p> <p>The \"after\" export of the aspect module is a function that can be used to attach \"after\" advice to a method. This function will be executed after the original method is executed. By default the function will be called with a single argument, the return value of the original method, or the the return value of the last executed advice (if a previous one exists). The fourth (optional) argument can be set to true to so the function receives the original arguments (from when the original method was called) rather than the return value. If there are multiple \"after\" advisors, they are executed in the order they were registered.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">target</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>This is the target object</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">methodName</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>This is the name of the method to attach to.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">advice</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\">\n<p>This is function to be called after the original method</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">receiveArguments</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>If this is set to true, the advice function receives the original arguments (from when the original mehtod was called) rather than the return value of the original/previous method.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any</span></p> <p>A signal object that can be used to cancel the advice. If remove() is called on this signal object, it will stop the advice function from being executed.</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_aspect_around\">\n<span class=\"functionIcon\">around</span><span class=\"parameters\">(target,methodName,advice)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"aspect\" class=\"jsdoc-link\">dojo/aspect</a> </p> <p>The \"around\" export of the aspect module is a function that can be used to attach \"around\" advice to a method. The advisor function is immediately executed when the around() is called, is passed a single argument that is a function that can be called to continue execution of the original method (or the next around advisor). The advisor function should return a function, and this function will be called whenever the method is called. It will be called with the arguments used to call the method. Whatever this function returns will be returned as the result of the method call (unless after advise changes it).</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">target</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>This is the target object</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">methodName</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>This is the name of the method to attach to.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">advice</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\">\n<p>This is function to be called around the original method</p> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>If there are multiple \"around\" advisors, the most recent one is executed first, which can then delegate to the next one and so on. For example: </p> <pre><code>around(obj, \"foo\", function(originalFoo){\n    return function(){\n        var start = new Date().getTime();\n        var results = originalFoo.apply(this, arguments); // call the original\n        var end = new Date().getTime();\n        console.log(\"foo execution took \" + (end - start) + \" ms\");\n        return results;\n    };\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_aspect_before\">\n<span class=\"functionIcon\">before</span><span class=\"parameters\">(target,methodName,advice)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"aspect\" class=\"jsdoc-link\">dojo/aspect</a> </p> <p>The \"before\" export of the aspect module is a function that can be used to attach \"before\" advice to a method. This function will be executed before the original method is executed. This function will be called with the arguments used to call the method. This function may optionally return an array as the new arguments to use to call the original method (or the previous, next-to-execute before advice, if one exists). If the before method doesn't return anything (returns undefined) the original arguments will be preserved. If there are multiple \"before\" advisors, they are executed in the reverse order they were registered.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">target</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>This is the target object</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">methodName</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>This is the name of the method to attach to.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">advice</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\">\n<p>This is function to be called before the original method</p> </td> </tr> </table><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/aspect.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/aspect.html</a>\n  </p>\n</div>\n","dojo/back":"<h1>dojo/back</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>Browser history management resources</p>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/back.html\" target=\"_blank\">dojo/back reference documentation</a> for more information.</p>          <h2 id=\"methods\">Methods</h2>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_back_addToHistory\">\n<span class=\"functionIcon\">addToHistory</span><span class=\"parameters\">(args)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"back\" class=\"jsdoc-link\">dojo/back</a> </p> <p>adds a state object (args) to the history list.</p>  <p>To support getting back button notifications, the object argument should implement a function called either \"back\", \"backButton\", or \"handle\". The string \"back\" will be passed as the first and only argument to this callback. </p> <p>To support getting forward button notifications, the object argument should implement a function called either \"forward\", \"forwardButton\", or \"handle\". The string \"forward\" will be passed as the first and only argument to this callback. </p> <p>If you want the browser location string to change, define \"changeUrl\" on the object. If the value of \"changeUrl\" is true, then a unique number will be appended to the URL as a fragment identifier (<a href=\"http://some.domain.com/path#uniquenumber\">http://some.domain.com/path#uniquenumber</a>). If it is any other value that does not evaluate to false, that value will be used as the fragment identifier. For example, if changeUrl: 'page1', then the URL will look like: <a href=\"http://some.domain.com/path#page1\">http://some.domain.com/path#page1</a> </p> <p>There are problems with using <a class=\"jsdoc-link\" href=\"back\">dojo/back</a> with semantically-named fragment identifiers (\"hash values\" on an URL). In most browsers it will be hard for <a class=\"jsdoc-link\" href=\"back\">dojo/back</a> to know distinguish a back from a forward event in those cases. For back/forward support to work best, the fragment ID should always be a unique value (something using new Date().getTime() for example). If you want to detect hash changes using semantic fragment IDs, then consider using <a class=\"jsdoc-link\" href=\"hash\">dojo/hash</a> instead (in Dojo 1.4+). </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">args</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>The state object that will be added to the history list.</p> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>back.addToHistory({\n    back: function(){ console.log('back pressed'); },\n    forward: function(){ console.log('forward pressed'); },\n    changeUrl: true\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_back_getHash\">\n<span class=\"functionIcon\">getHash</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"back\" class=\"jsdoc-link\">dojo/back</a> </p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_back_goBack\">\n<span class=\"functionIcon\">goBack</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"back\" class=\"jsdoc-link\">dojo/back</a> </p> <p>private method. Do not call this directly.</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_back_goForward\">\n<span class=\"functionIcon\">goForward</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"back\" class=\"jsdoc-link\">dojo/back</a> </p> <p>private method. Do not call this directly.</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_back_init\">\n<span class=\"functionIcon\">init</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"back\" class=\"jsdoc-link\">dojo/back</a> </p> <p>Initializes the undo stack. This must be called from a </p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/back.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/back.html</a>\n  </p>\n</div>\n","dojo/behavior":"<h1>dojo/behavior</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>Deprecated. <a class=\"jsdoc-link\" href=\"behavior\">dojo/behavior</a>'s functionality can be achieved using event delegation using <a class=\"jsdoc-link\" href=\"on\">dojo/on</a> and on.selector().</p>  <p>A very simple, lightweight mechanism for applying code to existing documents, based around <a class=\"jsdoc-link\" href=\"query\">dojo/query</a> (CSS3 selectors) for node selection, and a simple two-command API: <code>add()</code> and <code>apply()</code>; </p> <p>Behaviors apply to a given page, and are registered following the syntax options described by <code>add()</code> to match nodes to actions, or \"behaviors\". </p> <p>Added behaviors are applied to the current DOM when .apply() is called, matching only new nodes found since .apply() was last called.</p>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/behavior.html\" target=\"_blank\">dojo/behavior reference documentation</a> for more information.</p>            <h2 id=\"properties\">Properties</h2>    <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_behavior_add\">\n<span class=\"functionIcon\">add</span><span class=\"parameters\">(behaviorObj)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"behavior\" class=\"jsdoc-link\">dojo/behavior</a> </p> <p>Add the specified behavior to the list of behaviors, ignoring existing matches.</p>  <p>Add the specified behavior to the list of behaviors which will be applied the next time apply() is called. Calls to add() for an already existing behavior do not replace the previous rules, but are instead additive. New nodes which match the rule will have all add()-ed behaviors applied to them when matched. </p> <p>The \"found\" method is a generalized handler that's called as soon as the node matches the selector. Rules for values that follow also apply to the \"found\" key. </p> <p>The \"on*\" handlers are attached with <code>dojo.connect()</code>, using the matching node </p> <p>If the value corresponding to the ID key is a function and not a list, it's treated as though it was the value of \"found\". </p> <p><a class=\"jsdoc-link\" href=\"behavior#add\">dojo/behavior.add()</a> can be called any number of times before the DOM is ready. <a class=\"jsdoc-link\" href=\"behavior#apply\">dojo/behavior.apply()</a> is called automatically by <code>dojo.addOnLoad</code>, though can be called to re-apply previously added behaviors anytime the DOM changes. </p> <p>There are a variety of formats permitted in the behaviorObject </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">behaviorObj</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>The behavior object that will be added to behaviors list. The behaviors in the list will be applied the next time apply() is called.</p> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Simple list of properties. \"found\" is special. \"Found\" is assumed if no property object for a given selector, and property is a function. </p> <pre><code>behavior.add({\n    \"#id\": {\n        \"found\": function(element){\n            // node match found\n        },\n        \"onclick\": function(evt){\n            // register onclick handler for found node\n        }\n    },\n    \"#otherid\": function(element){\n        // assumes \"found\" with this syntax\n    }\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>If property is a string, a dojo.publish will be issued on the channel: </p> <pre><code>behavior.add({\n    // topic.publish() whenever class=\"noclick\" found on anchors\n    \"a.noclick\": \"/got/newAnchor\",\n    \"div.wrapper\": {\n        \"onclick\": \"/node/wasClicked\"\n    }\n});\ntopic.subscribe(\"/got/newAnchor\", function(node){\n    // handle node finding when dojo/behavior.apply() is called,\n    // provided a newly matched node is found.\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<p>Scoping can be accomplished by passing an object as a property to a connection handle (on*): </p> <pre><code>behavior.add({\n        \"#id\": {\n            // like calling dojo.hitch(foo,\"bar\"). execute foo.bar() in scope of foo\n            \"onmouseenter\": { targetObj: foo, targetFunc: \"bar\" },\n            \"onmouseleave\": { targetObj: foo, targetFunc: \"baz\" }\n        }\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 4</h3>\n<p>Behaviors match on CSS3 Selectors, powered by dojo/query. Example selectors: </p> <pre><code>behavior.add({\n    // match all direct descendants\n    \"#id4 &gt; *\": function(element){\n        // ...\n    },\n\n    // match the first child node that's an element\n    \"#id4 &gt; :first-child\": { ... },\n\n    // match the last child node that's an element\n    \"#id4 &gt; :last-child\":  { ... },\n\n    // all elements of type tagname\n    \"tagname\": {\n        // ...\n    },\n\n    \"tagname1 tagname2 tagname3\": {\n        // ...\n    },\n\n    \".classname\": {\n        // ...\n    },\n\n    \"tagname.classname\": {\n        // ...\n    }\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_behavior_apply\">\n<span class=\"functionIcon\">apply</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"behavior\" class=\"jsdoc-link\">dojo/behavior</a> </p> <p>Applies all currently registered behaviors to the document. </p>  <p>Applies all currently registered behaviors to the document, taking care to ensure that only incremental updates are made since the last time add() or apply() were called. </p> <p>If new matching nodes have been added, all rules in a behavior will be applied to that node. For previously matched nodes, only behaviors which have been added since the last call to apply() will be added to the nodes. </p> <p>apply() is called once automatically by <code>dojo.addOnLoad</code>, so registering behaviors with <a class=\"jsdoc-link\" href=\"behavior#add\">dojo/behavior.add()</a> before the DOM is ready is acceptable, provided the dojo.behavior module is ready. </p> <p>Calling appy() manually after manipulating the DOM is required to rescan the DOM and apply newly .add()ed behaviors, or to match nodes that match existing behaviors when those nodes are added to the DOM. </p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/behavior.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/behavior.html</a>\n  </p>\n</div>\n","dojo/cache":"<h1>dojo/cache</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>A getter and setter for storing the string content associated with the module and url arguments.</p>  <p>If module is a string that contains slashes, then it is interpretted as a fully resolved path (typically a result returned by require.toUrl), and url should not be provided. This is the preferred signature. If module is a string that does not contain slashes, then url must also be provided and module and url are used to call <code>dojo.moduleUrl()</code> to generate a module URL. This signature is deprecated. If value is specified, the cache value for the moduleUrl will be set to that value. Otherwise, dojo.cache will fetch the moduleUrl and store it in its internal cache and return that cached value for the URL. To clear a cache value pass null for value. Since XMLHttpRequest (XHR) is used to fetch the the URL contents, only modules on the same domain of the page can use this capability. The build system can inline the cache values though, to allow for xdomain hosting.</p>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">cache<span class=\"parameters\"><span class=\"paren\">(</span><span class=\"args\">module,url,value</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">module</td> <td class=\"jsdoc-param-type\">String | Object</td> <td class=\"jsdoc-param-description\">\n<p>dojo/cldr/supplemental</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">url</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>The rest of the path to append to the path derived from the module argument. If module is an object, then this second argument should be the \"value\" argument instead.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">value</td> <td class=\"jsdoc-param-type\">String | Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>If a String, the value to use in the cache for the module/url combination. If an Object, it can have two properties: value and sanitize. The value property should be the value to use in the cache, and sanitize can be set to true or false, to indicate if XML declarations should be removed from the value and if the HTML inside a body tag in the value should be extracted as the real value. The value argument or the value property on the value argument are usually only used by the build system as it inlines cache content.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined | null</span></p> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/cache.html\" target=\"_blank\">dojo/cache reference documentation</a> for more information.</p>    <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>To ask dojo.cache to fetch content and store it in the cache (the dojo[\"cache\"] style of call is used to avoid an issue with the build system erroneously trying to intern this example. To get the build system to intern your dojo.cache calls, use the \"dojo.cache\" style of call): </p> <pre><code>//If template.html contains \"&lt;h1&gt;Hello&lt;/h1&gt;\" that will be\n//the value for the text variable.\n//Note: This is pre-AMD, deprecated syntax\nvar text = dojo[\"cache\"](\"my.module\", \"template.html\");</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>To ask dojo.cache to fetch content and store it in the cache, and sanitize the input (the dojo[\"cache\"] style of call is used to avoid an issue with the build system erroneously trying to intern this example. To get the build system to intern your dojo.cache calls, use the \"dojo.cache\" style of call): </p> <pre><code>//If template.html contains \"&lt;html&gt;&lt;body&gt;&lt;h1&gt;Hello&lt;/h1&gt;&lt;/body&gt;&lt;/html&gt;\", the\n//text variable will contain just \"&lt;h1&gt;Hello&lt;/h1&gt;\".\n//Note: This is pre-AMD, deprecated syntax\nvar text = dojo[\"cache\"](\"my.module\", \"template.html\", {sanitize: true});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<p>Same example as previous, but demonstrates how an object can be passed in as the first argument, then the value argument can then be the second argument. </p> <pre><code>//If template.html contains \"&lt;html&gt;&lt;body&gt;&lt;h1&gt;Hello&lt;/h1&gt;&lt;/body&gt;&lt;/html&gt;\", the\n//text variable will contain just \"&lt;h1&gt;Hello&lt;/h1&gt;\".\n//Note: This is pre-AMD, deprecated syntax\nvar text = dojo[\"cache\"](new dojo._Url(\"my/module/template.html\"), {sanitize: true});</code></pre> </div> </div>       <h2 id=\"methods\">Methods</h2><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/cache.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/cache.html</a>\n  </p>\n</div>\n","dojo/cldr/monetary":"<h1>dojo/cldr/monetary</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>TODOC</p>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/cldr/monetary.html\" target=\"_blank\">dojo/cldr/monetary reference documentation</a> for more information.</p>          <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_cldr_monetary_getData\">\n<span class=\"functionIcon\">getData</span><span class=\"parameters\">(code)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"monetary\" class=\"jsdoc-link\">dojo/cldr/monetary</a> </p> <p>A mapping of currency code to currency-specific formatting information. Returns a unique object with properties: places, round.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">code</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>an <a href=\"http://en.wikipedia.org/wiki/ISO_4217\">ISO 4217</a> currency code</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">object</span></p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/cldr/monetary.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/cldr/monetary.html</a>\n  </p>\n</div>\n","dojo/cldr/supplemental":"<h1>dojo/cldr/supplemental</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>TODOC</p>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/cldr/supplemental.html\" target=\"_blank\">dojo/cldr/supplemental reference documentation</a> for more information.</p>          <h2 id=\"methods\">Methods</h2>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_cldr_supplemental_getFirstDayOfWeek\">\n<span class=\"functionIcon\">getFirstDayOfWeek</span><span class=\"parameters\">(locale)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"supplemental\" class=\"jsdoc-link\">dojo/cldr/supplemental</a> </p> <p>Returns a zero-based index for first day of the week</p>  <p>Returns a zero-based index for first day of the week, as used by the local (Gregorian) calendar. e.g. Sunday (returns 0), or Monday (returns 1)</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">locale</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">number</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_cldr_supplemental_getWeekend\">\n<span class=\"functionIcon\">getWeekend</span><span class=\"parameters\">(locale)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"supplemental\" class=\"jsdoc-link\">dojo/cldr/supplemental</a> </p> <p>Returns a hash containing the start and end days of the weekend</p>  <p>Returns a hash containing the start and end days of the weekend according to local custom using locale, or by default in the user's locale. e.g. {start:6, end:0}</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">locale</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">object</span></p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/cldr/supplemental.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/cldr/supplemental.html</a>\n  </p>\n</div>\n","dojo/colors":"<h1>dojo/colors</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>Color utilities, extending Base dojo.Color</p>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/colors.html\" target=\"_blank\">dojo/colors reference documentation</a> for more information.</p>          <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_colors_ThreeD\">\n<span class=\"objectIcon\">ThreeD</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"http://dojotoolkit.org/api/1.10/dojox/charting/themes/ThreeD\" class=\"jsdoc-link\">dojox/charting/themes/ThreeD</a> </p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/colors.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/colors.html</a>\n  </p>\n</div>\n","dojo/cookie":"<h1>dojo/cookie</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>Get or set a cookie.</p>  <p>If one argument is passed, returns the value of the cookie For two or more arguments, acts as a setter.</p>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">cookie<span class=\"parameters\"><span class=\"paren\">(</span><span class=\"args\">name,value,props</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">name</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>Name of the cookie</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">value</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Value for the cookie</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">props</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Properties for the cookie</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/cookie.html\" target=\"_blank\">dojo/cookie reference documentation</a> for more information.</p>    <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>set a cookie with the JSON-serialized contents of an object which will expire 5 days from now: </p> <pre><code>require([\"dojo/cookie\", \"dojo/json\"], function(cookie, json){\n    cookie(\"configObj\", json.stringify(config, {expires: 5 }));\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>de-serialize a cookie back into a JavaScript object: </p> <pre><code>require([\"dojo/cookie\", \"dojo/json\"], function(cookie, json){\n    config = json.parse(cookie(\"configObj\"));\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<p>delete a cookie: </p> <pre><code>require([\"dojo/cookie\"], function(cookie){\n    cookie(\"configObj\", null, {expires: -1});\n});</code></pre> </div> </div>       <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_cookie_isSupported\">\n<span class=\"functionIcon\">isSupported</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"cookie\" class=\"jsdoc-link\">dojo/cookie</a> </p> <p>Use to determine if the current browser supports cookies or not. </p> <p>Returns true if user allows cookies. Returns false if user doesn't allow cookies.</p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/cookie.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/cookie.html</a>\n  </p>\n</div>\n","dojo/currency":"<h1>dojo/currency</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>localized formatting and parsing routines for currencies</p>  <p>extends dojo.number to provide culturally-appropriate formatting of values in various world currencies, including use of a currency symbol. The currencies are specified by a three-letter international symbol in all uppercase, and support for the currencies is provided by the data in <code>dojo.cldr</code>. The scripts generating dojo.cldr specify which currency support is included. A fixed number of decimal places is determined based on the currency type and is not determined by the 'pattern' argument. The fractional portion is optional, by default, and variable length decimals are not supported.</p>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/currency.html\" target=\"_blank\">dojo/currency reference documentation</a> for more information.</p>          <h2 id=\"methods\">Methods</h2>       <h3 class=\"jsdoc-title\" id=\"1_10dojo_currency_format\">\n<span class=\"functionIcon\">format</span><span class=\"parameters\">(value,options)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"currency\" class=\"jsdoc-link\">dojo/currency</a> </p> <p>Format a Number as a currency, using locale-specific settings </p>  <p>Create a string from a Number using a known, localized pattern. <a href=\"http://www.unicode.org/reports/tr35/#Number_Elements\">Formatting patterns</a> appropriate to the locale are chosen from the <a href=\"http://unicode.org/cldr\">CLDR</a> as well as the appropriate symbols and delimiters and number of decimal places. </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">value</td> <td class=\"jsdoc-param-type\">Number</td> <td class=\"jsdoc-param-description\">\n<p>the number to be formatted.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">options</td> <td class=\"jsdoc-param-type\">__FormatOptions</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_currency_parse\">\n<span class=\"functionIcon\">parse</span><span class=\"parameters\">(expression,options)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"currency\" class=\"jsdoc-link\">dojo/currency</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">expression</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">options</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>An object with the following properties:</p>\n<ul>\n<li>type (String, optional): <p>Should not be set. Value is assumed to be currency.</p> </li>\n<li>currency (String, optional): <p>an <a href=\"http://en.wikipedia.org/wiki/ISO_4217\">ISO4217</a> currency code, a three letter sequence like \"USD\". For use with dojo.currency only.</p> </li>\n<li>symbol (String, optional): <p>localized currency symbol. The default will be looked up in table of supported currencies in <code>dojo.cldr</code> A <a href=\"http://en.wikipedia.org/wiki/ISO_4217\">ISO4217</a> currency code will be used if not found.</p> </li>\n<li>places (Number, optional): <p>fixed number of decimal places to accept. The default is determined based on which currency is used.</p> </li>\n<li>fractional (Boolean|Array, optional): <p>Whether to include the fractional portion, where the number of decimal places are implied by the currency or explicit 'places' parameter. The value [true,false] makes the fractional portion optional. By default for currencies, it the fractional portion is optional.</p> </li>\n<li>pattern (String, optional): <p>override <a href=\"http://www.unicode.org/reports/tr35/#Number_Format_Patterns\">formatting pattern</a> with this string. Default value is based on locale. Overriding this property will defeat localization. Literal characters in patterns are not supported.</p> </li>\n<li>locale (String, optional): <p>override the locale used to determine formatting rules</p> </li>\n<li>strict (Boolean, optional): <p>strict parsing, false by default. Strict parsing requires input as produced by the format() method. Non-strict is more permissive, e.g. flexible on white space, omitting thousands separators</p> </li>\n</ul> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_currency_regexp\">\n<span class=\"functionIcon\">regexp</span><span class=\"parameters\">(options)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"currency\" class=\"jsdoc-link\">dojo/currency</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">options</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>An object with the following properties:</p>\n<ul>\n<li>pattern (String, optional): <p>override <a href=\"http://www.unicode.org/reports/tr35/#Number_Format_Patterns\">formatting pattern</a> with this string. Default value is based on locale. Overriding this property will defeat localization.</p> </li>\n<li>type (String, optional): <p>choose a format type based on the locale from the following: decimal, scientific (not yet supported), percent, currency. decimal by default.</p> </li>\n<li>locale (String, optional): <p>override the locale used to determine formatting rules</p> </li>\n<li>strict (Boolean, optional): <p>strict parsing, false by default. Strict parsing requires input as produced by the format() method. Non-strict is more permissive, e.g. flexible on white space, omitting thousands separators</p> </li>\n<li>places (Number|String, optional): <p>number of decimal places to accept: Infinity, a positive number, or a range \"n,m\". Defined by pattern or Infinity if pattern not provided.</p> </li>\n</ul> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/currency.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/currency.html</a>\n  </p>\n</div>\n","dojo/currency.__formatoptions":"<h1>dojo/currency.__FormatOptions</h1>  <p> <strong>Note:</strong> This is not a real constructor, but just a description of the type of object that should be passed as a parameter to some method(s), and/or the return value from some method(s). In other words, the type exists only for documentation purposes, and you <strong>cannot</strong> call <code>new currency.__FormatOptions()</code> </p>          <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_currency___FormatOptions_currency\">\n<span class=\"stringIcon\">currency</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"currency\" class=\"jsdoc-link\">dojo/currency</a> </p> <div class=\"jsdoc-summary\">\n<p>an <a href=\"http://en.wikipedia.org/wiki/ISO_4217\">ISO4217</a> currency code, a three letter sequence like \"USD\". For use with dojo.currency only.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_currency___FormatOptions_fractional\">\n<span class=\"booleanIcon\">fractional</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"number\" class=\"jsdoc-link\">dojo/number</a> </p> <div class=\"jsdoc-summary\">\n<p>If false, show no decimal places, overriding places and pattern settings.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_currency___FormatOptions_locale\">\n<span class=\"stringIcon\">locale</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"number\" class=\"jsdoc-link\">dojo/number</a> </p> <div class=\"jsdoc-summary\">\n<p>override the locale used to determine formatting rules</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_currency___FormatOptions_pattern\">\n<span class=\"stringIcon\">pattern</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"number\" class=\"jsdoc-link\">dojo/number</a> </p> <div class=\"jsdoc-summary\">\n<p>override <a href=\"http://www.unicode.org/reports/tr35/#Number_Format_Patterns\">formatting pattern</a> with this string. Default value is based on locale. Overriding this property will defeat localization. Literal characters in patterns are not supported.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_currency___FormatOptions_places\">\n<span class=\"numberIcon\">places</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"currency\" class=\"jsdoc-link\">dojo/currency</a> </p> <div class=\"jsdoc-summary\">\n<p>number of decimal places to show. Default is defined based on which currency is used.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_currency___FormatOptions_round\">\n<span class=\"numberIcon\">round</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"number\" class=\"jsdoc-link\">dojo/number</a> </p> <div class=\"jsdoc-summary\">\n<p>5 rounds to nearest .5; 0 rounds to nearest whole (default). -1 means do not round.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_currency___FormatOptions_symbol\">\n<span class=\"stringIcon\">symbol</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"currency\" class=\"jsdoc-link\">dojo/currency</a> </p> <div class=\"jsdoc-summary\">\n<p>localized currency symbol. The default will be looked up in table of supported currencies in <code>dojo.cldr</code> A <a href=\"http://en.wikipedia.org/wiki/ISO_4217\">ISO4217</a> currency code will be used if not found.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_currency___FormatOptions_type\">\n<span class=\"stringIcon\">type</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"currency\" class=\"jsdoc-link\">dojo/currency</a> </p> <div class=\"jsdoc-summary\">\n<p>Should not be set. Value is assumed to be \"currency\".</p> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/currency.__FormatOptions.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/currency.__FormatOptions.html</a>\n  </p>\n</div>\n","dojo/currency.__parseoptions":"<h1>dojo/currency.__ParseOptions</h1>  <p> <strong>Note:</strong> This is not a real constructor, but just a description of the type of object that should be passed as a parameter to some method(s), and/or the return value from some method(s). In other words, the type exists only for documentation purposes, and you <strong>cannot</strong> call <code>new currency.__ParseOptions()</code> </p>          <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_currency___ParseOptions_currency\">\n<span class=\"stringIcon\">currency</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"currency\" class=\"jsdoc-link\">dojo/currency</a> </p> <div class=\"jsdoc-summary\">\n<p>an <a href=\"http://en.wikipedia.org/wiki/ISO_4217\">ISO4217</a> currency code, a three letter sequence like \"USD\". For use with dojo.currency only.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_currency___ParseOptions_fractional\">\n<span class=\"booleanIcon\">fractional</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"currency\" class=\"jsdoc-link\">dojo/currency</a> </p> <div class=\"jsdoc-summary\">\n<p>Whether to include the fractional portion, where the number of decimal places are implied by the currency or explicit 'places' parameter. The value [true,false] makes the fractional portion optional. By default for currencies, it the fractional portion is optional.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_currency___ParseOptions_locale\">\n<span class=\"stringIcon\">locale</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"number\" class=\"jsdoc-link\">dojo/number</a> </p> <div class=\"jsdoc-summary\">\n<p>override the locale used to determine formatting rules</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_currency___ParseOptions_pattern\">\n<span class=\"stringIcon\">pattern</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"number\" class=\"jsdoc-link\">dojo/number</a> </p> <div class=\"jsdoc-summary\">\n<p>override <a href=\"http://www.unicode.org/reports/tr35/#Number_Format_Patterns\">formatting pattern</a> with this string. Default value is based on locale. Overriding this property will defeat localization. Literal characters in patterns are not supported.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_currency___ParseOptions_places\">\n<span class=\"numberIcon\">places</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"currency\" class=\"jsdoc-link\">dojo/currency</a> </p> <div class=\"jsdoc-summary\">\n<p>fixed number of decimal places to accept. The default is determined based on which currency is used.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_currency___ParseOptions_strict\">\n<span class=\"booleanIcon\">strict</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"number\" class=\"jsdoc-link\">dojo/number</a> </p> <div class=\"jsdoc-summary\">\n<p>strict parsing, false by default. Strict parsing requires input as produced by the format() method. Non-strict is more permissive, e.g. flexible on white space, omitting thousands separators</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_currency___ParseOptions_symbol\">\n<span class=\"stringIcon\">symbol</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"currency\" class=\"jsdoc-link\">dojo/currency</a> </p> <div class=\"jsdoc-summary\">\n<p>localized currency symbol. The default will be looked up in table of supported currencies in <code>dojo.cldr</code> A <a href=\"http://en.wikipedia.org/wiki/ISO_4217\">ISO4217</a> currency code will be used if not found.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_currency___ParseOptions_type\">\n<span class=\"stringIcon\">type</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"currency\" class=\"jsdoc-link\">dojo/currency</a> </p> <div class=\"jsdoc-summary\">\n<p>Should not be set. Value is assumed to be currency.</p> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/currency.__ParseOptions.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/currency.__ParseOptions.html</a>\n  </p>\n</div>\n","dojo/_base/xhr":"<h1>dojo/_base/xhr</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>Deprecated. Use <a class=\"jsdoc-link\" href=\"../request\">dojo/request</a> instead.</p>  <p>Sends an HTTP request with the given method. See also dojo.xhrGet(), xhrPost(), xhrPut() and dojo.xhrDelete() for shortcuts for those HTTP methods. There are also methods for \"raw\" PUT and POST methods via dojo.rawXhrPut() and dojo.rawXhrPost() respectively.</p>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">xhr<span class=\"parameters\"><span class=\"paren\">(</span><span class=\"args\">method,args,hasBody</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">method</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>HTTP method to be used, such as GET, POST, PUT, DELETE. Should be uppercase.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">args</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">hasBody</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>If the request has an HTTP body, then pass true for hasBody.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/_base/xhr.html\" target=\"_blank\">dojo/_base/xhr reference documentation</a> for more information.</p>            <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_xhr_contentHandlers\">\n<span class=\"objectIcon\">contentHandlers</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>A map of available XHR transport handle types. Name matches the <code>handleAs</code> attribute passed to XHR calls.</p> </div>    <h2 id=\"methods\">Methods</h2>            <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_xhr_del\">\n<span class=\"functionIcon\">del</span><span class=\"parameters\">(args)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <p>Sends an HTTP DELETE request to the server.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">args</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>An object with the following properties:</p>\n<ul>\n<li>handleAs (String, optional): <p>Acceptable values are: text (default), json, json-comment-optional, json-comment-filtered, javascript, xml. See <code>dojo/_base/xhr.contentHandlers</code></p> </li>\n<li>sync (Boolean, optional): <p>false is default. Indicates whether the request should be a synchronous (blocking) request.</p> </li>\n<li>headers (Object, optional): <p>Additional HTTP headers to send in the request.</p> </li>\n<li>failOk (Boolean, optional): <p>false is default. Indicates whether a request should be allowed to fail (and therefore no console error message in the event of a failure)</p> </li>\n<li>contentType (String|Boolean): <p>\"application/x-www-form-urlencoded\" is default. Set to false to prevent a Content-Type header from being sent, or to a string to send a different Content-Type.</p> </li>\n<li>load: <p>This function will be called on a successful HTTP response code.</p> </li>\n<li>error: <p>This function will be called when the request fails due to a network or server error, the url is invalid, etc. It will also be called if the load or handle callback throws an exception, unless djConfig.debugAtAllCosts is true. This allows deployed applications to continue to run even when a logic error happens in the callback, while making it easier to troubleshoot while in debug mode.</p> </li>\n<li>handle: <p>This function will be called at the end of every request, whether or not an error occurs.</p> </li>\n<li>url (String): <p>URL to server endpoint.</p> </li>\n<li>content (Object, optional): <p>Contains properties with string values. These properties will be serialized as name1=value2 and passed in the request.</p> </li>\n<li>timeout (Integer, optional): <p>Milliseconds to wait for the response. If this time passes, the then error callbacks are called.</p> </li>\n<li>form (DOMNode, optional): <p>DOM node for a form. Used to extract the form values and send to the server.</p> </li>\n<li>preventCache (Boolean, optional): <p>Default is false. If true, then a \"dojo.preventCache\" parameter is sent in the request with a value that changes with each request (timestamp). Useful only with GET-type requests.</p> </li>\n<li>rawBody (String, optional): <p>Sets the raw body for an HTTP request. If this is used, then the content property is ignored. This is mostly useful for HTTP methods that have a body to their requests, like PUT or POST. This property can be used instead of postData and putData for dojo/_base/xhr.rawXhrPost and dojo/_base/xhr.rawXhrPut respectively.</p> </li>\n<li>ioPublish (Boolean, optional): <p>Set this explicitly to false to prevent publishing of topics related to IO operations. Otherwise, if djConfig.ioPublish is set to true, topics will be published via dojo/topic.publish() for different phases of an IO operation. See dojo/main.__IoPublish for a list of topics that are published.</p> </li>\n</ul> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_xhr_fieldToObject\">\n<span class=\"functionIcon\">fieldToObject</span><span class=\"parameters\">(inputNode)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <p>Serialize a form field to a JavaScript object.</p>  <p>Returns the value encoded in a form field as as a string or an array of strings. Disabled form elements and unchecked radio and checkboxes are skipped. Multi-select elements are returned as an array of string values.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">inputNode</td> <td class=\"jsdoc-param-type\">DOMNode | String</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Object | undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_xhr_formToJson\">\n<span class=\"functionIcon\">formToJson</span><span class=\"parameters\">(formNode,prettyPrint)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <p>Create a serialized JSON string from a form node or string ID identifying the form to serialize</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">formNode</td> <td class=\"jsdoc-param-type\">DOMNode | String</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">prettyPrint</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">String | undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_xhr_formToObject\">\n<span class=\"functionIcon\">formToObject</span><span class=\"parameters\">(formNode)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <p>Serialize a form node to a JavaScript object.</p>  <p>Returns the values encoded in an HTML form as string properties in an object which it then returns. Disabled form elements, buttons, and other non-value form elements are skipped. Multi-select elements are returned as an array of string values.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">formNode</td> <td class=\"jsdoc-param-type\">DOMNode | String</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">object</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>This form: </p> <pre><code>&lt;form id=\"test_form\"&gt;\n    &lt;input type=\"text\" name=\"blah\" value=\"blah\"&gt;\n    &lt;input type=\"text\" name=\"no_value\" value=\"blah\" disabled&gt;\n    &lt;input type=\"button\" name=\"no_value2\" value=\"blah\"&gt;\n    &lt;select type=\"select\" multiple name=\"multi\" size=\"5\"&gt;\n        &lt;option value=\"blah\"&gt;blah&lt;/option&gt;\n        &lt;option value=\"thud\" selected&gt;thud&lt;/option&gt;\n        &lt;option value=\"thonk\" selected&gt;thonk&lt;/option&gt;\n    &lt;/select&gt;\n&lt;/form&gt;</code></pre> <p>yields this object structure as the result of a call to formToObject(): </p> <pre><code>{\n    blah: \"blah\",\n    multi: [\n        \"thud\",\n        \"thonk\"\n    ]\n};</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_xhr_formToQuery\">\n<span class=\"functionIcon\">formToQuery</span><span class=\"parameters\">(formNode)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <p>Returns a URL-encoded string representing the form passed as either a node or string ID identifying the form to serialize</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">formNode</td> <td class=\"jsdoc-param-type\">DOMNode | String</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">String | undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_xhr_get\">\n<span class=\"functionIcon\">get</span><span class=\"parameters\">(args)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <p>Sends an HTTP GET request to the server.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">args</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>An object with the following properties:</p>\n<ul>\n<li>handleAs (String, optional): <p>Acceptable values are: text (default), json, json-comment-optional, json-comment-filtered, javascript, xml. See <code>dojo/_base/xhr.contentHandlers</code></p> </li>\n<li>sync (Boolean, optional): <p>false is default. Indicates whether the request should be a synchronous (blocking) request.</p> </li>\n<li>headers (Object, optional): <p>Additional HTTP headers to send in the request.</p> </li>\n<li>failOk (Boolean, optional): <p>false is default. Indicates whether a request should be allowed to fail (and therefore no console error message in the event of a failure)</p> </li>\n<li>contentType (String|Boolean): <p>\"application/x-www-form-urlencoded\" is default. Set to false to prevent a Content-Type header from being sent, or to a string to send a different Content-Type.</p> </li>\n<li>load: <p>This function will be called on a successful HTTP response code.</p> </li>\n<li>error: <p>This function will be called when the request fails due to a network or server error, the url is invalid, etc. It will also be called if the load or handle callback throws an exception, unless djConfig.debugAtAllCosts is true. This allows deployed applications to continue to run even when a logic error happens in the callback, while making it easier to troubleshoot while in debug mode.</p> </li>\n<li>handle: <p>This function will be called at the end of every request, whether or not an error occurs.</p> </li>\n<li>url (String): <p>URL to server endpoint.</p> </li>\n<li>content (Object, optional): <p>Contains properties with string values. These properties will be serialized as name1=value2 and passed in the request.</p> </li>\n<li>timeout (Integer, optional): <p>Milliseconds to wait for the response. If this time passes, the then error callbacks are called.</p> </li>\n<li>form (DOMNode, optional): <p>DOM node for a form. Used to extract the form values and send to the server.</p> </li>\n<li>preventCache (Boolean, optional): <p>Default is false. If true, then a \"dojo.preventCache\" parameter is sent in the request with a value that changes with each request (timestamp). Useful only with GET-type requests.</p> </li>\n<li>rawBody (String, optional): <p>Sets the raw body for an HTTP request. If this is used, then the content property is ignored. This is mostly useful for HTTP methods that have a body to their requests, like PUT or POST. This property can be used instead of postData and putData for dojo/_base/xhr.rawXhrPost and dojo/_base/xhr.rawXhrPut respectively.</p> </li>\n<li>ioPublish (Boolean, optional): <p>Set this explicitly to false to prevent publishing of topics related to IO operations. Otherwise, if djConfig.ioPublish is set to true, topics will be published via dojo/topic.publish() for different phases of an IO operation. See dojo/main.__IoPublish for a list of topics that are published.</p> </li>\n</ul> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_xhr_objectToQuery\">\n<span class=\"functionIcon\">objectToQuery</span><span class=\"parameters\">(map)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <p>takes a name/value mapping object and returns a string representing a URL-encoded version of that object.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">map</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>this object: </p> <pre><code>{\n    blah: \"blah\",\n    multi: [\n        \"thud\",\n        \"thonk\"\n    ]\n};</code></pre> <p>yields the following query string: </p> <pre><code>\"blah=blah&amp;multi=thud&amp;multi=thonk\"</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_xhr_post\">\n<span class=\"functionIcon\">post</span><span class=\"parameters\">(args)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <p>Sends an HTTP POST request to the server. In addition to the properties listed for the dojo.__XhrArgs type, the following property is allowed:</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">args</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>An object with the following properties:</p>\n<ul>\n<li>handleAs (String, optional): <p>Acceptable values are: text (default), json, json-comment-optional, json-comment-filtered, javascript, xml. See <code>dojo/_base/xhr.contentHandlers</code></p> </li>\n<li>sync (Boolean, optional): <p>false is default. Indicates whether the request should be a synchronous (blocking) request.</p> </li>\n<li>headers (Object, optional): <p>Additional HTTP headers to send in the request.</p> </li>\n<li>failOk (Boolean, optional): <p>false is default. Indicates whether a request should be allowed to fail (and therefore no console error message in the event of a failure)</p> </li>\n<li>contentType (String|Boolean): <p>\"application/x-www-form-urlencoded\" is default. Set to false to prevent a Content-Type header from being sent, or to a string to send a different Content-Type.</p> </li>\n<li>load: <p>This function will be called on a successful HTTP response code.</p> </li>\n<li>error: <p>This function will be called when the request fails due to a network or server error, the url is invalid, etc. It will also be called if the load or handle callback throws an exception, unless djConfig.debugAtAllCosts is true. This allows deployed applications to continue to run even when a logic error happens in the callback, while making it easier to troubleshoot while in debug mode.</p> </li>\n<li>handle: <p>This function will be called at the end of every request, whether or not an error occurs.</p> </li>\n<li>url (String): <p>URL to server endpoint.</p> </li>\n<li>content (Object, optional): <p>Contains properties with string values. These properties will be serialized as name1=value2 and passed in the request.</p> </li>\n<li>timeout (Integer, optional): <p>Milliseconds to wait for the response. If this time passes, the then error callbacks are called.</p> </li>\n<li>form (DOMNode, optional): <p>DOM node for a form. Used to extract the form values and send to the server.</p> </li>\n<li>preventCache (Boolean, optional): <p>Default is false. If true, then a \"dojo.preventCache\" parameter is sent in the request with a value that changes with each request (timestamp). Useful only with GET-type requests.</p> </li>\n<li>rawBody (String, optional): <p>Sets the raw body for an HTTP request. If this is used, then the content property is ignored. This is mostly useful for HTTP methods that have a body to their requests, like PUT or POST. This property can be used instead of postData and putData for dojo/_base/xhr.rawXhrPost and dojo/_base/xhr.rawXhrPut respectively.</p> </li>\n<li>ioPublish (Boolean, optional): <p>Set this explicitly to false to prevent publishing of topics related to IO operations. Otherwise, if djConfig.ioPublish is set to true, topics will be published via dojo/topic.publish() for different phases of an IO operation. See dojo/main.__IoPublish for a list of topics that are published.</p> </li>\n</ul> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_xhr_put\">\n<span class=\"functionIcon\">put</span><span class=\"parameters\">(args)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <p>Sends an HTTP PUT request to the server. In addition to the properties listed for the dojo.__XhrArgs type, the following property is allowed:</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">args</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>An object with the following properties:</p>\n<ul>\n<li>handleAs (String, optional): <p>Acceptable values are: text (default), json, json-comment-optional, json-comment-filtered, javascript, xml. See <code>dojo/_base/xhr.contentHandlers</code></p> </li>\n<li>sync (Boolean, optional): <p>false is default. Indicates whether the request should be a synchronous (blocking) request.</p> </li>\n<li>headers (Object, optional): <p>Additional HTTP headers to send in the request.</p> </li>\n<li>failOk (Boolean, optional): <p>false is default. Indicates whether a request should be allowed to fail (and therefore no console error message in the event of a failure)</p> </li>\n<li>contentType (String|Boolean): <p>\"application/x-www-form-urlencoded\" is default. Set to false to prevent a Content-Type header from being sent, or to a string to send a different Content-Type.</p> </li>\n<li>load: <p>This function will be called on a successful HTTP response code.</p> </li>\n<li>error: <p>This function will be called when the request fails due to a network or server error, the url is invalid, etc. It will also be called if the load or handle callback throws an exception, unless djConfig.debugAtAllCosts is true. This allows deployed applications to continue to run even when a logic error happens in the callback, while making it easier to troubleshoot while in debug mode.</p> </li>\n<li>handle: <p>This function will be called at the end of every request, whether or not an error occurs.</p> </li>\n<li>url (String): <p>URL to server endpoint.</p> </li>\n<li>content (Object, optional): <p>Contains properties with string values. These properties will be serialized as name1=value2 and passed in the request.</p> </li>\n<li>timeout (Integer, optional): <p>Milliseconds to wait for the response. If this time passes, the then error callbacks are called.</p> </li>\n<li>form (DOMNode, optional): <p>DOM node for a form. Used to extract the form values and send to the server.</p> </li>\n<li>preventCache (Boolean, optional): <p>Default is false. If true, then a \"dojo.preventCache\" parameter is sent in the request with a value that changes with each request (timestamp). Useful only with GET-type requests.</p> </li>\n<li>rawBody (String, optional): <p>Sets the raw body for an HTTP request. If this is used, then the content property is ignored. This is mostly useful for HTTP methods that have a body to their requests, like PUT or POST. This property can be used instead of postData and putData for dojo/_base/xhr.rawXhrPost and dojo/_base/xhr.rawXhrPut respectively.</p> </li>\n<li>ioPublish (Boolean, optional): <p>Set this explicitly to false to prevent publishing of topics related to IO operations. Otherwise, if djConfig.ioPublish is set to true, topics will be published via dojo/topic.publish() for different phases of an IO operation. See dojo/main.__IoPublish for a list of topics that are published.</p> </li>\n</ul> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_xhr_queryToObject\">\n<span class=\"functionIcon\">queryToObject</span><span class=\"parameters\">(str)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <p>Create an object representing a de-serialized query section of a URL. Query keys with multiple values are returned in an array. </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">str</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">object</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>This string: </p> <pre><code>\"foo=bar&amp;foo=baz&amp;thinger=%20spaces%20=blah&amp;zonk=blarg&amp;\"</code></pre> <p>results in this object structure: </p> <pre><code>{\n    foo: [ \"bar\", \"baz\" ],\n    thinger: \" spaces =blah\",\n    zonk: \"blarg\"\n}</code></pre> <p>Note that spaces and other urlencoded entities are correctly handled.</p> </div> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/_base/xhr.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/_base/xhr.html</a>\n  </p>\n</div>\n","dojo/data/api/item":"<h1>dojo/data/api/Item</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>An item in a dojo/data store Class for documentation purposes only. An item can take any form, so no properties or methods are defined here.</p>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/data/api.html\" target=\"_blank\">dojo/data/api/Item reference documentation</a> for more information.</p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/data/api/Item.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/data/api/Item.html</a>\n  </p>\n</div>\n","dojo/data/api/request":"<h1>dojo/data/api/Request</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>This class defines out the semantics of what a 'Request' object looks like when returned from a fetch() method. In general, a request object is nothing more than the original keywordArgs from fetch with an abort function attached to it to allow users to abort a particular request if they so choose. No other functions are required on a general Request object return. That does not inhibit other store implementations from adding extensions to it, of course. </p> <p>This is an abstract API that data provider implementations conform to. This file defines methods signatures and intentionally leaves all the methods unimplemented. </p> <p>For more details on fetch, see <a class=\"jsdoc-link\" href=\"read#fetch\">dojo/data/api/Read.fetch()</a>.</p>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/data/api.html\" target=\"_blank\">dojo/data/api/Request reference documentation</a> for more information.</p>          <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_api_Request_abort\">\n<span class=\"functionIcon\">abort</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"request\" class=\"jsdoc-link\">dojo/data/api/Request</a> </p> <p>This function is a hook point for stores to provide as a way for a fetch to be halted mid-processing.</p>  <p>This function is a hook point for stores to provide as a way for a fetch to be halted mid-processing. For more details on the fetch() api, please see <a class=\"jsdoc-link\" href=\"read#fetch\">dojo/data/api/Read.fetch()</a>.</p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/data/api/Request.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/data/api/Request.html</a>\n  </p>\n</div>\n","dojo/data/util/filter":"<h1>dojo/data/util/filter</h1>           <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_util_filter_patternToRegExp\">\n<span class=\"functionIcon\">patternToRegExp</span><span class=\"parameters\">(pattern,ignoreCase)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"filter\" class=\"jsdoc-link\">dojo/data/util/filter</a> </p> <p>Helper function to convert a simple pattern to a regular expression for matching.</p>  <p>Returns a regular expression object that conforms to the defined conversion rules. For example: </p> <ul> <li>ca<em> -&gt; /^ca.</em>$/</li> <li>\n<em>ca</em> -&gt; /^.<em>ca.</em>$/</li> <li>\n<em>c\\</em>a<em> -&gt; /^.</em>c*a.*$/</li> <li>\n<em>c\\</em>a?<em> -&gt; /^.</em>c*a..*$/</li> </ul> <p>and so on.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">pattern</td> <td class=\"jsdoc-param-type\">string</td> <td class=\"jsdoc-param-description\">\n<p>A simple matching pattern to convert that follows basic rules: </p> <ul> <li>\n<ul> <li>Means match anything, so ca* means match anything starting with ca</li> </ul> </li> <li>? Means match single character. So, b?b will match to bob and bab, and so on.</li> <li>\\ is an escape character. So for example, * means do not treat <em> as a match, but literal character </em>.</li> </ul> <p>To use a \\ as a character in the string, it must be escaped. So in the pattern it should be represented by \\ to be treated as an ordinary \\ character instead of an escape.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">ignoreCase</td> <td class=\"jsdoc-param-type\">boolean</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>An optional flag to indicate if the pattern matching should be treated as case-sensitive or not when comparing By default, it is assumed case sensitive.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">instance</span></p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/data/util/filter.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/data/util/filter.html</a>\n  </p>\n</div>\n","dojo/data/util/simplefetch":"<h1>dojo/data/util/simpleFetch</h1>           <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_util_simpleFetch_errorHandler\">\n<span class=\"functionIcon\">errorHandler</span><span class=\"parameters\">(errorData,requestObject)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"simplefetch\" class=\"jsdoc-link\">dojo/data/util/simpleFetch</a> </p> <p>The error handler when there is an error fetching items. This function should not be called directly and is used by simpleFetch.fetch().</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">errorData</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">requestObject</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_util_simpleFetch_fetch\">\n<span class=\"functionIcon\">fetch</span><span class=\"parameters\">(request)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"simplefetch\" class=\"jsdoc-link\">dojo/data/util/simpleFetch</a> </p> <p>The simpleFetch mixin is designed to serve as a set of function(s) that can be mixed into other datastore implementations to accelerate their development.</p>  <p>The simpleFetch mixin should work well for any datastore that can respond to a _fetchItems() call by returning an array of all the found items that matched the query. The simpleFetch mixin is not designed to work for datastores that respond to a fetch() call by incrementally loading items, or sequentially loading partial batches of the result set. For datastores that mixin simpleFetch, simpleFetch implements a fetch method that automatically handles eight of the fetch() arguments -- onBegin, onItem, onComplete, onError, start, count, sort and scope The class mixing in simpleFetch should not implement fetch(), but should instead implement a _fetchItems() method. The _fetchItems() method takes three arguments, the keywordArgs object that was passed to fetch(), a callback function to be called when the result array is available, and an error callback to be called if something goes wrong. The _fetchItems() method should ignore any keywordArgs parameters for start, count, onBegin, onItem, onComplete, onError, sort, and scope. The _fetchItems() method needs to correctly handle any other keywordArgs parameters, including the query parameter and any optional parameters (such as includeChildren). The _fetchItems() method should create an array of result items and pass it to the fetchHandler along with the original request object -- or, the _fetchItems() method may, if it wants to, create an new request object with other specifics about the request that are specific to the datastore and pass that as the request object to the handler. </p> <p>For more information on this specific function, see <a class=\"jsdoc-link\" href=\"../api/read#fetch\">dojo/data/api/Read.fetch()</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">request</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>The keywordArgs parameter may either be an instance of conforming to dojo/data/api/Request or may be a simple anonymous object that may contain any of the following: </p> <pre><code>{\n    query: query-object or query-string,\n    queryOptions: object,\n    onBegin: Function,\n    onItem: Function,\n    onComplete: Function,\n    onError: Function,\n    scope: object,\n    start: int\n    count: int\n    sort: array\n}</code></pre> <p>All implementations should accept keywordArgs objects with any of </p> <p>the 9 standard properties: query, onBegin, onItem, onComplete, onError scope, sort, start, and count. Some implementations may accept additional properties in the keywordArgs object as valid parameters, such as {includeOutliers:true}. </p> <h4>The <em>query</em> parameter</h4> <p>The query may be optional in some data store implementations. The dojo/data/api/Read API does not specify the syntax or semantics of the query itself -- each different data store implementation may have its own notion of what a query should look like. However, as of dojo 0.9, 1.0, and 1.1, all the provided datastores in dojo.data and dojox.data support an object structure query, where the object is a set of name/value parameters such as { attrFoo: valueBar, attrFoo1: valueBar1}. Most of the dijit widgets, such as ComboBox assume this to be the case when working with a datastore when they dynamically update the query. Therefore, for maximum compatibility with dijit widgets the recommended query parameter is a key/value object. That does not mean that the the datastore may not take alternative query forms, such as a simple string, a Date, a number, or a mix of such. Ultimately, The dojo/data/api/Read API is agnostic about what the query format. </p> <p>Further note: In general for query objects that accept strings as attribute value matches, the store should also support basic filtering capability, such as <em> (match any character) and ? (match single character). An example query that is a query object would be like: { attrFoo: \"value</em>\"}. Which generally means match all items where they have an attribute named attrFoo, with a value that starts with 'value'. </p> <h4>The <em>queryOptions</em> parameter</h4> <p>The queryOptions parameter is an optional parameter used to specify options that may modify the query in some fashion, such as doing a case insensitive search, or doing a deep search where all items in a hierarchical representation of data are scanned instead of just the root items. It currently defines two options that all datastores should attempt to honor if possible: </p> <pre><code>{\n    ignoreCase: boolean, // Whether or not the query should match case sensitively or not.  Default behaviour is false.\n    deep: boolean   // Whether or not a fetch should do a deep search of items and all child\n                    // items instead of just root-level items in a datastore.  Default is false.\n}</code></pre> <h4>The <em>onBegin</em> parameter.</h4> <p>function(size, request); If an onBegin callback function is provided, the callback function will be called just once, before the first onItem callback is called. The onBegin callback function will be passed two arguments, the the total number of items identified and the Request object. If the total number is unknown, then size will be -1. Note that size is not necessarily the size of the collection of items returned from the query, as the request may have specified to return only a subset of the total set of items through the use of the start and count parameters. </p> <h4>The <em>onItem</em> parameter.</h4> <p>function(item, request); </p> <p>If an onItem callback function is provided, the callback function will be called as each item in the result is received. The callback function will be passed two arguments: the item itself, and the Request object. </p> <h4>The <em>onComplete</em> parameter.</h4> <p>function(items, request); </p> <p>If an onComplete callback function is provided, the callback function will be called just once, after the last onItem callback is called. Note that if the onItem callback is not present, then onComplete will be passed an array containing all items which matched the query and the request object. If the onItem callback is present, then onComplete is called as: onComplete(null, request). </p> <h4>The <em>onError</em> parameter.</h4> <p>function(errorData, request); </p> <p>If an onError callback function is provided, the callback function will be called if there is any sort of error while attempting to execute the query. The onError callback function will be passed two arguments: an Error object and the Request object. </p> <h4>The <em>scope</em> parameter.</h4> <p>If a scope object is provided, all of the callback functions (onItem, onComplete, onError, etc) will be invoked in the context of the scope object. In the body of the callback function, the value of the \"this\" keyword will be the scope object. If no scope object is provided, the callback functions will be called in the context of dojo.global(). For example, onItem.call(scope, item, request) vs. onItem.call(dojo.global(), item, request) </p> <h4>The <em>start</em> parameter.</h4> <p>If a start parameter is specified, this is a indication to the datastore to only start returning items once the start number of items have been located and skipped. When this parameter is paired with 'count', the store should be able to page across queries with millions of hits by only returning subsets of the hits for each query </p> <h4>The <em>count</em> parameter.</h4> <p>If a count parameter is specified, this is a indication to the datastore to only return up to that many items. This allows a fetch call that may have millions of item matches to be paired down to something reasonable. </p> <h4>The <em>sort</em> parameter.</h4> <p>If a sort parameter is specified, this is a indication to the datastore to sort the items in some manner before returning the items. The array is an array of javascript objects that must conform to the following format to be applied to the fetching of items: </p> <pre><code>{\n    attribute: attribute || attribute-name-string,\n    descending: true|false;   // Optional.  Default is false.\n}</code></pre> <p>Note that when comparing attributes, if an item contains no value for the attribute </p> <p>(undefined), then it the default ascending sort logic should push it to the bottom of the list. In the descending order case, it such items should appear at the top of the list.</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_util_simpleFetch_fetchHandler\">\n<span class=\"functionIcon\">fetchHandler</span><span class=\"parameters\">(items,requestObject)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"simplefetch\" class=\"jsdoc-link\">dojo/data/util/simpleFetch</a> </p> <p>The handler when items are successfully fetched. This function should not be called directly and is used by simpleFetch.fetch().</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">items</td> <td class=\"jsdoc-param-type\">Array</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">requestObject</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/data/util/simpleFetch.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/data/util/simpleFetch.html</a>\n  </p>\n</div>\n","dojo/data/util/sorter":"<h1>dojo/data/util/sorter</h1>           <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_util_sorter_basicComparator\">\n<span class=\"functionIcon\">basicComparator</span><span class=\"parameters\">(a,b)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"sorter\" class=\"jsdoc-link\">dojo/data/util/sorter</a> </p> <p>Basic comparison function that compares if an item is greater or less than another item</p>  <p>returns 1 if a &gt; b, -1 if a &lt; b, 0 if equal. 'null' values (null, undefined) are treated as larger values so that they're pushed to the end of the list. And compared to each other, null is equivalent to undefined.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">a</td> <td class=\"jsdoc-param-type\">anything</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">b</td> <td class=\"jsdoc-param-type\">anything</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">number</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_util_sorter_createSortFunction\">\n<span class=\"functionIcon\">createSortFunction</span><span class=\"parameters\">(sortSpec,store)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"sorter\" class=\"jsdoc-link\">dojo/data/util/sorter</a> </p> <p>Helper function to generate the sorting function based off the list of sort attributes.</p>  <p>The sort function creation will look for a property on the store called 'comparatorMap'. If it exists it will look in the mapping for comparisons function for the attributes. If one is found, it will use it instead of the basic comparator, which is typically used for strings, ints, booleans, and dates. Returns the sorting function for this particular list of attributes and sorting directions.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">sortSpec</td> <td class=\"jsdoc-param-type\">attributes[]</td> <td class=\"jsdoc-param-description\">\n<p>A JS object that array that defines out what attribute names to sort on and whether it should be descenting or asending. The objects should be formatted as follows: </p> <pre><code>{\n    attribute: \"attributeName-string\" || attribute,\n    descending: true|false;   // Default is false.\n}</code></pre> </td> </tr> <tr> <td class=\"jsdoc-param-name\">store</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"../api/read\">dojo/data/api/Read</a></td> <td class=\"jsdoc-param-description\">\n<p>The datastore object to look up item values from.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Return an array of property names</span></p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/data/util/sorter.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/data/util/sorter.html</a>\n  </p>\n</div>\n","dojo/date":"<h1>dojo/date</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>Date manipulation utilities</p>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/date.html\" target=\"_blank\">dojo/date reference documentation</a> for more information.</p>          <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_date_add\">\n<span class=\"functionIcon\">add</span><span class=\"parameters\">(date,interval,amount)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"date\" class=\"jsdoc-link\">dojo/date</a> </p> <p>Add to a Date in intervals of different size, from milliseconds to years</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">date</td> <td class=\"jsdoc-param-type\">Date</td> <td class=\"jsdoc-param-description\">\n<p>Date object to start with</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">interval</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>A string representing the interval. One of the following: \"year\", \"month\", \"day\", \"hour\", \"minute\", \"second\", \"millisecond\", \"quarter\", \"week\", \"weekday\"</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">amount</td> <td class=\"jsdoc-param-type\">int</td> <td class=\"jsdoc-param-description\">\n<p>How much to add to the date.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">instance</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_date_compare\">\n<span class=\"functionIcon\">compare</span><span class=\"parameters\">(date1,date2,portion)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"date\" class=\"jsdoc-link\">dojo/date</a> </p> <p>Compare two date objects by date, time, or both.</p>  <p>Returns 0 if equal, positive if a &gt; b, else negative.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">date1</td> <td class=\"jsdoc-param-type\">Date</td> <td class=\"jsdoc-param-description\">\n<p>Date object</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">date2</td> <td class=\"jsdoc-param-type\">Date</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Date object. If not specified, the current Date is used.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">portion</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>A string indicating the \"date\" or \"time\" portion of a Date object. Compares both \"date\" and \"time\" by default. One of the following: \"date\", \"time\", \"datetime\"</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">number</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_date_difference\">\n<span class=\"functionIcon\">difference</span><span class=\"parameters\">(date1,date2,interval)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"date\" class=\"jsdoc-link\">dojo/date</a> </p> <p>Get the difference in a specific unit of time (e.g., number of months, weeks, days, etc.) between two dates, rounded to the nearest integer.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">date1</td> <td class=\"jsdoc-param-type\">Date</td> <td class=\"jsdoc-param-description\">\n<p>Date object</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">date2</td> <td class=\"jsdoc-param-type\">Date</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Date object. If not specified, the current Date is used.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">interval</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>A string representing the interval. One of the following: \"year\", \"month\", \"day\", \"hour\", \"minute\", \"second\", \"millisecond\", \"quarter\", \"week\", \"weekday\" </p> <p>Defaults to \"day\".</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_date_getDaysInMonth\">\n<span class=\"functionIcon\">getDaysInMonth</span><span class=\"parameters\">(dateObject)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"date\" class=\"jsdoc-link\">dojo/date</a> </p> <p>Returns the number of days in the month used by dateObject</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">dateObject</td> <td class=\"jsdoc-param-type\">Date</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">number | undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_date_getTimezoneName\">\n<span class=\"functionIcon\">getTimezoneName</span><span class=\"parameters\">(dateObject)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"date\" class=\"jsdoc-link\">dojo/date</a> </p> <p>Get the user's time zone as provided by the browser</p>  <p>Try to get time zone info from toString or toLocaleString method of the Date object -- UTC offset is not a time zone. See <a href=\"http://www.twinsun.com/tz/tz-link.htm\">http://www.twinsun.com/tz/tz-link.htm</a> Note: results may be inconsistent across browsers.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">dateObject</td> <td class=\"jsdoc-param-type\">Date</td> <td class=\"jsdoc-param-description\">\n<p>Needed because the timezone may vary with time (daylight savings)</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_date_isLeapYear\">\n<span class=\"functionIcon\">isLeapYear</span><span class=\"parameters\">(dateObject)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"date\" class=\"jsdoc-link\">dojo/date</a> </p> <p>Determines if the year of the dateObject is a leap year</p>  <p>Leap years are years with an additional day YYYY-02-29, where the year number is a multiple of four with the following exception: If a year is a multiple of 100, then it is only a leap year if it is also a multiple of 400. For example, 1900 was not a leap year, but 2000 is one.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">dateObject</td> <td class=\"jsdoc-param-type\">Date</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">boolean</span></p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/date.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/date.html</a>\n  </p>\n</div>\n","dojo/data/api/read":"<h1>dojo/data/api/Read</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>This is an abstract API that data provider implementations conform to. This file defines methods signatures and intentionally leaves all the methods unimplemented. For more information on the dojo.data APIs, please visit: <a href=\"http://www.dojotoolkit.org/node/98\">http://www.dojotoolkit.org/node/98</a></p>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/data/api/Read.html\" target=\"_blank\">dojo/data/api/Read reference documentation</a> for more information.</p>          <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_api_Read_close\">\n<span class=\"functionIcon\">close</span><span class=\"parameters\">(request)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"read\" class=\"jsdoc-link\">dojo/data/api/Read</a> </p> <p>The close() method is intended for instructing the store to 'close' out any information associated with a particular request.</p>  <p>The close() method is intended for instructing the store to 'close' out any information associated with a particular request. In general, this API expects to receive as a parameter a request object returned from a fetch. It will then close out anything associated with that request, such as clearing any internal datastore caches and closing any 'open' connections. For some store implementations, this call may be a no-op.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">request</td> <td class=\"jsdoc-param-type\">\n<a class=\"jsdoc-link\" href=\"request\">dojo/data/api/Request</a> | Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>An instance of a request for the store to use to identify what to close out. If no request is passed, then the store should clear all internal caches (if any) and close out all 'open' connections. It does not render the store unusable from there on, it merely cleans out any current data and resets the store to initial state.</p> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>var request = store.fetch({onComplete: doSomething});\n...\nstore.close(request);</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_api_Read_containsValue\">\n<span class=\"functionIcon\">containsValue</span><span class=\"parameters\">(item,attribute,value)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"read\" class=\"jsdoc-link\">dojo/data/api/Read</a> </p> <p>Returns true if the given <em>value</em> is one of the values that getValues() would return.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"item\">dojo/data/api/Item</a></td> <td class=\"jsdoc-param-description\">\n<p>The item to access values on.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">attribute</td> <td class=\"jsdoc-param-type\">attribute-name-string</td> <td class=\"jsdoc-param-description\">\n<p>The attribute to access represented as a string.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">value</td> <td class=\"jsdoc-param-type\">anything</td> <td class=\"jsdoc-param-description\">\n<p>The value to match as a value for the attribute.</p> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>var trueOrFalse = store.containsValue(kermit, \"color\", \"green\");</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_api_Read_fetch\">\n<span class=\"functionIcon\">fetch</span><span class=\"parameters\">(keywordArgs)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"read\" class=\"jsdoc-link\">dojo/data/api/Read</a> </p> <p>Given a query and set of defined options, such as a start and count of items to return, this method executes the query and makes the results available as data items. The format and expectations of stores is that they operate in a generally asynchronous manner, therefore callbacks are always used to return items located by the fetch parameters.</p>  <p>A Request object will always be returned and is returned immediately. The basic request is nothing more than the keyword args passed to fetch and an additional function attached, abort(). The returned request object may then be used to cancel a fetch. All data items returns are passed through the callbacks defined in the fetch parameters and are not present on the 'request' object. </p> <p>This does not mean that custom stores can not add methods and properties to the request object returned, only that the API does not require it. For more info about the Request API, see <a class=\"jsdoc-link\" href=\"request\">dojo/data/api/Request</a></p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">keywordArgs</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>The keywordArgs parameter may either be an instance of conforming to dojo/data/api/Request or may be a simple anonymous object that may contain any of the following: </p> <pre><code>{\n    query: query-object or query-string,\n    queryOptions: object,\n    onBegin: Function,\n    onItem: Function,\n    onComplete: Function,\n    onError: Function,\n    scope: object,\n    start: int\n    count: int\n    sort: array\n}</code></pre> <p>All implementations should accept keywordArgs objects with any of </p> <p>the 9 standard properties: query, onBegin, onItem, onComplete, onError scope, sort, start, and count. Some implementations may accept additional properties in the keywordArgs object as valid parameters, such as {includeOutliers:true}. </p> <h4>The <em>query</em> parameter</h4> <p>The query may be optional in some data store implementations. The dojo/data/api/Read API does not specify the syntax or semantics of the query itself -- each different data store implementation may have its own notion of what a query should look like. However, as of dojo 0.9, 1.0, and 1.1, all the provided datastores in dojo.data and dojox.data support an object structure query, where the object is a set of name/value parameters such as { attrFoo: valueBar, attrFoo1: valueBar1}. Most of the dijit widgets, such as ComboBox assume this to be the case when working with a datastore when they dynamically update the query. Therefore, for maximum compatibility with dijit widgets the recommended query parameter is a key/value object. That does not mean that the the datastore may not take alternative query forms, such as a simple string, a Date, a number, or a mix of such. Ultimately, The dojo/data/api/Read API is agnostic about what the query format. </p> <p>Further note: In general for query objects that accept strings as attribute value matches, the store should also support basic filtering capability, such as <em> (match any character) and ? (match single character). An example query that is a query object would be like: { attrFoo: \"value</em>\"}. Which generally means match all items where they have an attribute named attrFoo, with a value that starts with 'value'. </p> <h4>The <em>queryOptions</em> parameter</h4> <p>The queryOptions parameter is an optional parameter used to specify options that may modify the query in some fashion, such as doing a case insensitive search, or doing a deep search where all items in a hierarchical representation of data are scanned instead of just the root items. It currently defines two options that all datastores should attempt to honor if possible: </p> <pre><code>{\n    ignoreCase: boolean, // Whether or not the query should match case sensitively or not.  Default behaviour is false.\n    deep: boolean   // Whether or not a fetch should do a deep search of items and all child\n                    // items instead of just root-level items in a datastore.  Default is false.\n}</code></pre> <h4>The <em>onBegin</em> parameter.</h4> <p>function(size, request); If an onBegin callback function is provided, the callback function will be called just once, before the first onItem callback is called. The onBegin callback function will be passed two arguments, the the total number of items identified and the Request object. If the total number is unknown, then size will be -1. Note that size is not necessarily the size of the collection of items returned from the query, as the request may have specified to return only a subset of the total set of items through the use of the start and count parameters. </p> <h4>The <em>onItem</em> parameter.</h4> <p>function(item, request); </p> <p>If an onItem callback function is provided, the callback function will be called as each item in the result is received. The callback function will be passed two arguments: the item itself, and the Request object. </p> <h4>The <em>onComplete</em> parameter.</h4> <p>function(items, request); </p> <p>If an onComplete callback function is provided, the callback function will be called just once, after the last onItem callback is called. Note that if the onItem callback is not present, then onComplete will be passed an array containing all items which matched the query and the request object. If the onItem callback is present, then onComplete is called as: onComplete(null, request). </p> <h4>The <em>onError</em> parameter.</h4> <p>function(errorData, request); </p> <p>If an onError callback function is provided, the callback function will be called if there is any sort of error while attempting to execute the query. The onError callback function will be passed two arguments: an Error object and the Request object. </p> <h4>The <em>scope</em> parameter.</h4> <p>If a scope object is provided, all of the callback functions (onItem, onComplete, onError, etc) will be invoked in the context of the scope object. In the body of the callback function, the value of the \"this\" keyword will be the scope object. If no scope object is provided, the callback functions will be called in the context of dojo.global(). For example, onItem.call(scope, item, request) vs. onItem.call(dojo.global(), item, request) </p> <h4>The <em>start</em> parameter.</h4> <p>If a start parameter is specified, this is a indication to the datastore to only start returning items once the start number of items have been located and skipped. When this parameter is paired with 'count', the store should be able to page across queries with millions of hits by only returning subsets of the hits for each query </p> <h4>The <em>count</em> parameter.</h4> <p>If a count parameter is specified, this is a indication to the datastore to only return up to that many items. This allows a fetch call that may have millions of item matches to be paired down to something reasonable. </p> <h4>The <em>sort</em> parameter.</h4> <p>If a sort parameter is specified, this is a indication to the datastore to sort the items in some manner before returning the items. The array is an array of javascript objects that must conform to the following format to be applied to the fetching of items: </p> <pre><code>{\n    attribute: attribute || attribute-name-string,\n    descending: true|false;   // Optional.  Default is false.\n}</code></pre> <p>Note that when comparing attributes, if an item contains no value for the attribute </p> <p>(undefined), then it the default ascending sort logic should push it to the bottom of the list. In the descending order case, it such items should appear at the top of the list.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any</span></p> <p>The fetch() method will return a javascript object conforming to the API defined in dojo/data/api/Request. In general, it will be the keywordArgs object returned with the required functions in Request.js attached. Its general purpose is to provide a convenient way for a caller to abort an ongoing fetch. </p> <p>The Request object may also have additional properties when it is returned such as request.store property, which is a pointer to the datastore object that fetch() is a method of.</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Fetch all books identified by the query and call 'showBooks' when complete </p> <pre><code>var request = store.fetch({query:\"all books\", onComplete: showBooks});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>Fetch all items in the story and call 'showEverything' when complete. </p> <pre><code>var request = store.fetch(onComplete: showEverything);</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<p>Fetch only 10 books that match the query 'all books', starting at the fifth book found during the search. This demonstrates how paging can be done for specific queries. </p> <pre><code>var request = store.fetch({query:\"all books\", start: 4, count: 10, onComplete: showBooks});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 4</h3>\n<p>Fetch all items that match the query, calling 'callback' each time an item is located. </p> <pre><code>var request = store.fetch({query:\"foo/bar\", onItem:callback});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 5</h3>\n<p>Fetch the first 100 books by author King, call showKing when up to 100 items have been located. </p> <pre><code>var request = store.fetch({query:{author:\"King\"}, start: 0, count:100, onComplete: showKing});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 6</h3>\n<p>Locate the books written by Author King, sort it on title and publisher, then return the first 100 items from the sorted items. </p> <pre><code>var request = store.fetch({query:{author:\"King\"}, sort: [{ attribute: \"title\", descending: true}, {attribute: \"publisher\"}], ,start: 0, count:100, onComplete: 'showKing'});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 7</h3>\n<p>Fetch the first 100 books by authors starting with the name King, then call showKing when up to 100 items have been located. </p> <pre><code>var request = store.fetch({query:{author:\"King*\"}, start: 0, count:100, onComplete: showKing});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 8</h3>\n<p>Fetch the first 100 books by authors ending with 'ing', but only have one character before it (King, Bing, Ling, Sing, etc.), then call showBooks when up to 100 items have been located. </p> <pre><code>var request = store.fetch({query:{author:\"?ing\"}, start: 0, count:100, onComplete: showBooks});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 9</h3>\n<p>Fetch the first 100 books by author King, where the name may appear as King, king, KING, kInG, and so on, then call showKing when up to 100 items have been located. </p> <pre><code>var request = store.fetch({query:{author:\"King\"}, queryOptions:(ignoreCase: true}, start: 0, count:100, onComplete: showKing});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 10</h3>\n<p>Paging </p> <pre><code>var store = new LargeRdbmsStore({url:\"jdbc:odbc:foobar\"});\nvar fetchArgs = {\n    query: {type:\"employees\", name:\"Hillary *\"}, // string matching\n    sort: [{attribute:\"department\", descending:true}],\n    start: 0,\n    count: 20,\n    scope: displayer,\n    onBegin: showThrobber,\n    onItem: displayItem,\n    onComplete: stopThrobber,\n    onError: handleFetchError,\n};\nstore.fetch(fetchArgs);\n...</code></pre> <p>and then when the user presses the \"Next Page\" button... </p> <pre><code>fetchArgs.start += 20;\nstore.fetch(fetchArgs);  // get the next 20 items</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_api_Read_getAttributes\">\n<span class=\"functionIcon\">getAttributes</span><span class=\"parameters\">(item)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"read\" class=\"jsdoc-link\">dojo/data/api/Read</a> </p> <p>Returns an array with all the attributes that this item has. This method will always return an array; if the item has no attributes at all, getAttributes() will return an empty array: [].</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"item\">dojo/data/api/Item</a></td> <td class=\"jsdoc-param-description\">\n<p>The item to access attributes on.</p> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>var array = store.getAttributes(kermit);</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_api_Read_getFeatures\">\n<span class=\"functionIcon\">getFeatures</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"read\" class=\"jsdoc-link\">dojo/data/api/Read</a> </p> <p>The getFeatures() method returns an simple keyword values object that specifies what interface features the datastore implements. A simple CsvStore may be read-only, and the only feature it implements will be the 'dojo/data/api/Read' interface, so the getFeatures() method will return an object like this one: {'dojo.data.api.Read': true}. A more sophisticated datastore might implement a variety of interface features, like 'dojo.data.api.Read', 'dojo/data/api/Write', 'dojo.data.api.Identity', and 'dojo/data/api/Attribution'.</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">object</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_api_Read_getLabel\">\n<span class=\"functionIcon\">getLabel</span><span class=\"parameters\">(item)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"read\" class=\"jsdoc-link\">dojo/data/api/Read</a> </p> <p>Method to inspect the item and return a user-readable 'label' for the item that provides a general/adequate description of what the item is.</p>  <p>Method to inspect the item and return a user-readable 'label' for the item that provides a general/adequate description of what the item is. In general most labels will be a specific attribute value or collection of the attribute values that combine to label the item in some manner. For example for an item that represents a person it may return the label as: \"firstname lastlame\" where the firstname and lastname are attributes on the item. If the store is unable to determine an adequate human readable label, it should return undefined. Users that wish to customize how a store instance labels items should replace the getLabel() function on their instance of the store, or extend the store and replace the function in the extension class.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"item\">dojo/data/api/Item</a></td> <td class=\"jsdoc-param-description\">\n<p>The item to return the label for.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any</span></p> <p>A user-readable string representing the item or undefined if no user-readable label can be generated.</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_api_Read_getLabelAttributes\">\n<span class=\"functionIcon\">getLabelAttributes</span><span class=\"parameters\">(item)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"read\" class=\"jsdoc-link\">dojo/data/api/Read</a> </p> <p>Method to inspect the item and return an array of what attributes of the item were used to generate its label, if any.</p>  <p>Method to inspect the item and return an array of what attributes of the item were used to generate its label, if any. This function is to assist UI developers in knowing what attributes can be ignored out of the attributes an item has when displaying it, in cases where the UI is using the label as an overall identifer should they wish to hide redundant information.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"item\">dojo/data/api/Item</a></td> <td class=\"jsdoc-param-description\">\n<p>The item to return the list of label attributes for.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any</span></p> <p>An array of attribute names that were used to generate the label, or null if public attributes were not used to generate the label.</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_api_Read_getValue\">\n<span class=\"functionIcon\">getValue</span><span class=\"parameters\">(item,attribute,defaultValue)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"read\" class=\"jsdoc-link\">dojo/data/api/Read</a> </p> <p>Returns a single attribute value. Returns defaultValue if and only if <em>item</em> does not have a value for <em>attribute</em>. Returns null if and only if null was explicitly set as the attribute value. Returns undefined if and only if the item does not have a value for the given attribute (which is the same as saying the item does not have the attribute).</p>  <p>Saying that an \"item x does not have a value for an attribute y\" is identical to saying that an \"item x does not have attribute y\". It is an oxymoron to say \"that attribute is present but has no values\" or \"the item has that attribute but does not have any attribute values\". If store.hasAttribute(item, attribute) returns false, then store.getValue(item, attribute) will return undefined.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"item\">dojo/data/api/Item</a></td> <td class=\"jsdoc-param-description\">\n<p>The item to access values on.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">attribute</td> <td class=\"jsdoc-param-type\">attribute-name-string</td> <td class=\"jsdoc-param-description\">\n<p>The attribute to access represented as a string.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">defaultValue</td> <td class=\"jsdoc-param-type\">value</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Optional. A default value to use for the getValue return in the attribute does not exist or has no value.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any</span></p> <p>a literal, an item, null, or undefined (never an array)</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>var darthVader = store.getValue(lukeSkywalker, \"father\");</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_api_Read_getValues\">\n<span class=\"functionIcon\">getValues</span><span class=\"parameters\">(item,attribute)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"read\" class=\"jsdoc-link\">dojo/data/api/Read</a> </p> <p>This getValues() method works just like the getValue() method, but getValues() always returns an array rather than a single attribute value. The array may be empty, may contain a single attribute value, or may contain many attribute values. If the item does not have a value for the given attribute, then getValues() will return an empty array: []. (So, if store.hasAttribute(item, attribute) has a return of false, then store.getValues(item, attribute) will return [].)</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"item\">dojo/data/api/Item</a></td> <td class=\"jsdoc-param-description\">\n<p>The item to access values on.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">attribute</td> <td class=\"jsdoc-param-type\">attribute-name-string</td> <td class=\"jsdoc-param-description\">\n<p>The attribute to access represented as a string.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any</span></p> <p>an array that may contain literals and items</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>var friendsOfLuke = store.getValues(lukeSkywalker, \"friends\");</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_api_Read_hasAttribute\">\n<span class=\"functionIcon\">hasAttribute</span><span class=\"parameters\">(item,attribute)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"read\" class=\"jsdoc-link\">dojo/data/api/Read</a> </p> <p>Returns true if the given <em>item</em> has a value for the given <em>attribute</em>.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"item\">dojo/data/api/Item</a></td> <td class=\"jsdoc-param-description\">\n<p>The item to access attributes on.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">attribute</td> <td class=\"jsdoc-param-type\">attribute-name-string</td> <td class=\"jsdoc-param-description\">\n<p>The attribute to access represented as a string.</p> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>var trueOrFalse = store.hasAttribute(kermit, \"color\");</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_api_Read_isItem\">\n<span class=\"functionIcon\">isItem</span><span class=\"parameters\">(something)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"read\" class=\"jsdoc-link\">dojo/data/api/Read</a> </p> <p>Returns true if <em>something</em> is an item and came from the store instance. Returns false if <em>something</em> is a literal, an item from another store instance, or is any object other than an item.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">something</td> <td class=\"jsdoc-param-type\">anything</td> <td class=\"jsdoc-param-description\">\n<p>Can be anything.</p> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>var yes = store.isItem(store.newItem());\nvar no  = store.isItem(\"green\");</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_api_Read_isItemLoaded\">\n<span class=\"functionIcon\">isItemLoaded</span><span class=\"parameters\">(something)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"read\" class=\"jsdoc-link\">dojo/data/api/Read</a> </p> <p>Returns false if isItem(something) is false. Returns false if if isItem(something) is true but the the item is not yet loaded in local memory (for example, if the item has not yet been read from the server).</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">something</td> <td class=\"jsdoc-param-type\">anything</td> <td class=\"jsdoc-param-description\">\n<p>Can be anything.</p> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>var yes = store.isItemLoaded(store.newItem());\nvar no  = store.isItemLoaded(\"green\");</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_api_Read_loadItem\">\n<span class=\"functionIcon\">loadItem</span><span class=\"parameters\">(keywordArgs)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"read\" class=\"jsdoc-link\">dojo/data/api/Read</a> </p> <p>Given an item, this method loads the item so that a subsequent call to store.isItemLoaded(item) will return true. If a call to isItemLoaded() returns true before loadItem() is even called, then loadItem() need not do any work at all and will not even invoke the callback handlers. So, before invoking this method, check that the item has not already been loaded.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">keywordArgs</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>An anonymous object that defines the item to load and callbacks to invoke when the load has completed. The format of the object is as follows: </p> <pre><code>{\n    item: object,\n    onItem: Function,\n    onError: Function,\n    scope: object\n}</code></pre> <h4>The <em>item</em> parameter</h4> <p>The item parameter is an object that represents the item in question that should be contained by the store. This attribute is required. </p> <h4>The <em>onItem</em> parameter</h4> <p>Function(item) The onItem parameter is the callback to invoke when the item has been loaded. It takes only one parameter, the fully loaded item. </p> <h4>The <em>onError</em> parameter</h4> <p>Function(error) The onError parameter is the callback to invoke when the item load encountered an error. It takes only one parameter, the error object </p> <h4>The <em>scope</em> parameter</h4> <p>If a scope object is provided, all of the callback functions (onItem, onError, etc) will be invoked in the context of the scope object. In the body of the callback function, the value of the \"this\" keyword will be the scope object. If no scope object is provided, the callback functions will be called in the context of dojo.global(). For example, onItem.call(scope, item, request) vs. onItem.call(dojo.global(), item, request)</p> </td> </tr> </table><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/data/api/Read.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/data/api/Read.html</a>\n  </p>\n</div>\n","dojo/date/locale":"<h1>dojo/date/locale</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>This modules defines <a class=\"jsdoc-link\" href=\"locale\">dojo/date/locale</a>, localization methods for Date.</p>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/date/locale.html\" target=\"_blank\">dojo/date/locale reference documentation</a> for more information.</p>          <h2 id=\"methods\">Methods</h2>          <h3 class=\"jsdoc-title\" id=\"1_10dojo_date_locale_addCustomFormats\">\n<span class=\"functionIcon\">addCustomFormats</span><span class=\"parameters\">(packageName,bundleName)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"locale\" class=\"jsdoc-link\">dojo/date/locale</a> </p> <p>Add a reference to a bundle containing localized custom formats to be used by date/time formatting and parsing routines. </p>  <p>The user may add custom localized formats where the bundle has properties following the same naming convention used by dojo.cldr: <code>dateFormat-xxxx</code> / <code>timeFormat-xxxx</code> The pattern string should match the format used by the CLDR. See <a class=\"jsdoc-link\" href=\"locale#format\">dojo/date/locale.format()</a> for details. The resources must be loaded by dojo.requireLocalization() prior to use</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">packageName</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">bundleName</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_date_locale_format\">\n<span class=\"functionIcon\">format</span><span class=\"parameters\">(dateObject,options)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"locale\" class=\"jsdoc-link\">dojo/date/locale</a> </p> <p>Format a Date object as a String, using locale-specific settings. </p>  <p>Create a string from a Date object using a known localized pattern. By default, this method formats both date and time from dateObject. Formatting patterns are chosen appropriate to the locale. Different formatting lengths may be chosen, with \"full\" used by default. Custom patterns may be used or registered with translations using the <a class=\"jsdoc-link\" href=\"locale#addCustomFormats\">dojo/date/locale.addCustomFormats()</a> method. Formatting patterns are implemented using <a href=\"http://www.unicode.org/reports/tr35/tr35-4.html#Date_Format_Patterns\">the syntax described at unicode.org</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">dateObject</td> <td class=\"jsdoc-param-type\">Date</td> <td class=\"jsdoc-param-description\">\n<p>the date and/or time to be formatted. If a time only is formatted, the values in the year, month, and day fields are irrelevant. The opposite is true when formatting only dates.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">options</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>An object with the following properties:</p>\n<ul>\n<li>selector (String): <p>choice of 'time','date' (default: date and time)</p> </li>\n<li>formatLength (String): <p>choice of long, short, medium or full (plus any custom additions). Defaults to 'short'</p> </li>\n<li>datePattern (String): <p>override pattern with this string</p> </li>\n<li>timePattern (String): <p>override pattern with this string</p> </li>\n<li>am (String): <p>override strings for am in times</p> </li>\n<li>pm (String): <p>override strings for pm in times</p> </li>\n<li>locale (String): <p>override the locale used to determine formatting rules</p> </li>\n<li>fullYear (Boolean): <p>(format only) use 4 digit years whenever 2 digit years are called for</p> </li>\n<li>strict (Boolean): <p>(parse only) strict parsing, off by default</p> </li>\n</ul> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_date_locale_getNames\">\n<span class=\"functionIcon\">getNames</span><span class=\"parameters\">(item,type,context,locale)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"locale\" class=\"jsdoc-link\">dojo/date/locale</a> </p> <p>Used to get localized strings from dojo.cldr for day or month names. </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>'months' || 'days'</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">type</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>'wide' || 'abbr' || 'narrow' (e.g. \"Monday\", \"Mon\", or \"M\" respectively, in English)</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">context</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>'standAlone' || 'format' (default)</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">locale</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>override locale used to find the names</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_date_locale_isWeekend\">\n<span class=\"functionIcon\">isWeekend</span><span class=\"parameters\">(dateObject,locale)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"locale\" class=\"jsdoc-link\">dojo/date/locale</a> </p> <p>Determines if the date falls on a weekend, according to local custom.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">dateObject</td> <td class=\"jsdoc-param-type\">Date</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> <tr> <td class=\"jsdoc-param-name\">locale</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">boolean</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_date_locale_parse\">\n<span class=\"functionIcon\">parse</span><span class=\"parameters\">(value,options)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"locale\" class=\"jsdoc-link\">dojo/date/locale</a> </p> <p>Convert a properly formatted string to a primitive Date object, using locale-specific settings. </p>  <p>Create a Date object from a string using a known localized pattern. By default, this method parses looking for both date and time in the string. Formatting patterns are chosen appropriate to the locale. Different formatting lengths may be chosen, with \"full\" used by default. Custom patterns may be used or registered with translations using the <a class=\"jsdoc-link\" href=\"locale#addCustomFormats\">dojo/date/locale.addCustomFormats()</a> method. </p> <p>Formatting patterns are implemented using <a href=\"http://www.unicode.org/reports/tr35/tr35-4.html#Date_Format_Patterns\">the syntax described at unicode.org</a> When two digit years are used, a century is chosen according to a sliding window of 80 years before and 20 years after present year, for both <code>yy</code> and <code>yyyy</code> patterns. year &lt; 100CE requires strict mode. </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">value</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>A string representation of a date</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">options</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>An object with the following properties:</p>\n<ul>\n<li>selector (String): <p>choice of 'time','date' (default: date and time)</p> </li>\n<li>formatLength (String): <p>choice of long, short, medium or full (plus any custom additions). Defaults to 'short'</p> </li>\n<li>datePattern (String): <p>override pattern with this string</p> </li>\n<li>timePattern (String): <p>override pattern with this string</p> </li>\n<li>am (String): <p>override strings for am in times</p> </li>\n<li>pm (String): <p>override strings for pm in times</p> </li>\n<li>locale (String): <p>override the locale used to determine formatting rules</p> </li>\n<li>fullYear (Boolean): <p>(format only) use 4 digit years whenever 2 digit years are called for</p> </li>\n<li>strict (Boolean): <p>(parse only) strict parsing, off by default</p> </li>\n</ul> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">null | undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_date_locale_regexp\">\n<span class=\"functionIcon\">regexp</span><span class=\"parameters\">(options)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"locale\" class=\"jsdoc-link\">dojo/date/locale</a> </p> <p>Builds the regular needed to parse a localized date</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">options</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>An object with the following properties:</p>\n<ul>\n<li>selector (String): <p>choice of 'time','date' (default: date and time)</p> </li>\n<li>formatLength (String): <p>choice of long, short, medium or full (plus any custom additions). Defaults to 'short'</p> </li>\n<li>datePattern (String): <p>override pattern with this string</p> </li>\n<li>timePattern (String): <p>override pattern with this string</p> </li>\n<li>am (String): <p>override strings for am in times</p> </li>\n<li>pm (String): <p>override strings for pm in times</p> </li>\n<li>locale (String): <p>override the locale used to determine formatting rules</p> </li>\n<li>fullYear (Boolean): <p>(format only) use 4 digit years whenever 2 digit years are called for</p> </li>\n<li>strict (Boolean): <p>(parse only) strict parsing, off by default</p> </li>\n</ul> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/date/locale.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/date/locale.html</a>\n  </p>\n</div>\n","dojo/date/stamp":"<h1>dojo/date/stamp</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>TODOC</p>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/date/stamp.html\" target=\"_blank\">dojo/date/stamp reference documentation</a> for more information.</p>            <h2 id=\"properties\">Properties</h2>    <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_date_stamp_fromISOString\">\n<span class=\"functionIcon\">fromISOString</span><span class=\"parameters\">(formattedString,defaultTime)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"stamp\" class=\"jsdoc-link\">dojo/date/stamp</a> </p> <p>Returns a Date object given a string formatted according to a subset of the ISO-8601 standard. </p>  <p>Accepts a string formatted according to a profile of ISO8601 as defined by <a href=\"http://www.ietf.org/rfc/rfc3339.txt\">RFC3339</a>, except that partial input is allowed. Can also process dates as specified <a href=\"http://www.w3.org/TR/NOTE-datetime\">by the W3C</a> The following combinations are valid: </p> <ul> <li>dates only<ul> <li>yyyy</li> <li>yyyy-MM</li> <li>yyyy-MM-dd</li> </ul> </li> <li>times only, with an optional time zone appended<ul> <li>THH:mm</li> <li>THH:mm:ss</li> <li>THH:mm:ss.SSS</li> </ul> </li> <li>and \"datetimes\" which could be any combination of the above</li> </ul> <p>timezones may be specified as Z (for UTC) or +/- followed by a time expression HH:mm Assumes the local time zone if not specified. Does not validate. Improperly formatted input may return null. Arguments which are out of bounds will be handled by the Date constructor (e.g. January 32nd typically gets resolved to February 1st) Only years between 100 and 9999 are supported.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">formattedString</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>A string such as 2005-06-30T08:05:00-07:00 or 2005-06-30 or T08:05:00</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">defaultTime</td> <td class=\"jsdoc-param-type\">Number</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Used for defaults for fields omitted in the formattedString. Uses 1970-01-01T00:00:00.0Z by default.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">instance</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_date_stamp_toISOString\">\n<span class=\"functionIcon\">toISOString</span><span class=\"parameters\">(dateObject,options)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"stamp\" class=\"jsdoc-link\">dojo/date/stamp</a> </p> <p>Format a Date object as a string according a subset of the ISO-8601 standard </p>  <p>When options.selector is omitted, output follows <a href=\"http://www.ietf.org/rfc/rfc3339.txt\">RFC3339</a> The local time zone is included as an offset from GMT, except when selector=='time' (time without a date) Does not check bounds. Only years between 100 and 9999 are supported. </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">dateObject</td> <td class=\"jsdoc-param-type\">Date</td> <td class=\"jsdoc-param-description\">\n<p>A Date object</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">options</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>An object with the following properties:</p>\n<ul>\n<li>selector (String): <p>\"date\" or \"time\" for partial formatting of the Date object. Both date and time will be formatted by default.</p> </li>\n<li>zulu (Boolean): <p>if true, UTC/GMT is used for a timezone</p> </li>\n<li>milliseconds (Boolean): <p>if true, output milliseconds</p> </li>\n</ul> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/date/stamp.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/date/stamp.html</a>\n  </p>\n</div>\n","dojo/debounce":"<h1>dojo/debounce</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>Create a function that will only execute after <code>wait</code> milliseconds</p>  <p>Create a function that will only execute after <code>wait</code> milliseconds of repeated execution. Useful for delaying some event action slightly to allow for rapidly-firing events such as window.resize, node.mousemove and so on.</p>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">debounce<span class=\"parameters\"><span class=\"paren\">(</span><span class=\"args\">cb,wait</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">cb</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\">\n<p>A callback to fire. Like hitch() and partial(), arguments passed to the returned function curry along to the original callback.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">wait</td> <td class=\"jsdoc-param-type\">Integer</td> <td class=\"jsdoc-param-description\">\n<p>Time to spend caching executions before actually executing.</p> </td> </tr> </table>          <h2 id=\"methods\">Methods</h2><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/debounce.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/debounce.html</a>\n  </p>\n</div>\n","dojo/deferredlist":"<h1>dojo/DeferredList</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>Deprecated, use <a class=\"jsdoc-link\" href=\"promise/all\">dojo/promise/all</a> instead. Provides event handling for a group of Deferred objects.</p>  <p>DeferredList takes an array of existing deferreds and returns a new deferred of its own this new deferred will typically have its callback fired when all of the deferreds in the given list have fired their own deferreds. The parameters <code>fireOnOneCallback</code> and fireOnOneErrback, will fire before all the deferreds as appropriate</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">list</td> <td class=\"jsdoc-param-type\">Array</td> <td class=\"jsdoc-param-description\">\n<p>The list of deferreds to be synchronizied with this DeferredList</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">fireOnOneCallback</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Will cause the DeferredLists callback to be fired as soon as any of the deferreds in its list have been fired instead of waiting until the entire list has finished</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">fireOnOneErrback</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> <tr> <td class=\"jsdoc-param-name\">consumeErrors</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> <tr> <td class=\"jsdoc-param-name\">canceller</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>A deferred canceller function, see dojo.Deferred</p> </td> </tr> </table> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/DeferredList.html\" target=\"_blank\">dojo/DeferredList reference documentation</a> for more information.</p>          <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_DeferredList_gatherResults\">\n<span class=\"functionIcon\">gatherResults</span><span class=\"parameters\">(deferredList)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"deferredlist\" class=\"jsdoc-link\">dojo/DeferredList</a> </p> <p>Gathers the results of the deferreds for packaging as the parameters to the Deferred Lists' callback</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">deferredList</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"deferredlist\">dojo/DeferredList</a></td> <td class=\"jsdoc-param-description\">\n<p>The deferred list from which this function gathers results.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\"><a class=\"jsdoc-link\" href=\"deferredlist\">dojo/DeferredList</a> | instance</span></p> <p>The newly created deferred list which packs results as parameters to its callback.</p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/DeferredList.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/DeferredList.html</a>\n  </p>\n</div>\n","dojo/data/api/identity":"<h1>dojo/data/api/Identity</h1> <div class=\"jsdoc-mixins\"> <label>Extends</label><a href=\"read\" class=\"jsdoc-link\">dojo/data/api/Read</a> </div>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>This is an abstract API that data provider implementations conform to. This file defines methods signatures and intentionally leaves all the methods unimplemented.</p>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/data/api/Identity.html\" target=\"_blank\">dojo/data/api/Identity reference documentation</a> for more information.</p>          <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_api_Identity_close\">\n<span class=\"functionIcon\">close</span><span class=\"parameters\">(request)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"read\" class=\"jsdoc-link\">dojo/data/api/Read</a> </p> <p>The close() method is intended for instructing the store to 'close' out any information associated with a particular request.</p>  <p>The close() method is intended for instructing the store to 'close' out any information associated with a particular request. In general, this API expects to receive as a parameter a request object returned from a fetch. It will then close out anything associated with that request, such as clearing any internal datastore caches and closing any 'open' connections. For some store implementations, this call may be a no-op.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">request</td> <td class=\"jsdoc-param-type\">\n<a class=\"jsdoc-link\" href=\"request\">dojo/data/api/Request</a> | Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>An instance of a request for the store to use to identify what to close out. If no request is passed, then the store should clear all internal caches (if any) and close out all 'open' connections. It does not render the store unusable from there on, it merely cleans out any current data and resets the store to initial state.</p> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>var request = store.fetch({onComplete: doSomething});\n...\nstore.close(request);</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_api_Identity_containsValue\">\n<span class=\"functionIcon\">containsValue</span><span class=\"parameters\">(item,attribute,value)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"read\" class=\"jsdoc-link\">dojo/data/api/Read</a> </p> <p>Returns true if the given <em>value</em> is one of the values that getValues() would return.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"item\">dojo/data/api/Item</a></td> <td class=\"jsdoc-param-description\">\n<p>The item to access values on.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">attribute</td> <td class=\"jsdoc-param-type\">attribute-name-string</td> <td class=\"jsdoc-param-description\">\n<p>The attribute to access represented as a string.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">value</td> <td class=\"jsdoc-param-type\">anything</td> <td class=\"jsdoc-param-description\">\n<p>The value to match as a value for the attribute.</p> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>var trueOrFalse = store.containsValue(kermit, \"color\", \"green\");</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_api_Identity_fetch\">\n<span class=\"functionIcon\">fetch</span><span class=\"parameters\">(keywordArgs)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"read\" class=\"jsdoc-link\">dojo/data/api/Read</a> </p> <p>Given a query and set of defined options, such as a start and count of items to return, this method executes the query and makes the results available as data items. The format and expectations of stores is that they operate in a generally asynchronous manner, therefore callbacks are always used to return items located by the fetch parameters.</p>  <p>A Request object will always be returned and is returned immediately. The basic request is nothing more than the keyword args passed to fetch and an additional function attached, abort(). The returned request object may then be used to cancel a fetch. All data items returns are passed through the callbacks defined in the fetch parameters and are not present on the 'request' object. </p> <p>This does not mean that custom stores can not add methods and properties to the request object returned, only that the API does not require it. For more info about the Request API, see <a class=\"jsdoc-link\" href=\"request\">dojo/data/api/Request</a></p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">keywordArgs</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>The keywordArgs parameter may either be an instance of conforming to dojo/data/api/Request or may be a simple anonymous object that may contain any of the following: </p> <pre><code>{\n    query: query-object or query-string,\n    queryOptions: object,\n    onBegin: Function,\n    onItem: Function,\n    onComplete: Function,\n    onError: Function,\n    scope: object,\n    start: int\n    count: int\n    sort: array\n}</code></pre> <p>All implementations should accept keywordArgs objects with any of </p> <p>the 9 standard properties: query, onBegin, onItem, onComplete, onError scope, sort, start, and count. Some implementations may accept additional properties in the keywordArgs object as valid parameters, such as {includeOutliers:true}. </p> <h4>The <em>query</em> parameter</h4> <p>The query may be optional in some data store implementations. The dojo/data/api/Read API does not specify the syntax or semantics of the query itself -- each different data store implementation may have its own notion of what a query should look like. However, as of dojo 0.9, 1.0, and 1.1, all the provided datastores in dojo.data and dojox.data support an object structure query, where the object is a set of name/value parameters such as { attrFoo: valueBar, attrFoo1: valueBar1}. Most of the dijit widgets, such as ComboBox assume this to be the case when working with a datastore when they dynamically update the query. Therefore, for maximum compatibility with dijit widgets the recommended query parameter is a key/value object. That does not mean that the the datastore may not take alternative query forms, such as a simple string, a Date, a number, or a mix of such. Ultimately, The dojo/data/api/Read API is agnostic about what the query format. </p> <p>Further note: In general for query objects that accept strings as attribute value matches, the store should also support basic filtering capability, such as <em> (match any character) and ? (match single character). An example query that is a query object would be like: { attrFoo: \"value</em>\"}. Which generally means match all items where they have an attribute named attrFoo, with a value that starts with 'value'. </p> <h4>The <em>queryOptions</em> parameter</h4> <p>The queryOptions parameter is an optional parameter used to specify options that may modify the query in some fashion, such as doing a case insensitive search, or doing a deep search where all items in a hierarchical representation of data are scanned instead of just the root items. It currently defines two options that all datastores should attempt to honor if possible: </p> <pre><code>{\n    ignoreCase: boolean, // Whether or not the query should match case sensitively or not.  Default behaviour is false.\n    deep: boolean   // Whether or not a fetch should do a deep search of items and all child\n                    // items instead of just root-level items in a datastore.  Default is false.\n}</code></pre> <h4>The <em>onBegin</em> parameter.</h4> <p>function(size, request); If an onBegin callback function is provided, the callback function will be called just once, before the first onItem callback is called. The onBegin callback function will be passed two arguments, the the total number of items identified and the Request object. If the total number is unknown, then size will be -1. Note that size is not necessarily the size of the collection of items returned from the query, as the request may have specified to return only a subset of the total set of items through the use of the start and count parameters. </p> <h4>The <em>onItem</em> parameter.</h4> <p>function(item, request); </p> <p>If an onItem callback function is provided, the callback function will be called as each item in the result is received. The callback function will be passed two arguments: the item itself, and the Request object. </p> <h4>The <em>onComplete</em> parameter.</h4> <p>function(items, request); </p> <p>If an onComplete callback function is provided, the callback function will be called just once, after the last onItem callback is called. Note that if the onItem callback is not present, then onComplete will be passed an array containing all items which matched the query and the request object. If the onItem callback is present, then onComplete is called as: onComplete(null, request). </p> <h4>The <em>onError</em> parameter.</h4> <p>function(errorData, request); </p> <p>If an onError callback function is provided, the callback function will be called if there is any sort of error while attempting to execute the query. The onError callback function will be passed two arguments: an Error object and the Request object. </p> <h4>The <em>scope</em> parameter.</h4> <p>If a scope object is provided, all of the callback functions (onItem, onComplete, onError, etc) will be invoked in the context of the scope object. In the body of the callback function, the value of the \"this\" keyword will be the scope object. If no scope object is provided, the callback functions will be called in the context of dojo.global(). For example, onItem.call(scope, item, request) vs. onItem.call(dojo.global(), item, request) </p> <h4>The <em>start</em> parameter.</h4> <p>If a start parameter is specified, this is a indication to the datastore to only start returning items once the start number of items have been located and skipped. When this parameter is paired with 'count', the store should be able to page across queries with millions of hits by only returning subsets of the hits for each query </p> <h4>The <em>count</em> parameter.</h4> <p>If a count parameter is specified, this is a indication to the datastore to only return up to that many items. This allows a fetch call that may have millions of item matches to be paired down to something reasonable. </p> <h4>The <em>sort</em> parameter.</h4> <p>If a sort parameter is specified, this is a indication to the datastore to sort the items in some manner before returning the items. The array is an array of javascript objects that must conform to the following format to be applied to the fetching of items: </p> <pre><code>{\n    attribute: attribute || attribute-name-string,\n    descending: true|false;   // Optional.  Default is false.\n}</code></pre> <p>Note that when comparing attributes, if an item contains no value for the attribute </p> <p>(undefined), then it the default ascending sort logic should push it to the bottom of the list. In the descending order case, it such items should appear at the top of the list.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any</span></p> <p>The fetch() method will return a javascript object conforming to the API defined in dojo/data/api/Request. In general, it will be the keywordArgs object returned with the required functions in Request.js attached. Its general purpose is to provide a convenient way for a caller to abort an ongoing fetch. </p> <p>The Request object may also have additional properties when it is returned such as request.store property, which is a pointer to the datastore object that fetch() is a method of.</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Fetch all books identified by the query and call 'showBooks' when complete </p> <pre><code>var request = store.fetch({query:\"all books\", onComplete: showBooks});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>Fetch all items in the story and call 'showEverything' when complete. </p> <pre><code>var request = store.fetch(onComplete: showEverything);</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<p>Fetch only 10 books that match the query 'all books', starting at the fifth book found during the search. This demonstrates how paging can be done for specific queries. </p> <pre><code>var request = store.fetch({query:\"all books\", start: 4, count: 10, onComplete: showBooks});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 4</h3>\n<p>Fetch all items that match the query, calling 'callback' each time an item is located. </p> <pre><code>var request = store.fetch({query:\"foo/bar\", onItem:callback});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 5</h3>\n<p>Fetch the first 100 books by author King, call showKing when up to 100 items have been located. </p> <pre><code>var request = store.fetch({query:{author:\"King\"}, start: 0, count:100, onComplete: showKing});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 6</h3>\n<p>Locate the books written by Author King, sort it on title and publisher, then return the first 100 items from the sorted items. </p> <pre><code>var request = store.fetch({query:{author:\"King\"}, sort: [{ attribute: \"title\", descending: true}, {attribute: \"publisher\"}], ,start: 0, count:100, onComplete: 'showKing'});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 7</h3>\n<p>Fetch the first 100 books by authors starting with the name King, then call showKing when up to 100 items have been located. </p> <pre><code>var request = store.fetch({query:{author:\"King*\"}, start: 0, count:100, onComplete: showKing});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 8</h3>\n<p>Fetch the first 100 books by authors ending with 'ing', but only have one character before it (King, Bing, Ling, Sing, etc.), then call showBooks when up to 100 items have been located. </p> <pre><code>var request = store.fetch({query:{author:\"?ing\"}, start: 0, count:100, onComplete: showBooks});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 9</h3>\n<p>Fetch the first 100 books by author King, where the name may appear as King, king, KING, kInG, and so on, then call showKing when up to 100 items have been located. </p> <pre><code>var request = store.fetch({query:{author:\"King\"}, queryOptions:(ignoreCase: true}, start: 0, count:100, onComplete: showKing});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 10</h3>\n<p>Paging </p> <pre><code>var store = new LargeRdbmsStore({url:\"jdbc:odbc:foobar\"});\nvar fetchArgs = {\n    query: {type:\"employees\", name:\"Hillary *\"}, // string matching\n    sort: [{attribute:\"department\", descending:true}],\n    start: 0,\n    count: 20,\n    scope: displayer,\n    onBegin: showThrobber,\n    onItem: displayItem,\n    onComplete: stopThrobber,\n    onError: handleFetchError,\n};\nstore.fetch(fetchArgs);\n...</code></pre> <p>and then when the user presses the \"Next Page\" button... </p> <pre><code>fetchArgs.start += 20;\nstore.fetch(fetchArgs);  // get the next 20 items</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_api_Identity_fetchItemByIdentity\">\n<span class=\"functionIcon\">fetchItemByIdentity</span><span class=\"parameters\">(keywordArgs)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"identity\" class=\"jsdoc-link\">dojo/data/api/Identity</a> </p> <p>Given the identity of an item, this method returns the item that has that identity through the onItem callback. Conforming implementations should return null if there is no item with the given identity. Implementations of fetchItemByIdentity() may sometimes return an item from a local cache and may sometimes fetch an item from a remote server,</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">keywordArgs</td> <td class=\"jsdoc-param-type\">object</td> <td class=\"jsdoc-param-description\">\n<p>An anonymous object that defines the item to locate and callbacks to invoke when the item has been located and load has completed. The format of the object is as follows: </p> <pre><code>{\n    identity: string|object,\n    onItem: Function,\n    onError: Function,\n    scope: object\n}</code></pre> <h4>The <em>identity</em> parameter</h4> <p>The identity parameter is the identity of the item you wish to locate and load This attribute is required. It should be a string or an object that toString() can be called on. </p> <h4>The <em>onItem</em> parameter</h4> <p>Function(item) The onItem parameter is the callback to invoke when the item has been loaded. It takes only one parameter, the item located, or null if none found. </p> <h4>The <em>onError</em> parameter</h4> <p>Function(error) The onError parameter is the callback to invoke when the item load encountered an error. It takes only one parameter, the error object </p> <h4>The <em>scope</em> parameter</h4> <p>If a scope object is provided, all of the callback functions (onItem, onError, etc) will be invoked in the context of the scope object. In the body of the callback function, the value of the \"this\" keyword will be the scope object. If no scope object is provided, the callback functions will be called in the context of dojo.global. For example, onItem.call(scope, item, request) vs. onItem.call(dojo.global, item, request)</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_api_Identity_getAttributes\">\n<span class=\"functionIcon\">getAttributes</span><span class=\"parameters\">(item)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"read\" class=\"jsdoc-link\">dojo/data/api/Read</a> </p> <p>Returns an array with all the attributes that this item has. This method will always return an array; if the item has no attributes at all, getAttributes() will return an empty array: [].</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"item\">dojo/data/api/Item</a></td> <td class=\"jsdoc-param-description\">\n<p>The item to access attributes on.</p> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>var array = store.getAttributes(kermit);</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_api_Identity_getFeatures\">\n<span class=\"functionIcon\">getFeatures</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"identity\" class=\"jsdoc-link\">dojo/data/api/Identity</a> </p> <p>See dojo/data/api/Read.getFeatures()</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">object</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_api_Identity_getIdentity\">\n<span class=\"functionIcon\">getIdentity</span><span class=\"parameters\">(item)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"identity\" class=\"jsdoc-link\">dojo/data/api/Identity</a> </p> <p>Returns a unique identifier for an item. The return value will be either a string or something that has a toString() method (such as, for example, a dojox/uuid object).</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"item\">dojo/data/api/Item</a></td> <td class=\"jsdoc-param-description\">\n<p>The item from the store from which to obtain its identifier.</p> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>var itemId = store.getIdentity(kermit);\nassert(kermit === store.findByIdentity(store.getIdentity(kermit)));</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_api_Identity_getIdentityAttributes\">\n<span class=\"functionIcon\">getIdentityAttributes</span><span class=\"parameters\">(item)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"identity\" class=\"jsdoc-link\">dojo/data/api/Identity</a> </p> <p>Returns an array of attribute names that are used to generate the identity. For most stores, this is a single attribute, but for some complex stores such as RDB backed stores that use compound (multi-attribute) identifiers it can be more than one. If the identity is not composed of attributes on the item, it will return null. This function is intended to identify the attributes that comprise the identity so that so that during a render of all attributes, the UI can hide the the identity information if it chooses.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"item\">dojo/data/api/Item</a></td> <td class=\"jsdoc-param-description\">\n<p>The item from the store from which to obtain the array of public attributes that compose the identifier, if any.</p> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>var itemId = store.getIdentity(kermit);\nvar identifiers = store.getIdentityAttributes(itemId);\nassert(typeof identifiers === \"array\" || identifiers === null);</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_api_Identity_getLabel\">\n<span class=\"functionIcon\">getLabel</span><span class=\"parameters\">(item)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"read\" class=\"jsdoc-link\">dojo/data/api/Read</a> </p> <p>Method to inspect the item and return a user-readable 'label' for the item that provides a general/adequate description of what the item is.</p>  <p>Method to inspect the item and return a user-readable 'label' for the item that provides a general/adequate description of what the item is. In general most labels will be a specific attribute value or collection of the attribute values that combine to label the item in some manner. For example for an item that represents a person it may return the label as: \"firstname lastlame\" where the firstname and lastname are attributes on the item. If the store is unable to determine an adequate human readable label, it should return undefined. Users that wish to customize how a store instance labels items should replace the getLabel() function on their instance of the store, or extend the store and replace the function in the extension class.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"item\">dojo/data/api/Item</a></td> <td class=\"jsdoc-param-description\">\n<p>The item to return the label for.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any</span></p> <p>A user-readable string representing the item or undefined if no user-readable label can be generated.</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_api_Identity_getLabelAttributes\">\n<span class=\"functionIcon\">getLabelAttributes</span><span class=\"parameters\">(item)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"read\" class=\"jsdoc-link\">dojo/data/api/Read</a> </p> <p>Method to inspect the item and return an array of what attributes of the item were used to generate its label, if any.</p>  <p>Method to inspect the item and return an array of what attributes of the item were used to generate its label, if any. This function is to assist UI developers in knowing what attributes can be ignored out of the attributes an item has when displaying it, in cases where the UI is using the label as an overall identifer should they wish to hide redundant information.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"item\">dojo/data/api/Item</a></td> <td class=\"jsdoc-param-description\">\n<p>The item to return the list of label attributes for.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any</span></p> <p>An array of attribute names that were used to generate the label, or null if public attributes were not used to generate the label.</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_api_Identity_getValue\">\n<span class=\"functionIcon\">getValue</span><span class=\"parameters\">(item,attribute,defaultValue)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"read\" class=\"jsdoc-link\">dojo/data/api/Read</a> </p> <p>Returns a single attribute value. Returns defaultValue if and only if <em>item</em> does not have a value for <em>attribute</em>. Returns null if and only if null was explicitly set as the attribute value. Returns undefined if and only if the item does not have a value for the given attribute (which is the same as saying the item does not have the attribute).</p>  <p>Saying that an \"item x does not have a value for an attribute y\" is identical to saying that an \"item x does not have attribute y\". It is an oxymoron to say \"that attribute is present but has no values\" or \"the item has that attribute but does not have any attribute values\". If store.hasAttribute(item, attribute) returns false, then store.getValue(item, attribute) will return undefined.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"item\">dojo/data/api/Item</a></td> <td class=\"jsdoc-param-description\">\n<p>The item to access values on.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">attribute</td> <td class=\"jsdoc-param-type\">attribute-name-string</td> <td class=\"jsdoc-param-description\">\n<p>The attribute to access represented as a string.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">defaultValue</td> <td class=\"jsdoc-param-type\">value</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Optional. A default value to use for the getValue return in the attribute does not exist or has no value.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any</span></p> <p>a literal, an item, null, or undefined (never an array)</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>var darthVader = store.getValue(lukeSkywalker, \"father\");</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_api_Identity_getValues\">\n<span class=\"functionIcon\">getValues</span><span class=\"parameters\">(item,attribute)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"read\" class=\"jsdoc-link\">dojo/data/api/Read</a> </p> <p>This getValues() method works just like the getValue() method, but getValues() always returns an array rather than a single attribute value. The array may be empty, may contain a single attribute value, or may contain many attribute values. If the item does not have a value for the given attribute, then getValues() will return an empty array: []. (So, if store.hasAttribute(item, attribute) has a return of false, then store.getValues(item, attribute) will return [].)</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"item\">dojo/data/api/Item</a></td> <td class=\"jsdoc-param-description\">\n<p>The item to access values on.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">attribute</td> <td class=\"jsdoc-param-type\">attribute-name-string</td> <td class=\"jsdoc-param-description\">\n<p>The attribute to access represented as a string.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any</span></p> <p>an array that may contain literals and items</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>var friendsOfLuke = store.getValues(lukeSkywalker, \"friends\");</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_api_Identity_hasAttribute\">\n<span class=\"functionIcon\">hasAttribute</span><span class=\"parameters\">(item,attribute)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"read\" class=\"jsdoc-link\">dojo/data/api/Read</a> </p> <p>Returns true if the given <em>item</em> has a value for the given <em>attribute</em>.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"item\">dojo/data/api/Item</a></td> <td class=\"jsdoc-param-description\">\n<p>The item to access attributes on.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">attribute</td> <td class=\"jsdoc-param-type\">attribute-name-string</td> <td class=\"jsdoc-param-description\">\n<p>The attribute to access represented as a string.</p> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>var trueOrFalse = store.hasAttribute(kermit, \"color\");</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_api_Identity_isItem\">\n<span class=\"functionIcon\">isItem</span><span class=\"parameters\">(something)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"read\" class=\"jsdoc-link\">dojo/data/api/Read</a> </p> <p>Returns true if <em>something</em> is an item and came from the store instance. Returns false if <em>something</em> is a literal, an item from another store instance, or is any object other than an item.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">something</td> <td class=\"jsdoc-param-type\">anything</td> <td class=\"jsdoc-param-description\">\n<p>Can be anything.</p> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>var yes = store.isItem(store.newItem());\nvar no  = store.isItem(\"green\");</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_api_Identity_isItemLoaded\">\n<span class=\"functionIcon\">isItemLoaded</span><span class=\"parameters\">(something)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"read\" class=\"jsdoc-link\">dojo/data/api/Read</a> </p> <p>Returns false if isItem(something) is false. Returns false if if isItem(something) is true but the the item is not yet loaded in local memory (for example, if the item has not yet been read from the server).</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">something</td> <td class=\"jsdoc-param-type\">anything</td> <td class=\"jsdoc-param-description\">\n<p>Can be anything.</p> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>var yes = store.isItemLoaded(store.newItem());\nvar no  = store.isItemLoaded(\"green\");</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_api_Identity_loadItem\">\n<span class=\"functionIcon\">loadItem</span><span class=\"parameters\">(keywordArgs)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"read\" class=\"jsdoc-link\">dojo/data/api/Read</a> </p> <p>Given an item, this method loads the item so that a subsequent call to store.isItemLoaded(item) will return true. If a call to isItemLoaded() returns true before loadItem() is even called, then loadItem() need not do any work at all and will not even invoke the callback handlers. So, before invoking this method, check that the item has not already been loaded.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">keywordArgs</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>An anonymous object that defines the item to load and callbacks to invoke when the load has completed. The format of the object is as follows: </p> <pre><code>{\n    item: object,\n    onItem: Function,\n    onError: Function,\n    scope: object\n}</code></pre> <h4>The <em>item</em> parameter</h4> <p>The item parameter is an object that represents the item in question that should be contained by the store. This attribute is required. </p> <h4>The <em>onItem</em> parameter</h4> <p>Function(item) The onItem parameter is the callback to invoke when the item has been loaded. It takes only one parameter, the fully loaded item. </p> <h4>The <em>onError</em> parameter</h4> <p>Function(error) The onError parameter is the callback to invoke when the item load encountered an error. It takes only one parameter, the error object </p> <h4>The <em>scope</em> parameter</h4> <p>If a scope object is provided, all of the callback functions (onItem, onError, etc) will be invoked in the context of the scope object. In the body of the callback function, the value of the \"this\" keyword will be the scope object. If no scope object is provided, the callback functions will be called in the context of dojo.global(). For example, onItem.call(scope, item, request) vs. onItem.call(dojo.global(), item, request)</p> </td> </tr> </table><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/data/api/Identity.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/data/api/Identity.html</a>\n  </p>\n</div>\n","dojo/data/api/notification":"<h1>dojo/data/api/Notification</h1> <div class=\"jsdoc-mixins\"> <label>Extends</label><a href=\"read\" class=\"jsdoc-link\">dojo/data/api/Read</a> </div>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>This is an abstract API that data provider implementations conform to. This file defines functions signatures and intentionally leaves all the functions unimplemented.</p>  <p>This API defines a set of APIs that all datastores that conform to the Notifications API must implement. In general, most stores will implement these APIs as no-op functions for users who wish to monitor them to be able to connect to then via dojo.connect(). For non-users of dojo.connect, they should be able to just replace the function on the store to obtain notifications. Both read-only and read-write stores may implement this feature. In the case of a read-only store, this feature makes sense if the store itself does internal polling to a back-end server and periodically updates its cache of items (deletes, adds, and updates).</p>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/data/api/Notification.html\" target=\"_blank\">dojo/data/api/Notification reference documentation</a> for more information.</p>    <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>function onSet(item, attribute, oldValue, newValue){\n    //Do something with the information...\n};\nvar store = new some.newStore();\ndojo.connect(store, \"onSet\", onSet);</code></pre> </div> </div>         <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_api_Notification_close\">\n<span class=\"functionIcon\">close</span><span class=\"parameters\">(request)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"read\" class=\"jsdoc-link\">dojo/data/api/Read</a> </p> <p>The close() method is intended for instructing the store to 'close' out any information associated with a particular request.</p>  <p>The close() method is intended for instructing the store to 'close' out any information associated with a particular request. In general, this API expects to receive as a parameter a request object returned from a fetch. It will then close out anything associated with that request, such as clearing any internal datastore caches and closing any 'open' connections. For some store implementations, this call may be a no-op.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">request</td> <td class=\"jsdoc-param-type\">\n<a class=\"jsdoc-link\" href=\"request\">dojo/data/api/Request</a> | Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>An instance of a request for the store to use to identify what to close out. If no request is passed, then the store should clear all internal caches (if any) and close out all 'open' connections. It does not render the store unusable from there on, it merely cleans out any current data and resets the store to initial state.</p> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>var request = store.fetch({onComplete: doSomething});\n...\nstore.close(request);</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_api_Notification_containsValue\">\n<span class=\"functionIcon\">containsValue</span><span class=\"parameters\">(item,attribute,value)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"read\" class=\"jsdoc-link\">dojo/data/api/Read</a> </p> <p>Returns true if the given <em>value</em> is one of the values that getValues() would return.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"item\">dojo/data/api/Item</a></td> <td class=\"jsdoc-param-description\">\n<p>The item to access values on.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">attribute</td> <td class=\"jsdoc-param-type\">attribute-name-string</td> <td class=\"jsdoc-param-description\">\n<p>The attribute to access represented as a string.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">value</td> <td class=\"jsdoc-param-type\">anything</td> <td class=\"jsdoc-param-description\">\n<p>The value to match as a value for the attribute.</p> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>var trueOrFalse = store.containsValue(kermit, \"color\", \"green\");</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_api_Notification_fetch\">\n<span class=\"functionIcon\">fetch</span><span class=\"parameters\">(keywordArgs)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"read\" class=\"jsdoc-link\">dojo/data/api/Read</a> </p> <p>Given a query and set of defined options, such as a start and count of items to return, this method executes the query and makes the results available as data items. The format and expectations of stores is that they operate in a generally asynchronous manner, therefore callbacks are always used to return items located by the fetch parameters.</p>  <p>A Request object will always be returned and is returned immediately. The basic request is nothing more than the keyword args passed to fetch and an additional function attached, abort(). The returned request object may then be used to cancel a fetch. All data items returns are passed through the callbacks defined in the fetch parameters and are not present on the 'request' object. </p> <p>This does not mean that custom stores can not add methods and properties to the request object returned, only that the API does not require it. For more info about the Request API, see <a class=\"jsdoc-link\" href=\"request\">dojo/data/api/Request</a></p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">keywordArgs</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>The keywordArgs parameter may either be an instance of conforming to dojo/data/api/Request or may be a simple anonymous object that may contain any of the following: </p> <pre><code>{\n    query: query-object or query-string,\n    queryOptions: object,\n    onBegin: Function,\n    onItem: Function,\n    onComplete: Function,\n    onError: Function,\n    scope: object,\n    start: int\n    count: int\n    sort: array\n}</code></pre> <p>All implementations should accept keywordArgs objects with any of </p> <p>the 9 standard properties: query, onBegin, onItem, onComplete, onError scope, sort, start, and count. Some implementations may accept additional properties in the keywordArgs object as valid parameters, such as {includeOutliers:true}. </p> <h4>The <em>query</em> parameter</h4> <p>The query may be optional in some data store implementations. The dojo/data/api/Read API does not specify the syntax or semantics of the query itself -- each different data store implementation may have its own notion of what a query should look like. However, as of dojo 0.9, 1.0, and 1.1, all the provided datastores in dojo.data and dojox.data support an object structure query, where the object is a set of name/value parameters such as { attrFoo: valueBar, attrFoo1: valueBar1}. Most of the dijit widgets, such as ComboBox assume this to be the case when working with a datastore when they dynamically update the query. Therefore, for maximum compatibility with dijit widgets the recommended query parameter is a key/value object. That does not mean that the the datastore may not take alternative query forms, such as a simple string, a Date, a number, or a mix of such. Ultimately, The dojo/data/api/Read API is agnostic about what the query format. </p> <p>Further note: In general for query objects that accept strings as attribute value matches, the store should also support basic filtering capability, such as <em> (match any character) and ? (match single character). An example query that is a query object would be like: { attrFoo: \"value</em>\"}. Which generally means match all items where they have an attribute named attrFoo, with a value that starts with 'value'. </p> <h4>The <em>queryOptions</em> parameter</h4> <p>The queryOptions parameter is an optional parameter used to specify options that may modify the query in some fashion, such as doing a case insensitive search, or doing a deep search where all items in a hierarchical representation of data are scanned instead of just the root items. It currently defines two options that all datastores should attempt to honor if possible: </p> <pre><code>{\n    ignoreCase: boolean, // Whether or not the query should match case sensitively or not.  Default behaviour is false.\n    deep: boolean   // Whether or not a fetch should do a deep search of items and all child\n                    // items instead of just root-level items in a datastore.  Default is false.\n}</code></pre> <h4>The <em>onBegin</em> parameter.</h4> <p>function(size, request); If an onBegin callback function is provided, the callback function will be called just once, before the first onItem callback is called. The onBegin callback function will be passed two arguments, the the total number of items identified and the Request object. If the total number is unknown, then size will be -1. Note that size is not necessarily the size of the collection of items returned from the query, as the request may have specified to return only a subset of the total set of items through the use of the start and count parameters. </p> <h4>The <em>onItem</em> parameter.</h4> <p>function(item, request); </p> <p>If an onItem callback function is provided, the callback function will be called as each item in the result is received. The callback function will be passed two arguments: the item itself, and the Request object. </p> <h4>The <em>onComplete</em> parameter.</h4> <p>function(items, request); </p> <p>If an onComplete callback function is provided, the callback function will be called just once, after the last onItem callback is called. Note that if the onItem callback is not present, then onComplete will be passed an array containing all items which matched the query and the request object. If the onItem callback is present, then onComplete is called as: onComplete(null, request). </p> <h4>The <em>onError</em> parameter.</h4> <p>function(errorData, request); </p> <p>If an onError callback function is provided, the callback function will be called if there is any sort of error while attempting to execute the query. The onError callback function will be passed two arguments: an Error object and the Request object. </p> <h4>The <em>scope</em> parameter.</h4> <p>If a scope object is provided, all of the callback functions (onItem, onComplete, onError, etc) will be invoked in the context of the scope object. In the body of the callback function, the value of the \"this\" keyword will be the scope object. If no scope object is provided, the callback functions will be called in the context of dojo.global(). For example, onItem.call(scope, item, request) vs. onItem.call(dojo.global(), item, request) </p> <h4>The <em>start</em> parameter.</h4> <p>If a start parameter is specified, this is a indication to the datastore to only start returning items once the start number of items have been located and skipped. When this parameter is paired with 'count', the store should be able to page across queries with millions of hits by only returning subsets of the hits for each query </p> <h4>The <em>count</em> parameter.</h4> <p>If a count parameter is specified, this is a indication to the datastore to only return up to that many items. This allows a fetch call that may have millions of item matches to be paired down to something reasonable. </p> <h4>The <em>sort</em> parameter.</h4> <p>If a sort parameter is specified, this is a indication to the datastore to sort the items in some manner before returning the items. The array is an array of javascript objects that must conform to the following format to be applied to the fetching of items: </p> <pre><code>{\n    attribute: attribute || attribute-name-string,\n    descending: true|false;   // Optional.  Default is false.\n}</code></pre> <p>Note that when comparing attributes, if an item contains no value for the attribute </p> <p>(undefined), then it the default ascending sort logic should push it to the bottom of the list. In the descending order case, it such items should appear at the top of the list.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any</span></p> <p>The fetch() method will return a javascript object conforming to the API defined in dojo/data/api/Request. In general, it will be the keywordArgs object returned with the required functions in Request.js attached. Its general purpose is to provide a convenient way for a caller to abort an ongoing fetch. </p> <p>The Request object may also have additional properties when it is returned such as request.store property, which is a pointer to the datastore object that fetch() is a method of.</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Fetch all books identified by the query and call 'showBooks' when complete </p> <pre><code>var request = store.fetch({query:\"all books\", onComplete: showBooks});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>Fetch all items in the story and call 'showEverything' when complete. </p> <pre><code>var request = store.fetch(onComplete: showEverything);</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<p>Fetch only 10 books that match the query 'all books', starting at the fifth book found during the search. This demonstrates how paging can be done for specific queries. </p> <pre><code>var request = store.fetch({query:\"all books\", start: 4, count: 10, onComplete: showBooks});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 4</h3>\n<p>Fetch all items that match the query, calling 'callback' each time an item is located. </p> <pre><code>var request = store.fetch({query:\"foo/bar\", onItem:callback});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 5</h3>\n<p>Fetch the first 100 books by author King, call showKing when up to 100 items have been located. </p> <pre><code>var request = store.fetch({query:{author:\"King\"}, start: 0, count:100, onComplete: showKing});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 6</h3>\n<p>Locate the books written by Author King, sort it on title and publisher, then return the first 100 items from the sorted items. </p> <pre><code>var request = store.fetch({query:{author:\"King\"}, sort: [{ attribute: \"title\", descending: true}, {attribute: \"publisher\"}], ,start: 0, count:100, onComplete: 'showKing'});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 7</h3>\n<p>Fetch the first 100 books by authors starting with the name King, then call showKing when up to 100 items have been located. </p> <pre><code>var request = store.fetch({query:{author:\"King*\"}, start: 0, count:100, onComplete: showKing});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 8</h3>\n<p>Fetch the first 100 books by authors ending with 'ing', but only have one character before it (King, Bing, Ling, Sing, etc.), then call showBooks when up to 100 items have been located. </p> <pre><code>var request = store.fetch({query:{author:\"?ing\"}, start: 0, count:100, onComplete: showBooks});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 9</h3>\n<p>Fetch the first 100 books by author King, where the name may appear as King, king, KING, kInG, and so on, then call showKing when up to 100 items have been located. </p> <pre><code>var request = store.fetch({query:{author:\"King\"}, queryOptions:(ignoreCase: true}, start: 0, count:100, onComplete: showKing});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 10</h3>\n<p>Paging </p> <pre><code>var store = new LargeRdbmsStore({url:\"jdbc:odbc:foobar\"});\nvar fetchArgs = {\n    query: {type:\"employees\", name:\"Hillary *\"}, // string matching\n    sort: [{attribute:\"department\", descending:true}],\n    start: 0,\n    count: 20,\n    scope: displayer,\n    onBegin: showThrobber,\n    onItem: displayItem,\n    onComplete: stopThrobber,\n    onError: handleFetchError,\n};\nstore.fetch(fetchArgs);\n...</code></pre> <p>and then when the user presses the \"Next Page\" button... </p> <pre><code>fetchArgs.start += 20;\nstore.fetch(fetchArgs);  // get the next 20 items</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_api_Notification_getAttributes\">\n<span class=\"functionIcon\">getAttributes</span><span class=\"parameters\">(item)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"read\" class=\"jsdoc-link\">dojo/data/api/Read</a> </p> <p>Returns an array with all the attributes that this item has. This method will always return an array; if the item has no attributes at all, getAttributes() will return an empty array: [].</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"item\">dojo/data/api/Item</a></td> <td class=\"jsdoc-param-description\">\n<p>The item to access attributes on.</p> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>var array = store.getAttributes(kermit);</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_api_Notification_getFeatures\">\n<span class=\"functionIcon\">getFeatures</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"notification\" class=\"jsdoc-link\">dojo/data/api/Notification</a> </p> <p>See dojo/data/api/Read.getFeatures()</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">object</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_api_Notification_getLabel\">\n<span class=\"functionIcon\">getLabel</span><span class=\"parameters\">(item)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"read\" class=\"jsdoc-link\">dojo/data/api/Read</a> </p> <p>Method to inspect the item and return a user-readable 'label' for the item that provides a general/adequate description of what the item is.</p>  <p>Method to inspect the item and return a user-readable 'label' for the item that provides a general/adequate description of what the item is. In general most labels will be a specific attribute value or collection of the attribute values that combine to label the item in some manner. For example for an item that represents a person it may return the label as: \"firstname lastlame\" where the firstname and lastname are attributes on the item. If the store is unable to determine an adequate human readable label, it should return undefined. Users that wish to customize how a store instance labels items should replace the getLabel() function on their instance of the store, or extend the store and replace the function in the extension class.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"item\">dojo/data/api/Item</a></td> <td class=\"jsdoc-param-description\">\n<p>The item to return the label for.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any</span></p> <p>A user-readable string representing the item or undefined if no user-readable label can be generated.</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_api_Notification_getLabelAttributes\">\n<span class=\"functionIcon\">getLabelAttributes</span><span class=\"parameters\">(item)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"read\" class=\"jsdoc-link\">dojo/data/api/Read</a> </p> <p>Method to inspect the item and return an array of what attributes of the item were used to generate its label, if any.</p>  <p>Method to inspect the item and return an array of what attributes of the item were used to generate its label, if any. This function is to assist UI developers in knowing what attributes can be ignored out of the attributes an item has when displaying it, in cases where the UI is using the label as an overall identifer should they wish to hide redundant information.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"item\">dojo/data/api/Item</a></td> <td class=\"jsdoc-param-description\">\n<p>The item to return the list of label attributes for.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any</span></p> <p>An array of attribute names that were used to generate the label, or null if public attributes were not used to generate the label.</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_api_Notification_getValue\">\n<span class=\"functionIcon\">getValue</span><span class=\"parameters\">(item,attribute,defaultValue)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"read\" class=\"jsdoc-link\">dojo/data/api/Read</a> </p> <p>Returns a single attribute value. Returns defaultValue if and only if <em>item</em> does not have a value for <em>attribute</em>. Returns null if and only if null was explicitly set as the attribute value. Returns undefined if and only if the item does not have a value for the given attribute (which is the same as saying the item does not have the attribute).</p>  <p>Saying that an \"item x does not have a value for an attribute y\" is identical to saying that an \"item x does not have attribute y\". It is an oxymoron to say \"that attribute is present but has no values\" or \"the item has that attribute but does not have any attribute values\". If store.hasAttribute(item, attribute) returns false, then store.getValue(item, attribute) will return undefined.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"item\">dojo/data/api/Item</a></td> <td class=\"jsdoc-param-description\">\n<p>The item to access values on.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">attribute</td> <td class=\"jsdoc-param-type\">attribute-name-string</td> <td class=\"jsdoc-param-description\">\n<p>The attribute to access represented as a string.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">defaultValue</td> <td class=\"jsdoc-param-type\">value</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Optional. A default value to use for the getValue return in the attribute does not exist or has no value.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any</span></p> <p>a literal, an item, null, or undefined (never an array)</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>var darthVader = store.getValue(lukeSkywalker, \"father\");</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_api_Notification_getValues\">\n<span class=\"functionIcon\">getValues</span><span class=\"parameters\">(item,attribute)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"read\" class=\"jsdoc-link\">dojo/data/api/Read</a> </p> <p>This getValues() method works just like the getValue() method, but getValues() always returns an array rather than a single attribute value. The array may be empty, may contain a single attribute value, or may contain many attribute values. If the item does not have a value for the given attribute, then getValues() will return an empty array: []. (So, if store.hasAttribute(item, attribute) has a return of false, then store.getValues(item, attribute) will return [].)</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"item\">dojo/data/api/Item</a></td> <td class=\"jsdoc-param-description\">\n<p>The item to access values on.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">attribute</td> <td class=\"jsdoc-param-type\">attribute-name-string</td> <td class=\"jsdoc-param-description\">\n<p>The attribute to access represented as a string.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any</span></p> <p>an array that may contain literals and items</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>var friendsOfLuke = store.getValues(lukeSkywalker, \"friends\");</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_api_Notification_hasAttribute\">\n<span class=\"functionIcon\">hasAttribute</span><span class=\"parameters\">(item,attribute)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"read\" class=\"jsdoc-link\">dojo/data/api/Read</a> </p> <p>Returns true if the given <em>item</em> has a value for the given <em>attribute</em>.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"item\">dojo/data/api/Item</a></td> <td class=\"jsdoc-param-description\">\n<p>The item to access attributes on.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">attribute</td> <td class=\"jsdoc-param-type\">attribute-name-string</td> <td class=\"jsdoc-param-description\">\n<p>The attribute to access represented as a string.</p> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>var trueOrFalse = store.hasAttribute(kermit, \"color\");</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_api_Notification_isItem\">\n<span class=\"functionIcon\">isItem</span><span class=\"parameters\">(something)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"read\" class=\"jsdoc-link\">dojo/data/api/Read</a> </p> <p>Returns true if <em>something</em> is an item and came from the store instance. Returns false if <em>something</em> is a literal, an item from another store instance, or is any object other than an item.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">something</td> <td class=\"jsdoc-param-type\">anything</td> <td class=\"jsdoc-param-description\">\n<p>Can be anything.</p> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>var yes = store.isItem(store.newItem());\nvar no  = store.isItem(\"green\");</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_api_Notification_isItemLoaded\">\n<span class=\"functionIcon\">isItemLoaded</span><span class=\"parameters\">(something)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"read\" class=\"jsdoc-link\">dojo/data/api/Read</a> </p> <p>Returns false if isItem(something) is false. Returns false if if isItem(something) is true but the the item is not yet loaded in local memory (for example, if the item has not yet been read from the server).</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">something</td> <td class=\"jsdoc-param-type\">anything</td> <td class=\"jsdoc-param-description\">\n<p>Can be anything.</p> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>var yes = store.isItemLoaded(store.newItem());\nvar no  = store.isItemLoaded(\"green\");</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_api_Notification_loadItem\">\n<span class=\"functionIcon\">loadItem</span><span class=\"parameters\">(keywordArgs)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"read\" class=\"jsdoc-link\">dojo/data/api/Read</a> </p> <p>Given an item, this method loads the item so that a subsequent call to store.isItemLoaded(item) will return true. If a call to isItemLoaded() returns true before loadItem() is even called, then loadItem() need not do any work at all and will not even invoke the callback handlers. So, before invoking this method, check that the item has not already been loaded.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">keywordArgs</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>An anonymous object that defines the item to load and callbacks to invoke when the load has completed. The format of the object is as follows: </p> <pre><code>{\n    item: object,\n    onItem: Function,\n    onError: Function,\n    scope: object\n}</code></pre> <h4>The <em>item</em> parameter</h4> <p>The item parameter is an object that represents the item in question that should be contained by the store. This attribute is required. </p> <h4>The <em>onItem</em> parameter</h4> <p>Function(item) The onItem parameter is the callback to invoke when the item has been loaded. It takes only one parameter, the fully loaded item. </p> <h4>The <em>onError</em> parameter</h4> <p>Function(error) The onError parameter is the callback to invoke when the item load encountered an error. It takes only one parameter, the error object </p> <h4>The <em>scope</em> parameter</h4> <p>If a scope object is provided, all of the callback functions (onItem, onError, etc) will be invoked in the context of the scope object. In the body of the callback function, the value of the \"this\" keyword will be the scope object. If no scope object is provided, the callback functions will be called in the context of dojo.global(). For example, onItem.call(scope, item, request) vs. onItem.call(dojo.global(), item, request)</p> </td> </tr> </table>    <h2 id=\"events\">Events</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_api_Notification_onDelete\">\n<span class=\"functionIcon\">onDelete</span><span class=\"parameters\">(deletedItem)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"notification\" class=\"jsdoc-link\">dojo/data/api/Notification</a> </p> <p>This function is called any time an item is deleted from the store. It is called immediately after the store deleteItem processing has completed.</p>  <p>This function is called any time an item is deleted from the store. It is called immediately after the store deleteItem processing has completed.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">deletedItem</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"item\">dojo/data/api/Item</a></td> <td class=\"jsdoc-param-description\">\n<p>The item deleted.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any</span></p> <p>Nothing.</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>var yes = store.isItemLoaded(store.newItem());\nvar no  = store.isItemLoaded(\"green\");</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_api_Notification_onNew\">\n<span class=\"functionIcon\">onNew</span><span class=\"parameters\">(newItem,parentInfo)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"notification\" class=\"jsdoc-link\">dojo/data/api/Notification</a> </p> <p>This function is called any time a new item is created in the store. It is called immediately after the store newItem processing has completed.</p>  <p>This function is called any time a new item is created in the store. It is called immediately after the store newItem processing has completed.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">newItem</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"item\">dojo/data/api/Item</a></td> <td class=\"jsdoc-param-description\">\n<p>The item created.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">parentInfo</td> <td class=\"jsdoc-param-type\">object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>An optional javascript object that is passed when the item created was placed in the store hierarchy as a value f another item's attribute, instead of a root level item. Note that if this function is invoked with a value for parentInfo, then onSet is not invoked stating the attribute of the parent item was modified. This is to avoid getting two notification events occurring when a new item with a parent is created. The structure passed in is as follows: </p> <pre><code>{\n    item: someItem,                         //The parent item\n    attribute:  \"attribute-name-string\",    //The attribute the new item was assigned to.\n    oldValue: something //Whatever was the previous value for the attribute.\n                //If it is a single-value attribute only, then this value will be a single value.\n                //If it was a multi-valued attribute, then this will be an array of all the values minus the new one.\n    newValue: something //The new value of the attribute.  In the case of single value calls, such as setValue, this value will be\n                //generally be an atomic value of some sort (string, int, etc, object).  In the case of multi-valued attributes,\n                //it will be an array.\n}</code></pre> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any</span></p> <p>Nothing.</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>var yes = store.isItemLoaded(store.newItem());\nvar no  = store.isItemLoaded(\"green\");</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_api_Notification_onSet\">\n<span class=\"functionIcon\">onSet</span><span class=\"parameters\">(item,attribute,oldValue,newValue)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"notification\" class=\"jsdoc-link\">dojo/data/api/Notification</a> </p> <p>This function is called any time an item is modified via setValue, setValues, unsetAttribute, etc.</p>  <p>This function is called any time an item is modified via setValue, setValues, unsetAttribute, etc. Its purpose is to provide a hook point for those who wish to monitor actions on items in the store in a simple manner. The general expected usage is to dojo.connect() to the store's implementation and be called after the store function is called.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"item\">dojo/data/api/Item</a></td> <td class=\"jsdoc-param-description\">\n<p>The item being modified.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">attribute</td> <td class=\"jsdoc-param-type\">attribute-name-string</td> <td class=\"jsdoc-param-description\">\n<p>The attribute being changed represented as a string name.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">oldValue</td> <td class=\"jsdoc-param-type\">object | array</td> <td class=\"jsdoc-param-description\">\n<p>The old value of the attribute. In the case of single value calls, such as setValue, unsetAttribute, etc, this value will be generally be an atomic value of some sort (string, int, etc, object). In the case of multi-valued attributes, it will be an array.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">newValue</td> <td class=\"jsdoc-param-type\">object | array</td> <td class=\"jsdoc-param-description\">\n<p>The new value of the attribute. In the case of single value calls, such as setValue, this value will be generally be an atomic value of some sort (string, int, etc, object). In the case of multi-valued attributes, it will be an array. In the case of unsetAttribute, the new value will be 'undefined'.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any</span></p> <p>Nothing.</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>var yes = store.isItemLoaded(store.newItem());\nvar no  = store.isItemLoaded(\"green\");</code></pre> </div> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/data/api/Notification.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/data/api/Notification.html</a>\n  </p>\n</div>\n","dojo/data/api/write":"<h1>dojo/data/api/Write</h1> <div class=\"jsdoc-mixins\"> <label>Extends</label><a href=\"read\" class=\"jsdoc-link\">dojo/data/api/Read</a> </div>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>This is an abstract API that data provider implementations conform to. This file defines function signatures and intentionally leaves all the functions unimplemented.</p>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/data/api/Write.html\" target=\"_blank\">dojo/data/api/Write reference documentation</a> for more information.</p>          <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_api_Write_close\">\n<span class=\"functionIcon\">close</span><span class=\"parameters\">(request)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"read\" class=\"jsdoc-link\">dojo/data/api/Read</a> </p> <p>The close() method is intended for instructing the store to 'close' out any information associated with a particular request.</p>  <p>The close() method is intended for instructing the store to 'close' out any information associated with a particular request. In general, this API expects to receive as a parameter a request object returned from a fetch. It will then close out anything associated with that request, such as clearing any internal datastore caches and closing any 'open' connections. For some store implementations, this call may be a no-op.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">request</td> <td class=\"jsdoc-param-type\">\n<a class=\"jsdoc-link\" href=\"request\">dojo/data/api/Request</a> | Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>An instance of a request for the store to use to identify what to close out. If no request is passed, then the store should clear all internal caches (if any) and close out all 'open' connections. It does not render the store unusable from there on, it merely cleans out any current data and resets the store to initial state.</p> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>var request = store.fetch({onComplete: doSomething});\n...\nstore.close(request);</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_api_Write_containsValue\">\n<span class=\"functionIcon\">containsValue</span><span class=\"parameters\">(item,attribute,value)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"read\" class=\"jsdoc-link\">dojo/data/api/Read</a> </p> <p>Returns true if the given <em>value</em> is one of the values that getValues() would return.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"item\">dojo/data/api/Item</a></td> <td class=\"jsdoc-param-description\">\n<p>The item to access values on.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">attribute</td> <td class=\"jsdoc-param-type\">attribute-name-string</td> <td class=\"jsdoc-param-description\">\n<p>The attribute to access represented as a string.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">value</td> <td class=\"jsdoc-param-type\">anything</td> <td class=\"jsdoc-param-description\">\n<p>The value to match as a value for the attribute.</p> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>var trueOrFalse = store.containsValue(kermit, \"color\", \"green\");</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_api_Write_deleteItem\">\n<span class=\"functionIcon\">deleteItem</span><span class=\"parameters\">(item)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"write\" class=\"jsdoc-link\">dojo/data/api/Write</a> </p> <p>Deletes an item from the store.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"item\">dojo/data/api/Item</a></td> <td class=\"jsdoc-param-description\">\n<p>The item to delete.</p> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>var success = store.deleteItem(kermit);</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_api_Write_fetch\">\n<span class=\"functionIcon\">fetch</span><span class=\"parameters\">(keywordArgs)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"read\" class=\"jsdoc-link\">dojo/data/api/Read</a> </p> <p>Given a query and set of defined options, such as a start and count of items to return, this method executes the query and makes the results available as data items. The format and expectations of stores is that they operate in a generally asynchronous manner, therefore callbacks are always used to return items located by the fetch parameters.</p>  <p>A Request object will always be returned and is returned immediately. The basic request is nothing more than the keyword args passed to fetch and an additional function attached, abort(). The returned request object may then be used to cancel a fetch. All data items returns are passed through the callbacks defined in the fetch parameters and are not present on the 'request' object. </p> <p>This does not mean that custom stores can not add methods and properties to the request object returned, only that the API does not require it. For more info about the Request API, see <a class=\"jsdoc-link\" href=\"request\">dojo/data/api/Request</a></p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">keywordArgs</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>The keywordArgs parameter may either be an instance of conforming to dojo/data/api/Request or may be a simple anonymous object that may contain any of the following: </p> <pre><code>{\n    query: query-object or query-string,\n    queryOptions: object,\n    onBegin: Function,\n    onItem: Function,\n    onComplete: Function,\n    onError: Function,\n    scope: object,\n    start: int\n    count: int\n    sort: array\n}</code></pre> <p>All implementations should accept keywordArgs objects with any of </p> <p>the 9 standard properties: query, onBegin, onItem, onComplete, onError scope, sort, start, and count. Some implementations may accept additional properties in the keywordArgs object as valid parameters, such as {includeOutliers:true}. </p> <h4>The <em>query</em> parameter</h4> <p>The query may be optional in some data store implementations. The dojo/data/api/Read API does not specify the syntax or semantics of the query itself -- each different data store implementation may have its own notion of what a query should look like. However, as of dojo 0.9, 1.0, and 1.1, all the provided datastores in dojo.data and dojox.data support an object structure query, where the object is a set of name/value parameters such as { attrFoo: valueBar, attrFoo1: valueBar1}. Most of the dijit widgets, such as ComboBox assume this to be the case when working with a datastore when they dynamically update the query. Therefore, for maximum compatibility with dijit widgets the recommended query parameter is a key/value object. That does not mean that the the datastore may not take alternative query forms, such as a simple string, a Date, a number, or a mix of such. Ultimately, The dojo/data/api/Read API is agnostic about what the query format. </p> <p>Further note: In general for query objects that accept strings as attribute value matches, the store should also support basic filtering capability, such as <em> (match any character) and ? (match single character). An example query that is a query object would be like: { attrFoo: \"value</em>\"}. Which generally means match all items where they have an attribute named attrFoo, with a value that starts with 'value'. </p> <h4>The <em>queryOptions</em> parameter</h4> <p>The queryOptions parameter is an optional parameter used to specify options that may modify the query in some fashion, such as doing a case insensitive search, or doing a deep search where all items in a hierarchical representation of data are scanned instead of just the root items. It currently defines two options that all datastores should attempt to honor if possible: </p> <pre><code>{\n    ignoreCase: boolean, // Whether or not the query should match case sensitively or not.  Default behaviour is false.\n    deep: boolean   // Whether or not a fetch should do a deep search of items and all child\n                    // items instead of just root-level items in a datastore.  Default is false.\n}</code></pre> <h4>The <em>onBegin</em> parameter.</h4> <p>function(size, request); If an onBegin callback function is provided, the callback function will be called just once, before the first onItem callback is called. The onBegin callback function will be passed two arguments, the the total number of items identified and the Request object. If the total number is unknown, then size will be -1. Note that size is not necessarily the size of the collection of items returned from the query, as the request may have specified to return only a subset of the total set of items through the use of the start and count parameters. </p> <h4>The <em>onItem</em> parameter.</h4> <p>function(item, request); </p> <p>If an onItem callback function is provided, the callback function will be called as each item in the result is received. The callback function will be passed two arguments: the item itself, and the Request object. </p> <h4>The <em>onComplete</em> parameter.</h4> <p>function(items, request); </p> <p>If an onComplete callback function is provided, the callback function will be called just once, after the last onItem callback is called. Note that if the onItem callback is not present, then onComplete will be passed an array containing all items which matched the query and the request object. If the onItem callback is present, then onComplete is called as: onComplete(null, request). </p> <h4>The <em>onError</em> parameter.</h4> <p>function(errorData, request); </p> <p>If an onError callback function is provided, the callback function will be called if there is any sort of error while attempting to execute the query. The onError callback function will be passed two arguments: an Error object and the Request object. </p> <h4>The <em>scope</em> parameter.</h4> <p>If a scope object is provided, all of the callback functions (onItem, onComplete, onError, etc) will be invoked in the context of the scope object. In the body of the callback function, the value of the \"this\" keyword will be the scope object. If no scope object is provided, the callback functions will be called in the context of dojo.global(). For example, onItem.call(scope, item, request) vs. onItem.call(dojo.global(), item, request) </p> <h4>The <em>start</em> parameter.</h4> <p>If a start parameter is specified, this is a indication to the datastore to only start returning items once the start number of items have been located and skipped. When this parameter is paired with 'count', the store should be able to page across queries with millions of hits by only returning subsets of the hits for each query </p> <h4>The <em>count</em> parameter.</h4> <p>If a count parameter is specified, this is a indication to the datastore to only return up to that many items. This allows a fetch call that may have millions of item matches to be paired down to something reasonable. </p> <h4>The <em>sort</em> parameter.</h4> <p>If a sort parameter is specified, this is a indication to the datastore to sort the items in some manner before returning the items. The array is an array of javascript objects that must conform to the following format to be applied to the fetching of items: </p> <pre><code>{\n    attribute: attribute || attribute-name-string,\n    descending: true|false;   // Optional.  Default is false.\n}</code></pre> <p>Note that when comparing attributes, if an item contains no value for the attribute </p> <p>(undefined), then it the default ascending sort logic should push it to the bottom of the list. In the descending order case, it such items should appear at the top of the list.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any</span></p> <p>The fetch() method will return a javascript object conforming to the API defined in dojo/data/api/Request. In general, it will be the keywordArgs object returned with the required functions in Request.js attached. Its general purpose is to provide a convenient way for a caller to abort an ongoing fetch. </p> <p>The Request object may also have additional properties when it is returned such as request.store property, which is a pointer to the datastore object that fetch() is a method of.</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Fetch all books identified by the query and call 'showBooks' when complete </p> <pre><code>var request = store.fetch({query:\"all books\", onComplete: showBooks});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>Fetch all items in the story and call 'showEverything' when complete. </p> <pre><code>var request = store.fetch(onComplete: showEverything);</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<p>Fetch only 10 books that match the query 'all books', starting at the fifth book found during the search. This demonstrates how paging can be done for specific queries. </p> <pre><code>var request = store.fetch({query:\"all books\", start: 4, count: 10, onComplete: showBooks});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 4</h3>\n<p>Fetch all items that match the query, calling 'callback' each time an item is located. </p> <pre><code>var request = store.fetch({query:\"foo/bar\", onItem:callback});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 5</h3>\n<p>Fetch the first 100 books by author King, call showKing when up to 100 items have been located. </p> <pre><code>var request = store.fetch({query:{author:\"King\"}, start: 0, count:100, onComplete: showKing});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 6</h3>\n<p>Locate the books written by Author King, sort it on title and publisher, then return the first 100 items from the sorted items. </p> <pre><code>var request = store.fetch({query:{author:\"King\"}, sort: [{ attribute: \"title\", descending: true}, {attribute: \"publisher\"}], ,start: 0, count:100, onComplete: 'showKing'});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 7</h3>\n<p>Fetch the first 100 books by authors starting with the name King, then call showKing when up to 100 items have been located. </p> <pre><code>var request = store.fetch({query:{author:\"King*\"}, start: 0, count:100, onComplete: showKing});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 8</h3>\n<p>Fetch the first 100 books by authors ending with 'ing', but only have one character before it (King, Bing, Ling, Sing, etc.), then call showBooks when up to 100 items have been located. </p> <pre><code>var request = store.fetch({query:{author:\"?ing\"}, start: 0, count:100, onComplete: showBooks});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 9</h3>\n<p>Fetch the first 100 books by author King, where the name may appear as King, king, KING, kInG, and so on, then call showKing when up to 100 items have been located. </p> <pre><code>var request = store.fetch({query:{author:\"King\"}, queryOptions:(ignoreCase: true}, start: 0, count:100, onComplete: showKing});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 10</h3>\n<p>Paging </p> <pre><code>var store = new LargeRdbmsStore({url:\"jdbc:odbc:foobar\"});\nvar fetchArgs = {\n    query: {type:\"employees\", name:\"Hillary *\"}, // string matching\n    sort: [{attribute:\"department\", descending:true}],\n    start: 0,\n    count: 20,\n    scope: displayer,\n    onBegin: showThrobber,\n    onItem: displayItem,\n    onComplete: stopThrobber,\n    onError: handleFetchError,\n};\nstore.fetch(fetchArgs);\n...</code></pre> <p>and then when the user presses the \"Next Page\" button... </p> <pre><code>fetchArgs.start += 20;\nstore.fetch(fetchArgs);  // get the next 20 items</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_api_Write_getAttributes\">\n<span class=\"functionIcon\">getAttributes</span><span class=\"parameters\">(item)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"read\" class=\"jsdoc-link\">dojo/data/api/Read</a> </p> <p>Returns an array with all the attributes that this item has. This method will always return an array; if the item has no attributes at all, getAttributes() will return an empty array: [].</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"item\">dojo/data/api/Item</a></td> <td class=\"jsdoc-param-description\">\n<p>The item to access attributes on.</p> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>var array = store.getAttributes(kermit);</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_api_Write_getFeatures\">\n<span class=\"functionIcon\">getFeatures</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"write\" class=\"jsdoc-link\">dojo/data/api/Write</a> </p> <p>See dojo/data/api/Read.getFeatures()</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">object</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_api_Write_getLabel\">\n<span class=\"functionIcon\">getLabel</span><span class=\"parameters\">(item)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"read\" class=\"jsdoc-link\">dojo/data/api/Read</a> </p> <p>Method to inspect the item and return a user-readable 'label' for the item that provides a general/adequate description of what the item is.</p>  <p>Method to inspect the item and return a user-readable 'label' for the item that provides a general/adequate description of what the item is. In general most labels will be a specific attribute value or collection of the attribute values that combine to label the item in some manner. For example for an item that represents a person it may return the label as: \"firstname lastlame\" where the firstname and lastname are attributes on the item. If the store is unable to determine an adequate human readable label, it should return undefined. Users that wish to customize how a store instance labels items should replace the getLabel() function on their instance of the store, or extend the store and replace the function in the extension class.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"item\">dojo/data/api/Item</a></td> <td class=\"jsdoc-param-description\">\n<p>The item to return the label for.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any</span></p> <p>A user-readable string representing the item or undefined if no user-readable label can be generated.</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_api_Write_getLabelAttributes\">\n<span class=\"functionIcon\">getLabelAttributes</span><span class=\"parameters\">(item)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"read\" class=\"jsdoc-link\">dojo/data/api/Read</a> </p> <p>Method to inspect the item and return an array of what attributes of the item were used to generate its label, if any.</p>  <p>Method to inspect the item and return an array of what attributes of the item were used to generate its label, if any. This function is to assist UI developers in knowing what attributes can be ignored out of the attributes an item has when displaying it, in cases where the UI is using the label as an overall identifer should they wish to hide redundant information.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"item\">dojo/data/api/Item</a></td> <td class=\"jsdoc-param-description\">\n<p>The item to return the list of label attributes for.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any</span></p> <p>An array of attribute names that were used to generate the label, or null if public attributes were not used to generate the label.</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_api_Write_getValue\">\n<span class=\"functionIcon\">getValue</span><span class=\"parameters\">(item,attribute,defaultValue)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"read\" class=\"jsdoc-link\">dojo/data/api/Read</a> </p> <p>Returns a single attribute value. Returns defaultValue if and only if <em>item</em> does not have a value for <em>attribute</em>. Returns null if and only if null was explicitly set as the attribute value. Returns undefined if and only if the item does not have a value for the given attribute (which is the same as saying the item does not have the attribute).</p>  <p>Saying that an \"item x does not have a value for an attribute y\" is identical to saying that an \"item x does not have attribute y\". It is an oxymoron to say \"that attribute is present but has no values\" or \"the item has that attribute but does not have any attribute values\". If store.hasAttribute(item, attribute) returns false, then store.getValue(item, attribute) will return undefined.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"item\">dojo/data/api/Item</a></td> <td class=\"jsdoc-param-description\">\n<p>The item to access values on.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">attribute</td> <td class=\"jsdoc-param-type\">attribute-name-string</td> <td class=\"jsdoc-param-description\">\n<p>The attribute to access represented as a string.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">defaultValue</td> <td class=\"jsdoc-param-type\">value</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Optional. A default value to use for the getValue return in the attribute does not exist or has no value.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any</span></p> <p>a literal, an item, null, or undefined (never an array)</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>var darthVader = store.getValue(lukeSkywalker, \"father\");</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_api_Write_getValues\">\n<span class=\"functionIcon\">getValues</span><span class=\"parameters\">(item,attribute)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"read\" class=\"jsdoc-link\">dojo/data/api/Read</a> </p> <p>This getValues() method works just like the getValue() method, but getValues() always returns an array rather than a single attribute value. The array may be empty, may contain a single attribute value, or may contain many attribute values. If the item does not have a value for the given attribute, then getValues() will return an empty array: []. (So, if store.hasAttribute(item, attribute) has a return of false, then store.getValues(item, attribute) will return [].)</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"item\">dojo/data/api/Item</a></td> <td class=\"jsdoc-param-description\">\n<p>The item to access values on.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">attribute</td> <td class=\"jsdoc-param-type\">attribute-name-string</td> <td class=\"jsdoc-param-description\">\n<p>The attribute to access represented as a string.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any</span></p> <p>an array that may contain literals and items</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>var friendsOfLuke = store.getValues(lukeSkywalker, \"friends\");</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_api_Write_hasAttribute\">\n<span class=\"functionIcon\">hasAttribute</span><span class=\"parameters\">(item,attribute)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"read\" class=\"jsdoc-link\">dojo/data/api/Read</a> </p> <p>Returns true if the given <em>item</em> has a value for the given <em>attribute</em>.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"item\">dojo/data/api/Item</a></td> <td class=\"jsdoc-param-description\">\n<p>The item to access attributes on.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">attribute</td> <td class=\"jsdoc-param-type\">attribute-name-string</td> <td class=\"jsdoc-param-description\">\n<p>The attribute to access represented as a string.</p> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>var trueOrFalse = store.hasAttribute(kermit, \"color\");</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_api_Write_isDirty\">\n<span class=\"functionIcon\">isDirty</span><span class=\"parameters\">(item)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"write\" class=\"jsdoc-link\">dojo/data/api/Write</a> </p> <p>Given an item, isDirty() returns true if the item has been modified since the last save(). If isDirty() is called with no <em>item</em> argument, then this function returns true if any item has been modified since the last save().</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\">item</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>The item to check.</p> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>var trueOrFalse = store.isDirty(kermit); // true if kermit is dirty\nvar trueOrFalse = store.isDirty();       // true if any item is dirty</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_api_Write_isItem\">\n<span class=\"functionIcon\">isItem</span><span class=\"parameters\">(something)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"read\" class=\"jsdoc-link\">dojo/data/api/Read</a> </p> <p>Returns true if <em>something</em> is an item and came from the store instance. Returns false if <em>something</em> is a literal, an item from another store instance, or is any object other than an item.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">something</td> <td class=\"jsdoc-param-type\">anything</td> <td class=\"jsdoc-param-description\">\n<p>Can be anything.</p> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>var yes = store.isItem(store.newItem());\nvar no  = store.isItem(\"green\");</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_api_Write_isItemLoaded\">\n<span class=\"functionIcon\">isItemLoaded</span><span class=\"parameters\">(something)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"read\" class=\"jsdoc-link\">dojo/data/api/Read</a> </p> <p>Returns false if isItem(something) is false. Returns false if if isItem(something) is true but the the item is not yet loaded in local memory (for example, if the item has not yet been read from the server).</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">something</td> <td class=\"jsdoc-param-type\">anything</td> <td class=\"jsdoc-param-description\">\n<p>Can be anything.</p> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>var yes = store.isItemLoaded(store.newItem());\nvar no  = store.isItemLoaded(\"green\");</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_api_Write_loadItem\">\n<span class=\"functionIcon\">loadItem</span><span class=\"parameters\">(keywordArgs)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"read\" class=\"jsdoc-link\">dojo/data/api/Read</a> </p> <p>Given an item, this method loads the item so that a subsequent call to store.isItemLoaded(item) will return true. If a call to isItemLoaded() returns true before loadItem() is even called, then loadItem() need not do any work at all and will not even invoke the callback handlers. So, before invoking this method, check that the item has not already been loaded.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">keywordArgs</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>An anonymous object that defines the item to load and callbacks to invoke when the load has completed. The format of the object is as follows: </p> <pre><code>{\n    item: object,\n    onItem: Function,\n    onError: Function,\n    scope: object\n}</code></pre> <h4>The <em>item</em> parameter</h4> <p>The item parameter is an object that represents the item in question that should be contained by the store. This attribute is required. </p> <h4>The <em>onItem</em> parameter</h4> <p>Function(item) The onItem parameter is the callback to invoke when the item has been loaded. It takes only one parameter, the fully loaded item. </p> <h4>The <em>onError</em> parameter</h4> <p>Function(error) The onError parameter is the callback to invoke when the item load encountered an error. It takes only one parameter, the error object </p> <h4>The <em>scope</em> parameter</h4> <p>If a scope object is provided, all of the callback functions (onItem, onError, etc) will be invoked in the context of the scope object. In the body of the callback function, the value of the \"this\" keyword will be the scope object. If no scope object is provided, the callback functions will be called in the context of dojo.global(). For example, onItem.call(scope, item, request) vs. onItem.call(dojo.global(), item, request)</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_api_Write_newItem\">\n<span class=\"functionIcon\">newItem</span><span class=\"parameters\">(keywordArgs,parentInfo)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"write\" class=\"jsdoc-link\">dojo/data/api/Write</a> </p> <p>Returns a newly created item. Sets the attributes of the new item based on the <em>keywordArgs</em> provided. In general, the attribute names in the keywords become the attributes in the new item and as for the attribute values in keywordArgs, they become the values of the attributes in the new item. In addition, for stores that support hierarchical item creation, an optional second parameter is accepted that defines what item is the parent of the new item and what attribute of that item should the new item be assigned to. In general, this will assume that the attribute targeted is multi-valued and a new item is appended onto the list of values for that attribute.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">keywordArgs</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>A javascript object defining the initial content of the item as a set of JavaScript 'property name: value' pairs.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">parentInfo</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>An optional javascript object defining what item is the parent of this item (in a hierarchical store. Not all stores do hierarchical items), and what attribute of that parent to assign the new item to. If this is present, and the attribute specified is a multi-valued attribute, it will append this item into the array of values for that attribute. The structure of the object is as follows: </p> <pre><code>{\n    parent: someItem,\n    attribute: \"attribute-name-string\"\n}</code></pre> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>var kermit = store.newItem({name: \"Kermit\", color:[blue, green]});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_api_Write_revert\">\n<span class=\"functionIcon\">revert</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"write\" class=\"jsdoc-link\">dojo/data/api/Write</a> </p> <p>Discards any unsaved changes.</p>  <p>Discards any unsaved changes.</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>var success = store.revert();</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_api_Write_save\">\n<span class=\"functionIcon\">save</span><span class=\"parameters\">(keywordArgs)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"write\" class=\"jsdoc-link\">dojo/data/api/Write</a> </p> <p>Saves to the server all the changes that have been made locally. The save operation may take some time and is generally performed in an asynchronous fashion. The outcome of the save action is is passed into the set of supported callbacks for the save.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">keywordArgs</td> <td class=\"jsdoc-param-type\">object</td> <td class=\"jsdoc-param-description\">\n<pre><code>{\n    onComplete: function\n    onError: function\n    scope: object\n}\n\n ####The *onComplete* parameter.\n\n function();\n\n If an onComplete callback function is provided, the callback function\n will be called just once, after the save has completed.  No parameters\n are generally passed to the onComplete.\n\n ####The *onError* parameter.\n\n function(errorData);\n\n If an onError callback function is provided, the callback function\n will be called if there is any sort of error while attempting to\n execute the save.  The onError function will be based one parameter, the\n error.\n\n ####The *scope* parameter.\n\n If a scope object is provided, all of the callback function (\n onComplete, onError, etc) will be invoked in the context of the scope\n object.  In the body of the callback function, the value of the \"this\"\n keyword will be the scope object.   If no scope object is provided,\n the callback functions will be called in the context of dojo.global.\n For example, onComplete.call(scope) vs.\n onComplete.call(dojo.global)</code></pre> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any</span></p> <p>Nothing. Since the saves are generally asynchronous, there is no need to return anything. All results are passed via callbacks.</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>store.save({onComplete: onSave});\nstore.save({scope: fooObj, onComplete: onSave, onError: saveFailed});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_api_Write_setValue\">\n<span class=\"functionIcon\">setValue</span><span class=\"parameters\">(item,attribute,value)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"write\" class=\"jsdoc-link\">dojo/data/api/Write</a> </p> <p>Sets the value of an attribute on an item. Replaces any previous value or values.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"item\">dojo/data/api/Item</a></td> <td class=\"jsdoc-param-description\">\n<p>The item to modify.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">attribute</td> <td class=\"jsdoc-param-type\">string</td> <td class=\"jsdoc-param-description\">\n<p>The attribute of the item to change represented as a string name.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">value</td> <td class=\"jsdoc-param-type\">almost anything</td> <td class=\"jsdoc-param-description\">\n<p>The value to assign to the item.</p> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>var success = store.set(kermit, \"color\", \"green\");</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_api_Write_setValues\">\n<span class=\"functionIcon\">setValues</span><span class=\"parameters\">(item,attribute,values)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"write\" class=\"jsdoc-link\">dojo/data/api/Write</a> </p> <p>Adds each value in the <em>values</em> array as a value of the given attribute on the given item. Replaces any previous value or values. Calling store.setValues(x, y, []) (with <em>values</em> as an empty array) has the same effect as calling store.unsetAttribute(x, y).</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"item\">dojo/data/api/Item</a></td> <td class=\"jsdoc-param-description\">\n<p>The item to modify.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">attribute</td> <td class=\"jsdoc-param-type\">string</td> <td class=\"jsdoc-param-description\">\n<p>The attribute of the item to change represented as a string name.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">values</td> <td class=\"jsdoc-param-type\">array</td> <td class=\"jsdoc-param-description\">\n<p>An array of values to assign to the attribute..</p> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>var success = store.setValues(kermit, \"color\", [\"green\", \"aqua\"]);\nsuccess = store.setValues(kermit, \"color\", []);\nif (success){assert(!store.hasAttribute(kermit, \"color\"));}</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_api_Write_unsetAttribute\">\n<span class=\"functionIcon\">unsetAttribute</span><span class=\"parameters\">(item,attribute)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"write\" class=\"jsdoc-link\">dojo/data/api/Write</a> </p> <p>Deletes all the values of an attribute on an item.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"item\">dojo/data/api/Item</a></td> <td class=\"jsdoc-param-description\">\n<p>The item to modify.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">attribute</td> <td class=\"jsdoc-param-type\">string</td> <td class=\"jsdoc-param-description\">\n<p>The attribute of the item to unset represented as a string.</p> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>var success = store.unsetAttribute(kermit, \"color\");\nif (success){assert(!store.hasAttribute(kermit, \"color\"));}</code></pre> </div> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/data/api/Write.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/data/api/Write.html</a>\n  </p>\n</div>\n","dojo/date/locale.__formatoptions":"<h1>dojo/date/locale.__FormatOptions</h1>  <p> <strong>Note:</strong> This is not a real constructor, but just a description of the type of object that should be passed as a parameter to some method(s), and/or the return value from some method(s). In other words, the type exists only for documentation purposes, and you <strong>cannot</strong> call <code>new locale.__FormatOptions()</code> </p> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/date.html\" target=\"_blank\">dojo/date/locale.__FormatOptions reference documentation</a> for more information.</p>          <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_date_locale___FormatOptions_am\">\n<span class=\"stringIcon\">am</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"locale\" class=\"jsdoc-link\">dojo/date/locale</a> </p> <div class=\"jsdoc-summary\">\n<p>override strings for am in times</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_date_locale___FormatOptions_datePattern\">\n<span class=\"stringIcon\">datePattern</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"locale\" class=\"jsdoc-link\">dojo/date/locale</a> </p> <div class=\"jsdoc-summary\">\n<p>override pattern with this string</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_date_locale___FormatOptions_formatLength\">\n<span class=\"stringIcon\">formatLength</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"locale\" class=\"jsdoc-link\">dojo/date/locale</a> </p> <div class=\"jsdoc-summary\">\n<p>choice of long, short, medium or full (plus any custom additions). Defaults to 'short'</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_date_locale___FormatOptions_fullYear\">\n<span class=\"booleanIcon\">fullYear</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"locale\" class=\"jsdoc-link\">dojo/date/locale</a> </p> <div class=\"jsdoc-summary\">\n<p>(format only) use 4 digit years whenever 2 digit years are called for</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_date_locale___FormatOptions_locale\">\n<span class=\"stringIcon\">locale</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"locale\" class=\"jsdoc-link\">dojo/date/locale</a> </p> <div class=\"jsdoc-summary\">\n<p>override the locale used to determine formatting rules</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_date_locale___FormatOptions_pm\">\n<span class=\"stringIcon\">pm</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"locale\" class=\"jsdoc-link\">dojo/date/locale</a> </p> <div class=\"jsdoc-summary\">\n<p>override strings for pm in times</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_date_locale___FormatOptions_selector\">\n<span class=\"stringIcon\">selector</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"locale\" class=\"jsdoc-link\">dojo/date/locale</a> </p> <div class=\"jsdoc-summary\">\n<p>choice of 'time','date' (default: date and time)</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_date_locale___FormatOptions_strict\">\n<span class=\"booleanIcon\">strict</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"locale\" class=\"jsdoc-link\">dojo/date/locale</a> </p> <div class=\"jsdoc-summary\">\n<p>(parse only) strict parsing, off by default</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_date_locale___FormatOptions_timePattern\">\n<span class=\"stringIcon\">timePattern</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"locale\" class=\"jsdoc-link\">dojo/date/locale</a> </p> <div class=\"jsdoc-summary\">\n<p>override pattern with this string</p> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/date/locale.__FormatOptions.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/date/locale.__FormatOptions.html</a>\n  </p>\n</div>\n","dojo/deferred":"<h1>dojo/Deferred</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>Creates a new deferred. This API is preferred over <a class=\"jsdoc-link\" href=\"_base/deferred\">dojo/_base/Deferred</a>.</p>  <p>Creates a new deferred, as an abstraction over (primarily) asynchronous operations. The deferred is the private interface that should not be returned to calling code. That's what the <code>promise</code> is for. See <a class=\"jsdoc-link\" href=\"promise/promise\">dojo/promise/Promise</a>.</p>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">Deferred<span class=\"parameters\"><span class=\"paren\">(</span><span class=\"args\">canceler</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">canceler</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Will be invoked if the deferred is canceled. The canceler receives the reason the deferred was canceled as its argument. The deferred is rejected with its return value, or a new <code>dojo/errors/CancelError</code> instance.</p> </td> </tr> </table> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/Deferred.html\" target=\"_blank\">dojo/Deferred reference documentation</a> for more information.</p>            <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_Deferred_promise\">\n<span class=\"objectIcon\">promise</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"deferred\" class=\"jsdoc-link\">dojo/Deferred</a> </p>    <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_Deferred_cancel\">\n<span class=\"functionIcon\">cancel</span><span class=\"parameters\">(reason,strict)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"deferred\" class=\"jsdoc-link\">dojo/Deferred</a> </p> <p>Inform the deferred it may cancel its asynchronous operation.</p>  <p>Inform the deferred it may cancel its asynchronous operation. The deferred's (optional) canceler is invoked and the deferred will be left in a rejected state. Can affect other promises that originate with the same deferred.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">reason</td> <td class=\"jsdoc-param-type\">any</td> <td class=\"jsdoc-param-description\">\n<p>A message that may be sent to the deferred's canceler, explaining why it's being canceled.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">strict</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>If strict, will throw an error if the deferred has already been fulfilled and consequently cannot be canceled.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any</span></p> <p>Returns the rejection reason if the deferred was canceled normally.</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_Deferred_isCanceled\">\n<span class=\"functionIcon\">isCanceled</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"deferred\" class=\"jsdoc-link\">dojo/Deferred</a> </p> <p>Checks whether the deferred has been canceled.</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Boolean</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_Deferred_isFulfilled\">\n<span class=\"functionIcon\">isFulfilled</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"deferred\" class=\"jsdoc-link\">dojo/Deferred</a> </p> <p>Checks whether the deferred has been resolved or rejected.</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Boolean</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_Deferred_isRejected\">\n<span class=\"functionIcon\">isRejected</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"deferred\" class=\"jsdoc-link\">dojo/Deferred</a> </p> <p>Checks whether the deferred has been rejected.</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Boolean</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_Deferred_isResolved\">\n<span class=\"functionIcon\">isResolved</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"deferred\" class=\"jsdoc-link\">dojo/Deferred</a> </p> <p>Checks whether the deferred has been resolved.</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Boolean</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_Deferred_progress\">\n<span class=\"functionIcon\">progress</span><span class=\"parameters\">(update,strict)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"deferred\" class=\"jsdoc-link\">dojo/Deferred</a> </p> <p>Emit a progress update on the deferred.</p>  <p>Emit a progress update on the deferred. Progress updates can be used to communicate updates about the asynchronous operation before it has finished.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">update</td> <td class=\"jsdoc-param-type\">any</td> <td class=\"jsdoc-param-description\">\n<p>The progress update. Passed to progbacks.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">strict</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>If strict, will throw an error if the deferred has already been fulfilled and consequently no progress can be emitted.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\"><a class=\"jsdoc-link\" href=\"promise/promise\">dojo/promise/Promise</a></span></p> <p>Returns the original promise for the deferred.</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_Deferred_reject\">\n<span class=\"functionIcon\">reject</span><span class=\"parameters\">(error,strict)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"deferred\" class=\"jsdoc-link\">dojo/Deferred</a> </p> <p>Reject the deferred.</p>  <p>Reject the deferred, putting it in an error state.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">error</td> <td class=\"jsdoc-param-type\">any</td> <td class=\"jsdoc-param-description\">\n<p>The error result of the deferred. Passed to errbacks.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">strict</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>If strict, will throw an error if the deferred has already been fulfilled and consequently cannot be rejected.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\"><a class=\"jsdoc-link\" href=\"promise/promise\">dojo/promise/Promise</a> | instance</span></p> <p>Returns the original promise for the deferred.</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_Deferred_resolve\">\n<span class=\"functionIcon\">resolve</span><span class=\"parameters\">(value,strict)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"deferred\" class=\"jsdoc-link\">dojo/Deferred</a> </p> <p>Resolve the deferred.</p>  <p>Resolve the deferred, putting it in a success state.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">value</td> <td class=\"jsdoc-param-type\">any</td> <td class=\"jsdoc-param-description\">\n<p>The result of the deferred. Passed to callbacks.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">strict</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>If strict, will throw an error if the deferred has already been fulfilled and consequently cannot be resolved.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\"><a class=\"jsdoc-link\" href=\"promise/promise\">dojo/promise/Promise</a></span></p> <p>Returns the original promise for the deferred.</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_Deferred_then\">\n<span class=\"functionIcon\">then</span><span class=\"parameters\">(callback,errback,progback)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"deferred\" class=\"jsdoc-link\">dojo/Deferred</a> </p> <p>Add new callbacks to the deferred.</p>  <p>Add new callbacks to the deferred. Callbacks can be added before or after the deferred is fulfilled.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">callback</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Callback to be invoked when the promise is resolved. Receives the resolution value.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">errback</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Callback to be invoked when the promise is rejected. Receives the rejection error.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">progback</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Callback to be invoked when the promise emits a progress update. Receives the progress update.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\"><a class=\"jsdoc-link\" href=\"promise/promise\">dojo/promise/Promise</a></span></p> <p>Returns a new promise for the result of the callback(s). This can be used for chaining many asynchronous operations.</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_Deferred_toString\">\n<span class=\"functionIcon\">toString</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"deferred\" class=\"jsdoc-link\">dojo/Deferred</a> </p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">String</span></p> <p>Returns <code>[object Deferred]</code>.</p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/Deferred.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/Deferred.html</a>\n  </p>\n</div>\n","dojo/dnd/autoscroll":"<h1>dojo/dnd/autoscroll</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>Used by <a class=\"jsdoc-link\" href=\"manager\">dojo/dnd/Manager</a> to scroll document or internal node when the user drags near the edge of the viewport or a scrollable node</p>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/dnd.html\" target=\"_blank\">dojo/dnd/autoscroll reference documentation</a> for more information.</p>            <h2 id=\"properties\">Properties</h2>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_autoscroll_H_AUTOSCROLL_VALUE\">\n<span class=\"numberIcon\">H_AUTOSCROLL_VALUE</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"autoscroll\" class=\"jsdoc-link\">dojo/dnd/autoscroll</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_autoscroll_H_TRIGGER_AUTOSCROLL\">\n<span class=\"numberIcon\">H_TRIGGER_AUTOSCROLL</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"autoscroll\" class=\"jsdoc-link\">dojo/dnd/autoscroll</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_autoscroll_V_AUTOSCROLL_VALUE\">\n<span class=\"numberIcon\">V_AUTOSCROLL_VALUE</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"autoscroll\" class=\"jsdoc-link\">dojo/dnd/autoscroll</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_autoscroll_V_TRIGGER_AUTOSCROLL\">\n<span class=\"numberIcon\">V_TRIGGER_AUTOSCROLL</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"autoscroll\" class=\"jsdoc-link\">dojo/dnd/autoscroll</a> </p>    <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_autoscroll_autoScroll\">\n<span class=\"functionIcon\">autoScroll</span><span class=\"parameters\">(e)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"autoscroll\" class=\"jsdoc-link\">dojo/dnd/autoscroll</a> </p> <p>a handler for mousemove and touchmove events, which scrolls the window, if necessary</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">e</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\">\n<p>mousemove/touchmove event</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_autoscroll_autoScrollNodes\">\n<span class=\"functionIcon\">autoScrollNodes</span><span class=\"parameters\">(e)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"autoscroll\" class=\"jsdoc-link\">dojo/dnd/autoscroll</a> </p> <p>a handler for mousemove and touchmove events, which scrolls the first available Dom element, it falls back to exports.autoScroll()</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">e</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\">\n<p>mousemove/touchmove event</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_autoscroll_autoScrollStart\">\n<span class=\"functionIcon\">autoScrollStart</span><span class=\"parameters\">(d)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"autoscroll\" class=\"jsdoc-link\">dojo/dnd/autoscroll</a> </p> <p>Called at the start of a drag.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">d</td> <td class=\"jsdoc-param-type\">Document</td> <td class=\"jsdoc-param-description\">\n<p>The document of the node being dragged.</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_autoscroll_getViewport\">\n<span class=\"functionIcon\">getViewport</span><span class=\"parameters\">(doc)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../window\" class=\"jsdoc-link\">dojo/window</a> </p> <p>Returns the dimensions and scroll position of the viewable area of a browser window</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">doc</td> <td class=\"jsdoc-param-type\">Document</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">object</span></p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/dnd/autoscroll.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/dnd/autoscroll.html</a>\n  </p>\n</div>\n","dojo/dnd/autoscroll._validnodes":"<h1>dojo/dnd/autoscroll._validNodes</h1>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/dnd.html\" target=\"_blank\">dojo/dnd/autoscroll._validNodes reference documentation</a> for more information.</p>          <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_autoscroll__validNodes_div\">\n<span class=\"numberIcon\">div</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"autoscroll\" class=\"jsdoc-link\">dojo/dnd/autoscroll</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_autoscroll__validNodes_p\">\n<span class=\"numberIcon\">p</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"autoscroll\" class=\"jsdoc-link\">dojo/dnd/autoscroll</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_autoscroll__validNodes_td\">\n<span class=\"numberIcon\">td</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"autoscroll\" class=\"jsdoc-link\">dojo/dnd/autoscroll</a> </p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/dnd/autoscroll._validNodes.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/dnd/autoscroll._validNodes.html</a>\n  </p>\n</div>\n","dojo/dnd/autoscroll._validoverflow":"<h1>dojo/dnd/autoscroll._validOverflow</h1>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/dnd.html\" target=\"_blank\">dojo/dnd/autoscroll._validOverflow reference documentation</a> for more information.</p>          <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_autoscroll__validOverflow_auto\">\n<span class=\"numberIcon\">auto</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"autoscroll\" class=\"jsdoc-link\">dojo/dnd/autoscroll</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_autoscroll__validOverflow_scroll\">\n<span class=\"numberIcon\">scroll</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"autoscroll\" class=\"jsdoc-link\">dojo/dnd/autoscroll</a> </p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/dnd/autoscroll._validOverflow.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/dnd/autoscroll._validOverflow.html</a>\n  </p>\n</div>\n","dojo/dnd/avatar":"<h1>dojo/dnd/Avatar</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>Object that represents transferred DnD items visually</p>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">\n<span class=\"sig\"><span class=\"keyword\">var </span><span class=\"var\">foo </span><span class=\"eq\">= </span><span class=\"new\">new </span><span class=\"args\">Avatar</span></span><span class=\"parameters\"><span class=\"paren\">(</span><span class=\"args\">manager</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <p class=\"jsdoc-inheritance\"> <label>Defined by </label><span><a class=\"jsdoc-link\" href=\"avatar\">dojo/dnd/Avatar</a></span> </p> <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">manager</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/dnd.html\" target=\"_blank\">dojo/dnd/Avatar reference documentation</a> for more information.</p>            <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Avatar_manager\">\n<span class=\"objectIcon\">manager</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"avatar\" class=\"jsdoc-link\">dojo/dnd/Avatar</a> </p> <div class=\"jsdoc-summary\">\n<p>a DnD manager object</p> </div>    <h2 id=\"methods\">Methods</h2>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Avatar_construct\">\n<span class=\"functionIcon\">construct</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"avatar\" class=\"jsdoc-link\">dojo/dnd/Avatar</a> </p> <p>constructor function; it is separate so it can be (dynamically) overwritten in case of need</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Avatar_destroy\">\n<span class=\"functionIcon\">destroy</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"avatar\" class=\"jsdoc-link\">dojo/dnd/Avatar</a> </p> <p>destructor for the avatar; called to remove all references so it can be garbage-collected</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Avatar_update\">\n<span class=\"functionIcon\">update</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"avatar\" class=\"jsdoc-link\">dojo/dnd/Avatar</a> </p> <p>updates the avatar to reflect the current DnD state</p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/dnd/Avatar.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/dnd/Avatar.html</a>\n  </p>\n</div>\n","dojo/data/itemfilereadstore":"<h1>dojo/data/ItemFileReadStore</h1> <div class=\"jsdoc-mixins\"> <label>Extends</label><a href=\"../evented\" class=\"jsdoc-link\">dojo/Evented</a> </div>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>The ItemFileReadStore implements the <a class=\"jsdoc-link\" href=\"api/read\">dojo/data/api/Read</a> API and reads data from JSON files that have contents in this format -- </p> <pre><code>{ items: [\n    { name:'Kermit', color:'green', age:12, friends:['Gonzo', {_reference:{name:'Fozzie Bear'}}]},\n    { name:'Fozzie Bear', wears:['hat', 'tie']},\n    { name:'Miss Piggy', pets:'Foo-Foo'}\n]}</code></pre> <p>Note that it can also contain an 'identifier' property that specified which attribute on the items </p> <p>in the array of items that acts as the unique identifier for that item.</p>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">\n<span class=\"sig\"><span class=\"keyword\">var </span><span class=\"var\">foo </span><span class=\"eq\">= </span><span class=\"new\">new </span><span class=\"args\">ItemFileReadStore</span></span><span class=\"parameters\"><span class=\"paren\">(</span><span class=\"args\">keywordParameters</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <p class=\"jsdoc-inheritance\"> <label>Defined by </label><span><a class=\"jsdoc-link\" href=\"itemfilereadstore\">dojo/data/ItemFileReadStore</a></span> </p> <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">keywordParameters</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>{url: String} {data: jsonObject} {typeMap: object} The structure of the typeMap object is as follows: </p> <pre><code>{\n    type0: function || object,\n    type1: function || object,\n    ...\n    typeN: function || object\n}</code></pre> <p>Where if it is a function, it is assumed to be an object constructor that takes the </p> <p>value of _value as the initialization parameters. If it is an object, then it is assumed to be an object of general form: </p> <pre><code>{\n    type: function, //constructor.\n    deserialize:    function(value) //The function that parses the value and constructs the object defined by type appropriately.\n}</code></pre> </td> </tr> </table> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/data/ItemFileReadStore.html\" target=\"_blank\">dojo/data/ItemFileReadStore reference documentation</a> for more information.</p>            <h2 id=\"properties\">Properties</h2>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ItemFileReadStore_clearOnClose\">\n<span class=\"booleanIcon\">clearOnClose</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"itemfilereadstore\" class=\"jsdoc-link\">dojo/data/ItemFileReadStore</a> </p> <div class=\"jsdoc-summary\">\n<p>Parameter to allow users to specify if a close call should force a reload or not. By default, it retains the old behavior of not clearing if close is called. But if set true, the store will be reset to default state. Note that by doing this, all item handles will become invalid and a new fetch must be issued.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ItemFileReadStore_data\">\n<span class=\"objectIcon\">data</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"itemfilereadstore\" class=\"jsdoc-link\">dojo/data/ItemFileReadStore</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ItemFileReadStore_failOk\">\n<span class=\"booleanIcon\">failOk</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"itemfilereadstore\" class=\"jsdoc-link\">dojo/data/ItemFileReadStore</a> </p> <div class=\"jsdoc-summary\">\n<p>Parameter for specifying that it is OK for the xhrGet call to fail silently.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ItemFileReadStore_hierarchical\">\n<span class=\"booleanIcon\">hierarchical</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"itemfilereadstore\" class=\"jsdoc-link\">dojo/data/ItemFileReadStore</a> </p> <div class=\"jsdoc-summary\">\n<p>Parameter to indicate to process data from the url as hierarchical (data items can contain other data items in js form). Default is true for backwards compatibility. False means only root items are processed as items, all child objects outside of type-mapped objects and those in specific reference format, are left straight JS data objects.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ItemFileReadStore_typeMap\">\n<span class=\"objectIcon\">typeMap</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"itemfilereadstore\" class=\"jsdoc-link\">dojo/data/ItemFileReadStore</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ItemFileReadStore_url\">\n<span class=\"stringIcon\">url</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"itemfilereadstore\" class=\"jsdoc-link\">dojo/data/ItemFileReadStore</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ItemFileReadStore_urlPreventCache\">\n<span class=\"booleanIcon\">urlPreventCache</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"itemfilereadstore\" class=\"jsdoc-link\">dojo/data/ItemFileReadStore</a> </p> <div class=\"jsdoc-summary\">\n<p>Parameter to allow specifying if preventCache should be passed to the xhrGet call or not when loading data from a url. Note this does not mean the store calls the server on each fetch, only that the data load has preventCache set as an option. Added for tracker: #6072</p> </div>    <h2 id=\"methods\">Methods</h2>              <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ItemFileReadStore_close\">\n<span class=\"functionIcon\">close</span><span class=\"parameters\">(request)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"itemfilereadstore\" class=\"jsdoc-link\">dojo/data/ItemFileReadStore</a> </p> <p>See dojo/data/api/Read.close()</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">request</td> <td class=\"jsdoc-param-type\">\n<a class=\"jsdoc-link\" href=\"api/request\">dojo/data/api/Request</a> | Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ItemFileReadStore_containsValue\">\n<span class=\"functionIcon\">containsValue</span><span class=\"parameters\">(item,attribute,value)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"itemfilereadstore\" class=\"jsdoc-link\">dojo/data/ItemFileReadStore</a> </p> <p>See dojo/data/api/Read.containsValue()</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"api/item\">dojo/data/api/Item</a></td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">attribute</td> <td class=\"jsdoc-param-type\">attribute-name-string</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">value</td> <td class=\"jsdoc-param-type\">anything</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ItemFileReadStore_emit\">\n<span class=\"functionIcon\">emit</span><span class=\"parameters\">(type,event)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../evented\" class=\"jsdoc-link\">dojo/Evented</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">type</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">event</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ItemFileReadStore_errorHandler\">\n<span class=\"functionIcon\">errorHandler</span><span class=\"parameters\">(errorData,requestObject)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"util/simplefetch\" class=\"jsdoc-link\">dojo/data/util/simpleFetch</a> </p> <p>The error handler when there is an error fetching items. This function should not be called directly and is used by simpleFetch.fetch().</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">errorData</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">requestObject</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ItemFileReadStore_fetch\">\n<span class=\"functionIcon\">fetch</span><span class=\"parameters\">(request)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"util/simplefetch\" class=\"jsdoc-link\">dojo/data/util/simpleFetch</a> </p> <p>The simpleFetch mixin is designed to serve as a set of function(s) that can be mixed into other datastore implementations to accelerate their development.</p>  <p>The simpleFetch mixin should work well for any datastore that can respond to a _fetchItems() call by returning an array of all the found items that matched the query. The simpleFetch mixin is not designed to work for datastores that respond to a fetch() call by incrementally loading items, or sequentially loading partial batches of the result set. For datastores that mixin simpleFetch, simpleFetch implements a fetch method that automatically handles eight of the fetch() arguments -- onBegin, onItem, onComplete, onError, start, count, sort and scope The class mixing in simpleFetch should not implement fetch(), but should instead implement a _fetchItems() method. The _fetchItems() method takes three arguments, the keywordArgs object that was passed to fetch(), a callback function to be called when the result array is available, and an error callback to be called if something goes wrong. The _fetchItems() method should ignore any keywordArgs parameters for start, count, onBegin, onItem, onComplete, onError, sort, and scope. The _fetchItems() method needs to correctly handle any other keywordArgs parameters, including the query parameter and any optional parameters (such as includeChildren). The _fetchItems() method should create an array of result items and pass it to the fetchHandler along with the original request object -- or, the _fetchItems() method may, if it wants to, create an new request object with other specifics about the request that are specific to the datastore and pass that as the request object to the handler. </p> <p>For more information on this specific function, see <a class=\"jsdoc-link\" href=\"api/read#fetch\">dojo/data/api/Read.fetch()</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">request</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>The keywordArgs parameter may either be an instance of conforming to dojo/data/api/Request or may be a simple anonymous object that may contain any of the following: </p> <pre><code>{\n    query: query-object or query-string,\n    queryOptions: object,\n    onBegin: Function,\n    onItem: Function,\n    onComplete: Function,\n    onError: Function,\n    scope: object,\n    start: int\n    count: int\n    sort: array\n}</code></pre> <p>All implementations should accept keywordArgs objects with any of </p> <p>the 9 standard properties: query, onBegin, onItem, onComplete, onError scope, sort, start, and count. Some implementations may accept additional properties in the keywordArgs object as valid parameters, such as {includeOutliers:true}. </p> <h4>The <em>query</em> parameter</h4> <p>The query may be optional in some data store implementations. The dojo/data/api/Read API does not specify the syntax or semantics of the query itself -- each different data store implementation may have its own notion of what a query should look like. However, as of dojo 0.9, 1.0, and 1.1, all the provided datastores in dojo.data and dojox.data support an object structure query, where the object is a set of name/value parameters such as { attrFoo: valueBar, attrFoo1: valueBar1}. Most of the dijit widgets, such as ComboBox assume this to be the case when working with a datastore when they dynamically update the query. Therefore, for maximum compatibility with dijit widgets the recommended query parameter is a key/value object. That does not mean that the the datastore may not take alternative query forms, such as a simple string, a Date, a number, or a mix of such. Ultimately, The dojo/data/api/Read API is agnostic about what the query format. </p> <p>Further note: In general for query objects that accept strings as attribute value matches, the store should also support basic filtering capability, such as <em> (match any character) and ? (match single character). An example query that is a query object would be like: { attrFoo: \"value</em>\"}. Which generally means match all items where they have an attribute named attrFoo, with a value that starts with 'value'. </p> <h4>The <em>queryOptions</em> parameter</h4> <p>The queryOptions parameter is an optional parameter used to specify options that may modify the query in some fashion, such as doing a case insensitive search, or doing a deep search where all items in a hierarchical representation of data are scanned instead of just the root items. It currently defines two options that all datastores should attempt to honor if possible: </p> <pre><code>{\n    ignoreCase: boolean, // Whether or not the query should match case sensitively or not.  Default behaviour is false.\n    deep: boolean   // Whether or not a fetch should do a deep search of items and all child\n                    // items instead of just root-level items in a datastore.  Default is false.\n}</code></pre> <h4>The <em>onBegin</em> parameter.</h4> <p>function(size, request); If an onBegin callback function is provided, the callback function will be called just once, before the first onItem callback is called. The onBegin callback function will be passed two arguments, the the total number of items identified and the Request object. If the total number is unknown, then size will be -1. Note that size is not necessarily the size of the collection of items returned from the query, as the request may have specified to return only a subset of the total set of items through the use of the start and count parameters. </p> <h4>The <em>onItem</em> parameter.</h4> <p>function(item, request); </p> <p>If an onItem callback function is provided, the callback function will be called as each item in the result is received. The callback function will be passed two arguments: the item itself, and the Request object. </p> <h4>The <em>onComplete</em> parameter.</h4> <p>function(items, request); </p> <p>If an onComplete callback function is provided, the callback function will be called just once, after the last onItem callback is called. Note that if the onItem callback is not present, then onComplete will be passed an array containing all items which matched the query and the request object. If the onItem callback is present, then onComplete is called as: onComplete(null, request). </p> <h4>The <em>onError</em> parameter.</h4> <p>function(errorData, request); </p> <p>If an onError callback function is provided, the callback function will be called if there is any sort of error while attempting to execute the query. The onError callback function will be passed two arguments: an Error object and the Request object. </p> <h4>The <em>scope</em> parameter.</h4> <p>If a scope object is provided, all of the callback functions (onItem, onComplete, onError, etc) will be invoked in the context of the scope object. In the body of the callback function, the value of the \"this\" keyword will be the scope object. If no scope object is provided, the callback functions will be called in the context of dojo.global(). For example, onItem.call(scope, item, request) vs. onItem.call(dojo.global(), item, request) </p> <h4>The <em>start</em> parameter.</h4> <p>If a start parameter is specified, this is a indication to the datastore to only start returning items once the start number of items have been located and skipped. When this parameter is paired with 'count', the store should be able to page across queries with millions of hits by only returning subsets of the hits for each query </p> <h4>The <em>count</em> parameter.</h4> <p>If a count parameter is specified, this is a indication to the datastore to only return up to that many items. This allows a fetch call that may have millions of item matches to be paired down to something reasonable. </p> <h4>The <em>sort</em> parameter.</h4> <p>If a sort parameter is specified, this is a indication to the datastore to sort the items in some manner before returning the items. The array is an array of javascript objects that must conform to the following format to be applied to the fetching of items: </p> <pre><code>{\n    attribute: attribute || attribute-name-string,\n    descending: true|false;   // Optional.  Default is false.\n}</code></pre> <p>Note that when comparing attributes, if an item contains no value for the attribute </p> <p>(undefined), then it the default ascending sort logic should push it to the bottom of the list. In the descending order case, it such items should appear at the top of the list.</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ItemFileReadStore_fetchHandler\">\n<span class=\"functionIcon\">fetchHandler</span><span class=\"parameters\">(items,requestObject)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"util/simplefetch\" class=\"jsdoc-link\">dojo/data/util/simpleFetch</a> </p> <p>The handler when items are successfully fetched. This function should not be called directly and is used by simpleFetch.fetch().</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">items</td> <td class=\"jsdoc-param-type\">Array</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">requestObject</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ItemFileReadStore_fetchItemByIdentity\">\n<span class=\"functionIcon\">fetchItemByIdentity</span><span class=\"parameters\">(keywordArgs)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"itemfilereadstore\" class=\"jsdoc-link\">dojo/data/ItemFileReadStore</a> </p> <p>See dojo/data/api/Identity.fetchItemByIdentity()</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">keywordArgs</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ItemFileReadStore_filter\">\n<span class=\"functionIcon\">filter</span><span class=\"parameters\">(requestArgs,arrayOfItems,findCallback)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"itemfilereadstore\" class=\"jsdoc-link\">dojo/data/ItemFileReadStore</a> </p> <p>This method handles the basic filtering needs for ItemFile* based stores.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">requestArgs</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">arrayOfItems</td> <td class=\"jsdoc-param-type\">item[]</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">findCallback</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ItemFileReadStore_getAttributes\">\n<span class=\"functionIcon\">getAttributes</span><span class=\"parameters\">(item)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"itemfilereadstore\" class=\"jsdoc-link\">dojo/data/ItemFileReadStore</a> </p> <p>See dojo/data/api/Read.getAttributes()</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"api/item\">dojo/data/api/Item</a></td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Array</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ItemFileReadStore_getFeatures\">\n<span class=\"functionIcon\">getFeatures</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"itemfilereadstore\" class=\"jsdoc-link\">dojo/data/ItemFileReadStore</a> </p> <p>See dojo/data/api/Read.getFeatures()</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ItemFileReadStore_getIdentity\">\n<span class=\"functionIcon\">getIdentity</span><span class=\"parameters\">(item)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"itemfilereadstore\" class=\"jsdoc-link\">dojo/data/ItemFileReadStore</a> </p> <p>See dojo/data/api/Identity.getIdentity()</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"api/item\">dojo/data/api/Item</a></td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined | null</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ItemFileReadStore_getIdentityAttributes\">\n<span class=\"functionIcon\">getIdentityAttributes</span><span class=\"parameters\">(item)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"itemfilereadstore\" class=\"jsdoc-link\">dojo/data/ItemFileReadStore</a> </p> <p>See dojo/data/api/Identity.getIdentityAttributes()</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"api/item\">dojo/data/api/Item</a></td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">null | Array</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ItemFileReadStore_getLabel\">\n<span class=\"functionIcon\">getLabel</span><span class=\"parameters\">(item)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"itemfilereadstore\" class=\"jsdoc-link\">dojo/data/ItemFileReadStore</a> </p> <p>See dojo/data/api/Read.getLabel()</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"api/item\">dojo/data/api/Item</a></td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined | number</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ItemFileReadStore_getLabelAttributes\">\n<span class=\"functionIcon\">getLabelAttributes</span><span class=\"parameters\">(item)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"itemfilereadstore\" class=\"jsdoc-link\">dojo/data/ItemFileReadStore</a> </p> <p>See dojo/data/api/Read.getLabelAttributes()</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"api/item\">dojo/data/api/Item</a></td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Array | null</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ItemFileReadStore_getValue\">\n<span class=\"functionIcon\">getValue</span><span class=\"parameters\">(item,attribute,defaultValue)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"itemfilereadstore\" class=\"jsdoc-link\">dojo/data/ItemFileReadStore</a> </p> <p>See dojo/data/api/Read.getValue()</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"api/item\">dojo/data/api/Item</a></td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">attribute</td> <td class=\"jsdoc-param-type\">attribute-name-string</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">defaultValue</td> <td class=\"jsdoc-param-type\">value</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">value</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ItemFileReadStore_getValues\">\n<span class=\"functionIcon\">getValues</span><span class=\"parameters\">(item,attribute)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"itemfilereadstore\" class=\"jsdoc-link\">dojo/data/ItemFileReadStore</a> </p> <p>See dojo/data/api/Read.getValues()</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"api/item\">dojo/data/api/Item</a></td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">attribute</td> <td class=\"jsdoc-param-type\">attribute-name-string</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ItemFileReadStore_hasAttribute\">\n<span class=\"functionIcon\">hasAttribute</span><span class=\"parameters\">(item,attribute)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"itemfilereadstore\" class=\"jsdoc-link\">dojo/data/ItemFileReadStore</a> </p> <p>See dojo/data/api/Read.hasAttribute()</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"api/item\">dojo/data/api/Item</a></td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">attribute</td> <td class=\"jsdoc-param-type\">attribute-name-string</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">boolean</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ItemFileReadStore_isItem\">\n<span class=\"functionIcon\">isItem</span><span class=\"parameters\">(something)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"itemfilereadstore\" class=\"jsdoc-link\">dojo/data/ItemFileReadStore</a> </p> <p>See dojo/data/api/Read.isItem()</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">something</td> <td class=\"jsdoc-param-type\">anything</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">boolean</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ItemFileReadStore_isItemLoaded\">\n<span class=\"functionIcon\">isItemLoaded</span><span class=\"parameters\">(something)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"itemfilereadstore\" class=\"jsdoc-link\">dojo/data/ItemFileReadStore</a> </p> <p>See dojo/data/api/Read.isItemLoaded()</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">something</td> <td class=\"jsdoc-param-type\">anything</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ItemFileReadStore_loadItem\">\n<span class=\"functionIcon\">loadItem</span><span class=\"parameters\">(keywordArgs)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"itemfilereadstore\" class=\"jsdoc-link\">dojo/data/ItemFileReadStore</a> </p> <p>See dojo/data/api/Read.loadItem()</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">keywordArgs</td> <td class=\"jsdoc-param-type\">object</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ItemFileReadStore_on\">\n<span class=\"functionIcon\">on</span><span class=\"parameters\">(type,listener)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../evented\" class=\"jsdoc-link\">dojo/Evented</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">type</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">listener</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/data/ItemFileReadStore.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/data/ItemFileReadStore.html</a>\n  </p>\n</div>\n","dojo/data/objectstore":"<h1>dojo/data/ObjectStore</h1> <div class=\"jsdoc-mixins\"> <label>Extends</label><a href=\"../evented\" class=\"jsdoc-link\">dojo/Evented</a> </div>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>A Dojo Data implementation that wraps Dojo object stores for backwards compatibility.</p>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">\n<span class=\"sig\"><span class=\"keyword\">var </span><span class=\"var\">foo </span><span class=\"eq\">= </span><span class=\"new\">new </span><span class=\"args\">ObjectStore</span></span><span class=\"parameters\"><span class=\"paren\">(</span><span class=\"args\">options</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <p class=\"jsdoc-inheritance\"> <label>Defined by </label><span><a class=\"jsdoc-link\" href=\"objectstore\">dojo/data/ObjectStore</a></span> </p> <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">options</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\">\n<p>The configuration information to pass into the data store. </p> <ul> <li>options.objectStore:</li> </ul> <p>The object store to use as the source provider for this data store</p> </td> </tr> </table> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/data/ObjectStore.html\" target=\"_blank\">dojo/data/ObjectStore reference documentation</a> for more information.</p>              <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ObjectStore_labelProperty\">\n<span class=\"stringIcon\">labelProperty</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"objectstore\" class=\"jsdoc-link\">dojo/data/ObjectStore</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ObjectStore_objectStore\">\n<span class=\"objectIcon\">objectStore</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"objectstore\" class=\"jsdoc-link\">dojo/data/ObjectStore</a> </p>    <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ObjectStore_changing\">\n<span class=\"functionIcon\">changing</span><span class=\"parameters\">(object,_deleting)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"objectstore\" class=\"jsdoc-link\">dojo/data/ObjectStore</a> </p> <p>adds an object to the list of dirty objects. This object contains a reference to the object itself as well as a cloned and trimmed version of old object for use with revert.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">object</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>Indicates that the given object is changing and should be marked as dirty for the next save</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">_deleting</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ObjectStore_close\">\n<span class=\"functionIcon\">close</span><span class=\"parameters\">(request)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"objectstore\" class=\"jsdoc-link\">dojo/data/ObjectStore</a> </p> <p>See dojo/data/api/Read.close()</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">request</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ObjectStore_containsValue\">\n<span class=\"functionIcon\">containsValue</span><span class=\"parameters\">(item,attribute,value)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"objectstore\" class=\"jsdoc-link\">dojo/data/ObjectStore</a> </p> <p>Checks to see if 'item' has 'value' at 'attribute'</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>The item to check</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">attribute</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>The attribute to check</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">value</td> <td class=\"jsdoc-param-type\">Anything</td> <td class=\"jsdoc-param-description\">\n<p>The value to look for</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">boolean</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ObjectStore_deleteItem\">\n<span class=\"functionIcon\">deleteItem</span><span class=\"parameters\">(item)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"objectstore\" class=\"jsdoc-link\">dojo/data/ObjectStore</a> </p> <p>deletes item and any references to that item from the store.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\">\n<p>item to delete</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ObjectStore_emit\">\n<span class=\"functionIcon\">emit</span><span class=\"parameters\">(type,event)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../evented\" class=\"jsdoc-link\">dojo/Evented</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">type</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">event</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ObjectStore_fetch\">\n<span class=\"functionIcon\">fetch</span><span class=\"parameters\">(args)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"objectstore\" class=\"jsdoc-link\">dojo/data/ObjectStore</a> </p> <p>See dojo/data/api/Read.fetch()</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">args</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ObjectStore_fetchItemByIdentity\">\n<span class=\"functionIcon\">fetchItemByIdentity</span><span class=\"parameters\">(args)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"objectstore\" class=\"jsdoc-link\">dojo/data/ObjectStore</a> </p> <p>fetch an item by its identity, by looking in our index of what we have loaded</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">args</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ObjectStore_getAttributes\">\n<span class=\"functionIcon\">getAttributes</span><span class=\"parameters\">(item)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"objectstore\" class=\"jsdoc-link\">dojo/data/ObjectStore</a> </p> <p>Gets the available attributes of an item's 'property' and returns it as an array.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Array</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ObjectStore_getFeatures\">\n<span class=\"functionIcon\">getFeatures</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"objectstore\" class=\"jsdoc-link\">dojo/data/ObjectStore</a> </p> <p>return the store feature set</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">object</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ObjectStore_getIdentity\">\n<span class=\"functionIcon\">getIdentity</span><span class=\"parameters\">(item)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"objectstore\" class=\"jsdoc-link\">dojo/data/ObjectStore</a> </p> <p>returns the identity of the given item See dojo/data/api/Read.getIdentity()</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ObjectStore_getIdentityAttributes\">\n<span class=\"functionIcon\">getIdentityAttributes</span><span class=\"parameters\">(item)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"objectstore\" class=\"jsdoc-link\">dojo/data/ObjectStore</a> </p> <p>returns the attributes which are used to make up the identity of an item. Basically returns this.objectStore.idProperty See dojo/data/api/Read.getIdentityAttributes()</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Array</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ObjectStore_getLabel\">\n<span class=\"functionIcon\">getLabel</span><span class=\"parameters\">(item)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"objectstore\" class=\"jsdoc-link\">dojo/data/ObjectStore</a> </p> <p>See dojo/data/api/Read.getLabel()</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"api/item\">dojo/data/api/Item</a></td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ObjectStore_getLabelAttributes\">\n<span class=\"functionIcon\">getLabelAttributes</span><span class=\"parameters\">(item)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"objectstore\" class=\"jsdoc-link\">dojo/data/ObjectStore</a> </p> <p>See dojo/data/api/Read.getLabelAttributes()</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"api/item\">dojo/data/api/Item</a></td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Array</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ObjectStore_getValue\">\n<span class=\"functionIcon\">getValue</span><span class=\"parameters\">(item,property,defaultValue)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"objectstore\" class=\"jsdoc-link\">dojo/data/ObjectStore</a> </p> <p>Gets the value of an item's 'property'</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>The item to get the value from</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">property</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>property to look up value for</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">defaultValue</td> <td class=\"jsdoc-param-type\">value</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>the default value</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">value</span></p> <p>the default value</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ObjectStore_getValues\">\n<span class=\"functionIcon\">getValues</span><span class=\"parameters\">(item,property)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"objectstore\" class=\"jsdoc-link\">dojo/data/ObjectStore</a> </p> <p>Gets the value of an item's 'property' and returns it. If this value is an array it is just returned, if not, the value is added to an array and that is returned.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">property</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>property to look up value for</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Array</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ObjectStore_hasAttribute\">\n<span class=\"functionIcon\">hasAttribute</span><span class=\"parameters\">(item,attribute)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"objectstore\" class=\"jsdoc-link\">dojo/data/ObjectStore</a> </p> <p>Checks to see if item has attribute</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>The item to check</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">attribute</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>The attribute to check</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">boolean</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ObjectStore_isDirty\">\n<span class=\"functionIcon\">isDirty</span><span class=\"parameters\">(item)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"objectstore\" class=\"jsdoc-link\">dojo/data/ObjectStore</a> </p> <p>returns true if the item is marked as dirty or true if there are any dirty items</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>The item to check</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">boolean | undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ObjectStore_isItem\">\n<span class=\"functionIcon\">isItem</span><span class=\"parameters\">(item)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"objectstore\" class=\"jsdoc-link\">dojo/data/ObjectStore</a> </p> <p>Checks to see if the argument is an item</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>The item to check</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">boolean</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ObjectStore_isItemLoaded\">\n<span class=\"functionIcon\">isItemLoaded</span><span class=\"parameters\">(item)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"objectstore\" class=\"jsdoc-link\">dojo/data/ObjectStore</a> </p> <p>Checks to see if the item is loaded.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>The item to check</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ObjectStore_loadItem\">\n<span class=\"functionIcon\">loadItem</span><span class=\"parameters\">(args)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"objectstore\" class=\"jsdoc-link\">dojo/data/ObjectStore</a> </p> <p>Loads an item and calls the callback handler. Note, that this will call the callback handler even if the item is loaded. Consequently, you can use loadItem to ensure that an item is loaded is situations when the item may or may not be loaded yet. If you access a value directly through property access, you can use this to load a lazy value as well (doesn't need to be an item).</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">args</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>See dojo/data/api/Read.fetch()</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>store.loadItem({\n    item: item, // this item may or may not be loaded\n    onItem: function(item){\n        // do something with the item\n    }\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ObjectStore_newItem\">\n<span class=\"functionIcon\">newItem</span><span class=\"parameters\">(data,parentInfo)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"objectstore\" class=\"jsdoc-link\">dojo/data/ObjectStore</a> </p> <p>adds a new item to the store at the specified point. Takes two parameters, data, and options.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">data</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>See dojo/data/api/Write.newItem()</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">parentInfo</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Object</span></p> <p>See dojo/data/api/Write.newItem()</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ObjectStore_on\">\n<span class=\"functionIcon\">on</span><span class=\"parameters\">(type,listener)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../evented\" class=\"jsdoc-link\">dojo/Evented</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">type</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">listener</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ObjectStore_revert\">\n<span class=\"functionIcon\">revert</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"objectstore\" class=\"jsdoc-link\">dojo/data/ObjectStore</a> </p> <p>returns any modified data to its original state prior to a save();</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ObjectStore_save\">\n<span class=\"functionIcon\">save</span><span class=\"parameters\">(kwArgs)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"objectstore\" class=\"jsdoc-link\">dojo/data/ObjectStore</a> </p> <p>Saves the dirty data using object store provider. See dojo/data/api/Write for API.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">kwArgs</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\">\n<ul> <li>\n<p>kwArgs.global: This will cause the save to commit the dirty data for all ObjectStores as a single transaction.</p> </li> <li>\n<p>kwArgs.revertOnError: This will cause the changes to be reverted if there is an error on the save. By default a revert is executed unless a value of false is provide for this parameter.</p> </li> <li>\n<p>kwArgs.onError: Called when an error occurs in the commit</p> </li> <li>\n<p>kwArgs.onComplete: Called when an the save/commit is completed</p> </li> </ul> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ObjectStore_setValue\">\n<span class=\"functionIcon\">setValue</span><span class=\"parameters\">(item,attribute,value)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"objectstore\" class=\"jsdoc-link\">dojo/data/ObjectStore</a> </p> <p>sets 'attribute' on 'item' to 'value' See dojo/data/api/Write.setValue()</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">attribute</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">value</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ObjectStore_setValues\">\n<span class=\"functionIcon\">setValues</span><span class=\"parameters\">(item,attribute,values)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"objectstore\" class=\"jsdoc-link\">dojo/data/ObjectStore</a> </p> <p>sets 'attribute' on 'item' to 'value' value must be an array. See dojo/data/api/Write.setValues()</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">attribute</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">values</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ObjectStore_unsetAttribute\">\n<span class=\"functionIcon\">unsetAttribute</span><span class=\"parameters\">(item,attribute)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"objectstore\" class=\"jsdoc-link\">dojo/data/ObjectStore</a> </p> <p>unsets 'attribute' on 'item' See dojo/data/api/Write.unsetAttribute()</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">attribute</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>    <h2 id=\"events\">Events</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ObjectStore_onDelete\">\n<span class=\"functionIcon\">onDelete</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"objectstore\" class=\"jsdoc-link\">dojo/data/ObjectStore</a> </p> <p>See <a class=\"jsdoc-link\" href=\"api/notification#onDelete\">dojo/data/api/Notification.onDelete()</a></p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>store.loadItem({\n    item: item, // this item may or may not be loaded\n    onItem: function(item){\n        // do something with the item\n    }\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ObjectStore_onFetch\">\n<span class=\"functionIcon\">onFetch</span><span class=\"parameters\">(results)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"objectstore\" class=\"jsdoc-link\">dojo/data/ObjectStore</a> </p> <p>Called when a fetch occurs </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">results</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>store.loadItem({\n    item: item, // this item may or may not be loaded\n    onItem: function(item){\n        // do something with the item\n    }\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ObjectStore_onNew\">\n<span class=\"functionIcon\">onNew</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"objectstore\" class=\"jsdoc-link\">dojo/data/ObjectStore</a> </p> <p>See <a class=\"jsdoc-link\" href=\"api/notification#onNew\">dojo/data/api/Notification.onNew()</a></p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>store.loadItem({\n    item: item, // this item may or may not be loaded\n    onItem: function(item){\n        // do something with the item\n    }\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ObjectStore_onSet\">\n<span class=\"functionIcon\">onSet</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"objectstore\" class=\"jsdoc-link\">dojo/data/ObjectStore</a> </p> <p>See <a class=\"jsdoc-link\" href=\"api/notification#onSet\">dojo/data/api/Notification.onSet()</a></p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>store.loadItem({\n    item: item, // this item may or may not be loaded\n    onItem: function(item){\n        // do something with the item\n    }\n});</code></pre> </div> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/data/ObjectStore.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/data/ObjectStore.html</a>\n  </p>\n</div>\n","dojo/dnd/common":"<h1>dojo/dnd/common</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>TODOC</p>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/dnd.html\" target=\"_blank\">dojo/dnd/common reference documentation</a> for more information.</p>            <h2 id=\"properties\">Properties</h2>       <h2 id=\"methods\">Methods</h2>        <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_common_getCopyKeyState\">\n<span class=\"functionIcon\">getCopyKeyState</span><span class=\"parameters\">(evt)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"common\" class=\"jsdoc-link\">dojo/dnd/common</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">evt</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_common_getUniqueId\">\n<span class=\"functionIcon\">getUniqueId</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"common\" class=\"jsdoc-link\">dojo/dnd/common</a> </p> <p>returns a unique string for use with any DOM element</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">string</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_common_isFormElement\">\n<span class=\"functionIcon\">isFormElement</span><span class=\"parameters\">(e)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"common\" class=\"jsdoc-link\">dojo/dnd/common</a> </p> <p>returns true if user clicked on a form element</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">e</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_common_manager\">\n<span class=\"functionIcon\">manager</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"manager\" class=\"jsdoc-link\">dojo/dnd/Manager</a> </p> <p>Returns the current DnD manager. Creates one if it is not created yet.</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">instance</span></p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/dnd/common.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/dnd/common.html</a>\n  </p>\n</div>\n","dojo/dnd/common._defaultcreatornodes":"<h1>dojo/dnd/common._defaultCreatorNodes</h1>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/dnd.html\" target=\"_blank\">dojo/dnd/common._defaultCreatorNodes reference documentation</a> for more information.</p>          <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_common__defaultCreatorNodes_div\">\n<span class=\"stringIcon\">div</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_common__defaultCreatorNodes_ol\">\n<span class=\"stringIcon\">ol</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_common__defaultCreatorNodes_p\">\n<span class=\"stringIcon\">p</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_common__defaultCreatorNodes_ul\">\n<span class=\"stringIcon\">ul</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/dnd/common._defaultCreatorNodes.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/dnd/common._defaultCreatorNodes.html</a>\n  </p>\n</div>\n","dojo/dnd/common._empty":"<h1>dojo/dnd/common._empty</h1>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/dnd.html\" target=\"_blank\">dojo/dnd/common._empty reference documentation</a> for more information.</p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/dnd/common._empty.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/dnd/common._empty.html</a>\n  </p>\n</div>\n","dojo/dnd/container.__containerargs":"<h1>dojo/dnd/Container.__ContainerArgs</h1>  <p> <strong>Note:</strong> This is not a real constructor, but just a description of the type of object that should be passed as a parameter to some method(s), and/or the return value from some method(s). In other words, the type exists only for documentation purposes, and you <strong>cannot</strong> call <code>new Container.__ContainerArgs()</code> </p> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/dnd.html\" target=\"_blank\">dojo/dnd/Container.__ContainerArgs reference documentation</a> for more information.</p>            <h2 id=\"properties\">Properties</h2>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Container___ContainerArgs_dropParent\">\n<span class=\"domnodeIcon\">dropParent</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <div class=\"jsdoc-summary\">\n<p>node or node's id to use as the parent node for dropped items (must be underneath the 'node' parameter in the DOM)</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Container___ContainerArgs_skipForm\">\n<span class=\"booleanIcon\">skipForm</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <div class=\"jsdoc-summary\">\n<p>don't start the drag operation, if clicked on form elements</p> </div>    <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Container___ContainerArgs_creator\">\n<span class=\"functionIcon\">creator</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <p>a creator function, which takes a data item, and returns an object like that: {node: newNode, data: usedData, type: arrayOfStrings}</p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/dnd/Container.__ContainerArgs.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/dnd/Container.__ContainerArgs.html</a>\n  </p>\n</div>\n","dojo/dnd/manager":"<h1>dojo/dnd/Manager</h1> <div class=\"jsdoc-mixins\"> <label>Extends</label><a href=\"../evented\" class=\"jsdoc-link\">dojo/Evented</a> </div>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>the manager of DnD operations (usually a singleton)</p>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">\n<span class=\"sig\"><span class=\"keyword\">var </span><span class=\"var\">foo </span><span class=\"eq\">= </span><span class=\"new\">new </span><span class=\"args\">Manager</span></span><span class=\"parameters\"><span class=\"paren\">(</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <p class=\"jsdoc-inheritance\"> <label>Defined by </label><span><a class=\"jsdoc-link\" href=\"manager\">dojo/dnd/Manager</a></span> </p> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/dnd.html\" target=\"_blank\">dojo/dnd/Manager reference documentation</a> for more information.</p>              <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Manager_OFFSET_X\">\n<span class=\"numberIcon\">OFFSET_X</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"manager\" class=\"jsdoc-link\">dojo/dnd/Manager</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Manager_OFFSET_Y\">\n<span class=\"numberIcon\">OFFSET_Y</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"manager\" class=\"jsdoc-link\">dojo/dnd/Manager</a> </p>    <h2 id=\"methods\">Methods</h2>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Manager_canDrop\">\n<span class=\"functionIcon\">canDrop</span><span class=\"parameters\">(flag)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"manager\" class=\"jsdoc-link\">dojo/dnd/Manager</a> </p> <p>called to notify if the current target can accept items</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">flag</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Manager_emit\">\n<span class=\"functionIcon\">emit</span><span class=\"parameters\">(type,event)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../evented\" class=\"jsdoc-link\">dojo/Evented</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">type</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">event</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Manager_makeAvatar\">\n<span class=\"functionIcon\">makeAvatar</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"manager\" class=\"jsdoc-link\">dojo/dnd/Manager</a> </p> <p>makes the avatar; it is separate to be overwritten dynamically, if needed</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">instance</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Manager_manager\">\n<span class=\"functionIcon\">manager</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"manager\" class=\"jsdoc-link\">dojo/dnd/Manager</a> </p> <p>Returns the current DnD manager. Creates one if it is not created yet.</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">instance</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Manager_on\">\n<span class=\"functionIcon\">on</span><span class=\"parameters\">(type,listener)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../evented\" class=\"jsdoc-link\">dojo/Evented</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">type</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">listener</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Manager_outSource\">\n<span class=\"functionIcon\">outSource</span><span class=\"parameters\">(source)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"manager\" class=\"jsdoc-link\">dojo/dnd/Manager</a> </p> <p>called when a source detected a mouse-out condition</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">source</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>the reporter</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Manager_overSource\">\n<span class=\"functionIcon\">overSource</span><span class=\"parameters\">(source)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"manager\" class=\"jsdoc-link\">dojo/dnd/Manager</a> </p> <p>called when a source detected a mouse-over condition</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">source</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>the reporter</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Manager_startDrag\">\n<span class=\"functionIcon\">startDrag</span><span class=\"parameters\">(source,nodes,copy)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"manager\" class=\"jsdoc-link\">dojo/dnd/Manager</a> </p> <p>called to initiate the DnD operation</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">source</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>the source which provides items</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">nodes</td> <td class=\"jsdoc-param-type\">Array</td> <td class=\"jsdoc-param-description\">\n<p>the list of transferred items</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">copy</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\">\n<p>copy items, if true, move items otherwise</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Manager_stopDrag\">\n<span class=\"functionIcon\">stopDrag</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"manager\" class=\"jsdoc-link\">dojo/dnd/Manager</a> </p> <p>stop the DnD in progress</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Manager_updateAvatar\">\n<span class=\"functionIcon\">updateAvatar</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"manager\" class=\"jsdoc-link\">dojo/dnd/Manager</a> </p> <p>updates the avatar; it is separate to be overwritten dynamically, if needed</p>     <h2 id=\"events\">Events</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Manager_onKeyDown\">\n<span class=\"functionIcon\">onKeyDown</span><span class=\"parameters\">(e)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"manager\" class=\"jsdoc-link\">dojo/dnd/Manager</a> </p> <p>event processor for onkeydown: watching for CTRL for copy/move status, watching for ESCAPE to cancel the drag</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">e</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\">\n<p>keyboard event</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Manager_onKeyUp\">\n<span class=\"functionIcon\">onKeyUp</span><span class=\"parameters\">(e)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"manager\" class=\"jsdoc-link\">dojo/dnd/Manager</a> </p> <p>event processor for onkeyup, watching for CTRL for copy/move status</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">e</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\">\n<p>keyboard event</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Manager_onMouseMove\">\n<span class=\"functionIcon\">onMouseMove</span><span class=\"parameters\">(e)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"manager\" class=\"jsdoc-link\">dojo/dnd/Manager</a> </p> <p>event processor for onmousemove</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">e</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\">\n<p>mouse event</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Manager_onMouseUp\">\n<span class=\"functionIcon\">onMouseUp</span><span class=\"parameters\">(e)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"manager\" class=\"jsdoc-link\">dojo/dnd/Manager</a> </p> <p>event processor for onmouseup</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">e</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\">\n<p>mouse event</p> </td> </tr> </table><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/dnd/Manager.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/dnd/Manager.html</a>\n  </p>\n</div>\n","dojo/dnd/move":"<h1>dojo/dnd/move</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>TODOC</p>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/dnd.html\" target=\"_blank\">dojo/dnd/move reference documentation</a> for more information.</p>          <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_move_boxConstrainedMoveable\">\n<span class=\"functionIcon\">boxConstrainedMoveable</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"move\" class=\"jsdoc-link\">dojo/dnd/move</a> </p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_move_constrainedMoveable\">\n<span class=\"functionIcon\">constrainedMoveable</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"move\" class=\"jsdoc-link\">dojo/dnd/move</a> </p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_move_parentConstrainedMoveable\">\n<span class=\"functionIcon\">parentConstrainedMoveable</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"move\" class=\"jsdoc-link\">dojo/dnd/move</a> </p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/dnd/move.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/dnd/move.html</a>\n  </p>\n</div>\n","dojo/dnd/moveable.__moveableargs":"<h1>dojo/dnd/Moveable.__MoveableArgs</h1>  <p> <strong>Note:</strong> This is not a real constructor, but just a description of the type of object that should be passed as a parameter to some method(s), and/or the return value from some method(s). In other words, the type exists only for documentation purposes, and you <strong>cannot</strong> call <code>new Moveable.__MoveableArgs()</code> </p> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/dnd.html\" target=\"_blank\">dojo/dnd/Moveable.__MoveableArgs reference documentation</a> for more information.</p>          <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Moveable___MoveableArgs_delay\">\n<span class=\"numberIcon\">delay</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p> <div class=\"jsdoc-summary\">\n<p>delay move by this number of pixels</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Moveable___MoveableArgs_handle\">\n<span class=\"domnodeIcon\">handle</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p> <div class=\"jsdoc-summary\">\n<p>A node (or node's id), which is used as a mouse handle. If omitted, the node itself is used as a handle.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Moveable___MoveableArgs_mover\">\n<span class=\"objectIcon\">mover</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p> <div class=\"jsdoc-summary\">\n<p>a constructor of custom Mover</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Moveable___MoveableArgs_skip\">\n<span class=\"booleanIcon\">skip</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p> <div class=\"jsdoc-summary\">\n<p>skip move of form elements</p> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/dnd/Moveable.__MoveableArgs.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/dnd/Moveable.__MoveableArgs.html</a>\n  </p>\n</div>\n","dojo/dnd/mover":"<h1>dojo/dnd/Mover</h1> <div class=\"jsdoc-mixins\"> <label>Extends</label><a href=\"../evented\" class=\"jsdoc-link\">dojo/Evented</a> </div>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>an object which makes a node follow the mouse, or touch-drag on touch devices. Used as a default mover, and as a base class for custom movers.</p>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">\n<span class=\"sig\"><span class=\"keyword\">var </span><span class=\"var\">foo </span><span class=\"eq\">= </span><span class=\"new\">new </span><span class=\"args\">Mover</span></span><span class=\"parameters\"><span class=\"paren\">(</span><span class=\"args\">node,e,host</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <p class=\"jsdoc-inheritance\"> <label>Defined by </label><span><a class=\"jsdoc-link\" href=\"mover\">dojo/dnd/Mover</a></span> </p> <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">Node</td> <td class=\"jsdoc-param-description\">\n<p>a node (or node's id) to be moved</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">e</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\">\n<p>a mouse event, which started the move; only pageX and pageY properties are used</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">host</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>object which implements the functionality of the move, and defines proper events (onMoveStart and onMoveStop)</p> </td> </tr> </table> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/dnd.html\" target=\"_blank\">dojo/dnd/Mover reference documentation</a> for more information.</p>            <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Mover_destroy\">\n<span class=\"functionIcon\">destroy</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"mover\" class=\"jsdoc-link\">dojo/dnd/Mover</a> </p> <p>stops the move, deletes all references, so the object can be garbage-collected</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Mover_emit\">\n<span class=\"functionIcon\">emit</span><span class=\"parameters\">(type,event)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../evented\" class=\"jsdoc-link\">dojo/Evented</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">type</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">event</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Mover_on\">\n<span class=\"functionIcon\">on</span><span class=\"parameters\">(type,listener)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../evented\" class=\"jsdoc-link\">dojo/Evented</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">type</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">listener</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>    <h2 id=\"events\">Events</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Mover_onFirstMove\">\n<span class=\"functionIcon\">onFirstMove</span><span class=\"parameters\">(e)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"mover\" class=\"jsdoc-link\">dojo/dnd/Mover</a> </p> <p>makes the node absolute; it is meant to be called only once. relative and absolutely positioned nodes are assumed to use pixel units</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">e</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Mover_onMouseMove\">\n<span class=\"functionIcon\">onMouseMove</span><span class=\"parameters\">(e)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"mover\" class=\"jsdoc-link\">dojo/dnd/Mover</a> </p> <p>event processor for onmousemove/ontouchmove</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">e</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\">\n<p>mouse/touch event</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Mover_onMouseUp\">\n<span class=\"functionIcon\">onMouseUp</span><span class=\"parameters\">(e)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"mover\" class=\"jsdoc-link\">dojo/dnd/Mover</a> </p> <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">e</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/dnd/Mover.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/dnd/Mover.html</a>\n  </p>\n</div>\n","dojo/dnd/container":"<h1>dojo/dnd/Container</h1> <div class=\"jsdoc-mixins\"> <label>Extends</label><a href=\"../evented\" class=\"jsdoc-link\">dojo/Evented</a> </div>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>a Container object, which knows when mouse hovers over it, and over which element it hovers</p>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">\n<span class=\"sig\"><span class=\"keyword\">var </span><span class=\"var\">foo </span><span class=\"eq\">= </span><span class=\"new\">new </span><span class=\"args\">Container</span></span><span class=\"parameters\"><span class=\"paren\">(</span><span class=\"args\">node,params</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <p class=\"jsdoc-inheritance\"> <label>Defined by </label><span><a class=\"jsdoc-link\" href=\"container\">dojo/dnd/Container</a></span> </p> <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">Node</td> <td class=\"jsdoc-param-description\">\n<p>node or node's id to build the container on</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">params</td> <td class=\"jsdoc-param-type\">Container.__ContainerArgs</td> <td class=\"jsdoc-param-description\">\n<p>a dictionary of parameters</p> </td> </tr> </table> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/dnd.html\" target=\"_blank\">dojo/dnd/Container reference documentation</a> for more information.</p>              <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Container_allowNested\">\n<span class=\"booleanIcon\">allowNested</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <div class=\"jsdoc-summary\">\n<p>Indicates whether to allow dnd item nodes to be nested within other elements. By default this is false, indicating that only direct children of the container can be draggable dnd item nodes</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Container_current\">\n<span class=\"domnodeIcon\">current</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <div class=\"jsdoc-summary\">\n<p>The DOM node the mouse is currently hovered over</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Container_map\">\n<span class=\"objectIcon\">map</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <div class=\"jsdoc-summary\">\n<p>Map from an item's id (which is also the DOMNode's id) to the <a class=\"jsdoc-link\" href=\"container#Item\">dojo/dnd/Container.Item</a> itself.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Container_skipForm\">\n<span class=\"booleanIcon\">skipForm</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p>    <h2 id=\"methods\">Methods</h2>          <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Container_clearItems\">\n<span class=\"functionIcon\">clearItems</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <p>removes all data items from the map</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Container_creator\">\n<span class=\"functionIcon\">creator</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <p>creator function, dummy at the moment</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Container_delItem\">\n<span class=\"functionIcon\">delItem</span><span class=\"parameters\">(key)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <p>removes a data item from the map by its key (id)</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">key</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Container_destroy\">\n<span class=\"functionIcon\">destroy</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <p>prepares this object to be garbage-collected</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Container_emit\">\n<span class=\"functionIcon\">emit</span><span class=\"parameters\">(type,event)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../evented\" class=\"jsdoc-link\">dojo/Evented</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">type</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">event</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Container_forInItems\">\n<span class=\"functionIcon\">forInItems</span><span class=\"parameters\">(f,o)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <p>iterates over a data map skipping members that are present in the empty object (IE and/or 3rd-party libraries).</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">f</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">o</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">string</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Container_getAllNodes\">\n<span class=\"functionIcon\">getAllNodes</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <p>returns a list (an array) of all valid child nodes</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Container_getItem\">\n<span class=\"functionIcon\">getItem</span><span class=\"parameters\">(key)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <p>returns a data item by its key (id)</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">key</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Container_insertNodes\">\n<span class=\"functionIcon\">insertNodes</span><span class=\"parameters\">(data,before,anchor)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <p>inserts an array of new nodes before/after an anchor node</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">data</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>Logical representation of the object being dragged. If the drag object's type is \"text\" then data is a String, if it's another type then data could be a different Object, perhaps a name/value hash.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">before</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\">\n<p>insert before the anchor, if true, and after the anchor otherwise</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">anchor</td> <td class=\"jsdoc-param-type\">Node</td> <td class=\"jsdoc-param-description\">\n<p>the anchor node to be used as a point of insertion</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">function</span></p> <p>inserts an array of new nodes before/after an anchor node</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Container_Item\">\n<span class=\"functionIcon\">Item</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <p>Represents (one of) the source node(s) being dragged. Contains (at least) the \"type\" and \"data\" attributes.</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Container_markupFactory\">\n<span class=\"functionIcon\">markupFactory</span><span class=\"parameters\">(params,node,Ctor)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">params</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">Ctor</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">instance</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Container_on\">\n<span class=\"functionIcon\">on</span><span class=\"parameters\">(type,listener)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../evented\" class=\"jsdoc-link\">dojo/Evented</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">type</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">listener</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Container_setItem\">\n<span class=\"functionIcon\">setItem</span><span class=\"parameters\">(key,data)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <p>associates a data item with its key (id)</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">key</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">data</td> <td class=\"jsdoc-param-type\">Container.Item</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Container_startup\">\n<span class=\"functionIcon\">startup</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <p>collects valid child items and populate the map</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Container_sync\">\n<span class=\"functionIcon\">sync</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <p>sync up the node list with the data map</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">function</span></p> <p>sync up the node list with the data map</p>     <h2 id=\"events\">Events</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Container_onMouseOut\">\n<span class=\"functionIcon\">onMouseOut</span><span class=\"parameters\">(e)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <p>event processor for onmouseout</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">e</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\">\n<p>mouse event</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Container_onMouseOver\">\n<span class=\"functionIcon\">onMouseOver</span><span class=\"parameters\">(e)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <p>event processor for onmouseover or touch, to mark that element as the current element</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">e</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\">\n<p>mouse event</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Container_onOutEvent\">\n<span class=\"functionIcon\">onOutEvent</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <p>this function is called once, when mouse is out of our container</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Container_onOverEvent\">\n<span class=\"functionIcon\">onOverEvent</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <p>this function is called once, when mouse is over our container</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Container_onSelectStart\">\n<span class=\"functionIcon\">onSelectStart</span><span class=\"parameters\">(e)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <p>event processor for onselectevent and ondragevent</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">e</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\">\n<p>mouse event</p> </td> </tr> </table><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/dnd/Container.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/dnd/Container.html</a>\n  </p>\n</div>\n","dojo/dnd/move.boxconstrainedmoveable":"<h1>dojo/dnd/move.boxConstrainedMoveable</h1> <div class=\"jsdoc-mixins\"> <label>Extends</label><a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </div>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">\n<span class=\"sig\"><span class=\"keyword\">var </span><span class=\"var\">foo </span><span class=\"eq\">= </span><span class=\"new\">new </span><span class=\"args\">move.boxConstrainedMoveable</span></span><span class=\"parameters\"><span class=\"paren\">(</span><span class=\"args\">node,params</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <p class=\"jsdoc-inheritance\"> <label>Defined by </label><span><a class=\"jsdoc-link\" href=\"move\">dojo/dnd/move</a></span> </p> <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">Node</td> <td class=\"jsdoc-param-description\">\n<p>a node (or node's id) to be moved</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">params</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>an optional object with parameters</p> </td> </tr> </table> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/dnd.html\" target=\"_blank\">dojo/dnd/move.boxConstrainedMoveable reference documentation</a> for more information.</p>              <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_move_boxConstrainedMoveable_box\">\n<span class=\"objectIcon\">box</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"move\" class=\"jsdoc-link\">dojo/dnd/move</a> </p> <div class=\"jsdoc-summary\">\n<p>object attributes (for markup)</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_move_boxConstrainedMoveable_delay\">\n<span class=\"numberIcon\">delay</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_move_boxConstrainedMoveable_handle\">\n<span class=\"stringIcon\">handle</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_move_boxConstrainedMoveable_skip\">\n<span class=\"booleanIcon\">skip</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_move_boxConstrainedMoveable_within\">\n<span class=\"booleanIcon\">within</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"move\" class=\"jsdoc-link\">dojo/dnd/move</a> </p>    <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_move_boxConstrainedMoveable_constraints\">\n<span class=\"functionIcon\">constraints</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"move\" class=\"jsdoc-link\">dojo/dnd/move</a> </p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_move_boxConstrainedMoveable_destroy\">\n<span class=\"functionIcon\">destroy</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p> <p>stops watching for possible move, deletes all references, so the object can be garbage-collected</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_move_boxConstrainedMoveable_emit\">\n<span class=\"functionIcon\">emit</span><span class=\"parameters\">(type,event)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../evented\" class=\"jsdoc-link\">dojo/Evented</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">type</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">event</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_move_boxConstrainedMoveable_markupFactory\">\n<span class=\"functionIcon\">markupFactory</span><span class=\"parameters\">(params,node,Ctor)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">params</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">Ctor</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">instance</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_move_boxConstrainedMoveable_on\">\n<span class=\"functionIcon\">on</span><span class=\"parameters\">(type,listener)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../evented\" class=\"jsdoc-link\">dojo/Evented</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">type</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">listener</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>    <h2 id=\"events\">Events</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_move_boxConstrainedMoveable_onDragDetected\">\n<span class=\"functionIcon\">onDragDetected</span><span class=\"parameters\">(e)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p> <p>called when the drag is detected; responsible for creation of the mover</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">e</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_move_boxConstrainedMoveable_onFirstMove\">\n<span class=\"functionIcon\">onFirstMove</span><span class=\"parameters\">(mover)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"move\" class=\"jsdoc-link\">dojo/dnd/move</a> </p> <p>called during the very first move notification; can be used to initialize coordinates, can be overwritten.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">mover</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"mover\">dojo/dnd/Mover</a></td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_move_boxConstrainedMoveable_onMouseDown\">\n<span class=\"functionIcon\">onMouseDown</span><span class=\"parameters\">(e)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p> <p>event processor for onmousedown/ontouchstart, creates a Mover for the node</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">e</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\">\n<p>mouse/touch event</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_move_boxConstrainedMoveable_onMouseMove\">\n<span class=\"functionIcon\">onMouseMove</span><span class=\"parameters\">(e)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p> <p>event processor for onmousemove/ontouchmove, used only for delayed drags</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">e</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\">\n<p>mouse/touch event</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_move_boxConstrainedMoveable_onMouseUp\">\n<span class=\"functionIcon\">onMouseUp</span><span class=\"parameters\">(e)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p> <p>event processor for onmouseup, used only for delayed drags</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">e</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\">\n<p>mouse event</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_move_boxConstrainedMoveable_onMove\">\n<span class=\"functionIcon\">onMove</span><span class=\"parameters\">(mover,leftTop)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"move\" class=\"jsdoc-link\">dojo/dnd/move</a> </p> <p>called during every move notification; should actually move the node; can be overwritten.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">mover</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"mover\">dojo/dnd/Mover</a></td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">leftTop</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_move_boxConstrainedMoveable_onMoved\">\n<span class=\"functionIcon\">onMoved</span><span class=\"parameters\">(mover,leftTop)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p> <p>called after every incremental move; can be overwritten.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">mover</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"mover\">dojo/dnd/Mover</a></td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">leftTop</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_move_boxConstrainedMoveable_onMoveStart\">\n<span class=\"functionIcon\">onMoveStart</span><span class=\"parameters\">(mover)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p> <p>called before every move operation</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">mover</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"mover\">dojo/dnd/Mover</a></td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_move_boxConstrainedMoveable_onMoveStop\">\n<span class=\"functionIcon\">onMoveStop</span><span class=\"parameters\">(mover)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p> <p>called after every move operation</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">mover</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"mover\">dojo/dnd/Mover</a></td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_move_boxConstrainedMoveable_onMoving\">\n<span class=\"functionIcon\">onMoving</span><span class=\"parameters\">(mover,leftTop)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p> <p>called before every incremental move; can be overwritten.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">mover</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"mover\">dojo/dnd/Mover</a></td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">leftTop</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_move_boxConstrainedMoveable_onSelectStart\">\n<span class=\"functionIcon\">onSelectStart</span><span class=\"parameters\">(e)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p> <p>event processor for onselectevent and ondragevent</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">e</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\">\n<p>mouse event</p> </td> </tr> </table><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/dnd/move.boxConstrainedMoveable.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/dnd/move.boxConstrainedMoveable.html</a>\n  </p>\n</div>\n","dojo/dnd/move.constrainedmoveable":"<h1>dojo/dnd/move.constrainedMoveable</h1> <div class=\"jsdoc-mixins\"> <label>Extends</label><a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </div>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">\n<span class=\"sig\"><span class=\"keyword\">var </span><span class=\"var\">foo </span><span class=\"eq\">= </span><span class=\"new\">new </span><span class=\"args\">move.constrainedMoveable</span></span><span class=\"parameters\"><span class=\"paren\">(</span><span class=\"args\">node,params</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <p class=\"jsdoc-inheritance\"> <label>Defined by </label><span><a class=\"jsdoc-link\" href=\"move\">dojo/dnd/move</a></span> </p> <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">Node</td> <td class=\"jsdoc-param-description\">\n<p>a node (or node's id) to be moved</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">params</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>an optional object with additional parameters; the rest is passed to the base class</p> </td> </tr> </table> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/dnd.html\" target=\"_blank\">dojo/dnd/move.constrainedMoveable reference documentation</a> for more information.</p>              <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_move_constrainedMoveable_delay\">\n<span class=\"numberIcon\">delay</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_move_constrainedMoveable_handle\">\n<span class=\"stringIcon\">handle</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_move_constrainedMoveable_skip\">\n<span class=\"booleanIcon\">skip</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_move_constrainedMoveable_within\">\n<span class=\"booleanIcon\">within</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"move\" class=\"jsdoc-link\">dojo/dnd/move</a> </p>    <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_move_constrainedMoveable_constraints\">\n<span class=\"functionIcon\">constraints</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"move\" class=\"jsdoc-link\">dojo/dnd/move</a> </p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_move_constrainedMoveable_destroy\">\n<span class=\"functionIcon\">destroy</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p> <p>stops watching for possible move, deletes all references, so the object can be garbage-collected</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_move_constrainedMoveable_emit\">\n<span class=\"functionIcon\">emit</span><span class=\"parameters\">(type,event)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../evented\" class=\"jsdoc-link\">dojo/Evented</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">type</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">event</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_move_constrainedMoveable_markupFactory\">\n<span class=\"functionIcon\">markupFactory</span><span class=\"parameters\">(params,node,Ctor)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">params</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">Ctor</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">instance</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_move_constrainedMoveable_on\">\n<span class=\"functionIcon\">on</span><span class=\"parameters\">(type,listener)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../evented\" class=\"jsdoc-link\">dojo/Evented</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">type</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">listener</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>    <h2 id=\"events\">Events</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_move_constrainedMoveable_onDragDetected\">\n<span class=\"functionIcon\">onDragDetected</span><span class=\"parameters\">(e)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p> <p>called when the drag is detected; responsible for creation of the mover</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">e</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_move_constrainedMoveable_onFirstMove\">\n<span class=\"functionIcon\">onFirstMove</span><span class=\"parameters\">(mover)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"move\" class=\"jsdoc-link\">dojo/dnd/move</a> </p> <p>called during the very first move notification; can be used to initialize coordinates, can be overwritten.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">mover</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"mover\">dojo/dnd/Mover</a></td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_move_constrainedMoveable_onMouseDown\">\n<span class=\"functionIcon\">onMouseDown</span><span class=\"parameters\">(e)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p> <p>event processor for onmousedown/ontouchstart, creates a Mover for the node</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">e</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\">\n<p>mouse/touch event</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_move_constrainedMoveable_onMouseMove\">\n<span class=\"functionIcon\">onMouseMove</span><span class=\"parameters\">(e)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p> <p>event processor for onmousemove/ontouchmove, used only for delayed drags</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">e</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\">\n<p>mouse/touch event</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_move_constrainedMoveable_onMouseUp\">\n<span class=\"functionIcon\">onMouseUp</span><span class=\"parameters\">(e)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p> <p>event processor for onmouseup, used only for delayed drags</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">e</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\">\n<p>mouse event</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_move_constrainedMoveable_onMove\">\n<span class=\"functionIcon\">onMove</span><span class=\"parameters\">(mover,leftTop)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"move\" class=\"jsdoc-link\">dojo/dnd/move</a> </p> <p>called during every move notification; should actually move the node; can be overwritten.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">mover</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"mover\">dojo/dnd/Mover</a></td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">leftTop</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_move_constrainedMoveable_onMoved\">\n<span class=\"functionIcon\">onMoved</span><span class=\"parameters\">(mover,leftTop)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p> <p>called after every incremental move; can be overwritten.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">mover</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"mover\">dojo/dnd/Mover</a></td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">leftTop</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_move_constrainedMoveable_onMoveStart\">\n<span class=\"functionIcon\">onMoveStart</span><span class=\"parameters\">(mover)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p> <p>called before every move operation</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">mover</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"mover\">dojo/dnd/Mover</a></td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_move_constrainedMoveable_onMoveStop\">\n<span class=\"functionIcon\">onMoveStop</span><span class=\"parameters\">(mover)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p> <p>called after every move operation</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">mover</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"mover\">dojo/dnd/Mover</a></td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_move_constrainedMoveable_onMoving\">\n<span class=\"functionIcon\">onMoving</span><span class=\"parameters\">(mover,leftTop)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p> <p>called before every incremental move; can be overwritten.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">mover</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"mover\">dojo/dnd/Mover</a></td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">leftTop</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_move_constrainedMoveable_onSelectStart\">\n<span class=\"functionIcon\">onSelectStart</span><span class=\"parameters\">(e)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p> <p>event processor for onselectevent and ondragevent</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">e</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\">\n<p>mouse event</p> </td> </tr> </table><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/dnd/move.constrainedMoveable.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/dnd/move.constrainedMoveable.html</a>\n  </p>\n</div>\n","dojo/dnd/move.parentconstrainedmoveable":"<h1>dojo/dnd/move.parentConstrainedMoveable</h1> <div class=\"jsdoc-mixins\"> <label>Extends</label><a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </div>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">\n<span class=\"sig\"><span class=\"keyword\">var </span><span class=\"var\">foo </span><span class=\"eq\">= </span><span class=\"new\">new </span><span class=\"args\">move.parentConstrainedMoveable</span></span><span class=\"parameters\"><span class=\"paren\">(</span><span class=\"args\">node,params</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <p class=\"jsdoc-inheritance\"> <label>Defined by </label><span><a class=\"jsdoc-link\" href=\"move\">dojo/dnd/move</a></span> </p> <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">Node</td> <td class=\"jsdoc-param-description\">\n<p>a node (or node's id) to be moved</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">params</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>an optional object with parameters</p> </td> </tr> </table> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/dnd.html\" target=\"_blank\">dojo/dnd/move.parentConstrainedMoveable reference documentation</a> for more information.</p>              <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_move_parentConstrainedMoveable_area\">\n<span class=\"stringIcon\">area</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"move\" class=\"jsdoc-link\">dojo/dnd/move</a> </p> <div class=\"jsdoc-summary\">\n<p>object attributes (for markup)</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_move_parentConstrainedMoveable_delay\">\n<span class=\"numberIcon\">delay</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_move_parentConstrainedMoveable_handle\">\n<span class=\"stringIcon\">handle</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_move_parentConstrainedMoveable_skip\">\n<span class=\"booleanIcon\">skip</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_move_parentConstrainedMoveable_within\">\n<span class=\"booleanIcon\">within</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"move\" class=\"jsdoc-link\">dojo/dnd/move</a> </p>    <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_move_parentConstrainedMoveable_constraints\">\n<span class=\"functionIcon\">constraints</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"move\" class=\"jsdoc-link\">dojo/dnd/move</a> </p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_move_parentConstrainedMoveable_destroy\">\n<span class=\"functionIcon\">destroy</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p> <p>stops watching for possible move, deletes all references, so the object can be garbage-collected</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_move_parentConstrainedMoveable_emit\">\n<span class=\"functionIcon\">emit</span><span class=\"parameters\">(type,event)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../evented\" class=\"jsdoc-link\">dojo/Evented</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">type</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">event</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_move_parentConstrainedMoveable_markupFactory\">\n<span class=\"functionIcon\">markupFactory</span><span class=\"parameters\">(params,node,Ctor)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">params</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">Ctor</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">instance</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_move_parentConstrainedMoveable_on\">\n<span class=\"functionIcon\">on</span><span class=\"parameters\">(type,listener)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../evented\" class=\"jsdoc-link\">dojo/Evented</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">type</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">listener</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>    <h2 id=\"events\">Events</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_move_parentConstrainedMoveable_onDragDetected\">\n<span class=\"functionIcon\">onDragDetected</span><span class=\"parameters\">(e)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p> <p>called when the drag is detected; responsible for creation of the mover</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">e</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_move_parentConstrainedMoveable_onFirstMove\">\n<span class=\"functionIcon\">onFirstMove</span><span class=\"parameters\">(mover)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"move\" class=\"jsdoc-link\">dojo/dnd/move</a> </p> <p>called during the very first move notification; can be used to initialize coordinates, can be overwritten.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">mover</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"mover\">dojo/dnd/Mover</a></td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_move_parentConstrainedMoveable_onMouseDown\">\n<span class=\"functionIcon\">onMouseDown</span><span class=\"parameters\">(e)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p> <p>event processor for onmousedown/ontouchstart, creates a Mover for the node</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">e</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\">\n<p>mouse/touch event</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_move_parentConstrainedMoveable_onMouseMove\">\n<span class=\"functionIcon\">onMouseMove</span><span class=\"parameters\">(e)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p> <p>event processor for onmousemove/ontouchmove, used only for delayed drags</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">e</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\">\n<p>mouse/touch event</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_move_parentConstrainedMoveable_onMouseUp\">\n<span class=\"functionIcon\">onMouseUp</span><span class=\"parameters\">(e)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p> <p>event processor for onmouseup, used only for delayed drags</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">e</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\">\n<p>mouse event</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_move_parentConstrainedMoveable_onMove\">\n<span class=\"functionIcon\">onMove</span><span class=\"parameters\">(mover,leftTop)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"move\" class=\"jsdoc-link\">dojo/dnd/move</a> </p> <p>called during every move notification; should actually move the node; can be overwritten.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">mover</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"mover\">dojo/dnd/Mover</a></td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">leftTop</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_move_parentConstrainedMoveable_onMoved\">\n<span class=\"functionIcon\">onMoved</span><span class=\"parameters\">(mover,leftTop)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p> <p>called after every incremental move; can be overwritten.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">mover</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"mover\">dojo/dnd/Mover</a></td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">leftTop</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_move_parentConstrainedMoveable_onMoveStart\">\n<span class=\"functionIcon\">onMoveStart</span><span class=\"parameters\">(mover)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p> <p>called before every move operation</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">mover</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"mover\">dojo/dnd/Mover</a></td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_move_parentConstrainedMoveable_onMoveStop\">\n<span class=\"functionIcon\">onMoveStop</span><span class=\"parameters\">(mover)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p> <p>called after every move operation</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">mover</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"mover\">dojo/dnd/Mover</a></td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_move_parentConstrainedMoveable_onMoving\">\n<span class=\"functionIcon\">onMoving</span><span class=\"parameters\">(mover,leftTop)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p> <p>called before every incremental move; can be overwritten.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">mover</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"mover\">dojo/dnd/Mover</a></td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">leftTop</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_move_parentConstrainedMoveable_onSelectStart\">\n<span class=\"functionIcon\">onSelectStart</span><span class=\"parameters\">(e)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p> <p>event processor for onselectevent and ondragevent</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">e</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\">\n<p>mouse event</p> </td> </tr> </table><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/dnd/move.parentConstrainedMoveable.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/dnd/move.parentConstrainedMoveable.html</a>\n  </p>\n</div>\n","dojo/dnd/moveable":"<h1>dojo/dnd/Moveable</h1> <div class=\"jsdoc-mixins\"> <label>Extends</label><a href=\"../evented\" class=\"jsdoc-link\">dojo/Evented</a> </div>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>an object, which makes a node movable</p>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">\n<span class=\"sig\"><span class=\"keyword\">var </span><span class=\"var\">foo </span><span class=\"eq\">= </span><span class=\"new\">new </span><span class=\"args\">Moveable</span></span><span class=\"parameters\"><span class=\"paren\">(</span><span class=\"args\">node,params</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <p class=\"jsdoc-inheritance\"> <label>Defined by </label><span><a class=\"jsdoc-link\" href=\"moveable\">dojo/dnd/Moveable</a></span> </p> <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">Node</td> <td class=\"jsdoc-param-description\">\n<p>a node (or node's id) to be moved</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">params</td> <td class=\"jsdoc-param-type\">Moveable.__MoveableArgs</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>optional parameters</p> </td> </tr> </table> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/dnd/Moveable.html\" target=\"_blank\">dojo/dnd/Moveable reference documentation</a> for more information.</p>              <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Moveable_delay\">\n<span class=\"numberIcon\">delay</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Moveable_handle\">\n<span class=\"stringIcon\">handle</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Moveable_skip\">\n<span class=\"booleanIcon\">skip</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p>    <h2 id=\"methods\">Methods</h2>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Moveable_destroy\">\n<span class=\"functionIcon\">destroy</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p> <p>stops watching for possible move, deletes all references, so the object can be garbage-collected</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Moveable_emit\">\n<span class=\"functionIcon\">emit</span><span class=\"parameters\">(type,event)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../evented\" class=\"jsdoc-link\">dojo/Evented</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">type</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">event</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Moveable_markupFactory\">\n<span class=\"functionIcon\">markupFactory</span><span class=\"parameters\">(params,node,Ctor)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">params</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">Ctor</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">instance</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Moveable_on\">\n<span class=\"functionIcon\">on</span><span class=\"parameters\">(type,listener)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../evented\" class=\"jsdoc-link\">dojo/Evented</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">type</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">listener</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>    <h2 id=\"events\">Events</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Moveable_onDragDetected\">\n<span class=\"functionIcon\">onDragDetected</span><span class=\"parameters\">(e)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p> <p>called when the drag is detected; responsible for creation of the mover</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">e</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Moveable_onFirstMove\">\n<span class=\"functionIcon\">onFirstMove</span><span class=\"parameters\">(mover,e)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p> <p>called during the very first move notification; can be used to initialize coordinates, can be overwritten.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">mover</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"mover\">dojo/dnd/Mover</a></td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">e</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Moveable_onMouseDown\">\n<span class=\"functionIcon\">onMouseDown</span><span class=\"parameters\">(e)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p> <p>event processor for onmousedown/ontouchstart, creates a Mover for the node</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">e</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\">\n<p>mouse/touch event</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Moveable_onMouseMove\">\n<span class=\"functionIcon\">onMouseMove</span><span class=\"parameters\">(e)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p> <p>event processor for onmousemove/ontouchmove, used only for delayed drags</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">e</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\">\n<p>mouse/touch event</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Moveable_onMouseUp\">\n<span class=\"functionIcon\">onMouseUp</span><span class=\"parameters\">(e)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p> <p>event processor for onmouseup, used only for delayed drags</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">e</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\">\n<p>mouse event</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Moveable_onMove\">\n<span class=\"functionIcon\">onMove</span><span class=\"parameters\">(mover,leftTop,e)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p> <p>called during every move notification; should actually move the node; can be overwritten.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">mover</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"mover\">dojo/dnd/Mover</a></td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">leftTop</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">e</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Moveable_onMoved\">\n<span class=\"functionIcon\">onMoved</span><span class=\"parameters\">(mover,leftTop)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p> <p>called after every incremental move; can be overwritten.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">mover</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"mover\">dojo/dnd/Mover</a></td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">leftTop</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Moveable_onMoveStart\">\n<span class=\"functionIcon\">onMoveStart</span><span class=\"parameters\">(mover)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p> <p>called before every move operation</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">mover</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"mover\">dojo/dnd/Mover</a></td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Moveable_onMoveStop\">\n<span class=\"functionIcon\">onMoveStop</span><span class=\"parameters\">(mover)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p> <p>called after every move operation</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">mover</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"mover\">dojo/dnd/Mover</a></td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Moveable_onMoving\">\n<span class=\"functionIcon\">onMoving</span><span class=\"parameters\">(mover,leftTop)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p> <p>called before every incremental move; can be overwritten.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">mover</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"mover\">dojo/dnd/Mover</a></td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">leftTop</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Moveable_onSelectStart\">\n<span class=\"functionIcon\">onSelectStart</span><span class=\"parameters\">(e)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p> <p>event processor for onselectevent and ondragevent</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">e</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\">\n<p>mouse event</p> </td> </tr> </table><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/dnd/Moveable.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/dnd/Moveable.html</a>\n  </p>\n</div>\n","dojo/dom":"<h1>dojo/dom</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>This module defines the core dojo DOM API.</p>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/dom.html\" target=\"_blank\">dojo/dom reference documentation</a> for more information.</p>          <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_dom_byId\">\n<span class=\"functionIcon\">byId</span><span class=\"parameters\">(id,doc)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom\" class=\"jsdoc-link\">dojo/dom</a> </p> <p>Returns DOM node with matching <code>id</code> attribute or falsy value (ex: null or undefined) if not found. If <code>id</code> is a DomNode, this function is a no-op. </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">id</td> <td class=\"jsdoc-param-type\">String | DOMNode</td> <td class=\"jsdoc-param-description\">\n<p>A string to match an HTML id attribute or a reference to a DOM Node </p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">doc</td> <td class=\"jsdoc-param-type\">Document</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Document to work in. Defaults to the current value of dojo/_base/window.doc. Can be used to retrieve node references from other documents. </p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">instance</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Look up a node by ID: </p> <pre><code>require([\"dojo/dom\"], function(dom){\n    var n = dom.byId(\"foo\");\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>Check if a node exists, and use it. </p> <pre><code>require([\"dojo/dom\"], function(dom){\n    var n = dom.byId(\"bar\");\n    if(n){ doStuff() ... }\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<p>Allow string or DomNode references to be passed to a custom function: </p> <pre><code>require([\"dojo/dom\"], function(dom){\n    var foo = function(nodeOrId){\n        nodeOrId = dom.byId(nodeOrId);\n        // ... more stuff\n    }\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dom_isDescendant\">\n<span class=\"functionIcon\">isDescendant</span><span class=\"parameters\">(node,ancestor)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom\" class=\"jsdoc-link\">dojo/dom</a> </p> <p>Returns true if node is a descendant of ancestor</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode | String</td> <td class=\"jsdoc-param-description\">\n<p>string id or node reference to test</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">ancestor</td> <td class=\"jsdoc-param-type\">DOMNode | String</td> <td class=\"jsdoc-param-description\">\n<p>string id or node reference of potential parent to test against </p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">boolean</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Test is node id=\"bar\" is a descendant of node id=\"foo\" </p> <pre><code>require([\"dojo/dom\"], function(dom){\n    if(dom.isDescendant(\"bar\", \"foo\")){ ... }\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dom_setSelectable\">\n<span class=\"functionIcon\">setSelectable</span><span class=\"parameters\">(node,selectable)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom\" class=\"jsdoc-link\">dojo/dom</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">selectable</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/dom.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/dom.html</a>\n  </p>\n</div>\n","dojo/dom-attr":"<h1>dojo/dom-attr</h1>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/dom-attr.html\" target=\"_blank\">dojo/dom-attr reference documentation</a> for more information.</p>          <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_dom-attr_get\">\n<span class=\"functionIcon\">get</span><span class=\"parameters\">(node,name)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom-attr\" class=\"jsdoc-link\">dojo/dom-attr</a> </p> <p>Gets an attribute on an HTML element.</p>  <p>Handles normalized getting of attributes on DOM Nodes.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode | String</td> <td class=\"jsdoc-param-description\">\n<p>id or reference to the element to get the attribute on</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">name</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>the name of the attribute to get.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | undefined | null</span></p> <p>the value of the requested attribute or null if that attribute does not have a specified or default value; </p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>// get the current value of the \"foo\" attribute on a node\nrequire([\"dojo/dom-attr\", \"dojo/dom\"], function(domAttr, dom){\n    domAttr.get(dom.byId(\"nodeId\"), \"foo\");\n    // or we can just pass the id:\n    domAttr.get(\"nodeId\", \"foo\");\n}); </code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dom-attr_getNodeProp\">\n<span class=\"functionIcon\">getNodeProp</span><span class=\"parameters\">(node,name)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom-attr\" class=\"jsdoc-link\">dojo/dom-attr</a> </p> <p>Returns an effective value of a property or an attribute.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode | String</td> <td class=\"jsdoc-param-description\">\n<p>id or reference to the element to remove the attribute from</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">name</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>the name of the attribute</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any</span></p> <p>the value of the attribute</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_dom-attr_has\">\n<span class=\"functionIcon\">has</span><span class=\"parameters\">(node,name)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom-attr\" class=\"jsdoc-link\">dojo/dom-attr</a> </p> <p>Returns true if the requested attribute is specified on the given element, and false otherwise.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode | String</td> <td class=\"jsdoc-param-description\">\n<p>id or reference to the element to check</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">name</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>the name of the attribute</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Boolean | contentWindow.document isn't accessible within IE7/8</span></p> <p>true if the requested attribute is specified on the given element, and false otherwise</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_dom-attr_remove\">\n<span class=\"functionIcon\">remove</span><span class=\"parameters\">(node,name)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom-attr\" class=\"jsdoc-link\">dojo/dom-attr</a> </p> <p>Removes an attribute from an HTML element.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode | String</td> <td class=\"jsdoc-param-description\">\n<p>id or reference to the element to remove the attribute from</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">name</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>the name of the attribute to remove</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dom-attr_set\">\n<span class=\"functionIcon\">set</span><span class=\"parameters\">(node,name,value)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom-attr\" class=\"jsdoc-link\">dojo/dom-attr</a> </p> <p>Sets an attribute on an HTML element.</p>  <p>Handles normalized setting of attributes on DOM Nodes. </p> <p>When passing functions as values, note that they will not be directly assigned to slots on the node, but rather the default behavior will be removed and the new behavior will be added using <code>dojo.connect()</code>, meaning that event handler properties will be normalized and that some caveats with regards to non-standard behaviors for onsubmit apply. Namely that you should cancel form submission using <code>dojo.stopEvent()</code> on the passed event object instead of returning a boolean value from the handler itself.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode | String</td> <td class=\"jsdoc-param-description\">\n<p>id or reference to the element to set the attribute on</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">name</td> <td class=\"jsdoc-param-type\">String | Object</td> <td class=\"jsdoc-param-description\">\n<p>the name of the attribute to set, or a hash of key-value pairs to set.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">value</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>the value to set for the attribute, if the name is a string.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | undefined</span></p> <p>the DOM node </p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>// use attr() to set the tab index\nrequire([\"dojo/dom-attr\"], function(domAttr){\n    domAttr.set(\"nodeId\", \"tabIndex\", 3);\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>Set multiple values at once, including event handlers: </p> <pre><code>require([\"dojo/dom-attr\"],\nfunction(domAttr){\n    domAttr.set(\"formId\", {\n        \"foo\": \"bar\",\n        \"tabIndex\": -1,\n        \"method\": \"POST\"\n    }\n});</code></pre> </div> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/dom-attr.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/dom-attr.html</a>\n  </p>\n</div>\n","dojo/data/itemfilewritestore":"<h1>dojo/data/ItemFileWriteStore</h1> <div class=\"jsdoc-mixins\"> <label>Extends</label><a href=\"itemfilereadstore\" class=\"jsdoc-link\">dojo/data/ItemFileReadStore</a> </div>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>TODOC</p>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">\n<span class=\"sig\"><span class=\"keyword\">var </span><span class=\"var\">foo </span><span class=\"eq\">= </span><span class=\"new\">new </span><span class=\"args\">ItemFileWriteStore</span></span><span class=\"parameters\"><span class=\"paren\">(</span><span class=\"args\">keywordParameters</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <p class=\"jsdoc-inheritance\"> <label>Defined by </label><span><a class=\"jsdoc-link\" href=\"itemfilewritestore\">dojo/data/ItemFileWriteStore</a></span> </p> <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">keywordParameters</td> <td class=\"jsdoc-param-type\">object</td> <td class=\"jsdoc-param-description\">\n<p>The structure of the typeMap object is as follows: </p> <pre><code>{\n    type0: function || object,\n    type1: function || object,\n    ...\n    typeN: function || object\n}</code></pre> <p>Where if it is a function, it is assumed to be an object constructor that takes the </p> <p>value of _value as the initialization parameters. It is serialized assuming object.toString() serialization. If it is an object, then it is assumed to be an object of general form: </p> <pre><code>{\n    type: function, //constructor.\n    deserialize:    function(value) //The function that parses the value and constructs the object defined by type appropriately.\n    serialize:  function(object) //The function that converts the object back into the proper file format form.\n}</code></pre> </td> </tr> </table> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/data/ItemFileWriteStore.html\" target=\"_blank\">dojo/data/ItemFileWriteStore reference documentation</a> for more information.</p>              <h2 id=\"properties\">Properties</h2>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ItemFileWriteStore_clearOnClose\">\n<span class=\"booleanIcon\">clearOnClose</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"itemfilereadstore\" class=\"jsdoc-link\">dojo/data/ItemFileReadStore</a> </p> <div class=\"jsdoc-summary\">\n<p>Parameter to allow users to specify if a close call should force a reload or not. By default, it retains the old behavior of not clearing if close is called. But if set true, the store will be reset to default state. Note that by doing this, all item handles will become invalid and a new fetch must be issued.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ItemFileWriteStore_data\">\n<span class=\"objectIcon\">data</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"itemfilereadstore\" class=\"jsdoc-link\">dojo/data/ItemFileReadStore</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ItemFileWriteStore_failOk\">\n<span class=\"booleanIcon\">failOk</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"itemfilereadstore\" class=\"jsdoc-link\">dojo/data/ItemFileReadStore</a> </p> <div class=\"jsdoc-summary\">\n<p>Parameter for specifying that it is OK for the xhrGet call to fail silently.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ItemFileWriteStore_hierarchical\">\n<span class=\"booleanIcon\">hierarchical</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"itemfilereadstore\" class=\"jsdoc-link\">dojo/data/ItemFileReadStore</a> </p> <div class=\"jsdoc-summary\">\n<p>Parameter to indicate to process data from the url as hierarchical (data items can contain other data items in js form). Default is true for backwards compatibility. False means only root items are processed as items, all child objects outside of type-mapped objects and those in specific reference format, are left straight JS data objects.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ItemFileWriteStore_referenceIntegrity\">\n<span class=\"booleanIcon\">referenceIntegrity</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"itemfilewritestore\" class=\"jsdoc-link\">dojo/data/ItemFileWriteStore</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ItemFileWriteStore_typeMap\">\n<span class=\"objectIcon\">typeMap</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"itemfilereadstore\" class=\"jsdoc-link\">dojo/data/ItemFileReadStore</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ItemFileWriteStore_url\">\n<span class=\"stringIcon\">url</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"itemfilereadstore\" class=\"jsdoc-link\">dojo/data/ItemFileReadStore</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ItemFileWriteStore_urlPreventCache\">\n<span class=\"booleanIcon\">urlPreventCache</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"itemfilereadstore\" class=\"jsdoc-link\">dojo/data/ItemFileReadStore</a> </p> <div class=\"jsdoc-summary\">\n<p>Parameter to allow specifying if preventCache should be passed to the xhrGet call or not when loading data from a url. Note this does not mean the store calls the server on each fetch, only that the data load has preventCache set as an option. Added for tracker: #6072</p> </div>    <h2 id=\"methods\">Methods</h2>                        <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ItemFileWriteStore_close\">\n<span class=\"functionIcon\">close</span><span class=\"parameters\">(request)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"itemfilewritestore\" class=\"jsdoc-link\">dojo/data/ItemFileWriteStore</a> </p> <p>Over-ride of base close function of ItemFileReadStore to add in check for store state.</p>  <p>Over-ride of base close function of ItemFileReadStore to add in check for store state. If the store is still dirty (unsaved changes), then an error will be thrown instead of clearing the internal state for reload from the url.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">request</td> <td class=\"jsdoc-param-type\">object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ItemFileWriteStore_containsValue\">\n<span class=\"functionIcon\">containsValue</span><span class=\"parameters\">(item,attribute,value)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"itemfilereadstore\" class=\"jsdoc-link\">dojo/data/ItemFileReadStore</a> </p> <p>See dojo/data/api/Read.containsValue()</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"api/item\">dojo/data/api/Item</a></td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">attribute</td> <td class=\"jsdoc-param-type\">attribute-name-string</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">value</td> <td class=\"jsdoc-param-type\">anything</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ItemFileWriteStore_deleteItem\">\n<span class=\"functionIcon\">deleteItem</span><span class=\"parameters\">(item)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"itemfilewritestore\" class=\"jsdoc-link\">dojo/data/ItemFileWriteStore</a> </p> <p>See dojo/data/api/Write.deleteItem()</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"api/item\">dojo/data/api/Item</a></td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">boolean</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ItemFileWriteStore_emit\">\n<span class=\"functionIcon\">emit</span><span class=\"parameters\">(type,event)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../evented\" class=\"jsdoc-link\">dojo/Evented</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">type</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">event</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ItemFileWriteStore_errorHandler\">\n<span class=\"functionIcon\">errorHandler</span><span class=\"parameters\">(errorData,requestObject)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"util/simplefetch\" class=\"jsdoc-link\">dojo/data/util/simpleFetch</a> </p> <p>The error handler when there is an error fetching items. This function should not be called directly and is used by simpleFetch.fetch().</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">errorData</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">requestObject</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ItemFileWriteStore_fetch\">\n<span class=\"functionIcon\">fetch</span><span class=\"parameters\">(request)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"util/simplefetch\" class=\"jsdoc-link\">dojo/data/util/simpleFetch</a> </p> <p>The simpleFetch mixin is designed to serve as a set of function(s) that can be mixed into other datastore implementations to accelerate their development.</p>  <p>The simpleFetch mixin should work well for any datastore that can respond to a _fetchItems() call by returning an array of all the found items that matched the query. The simpleFetch mixin is not designed to work for datastores that respond to a fetch() call by incrementally loading items, or sequentially loading partial batches of the result set. For datastores that mixin simpleFetch, simpleFetch implements a fetch method that automatically handles eight of the fetch() arguments -- onBegin, onItem, onComplete, onError, start, count, sort and scope The class mixing in simpleFetch should not implement fetch(), but should instead implement a _fetchItems() method. The _fetchItems() method takes three arguments, the keywordArgs object that was passed to fetch(), a callback function to be called when the result array is available, and an error callback to be called if something goes wrong. The _fetchItems() method should ignore any keywordArgs parameters for start, count, onBegin, onItem, onComplete, onError, sort, and scope. The _fetchItems() method needs to correctly handle any other keywordArgs parameters, including the query parameter and any optional parameters (such as includeChildren). The _fetchItems() method should create an array of result items and pass it to the fetchHandler along with the original request object -- or, the _fetchItems() method may, if it wants to, create an new request object with other specifics about the request that are specific to the datastore and pass that as the request object to the handler. </p> <p>For more information on this specific function, see <a class=\"jsdoc-link\" href=\"api/read#fetch\">dojo/data/api/Read.fetch()</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">request</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>The keywordArgs parameter may either be an instance of conforming to dojo/data/api/Request or may be a simple anonymous object that may contain any of the following: </p> <pre><code>{\n    query: query-object or query-string,\n    queryOptions: object,\n    onBegin: Function,\n    onItem: Function,\n    onComplete: Function,\n    onError: Function,\n    scope: object,\n    start: int\n    count: int\n    sort: array\n}</code></pre> <p>All implementations should accept keywordArgs objects with any of </p> <p>the 9 standard properties: query, onBegin, onItem, onComplete, onError scope, sort, start, and count. Some implementations may accept additional properties in the keywordArgs object as valid parameters, such as {includeOutliers:true}. </p> <h4>The <em>query</em> parameter</h4> <p>The query may be optional in some data store implementations. The dojo/data/api/Read API does not specify the syntax or semantics of the query itself -- each different data store implementation may have its own notion of what a query should look like. However, as of dojo 0.9, 1.0, and 1.1, all the provided datastores in dojo.data and dojox.data support an object structure query, where the object is a set of name/value parameters such as { attrFoo: valueBar, attrFoo1: valueBar1}. Most of the dijit widgets, such as ComboBox assume this to be the case when working with a datastore when they dynamically update the query. Therefore, for maximum compatibility with dijit widgets the recommended query parameter is a key/value object. That does not mean that the the datastore may not take alternative query forms, such as a simple string, a Date, a number, or a mix of such. Ultimately, The dojo/data/api/Read API is agnostic about what the query format. </p> <p>Further note: In general for query objects that accept strings as attribute value matches, the store should also support basic filtering capability, such as <em> (match any character) and ? (match single character). An example query that is a query object would be like: { attrFoo: \"value</em>\"}. Which generally means match all items where they have an attribute named attrFoo, with a value that starts with 'value'. </p> <h4>The <em>queryOptions</em> parameter</h4> <p>The queryOptions parameter is an optional parameter used to specify options that may modify the query in some fashion, such as doing a case insensitive search, or doing a deep search where all items in a hierarchical representation of data are scanned instead of just the root items. It currently defines two options that all datastores should attempt to honor if possible: </p> <pre><code>{\n    ignoreCase: boolean, // Whether or not the query should match case sensitively or not.  Default behaviour is false.\n    deep: boolean   // Whether or not a fetch should do a deep search of items and all child\n                    // items instead of just root-level items in a datastore.  Default is false.\n}</code></pre> <h4>The <em>onBegin</em> parameter.</h4> <p>function(size, request); If an onBegin callback function is provided, the callback function will be called just once, before the first onItem callback is called. The onBegin callback function will be passed two arguments, the the total number of items identified and the Request object. If the total number is unknown, then size will be -1. Note that size is not necessarily the size of the collection of items returned from the query, as the request may have specified to return only a subset of the total set of items through the use of the start and count parameters. </p> <h4>The <em>onItem</em> parameter.</h4> <p>function(item, request); </p> <p>If an onItem callback function is provided, the callback function will be called as each item in the result is received. The callback function will be passed two arguments: the item itself, and the Request object. </p> <h4>The <em>onComplete</em> parameter.</h4> <p>function(items, request); </p> <p>If an onComplete callback function is provided, the callback function will be called just once, after the last onItem callback is called. Note that if the onItem callback is not present, then onComplete will be passed an array containing all items which matched the query and the request object. If the onItem callback is present, then onComplete is called as: onComplete(null, request). </p> <h4>The <em>onError</em> parameter.</h4> <p>function(errorData, request); </p> <p>If an onError callback function is provided, the callback function will be called if there is any sort of error while attempting to execute the query. The onError callback function will be passed two arguments: an Error object and the Request object. </p> <h4>The <em>scope</em> parameter.</h4> <p>If a scope object is provided, all of the callback functions (onItem, onComplete, onError, etc) will be invoked in the context of the scope object. In the body of the callback function, the value of the \"this\" keyword will be the scope object. If no scope object is provided, the callback functions will be called in the context of dojo.global(). For example, onItem.call(scope, item, request) vs. onItem.call(dojo.global(), item, request) </p> <h4>The <em>start</em> parameter.</h4> <p>If a start parameter is specified, this is a indication to the datastore to only start returning items once the start number of items have been located and skipped. When this parameter is paired with 'count', the store should be able to page across queries with millions of hits by only returning subsets of the hits for each query </p> <h4>The <em>count</em> parameter.</h4> <p>If a count parameter is specified, this is a indication to the datastore to only return up to that many items. This allows a fetch call that may have millions of item matches to be paired down to something reasonable. </p> <h4>The <em>sort</em> parameter.</h4> <p>If a sort parameter is specified, this is a indication to the datastore to sort the items in some manner before returning the items. The array is an array of javascript objects that must conform to the following format to be applied to the fetching of items: </p> <pre><code>{\n    attribute: attribute || attribute-name-string,\n    descending: true|false;   // Optional.  Default is false.\n}</code></pre> <p>Note that when comparing attributes, if an item contains no value for the attribute </p> <p>(undefined), then it the default ascending sort logic should push it to the bottom of the list. In the descending order case, it such items should appear at the top of the list.</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ItemFileWriteStore_fetchHandler\">\n<span class=\"functionIcon\">fetchHandler</span><span class=\"parameters\">(items,requestObject)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"util/simplefetch\" class=\"jsdoc-link\">dojo/data/util/simpleFetch</a> </p> <p>The handler when items are successfully fetched. This function should not be called directly and is used by simpleFetch.fetch().</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">items</td> <td class=\"jsdoc-param-type\">Array</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">requestObject</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ItemFileWriteStore_fetchItemByIdentity\">\n<span class=\"functionIcon\">fetchItemByIdentity</span><span class=\"parameters\">(keywordArgs)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"itemfilereadstore\" class=\"jsdoc-link\">dojo/data/ItemFileReadStore</a> </p> <p>See dojo/data/api/Identity.fetchItemByIdentity()</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">keywordArgs</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ItemFileWriteStore_filter\">\n<span class=\"functionIcon\">filter</span><span class=\"parameters\">(requestArgs,arrayOfItems,findCallback)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"itemfilereadstore\" class=\"jsdoc-link\">dojo/data/ItemFileReadStore</a> </p> <p>This method handles the basic filtering needs for ItemFile* based stores.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">requestArgs</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">arrayOfItems</td> <td class=\"jsdoc-param-type\">item[]</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">findCallback</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ItemFileWriteStore_getAttributes\">\n<span class=\"functionIcon\">getAttributes</span><span class=\"parameters\">(item)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"itemfilereadstore\" class=\"jsdoc-link\">dojo/data/ItemFileReadStore</a> </p> <p>See dojo/data/api/Read.getAttributes()</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"api/item\">dojo/data/api/Item</a></td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Array</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ItemFileWriteStore_getFeatures\">\n<span class=\"functionIcon\">getFeatures</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"itemfilereadstore\" class=\"jsdoc-link\">dojo/data/ItemFileReadStore</a> </p> <p>See dojo/data/api/Read.getFeatures()</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ItemFileWriteStore_getIdentity\">\n<span class=\"functionIcon\">getIdentity</span><span class=\"parameters\">(item)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"itemfilereadstore\" class=\"jsdoc-link\">dojo/data/ItemFileReadStore</a> </p> <p>See dojo/data/api/Identity.getIdentity()</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"api/item\">dojo/data/api/Item</a></td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined | null</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ItemFileWriteStore_getIdentityAttributes\">\n<span class=\"functionIcon\">getIdentityAttributes</span><span class=\"parameters\">(item)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"itemfilereadstore\" class=\"jsdoc-link\">dojo/data/ItemFileReadStore</a> </p> <p>See dojo/data/api/Identity.getIdentityAttributes()</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"api/item\">dojo/data/api/Item</a></td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">null | Array</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ItemFileWriteStore_getLabel\">\n<span class=\"functionIcon\">getLabel</span><span class=\"parameters\">(item)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"itemfilereadstore\" class=\"jsdoc-link\">dojo/data/ItemFileReadStore</a> </p> <p>See dojo/data/api/Read.getLabel()</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"api/item\">dojo/data/api/Item</a></td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined | number</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ItemFileWriteStore_getLabelAttributes\">\n<span class=\"functionIcon\">getLabelAttributes</span><span class=\"parameters\">(item)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"itemfilereadstore\" class=\"jsdoc-link\">dojo/data/ItemFileReadStore</a> </p> <p>See dojo/data/api/Read.getLabelAttributes()</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"api/item\">dojo/data/api/Item</a></td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Array | null</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ItemFileWriteStore_getValue\">\n<span class=\"functionIcon\">getValue</span><span class=\"parameters\">(item,attribute,defaultValue)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"itemfilereadstore\" class=\"jsdoc-link\">dojo/data/ItemFileReadStore</a> </p> <p>See dojo/data/api/Read.getValue()</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"api/item\">dojo/data/api/Item</a></td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">attribute</td> <td class=\"jsdoc-param-type\">attribute-name-string</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">defaultValue</td> <td class=\"jsdoc-param-type\">value</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">value</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ItemFileWriteStore_getValues\">\n<span class=\"functionIcon\">getValues</span><span class=\"parameters\">(item,attribute)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"itemfilereadstore\" class=\"jsdoc-link\">dojo/data/ItemFileReadStore</a> </p> <p>See dojo/data/api/Read.getValues()</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"api/item\">dojo/data/api/Item</a></td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">attribute</td> <td class=\"jsdoc-param-type\">attribute-name-string</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ItemFileWriteStore_hasAttribute\">\n<span class=\"functionIcon\">hasAttribute</span><span class=\"parameters\">(item,attribute)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"itemfilereadstore\" class=\"jsdoc-link\">dojo/data/ItemFileReadStore</a> </p> <p>See dojo/data/api/Read.hasAttribute()</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"api/item\">dojo/data/api/Item</a></td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">attribute</td> <td class=\"jsdoc-param-type\">attribute-name-string</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">boolean</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ItemFileWriteStore_isDirty\">\n<span class=\"functionIcon\">isDirty</span><span class=\"parameters\">(item)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"itemfilewritestore\" class=\"jsdoc-link\">dojo/data/ItemFileWriteStore</a> </p> <p>See dojo/data/api/Write.isDirty()</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\">item</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined | boolean</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ItemFileWriteStore_isItem\">\n<span class=\"functionIcon\">isItem</span><span class=\"parameters\">(something)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"itemfilereadstore\" class=\"jsdoc-link\">dojo/data/ItemFileReadStore</a> </p> <p>See dojo/data/api/Read.isItem()</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">something</td> <td class=\"jsdoc-param-type\">anything</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">boolean</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ItemFileWriteStore_isItemLoaded\">\n<span class=\"functionIcon\">isItemLoaded</span><span class=\"parameters\">(something)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"itemfilereadstore\" class=\"jsdoc-link\">dojo/data/ItemFileReadStore</a> </p> <p>See dojo/data/api/Read.isItemLoaded()</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">something</td> <td class=\"jsdoc-param-type\">anything</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ItemFileWriteStore_loadItem\">\n<span class=\"functionIcon\">loadItem</span><span class=\"parameters\">(keywordArgs)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"itemfilereadstore\" class=\"jsdoc-link\">dojo/data/ItemFileReadStore</a> </p> <p>See dojo/data/api/Read.loadItem()</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">keywordArgs</td> <td class=\"jsdoc-param-type\">object</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ItemFileWriteStore_newItem\">\n<span class=\"functionIcon\">newItem</span><span class=\"parameters\">(keywordArgs,parentInfo)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"itemfilewritestore\" class=\"jsdoc-link\">dojo/data/ItemFileWriteStore</a> </p> <p>See dojo/data/api/Write.newItem()</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">keywordArgs</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> <tr> <td class=\"jsdoc-param-name\">parentInfo</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">object</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ItemFileWriteStore_on\">\n<span class=\"functionIcon\">on</span><span class=\"parameters\">(type,listener)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../evented\" class=\"jsdoc-link\">dojo/Evented</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">type</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">listener</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ItemFileWriteStore_revert\">\n<span class=\"functionIcon\">revert</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"itemfilewritestore\" class=\"jsdoc-link\">dojo/data/ItemFileWriteStore</a> </p> <p>See dojo/data/api/Write.revert()</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">boolean</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ItemFileWriteStore_save\">\n<span class=\"functionIcon\">save</span><span class=\"parameters\">(keywordArgs)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"itemfilewritestore\" class=\"jsdoc-link\">dojo/data/ItemFileWriteStore</a> </p> <p>See dojo/data/api/Write.save()</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">keywordArgs</td> <td class=\"jsdoc-param-type\">object</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ItemFileWriteStore_setValue\">\n<span class=\"functionIcon\">setValue</span><span class=\"parameters\">(item,attribute,value)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"itemfilewritestore\" class=\"jsdoc-link\">dojo/data/ItemFileWriteStore</a> </p> <p>See dojo/data/api/Write.set()</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"api/item\">dojo/data/api/Item</a></td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">attribute</td> <td class=\"jsdoc-param-type\">attribute-name-string</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">value</td> <td class=\"jsdoc-param-type\">almost anything</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ItemFileWriteStore_setValues\">\n<span class=\"functionIcon\">setValues</span><span class=\"parameters\">(item,attribute,values)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"itemfilewritestore\" class=\"jsdoc-link\">dojo/data/ItemFileWriteStore</a> </p> <p>See dojo/data/api/Write.setValues()</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"api/item\">dojo/data/api/Item</a></td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">attribute</td> <td class=\"jsdoc-param-type\">attribute-name-string</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">values</td> <td class=\"jsdoc-param-type\">array</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ItemFileWriteStore_unsetAttribute\">\n<span class=\"functionIcon\">unsetAttribute</span><span class=\"parameters\">(item,attribute)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"itemfilewritestore\" class=\"jsdoc-link\">dojo/data/ItemFileWriteStore</a> </p> <p>See dojo/data/api/Write.unsetAttribute()</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"api/item\">dojo/data/api/Item</a></td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">attribute</td> <td class=\"jsdoc-param-type\">attribute-name-string</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>    <h2 id=\"events\">Events</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ItemFileWriteStore_onDelete\">\n<span class=\"functionIcon\">onDelete</span><span class=\"parameters\">(deletedItem)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"itemfilewritestore\" class=\"jsdoc-link\">dojo/data/ItemFileWriteStore</a> </p> <p>See <a class=\"jsdoc-link\" href=\"api/notification#onDelete\">dojo/data/api/Notification.onDelete()</a></p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">deletedItem</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"api/item\">dojo/data/api/Item</a></td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ItemFileWriteStore_onNew\">\n<span class=\"functionIcon\">onNew</span><span class=\"parameters\">(newItem,parentInfo)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"itemfilewritestore\" class=\"jsdoc-link\">dojo/data/ItemFileWriteStore</a> </p> <p>See <a class=\"jsdoc-link\" href=\"api/notification#onNew\">dojo/data/api/Notification.onNew()</a></p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">newItem</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"api/item\">dojo/data/api/Item</a></td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">parentInfo</td> <td class=\"jsdoc-param-type\">object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_data_ItemFileWriteStore_onSet\">\n<span class=\"functionIcon\">onSet</span><span class=\"parameters\">(item,attribute,oldValue,newValue)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"itemfilewritestore\" class=\"jsdoc-link\">dojo/data/ItemFileWriteStore</a> </p> <p>See <a class=\"jsdoc-link\" href=\"api/notification#onSet\">dojo/data/api/Notification.onSet()</a></p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"api/item\">dojo/data/api/Item</a></td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">attribute</td> <td class=\"jsdoc-param-type\">attribute-name-string</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">oldValue</td> <td class=\"jsdoc-param-type\">object | array</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">newValue</td> <td class=\"jsdoc-param-type\">object | array</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/data/ItemFileWriteStore.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/data/ItemFileWriteStore.html</a>\n  </p>\n</div>\n","dojo/dnd/timedmoveable":"<h1>dojo/dnd/TimedMoveable</h1> <div class=\"jsdoc-mixins\"> <label>Extends</label><a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </div>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>A specialized version of Moveable to support an FPS throttling. This class puts an upper restriction on FPS, which may reduce the CPU load. The additional parameter \"timeout\" regulates the delay before actually moving the moveable object.</p>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">\n<span class=\"sig\"><span class=\"keyword\">var </span><span class=\"var\">foo </span><span class=\"eq\">= </span><span class=\"new\">new </span><span class=\"args\">TimedMoveable</span></span><span class=\"parameters\"><span class=\"paren\">(</span><span class=\"args\">node,params</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <p class=\"jsdoc-inheritance\"> <label>Defined by </label><span><a class=\"jsdoc-link\" href=\"timedmoveable\">dojo/dnd/TimedMoveable</a></span> </p> <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">Node | String</td> <td class=\"jsdoc-param-description\">\n<p>a node (or node's id) to be moved</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">params</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>object with additional parameters.</p> </td> </tr> </table> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/dnd.html\" target=\"_blank\">dojo/dnd/TimedMoveable reference documentation</a> for more information.</p>              <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_TimedMoveable_delay\">\n<span class=\"numberIcon\">delay</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_TimedMoveable_handle\">\n<span class=\"stringIcon\">handle</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_TimedMoveable_skip\">\n<span class=\"booleanIcon\">skip</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_TimedMoveable_timeout\">\n<span class=\"numberIcon\">timeout</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"timedmoveable\" class=\"jsdoc-link\">dojo/dnd/TimedMoveable</a> </p>    <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_TimedMoveable_destroy\">\n<span class=\"functionIcon\">destroy</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p> <p>stops watching for possible move, deletes all references, so the object can be garbage-collected</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_TimedMoveable_emit\">\n<span class=\"functionIcon\">emit</span><span class=\"parameters\">(type,event)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../evented\" class=\"jsdoc-link\">dojo/Evented</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">type</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">event</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_TimedMoveable_markupFactory\">\n<span class=\"functionIcon\">markupFactory</span><span class=\"parameters\">(params,node,Ctor)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">params</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">Ctor</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">instance</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_TimedMoveable_on\">\n<span class=\"functionIcon\">on</span><span class=\"parameters\">(type,listener)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../evented\" class=\"jsdoc-link\">dojo/Evented</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">type</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">listener</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>    <h2 id=\"events\">Events</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_TimedMoveable_onDragDetected\">\n<span class=\"functionIcon\">onDragDetected</span><span class=\"parameters\">(e)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p> <p>called when the drag is detected; responsible for creation of the mover</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">e</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_TimedMoveable_onFirstMove\">\n<span class=\"functionIcon\">onFirstMove</span><span class=\"parameters\">(mover,e)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p> <p>called during the very first move notification; can be used to initialize coordinates, can be overwritten.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">mover</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"mover\">dojo/dnd/Mover</a></td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">e</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_TimedMoveable_onMouseDown\">\n<span class=\"functionIcon\">onMouseDown</span><span class=\"parameters\">(e)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p> <p>event processor for onmousedown/ontouchstart, creates a Mover for the node</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">e</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\">\n<p>mouse/touch event</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_TimedMoveable_onMouseMove\">\n<span class=\"functionIcon\">onMouseMove</span><span class=\"parameters\">(e)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p> <p>event processor for onmousemove/ontouchmove, used only for delayed drags</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">e</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\">\n<p>mouse/touch event</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_TimedMoveable_onMouseUp\">\n<span class=\"functionIcon\">onMouseUp</span><span class=\"parameters\">(e)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p> <p>event processor for onmouseup, used only for delayed drags</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">e</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\">\n<p>mouse event</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_TimedMoveable_onMove\">\n<span class=\"functionIcon\">onMove</span><span class=\"parameters\">(mover,leftTop)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"timedmoveable\" class=\"jsdoc-link\">dojo/dnd/TimedMoveable</a> </p> <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">mover</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"mover\">dojo/dnd/Mover</a></td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">leftTop</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_TimedMoveable_onMoved\">\n<span class=\"functionIcon\">onMoved</span><span class=\"parameters\">(mover,leftTop)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p> <p>called after every incremental move; can be overwritten.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">mover</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"mover\">dojo/dnd/Mover</a></td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">leftTop</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_TimedMoveable_onMoveStart\">\n<span class=\"functionIcon\">onMoveStart</span><span class=\"parameters\">(mover)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p> <p>called before every move operation</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">mover</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"mover\">dojo/dnd/Mover</a></td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_TimedMoveable_onMoveStop\">\n<span class=\"functionIcon\">onMoveStop</span><span class=\"parameters\">(mover)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"timedmoveable\" class=\"jsdoc-link\">dojo/dnd/TimedMoveable</a> </p> <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">mover</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"mover\">dojo/dnd/Mover</a></td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_TimedMoveable_onMoving\">\n<span class=\"functionIcon\">onMoving</span><span class=\"parameters\">(mover,leftTop)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p> <p>called before every incremental move; can be overwritten.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">mover</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"mover\">dojo/dnd/Mover</a></td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">leftTop</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_TimedMoveable_onSelectStart\">\n<span class=\"functionIcon\">onSelectStart</span><span class=\"parameters\">(e)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p> <p>event processor for onselectevent and ondragevent</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">e</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\">\n<p>mouse event</p> </td> </tr> </table><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/dnd/TimedMoveable.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/dnd/TimedMoveable.html</a>\n  </p>\n</div>\n","dojo/dom-class":"<h1>dojo/dom-class</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>This module defines the core dojo DOM class API.</p>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/dom-class.html\" target=\"_blank\">dojo/dom-class reference documentation</a> for more information.</p>          <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_dom-class_add\">\n<span class=\"functionIcon\">add</span><span class=\"parameters\">(node,classStr)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom-class\" class=\"jsdoc-link\">dojo/dom-class</a> </p> <p>Adds the specified classes to the end of the class list on the passed node. Will not re-apply duplicate classes. </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">String | DOMNode</td> <td class=\"jsdoc-param-description\">\n<p>String ID or DomNode reference to add a class string too </p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">classStr</td> <td class=\"jsdoc-param-type\">String | Array</td> <td class=\"jsdoc-param-description\">\n<p>A String class name to add, or several space-separated class names, or an array of class names. </p> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Add a class to some node: </p> <pre><code>require([\"dojo/dom-class\"], function(domClass){\n    domClass.add(\"someNode\", \"anewClass\");\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>Add two classes at once: </p> <pre><code>require([\"dojo/dom-class\"], function(domClass){\n    domClass.add(\"someNode\", \"firstClass secondClass\");\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<p>Add two classes at once (using array): </p> <pre><code>require([\"dojo/dom-class\"], function(domClass){\n    domClass.add(\"someNode\", [\"firstClass\", \"secondClass\"]);\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 4</h3>\n<p>Available in <code>dojo/NodeList</code> for multiple additions </p> <pre><code>require([\"dojo/query\"], function(query){\n    query(\"ul &gt; li\").addClass(\"firstLevel\");\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dom-class_contains\">\n<span class=\"functionIcon\">contains</span><span class=\"parameters\">(node,classStr)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom-class\" class=\"jsdoc-link\">dojo/dom-class</a> </p> <p>Returns whether or not the specified classes are a portion of the class list currently applied to the node.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">String | DOMNode</td> <td class=\"jsdoc-param-description\">\n<p>String ID or DomNode reference to check the class for.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">classStr</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>A string class name to look for.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">boolean</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Do something if a node with id=\"someNode\" has class=\"aSillyClassName\" present </p> <pre><code>if(dojo.hasClass(\"someNode\",\"aSillyClassName\")){ ... }</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dom-class_remove\">\n<span class=\"functionIcon\">remove</span><span class=\"parameters\">(node,classStr)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom-class\" class=\"jsdoc-link\">dojo/dom-class</a> </p> <p>Removes the specified classes from node. No <code>contains()</code> check is required. </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">String | DOMNode</td> <td class=\"jsdoc-param-description\">\n<p>String ID or DomNode reference to remove the class from. </p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">classStr</td> <td class=\"jsdoc-param-type\">String | Array</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>An optional String class name to remove, or several space-separated class names, or an array of class names. If omitted, all class names will be deleted. </p> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Remove a class from some node: </p> <pre><code>require([\"dojo/dom-class\"], function(domClass){\n    domClass.remove(\"someNode\", \"firstClass\");\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>Remove two classes from some node: </p> <pre><code>require([\"dojo/dom-class\"], function(domClass){\n    domClass.remove(\"someNode\", \"firstClass secondClass\");\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<p>Remove two classes from some node (using array): </p> <pre><code>require([\"dojo/dom-class\"], function(domClass){\n    domClass.remove(\"someNode\", [\"firstClass\", \"secondClass\"]);\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 4</h3>\n<p>Remove all classes from some node: </p> <pre><code>require([\"dojo/dom-class\"], function(domClass){\n    domClass.remove(\"someNode\");\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 5</h3>\n<p>Available in <code>dojo/NodeList</code> for multiple removal </p> <pre><code>require([\"dojo/query\"], function(query){\n    query(\"ul &gt; li\").removeClass(\"foo\");\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dom-class_replace\">\n<span class=\"functionIcon\">replace</span><span class=\"parameters\">(node,addClassStr,removeClassStr)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom-class\" class=\"jsdoc-link\">dojo/dom-class</a> </p> <p>Replaces one or more classes on a node if not present. Operates more quickly than calling dojo.removeClass and dojo.addClass </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">String | DOMNode</td> <td class=\"jsdoc-param-description\">\n<p>String ID or DomNode reference to remove the class from. </p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">addClassStr</td> <td class=\"jsdoc-param-type\">String | Array</td> <td class=\"jsdoc-param-description\">\n<p>A String class name to add, or several space-separated class names, or an array of class names. </p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">removeClassStr</td> <td class=\"jsdoc-param-type\">String | Array</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>A String class name to remove, or several space-separated class names, or an array of class names. </p> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>require([\"dojo/dom-class\"], function(domClass){\n    domClass.replace(\"someNode\", \"add1 add2\", \"remove1 remove2\");\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>Replace all classes with addMe </p> <pre><code>require([\"dojo/dom-class\"], function(domClass){\n    domClass.replace(\"someNode\", \"addMe\");\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<p>Available in <code>dojo/NodeList</code> for multiple toggles </p> <pre><code>require([\"dojo/query\"], function(query){\n    query(\".findMe\").replaceClass(\"addMe\", \"removeMe\");\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dom-class_toggle\">\n<span class=\"functionIcon\">toggle</span><span class=\"parameters\">(node,classStr,condition)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom-class\" class=\"jsdoc-link\">dojo/dom-class</a> </p> <p>Adds a class to node if not present, or removes if present. Pass a boolean condition if you want to explicitly add or remove. Returns the condition that was specified directly or indirectly. </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">String | DOMNode</td> <td class=\"jsdoc-param-description\">\n<p>String ID or DomNode reference to toggle a class string </p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">classStr</td> <td class=\"jsdoc-param-type\">String | Array</td> <td class=\"jsdoc-param-description\">\n<p>A String class name to toggle, or several space-separated class names, or an array of class names. </p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">condition</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>If passed, true means to add the class, false means to remove. Otherwise dojo.hasClass(node, classStr) is used to detect the class presence. </p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Boolean</span></p> <p>If passed, true means to add the class, false means to remove. Otherwise dojo.hasClass(node, classStr) is used to detect the class presence. </p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>require([\"dojo/dom-class\"], function(domClass){\n    domClass.toggle(\"someNode\", \"hovered\");\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>Forcefully add a class </p> <pre><code>require([\"dojo/dom-class\"], function(domClass){\n    domClass.toggle(\"someNode\", \"hovered\", true);\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<p>Available in <code>dojo/NodeList</code> for multiple toggles </p> <pre><code>require([\"dojo/query\"], function(query){\n    query(\".toggleMe\").toggleClass(\"toggleMe\");\n});</code></pre> </div> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/dom-class.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/dom-class.html</a>\n  </p>\n</div>\n","dojo/dom-form":"<h1>dojo/dom-form</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>This module defines form-processing functions.</p>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/dom-form.html\" target=\"_blank\">dojo/dom-form reference documentation</a> for more information.</p>          <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_dom-form_fieldToObject\">\n<span class=\"functionIcon\">fieldToObject</span><span class=\"parameters\">(inputNode)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom-form\" class=\"jsdoc-link\">dojo/dom-form</a> </p> <p>Serialize a form field to a JavaScript object.</p>  <p>Returns the value encoded in a form field as as a string or an array of strings. Disabled form elements and unchecked radio and checkboxes are skipped. Multi-select elements are returned as an array of string values.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">inputNode</td> <td class=\"jsdoc-param-type\">DOMNode | String</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Object | undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dom-form_toJson\">\n<span class=\"functionIcon\">toJson</span><span class=\"parameters\">(formNode,prettyPrint)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom-form\" class=\"jsdoc-link\">dojo/dom-form</a> </p> <p>Create a serialized JSON string from a form node or string ID identifying the form to serialize</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">formNode</td> <td class=\"jsdoc-param-type\">DOMNode | String</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">prettyPrint</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">String | undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dom-form_toObject\">\n<span class=\"functionIcon\">toObject</span><span class=\"parameters\">(formNode)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom-form\" class=\"jsdoc-link\">dojo/dom-form</a> </p> <p>Serialize a form node to a JavaScript object.</p>  <p>Returns the values encoded in an HTML form as string properties in an object which it then returns. Disabled form elements, buttons, and other non-value form elements are skipped. Multi-select elements are returned as an array of string values.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">formNode</td> <td class=\"jsdoc-param-type\">DOMNode | String</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">object</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>This form: </p> <pre><code>&lt;form id=\"test_form\"&gt;\n    &lt;input type=\"text\" name=\"blah\" value=\"blah\"&gt;\n    &lt;input type=\"text\" name=\"no_value\" value=\"blah\" disabled&gt;\n    &lt;input type=\"button\" name=\"no_value2\" value=\"blah\"&gt;\n    &lt;select type=\"select\" multiple name=\"multi\" size=\"5\"&gt;\n        &lt;option value=\"blah\"&gt;blah&lt;/option&gt;\n        &lt;option value=\"thud\" selected&gt;thud&lt;/option&gt;\n        &lt;option value=\"thonk\" selected&gt;thonk&lt;/option&gt;\n    &lt;/select&gt;\n&lt;/form&gt;</code></pre> <p>yields this object structure as the result of a call to formToObject(): </p> <pre><code>{\n    blah: \"blah\",\n    multi: [\n        \"thud\",\n        \"thonk\"\n    ]\n};</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dom-form_toQuery\">\n<span class=\"functionIcon\">toQuery</span><span class=\"parameters\">(formNode)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom-form\" class=\"jsdoc-link\">dojo/dom-form</a> </p> <p>Returns a URL-encoded string representing the form passed as either a node or string ID identifying the form to serialize</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">formNode</td> <td class=\"jsdoc-param-type\">DOMNode | String</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">String | undefined</span></p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/dom-form.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/dom-form.html</a>\n  </p>\n</div>\n","dojo/dom-prop":"<h1>dojo/dom-prop</h1>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/dom-prop.html\" target=\"_blank\">dojo/dom-prop reference documentation</a> for more information.</p>            <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_dom-prop_names\">\n<span class=\"objectIcon\">names</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"dom-prop\" class=\"jsdoc-link\">dojo/dom-prop</a> </p>    <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_dom-prop_get\">\n<span class=\"functionIcon\">get</span><span class=\"parameters\">(node,name)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom-prop\" class=\"jsdoc-link\">dojo/dom-prop</a> </p> <p>Gets a property on an HTML element.</p>  <p>Handles normalized getting of properties on DOM nodes. </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode | String</td> <td class=\"jsdoc-param-description\">\n<p>id or reference to the element to get the property on</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">name</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>the name of the property to get.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | undefined</span></p> <p>the value of the requested property or its default value </p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>// get the current value of the \"foo\" property on a node\nrequire([\"dojo/dom-prop\", \"dojo/dom\"], function(domProp, dom){\n    domProp.get(dom.byId(\"nodeId\"), \"foo\");\n    // or we can just pass the id:\n    domProp.get(\"nodeId\", \"foo\");\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dom-prop_set\">\n<span class=\"functionIcon\">set</span><span class=\"parameters\">(node,name,value)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom-prop\" class=\"jsdoc-link\">dojo/dom-prop</a> </p> <p>Sets a property on an HTML element.</p>  <p>Handles normalized setting of properties on DOM nodes. </p> <p>When passing functions as values, note that they will not be directly assigned to slots on the node, but rather the default behavior will be removed and the new behavior will be added using <code>dojo.connect()</code>, meaning that event handler properties will be normalized and that some caveats with regards to non-standard behaviors for onsubmit apply. Namely that you should cancel form submission using <code>dojo.stopEvent()</code> on the passed event object instead of returning a boolean value from the handler itself.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode | String</td> <td class=\"jsdoc-param-description\">\n<p>id or reference to the element to set the property on</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">name</td> <td class=\"jsdoc-param-type\">String | Object</td> <td class=\"jsdoc-param-description\">\n<p>the name of the property to set, or a hash object to set multiple properties at once.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">value</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>The value to set for the property</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | undefined</span></p> <p>the DOM node </p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>// use prop() to set the tab index\nrequire([\"dojo/dom-prop\"], function(domProp){\n    domProp.set(\"nodeId\", \"tabIndex\", 3);\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>Set multiple values at once, including event handlers: </p> <pre><code>require([\"dojo/dom-prop\"], function(domProp){\n    domProp.set(\"formId\", {\n        \"foo\": \"bar\",\n        \"tabIndex\": -1,\n        \"method\": \"POST\",\n    });\n});</code></pre> </div> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/dom-prop.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/dom-prop.html</a>\n  </p>\n</div>\n","dojo/dom-prop.names":"<h1>dojo/dom-prop.names</h1>           <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_dom-prop_names_class\">\n<span class=\"stringIcon\">class</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"dom-prop\" class=\"jsdoc-link\">dojo/dom-prop</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dom-prop_names_colspan\">\n<span class=\"stringIcon\">colspan</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"dom-prop\" class=\"jsdoc-link\">dojo/dom-prop</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dom-prop_names_for\">\n<span class=\"stringIcon\">for</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"dom-prop\" class=\"jsdoc-link\">dojo/dom-prop</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dom-prop_names_frameborder\">\n<span class=\"stringIcon\">frameborder</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"dom-prop\" class=\"jsdoc-link\">dojo/dom-prop</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dom-prop_names_readonly\">\n<span class=\"stringIcon\">readonly</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"dom-prop\" class=\"jsdoc-link\">dojo/dom-prop</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dom-prop_names_rowspan\">\n<span class=\"stringIcon\">rowspan</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"dom-prop\" class=\"jsdoc-link\">dojo/dom-prop</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dom-prop_names_tabindex\">\n<span class=\"stringIcon\">tabindex</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"dom-prop\" class=\"jsdoc-link\">dojo/dom-prop</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dom-prop_names_textcontent\">\n<span class=\"stringIcon\">textcontent</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"dom-prop\" class=\"jsdoc-link\">dojo/dom-prop</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dom-prop_names_valuetype\">\n<span class=\"stringIcon\">valuetype</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"dom-prop\" class=\"jsdoc-link\">dojo/dom-prop</a> </p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/dom-prop.names.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/dom-prop.names.html</a>\n  </p>\n</div>\n","dojo/dnd/autosource":"<h1>dojo/dnd/AutoSource</h1> <div class=\"jsdoc-mixins\"> <label>Extends</label><a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </div>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>a source that syncs its DnD nodes by default</p>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">\n<span class=\"sig\"><span class=\"keyword\">var </span><span class=\"var\">foo </span><span class=\"eq\">= </span><span class=\"new\">new </span><span class=\"args\">AutoSource</span></span><span class=\"parameters\"><span class=\"paren\">(</span><span class=\"args\">node,params</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <p class=\"jsdoc-inheritance\"> <label>Defined by </label><span><a class=\"jsdoc-link\" href=\"autosource\">dojo/dnd/AutoSource</a></span> </p> <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">params</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/dnd.html\" target=\"_blank\">dojo/dnd/AutoSource reference documentation</a> for more information.</p>              <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_AutoSource_accept\">\n<span class=\"arrayIcon\">accept</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_AutoSource_allowNested\">\n<span class=\"booleanIcon\">allowNested</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <div class=\"jsdoc-summary\">\n<p>Indicates whether to allow dnd item nodes to be nested within other elements. By default this is false, indicating that only direct children of the container can be draggable dnd item nodes</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_AutoSource_autoSync\">\n<span class=\"booleanIcon\">autoSync</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_AutoSource_copyOnly\">\n<span class=\"booleanIcon\">copyOnly</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_AutoSource_current\">\n<span class=\"domnodeIcon\">current</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <div class=\"jsdoc-summary\">\n<p>The DOM node the mouse is currently hovered over</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_AutoSource_delay\">\n<span class=\"numberIcon\">delay</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_AutoSource_generateText\">\n<span class=\"booleanIcon\">generateText</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_AutoSource_horizontal\">\n<span class=\"booleanIcon\">horizontal</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_AutoSource_isSource\">\n<span class=\"booleanIcon\">isSource</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_AutoSource_map\">\n<span class=\"objectIcon\">map</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <div class=\"jsdoc-summary\">\n<p>Map from an item's id (which is also the DOMNode's id) to the <a class=\"jsdoc-link\" href=\"container#Item\">dojo/dnd/Container.Item</a> itself.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_AutoSource_selection\">\n<span class=\"objectIcon\">selection</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"selector\" class=\"jsdoc-link\">dojo/dnd/Selector</a> </p> <div class=\"jsdoc-summary\">\n<p>The set of id's that are currently selected, such that this.selection[id] == 1 if the node w/that id is selected. Can iterate over selected node's id's like: </p> <pre><code>for(var id in this.selection)</code></pre> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_AutoSource_selfAccept\">\n<span class=\"booleanIcon\">selfAccept</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_AutoSource_selfCopy\">\n<span class=\"booleanIcon\">selfCopy</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_AutoSource_singular\">\n<span class=\"booleanIcon\">singular</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"selector\" class=\"jsdoc-link\">dojo/dnd/Selector</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_AutoSource_skipForm\">\n<span class=\"booleanIcon\">skipForm</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_AutoSource_withHandles\">\n<span class=\"booleanIcon\">withHandles</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p>    <h2 id=\"methods\">Methods</h2>               <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_AutoSource_checkAcceptance\">\n<span class=\"functionIcon\">checkAcceptance</span><span class=\"parameters\">(source,nodes)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p> <p>checks if the target can accept nodes from this source</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">source</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>the source which provides items</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">nodes</td> <td class=\"jsdoc-param-type\">Array</td> <td class=\"jsdoc-param-description\">\n<p>the list of transferred items</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">boolean</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_AutoSource_clearItems\">\n<span class=\"functionIcon\">clearItems</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <p>removes all data items from the map</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_AutoSource_copyState\">\n<span class=\"functionIcon\">copyState</span><span class=\"parameters\">(keyPressed,self)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p> <p>Returns true if we need to copy items, false to move. It is separated to be overwritten dynamically, if needed.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">keyPressed</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\">\n<p>the \"copy\" key was pressed</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">self</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>optional flag that means that we are about to drop on itself</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">boolean | undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_AutoSource_creator\">\n<span class=\"functionIcon\">creator</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <p>creator function, dummy at the moment</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_AutoSource_deleteSelectedNodes\">\n<span class=\"functionIcon\">deleteSelectedNodes</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"selector\" class=\"jsdoc-link\">dojo/dnd/Selector</a> </p> <p>deletes all selected items</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">function</span></p> <p>deletes all selected items</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_AutoSource_delItem\">\n<span class=\"functionIcon\">delItem</span><span class=\"parameters\">(key)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <p>removes a data item from the map by its key (id)</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">key</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_AutoSource_destroy\">\n<span class=\"functionIcon\">destroy</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p> <p>prepares the object to be garbage-collected</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_AutoSource_emit\">\n<span class=\"functionIcon\">emit</span><span class=\"parameters\">(type,event)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../evented\" class=\"jsdoc-link\">dojo/Evented</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">type</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">event</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_AutoSource_forInItems\">\n<span class=\"functionIcon\">forInItems</span><span class=\"parameters\">(f,o)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <p>iterates over a data map skipping members that are present in the empty object (IE and/or 3rd-party libraries).</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">f</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">o</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">string</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_AutoSource_forInSelectedItems\">\n<span class=\"functionIcon\">forInSelectedItems</span><span class=\"parameters\">(f,o)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"selector\" class=\"jsdoc-link\">dojo/dnd/Selector</a> </p> <p>iterates over selected items; see <code>dojo/dnd/Container.forInItems()</code> for details</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">f</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">o</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_AutoSource_getAllNodes\">\n<span class=\"functionIcon\">getAllNodes</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <p>returns a list (an array) of all valid child nodes</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_AutoSource_getItem\">\n<span class=\"functionIcon\">getItem</span><span class=\"parameters\">(key)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <p>returns a data item by its key (id)</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">key</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_AutoSource_getSelectedNodes\">\n<span class=\"functionIcon\">getSelectedNodes</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"selector\" class=\"jsdoc-link\">dojo/dnd/Selector</a> </p> <p>returns a list (an array) of selected nodes</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">instance</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_AutoSource_insertNodes\">\n<span class=\"functionIcon\">insertNodes</span><span class=\"parameters\">(addSelected,data,before,anchor)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"selector\" class=\"jsdoc-link\">dojo/dnd/Selector</a> </p> <p>inserts new data items (see <code>dojo/dnd/Container.insertNodes()</code> method for details)</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">addSelected</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\">\n<p>all new nodes will be added to selected items, if true, no selection change otherwise</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">data</td> <td class=\"jsdoc-param-type\">Array</td> <td class=\"jsdoc-param-description\">\n<p>a list of data items, which should be processed by the creator function</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">before</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\">\n<p>insert before the anchor, if true, and after the anchor otherwise</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">anchor</td> <td class=\"jsdoc-param-type\">Node</td> <td class=\"jsdoc-param-description\">\n<p>the anchor node to be used as a point of insertion</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">function</span></p> <p>inserts new data items (see <code>dojo/dnd/Container.insertNodes()</code> method for details)</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_AutoSource_markupFactory\">\n<span class=\"functionIcon\">markupFactory</span><span class=\"parameters\">(params,node,Ctor)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">params</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">Ctor</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">instance</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_AutoSource_on\">\n<span class=\"functionIcon\">on</span><span class=\"parameters\">(type,listener)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../evented\" class=\"jsdoc-link\">dojo/Evented</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">type</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">listener</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_AutoSource_selectAll\">\n<span class=\"functionIcon\">selectAll</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"selector\" class=\"jsdoc-link\">dojo/dnd/Selector</a> </p> <p>selects all items</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_AutoSource_selectNone\">\n<span class=\"functionIcon\">selectNone</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"selector\" class=\"jsdoc-link\">dojo/dnd/Selector</a> </p> <p>unselects all items</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_AutoSource_setItem\">\n<span class=\"functionIcon\">setItem</span><span class=\"parameters\">(key,data)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <p>associates a data item with its key (id)</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">key</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">data</td> <td class=\"jsdoc-param-type\">Container.Item</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_AutoSource_startup\">\n<span class=\"functionIcon\">startup</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <p>collects valid child items and populate the map</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_AutoSource_sync\">\n<span class=\"functionIcon\">sync</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"selector\" class=\"jsdoc-link\">dojo/dnd/Selector</a> </p> <p>sync up the node list with the data map</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">function</span></p> <p>sync up the node list with the data map</p>     <h2 id=\"events\">Events</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_AutoSource_onDndCancel\">\n<span class=\"functionIcon\">onDndCancel</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p> <p>topic event processor for /dnd/cancel, called to cancel the DnD operation</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_AutoSource_onDndDrop\">\n<span class=\"functionIcon\">onDndDrop</span><span class=\"parameters\">(source,nodes,copy,target)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p> <p>topic event processor for /dnd/drop, called to finish the DnD operation</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">source</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>the source which provides items</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">nodes</td> <td class=\"jsdoc-param-type\">Array</td> <td class=\"jsdoc-param-description\">\n<p>the list of transferred items</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">copy</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\">\n<p>copy items, if true, move items otherwise</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">target</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>the target which accepts items</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_AutoSource_onDndSourceOver\">\n<span class=\"functionIcon\">onDndSourceOver</span><span class=\"parameters\">(source)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p> <p>topic event processor for /dnd/source/over, called when detected a current source</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">source</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>the source which has the mouse over it</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_AutoSource_onDndStart\">\n<span class=\"functionIcon\">onDndStart</span><span class=\"parameters\">(source,nodes,copy)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p> <p>topic event processor for /dnd/start, called to initiate the DnD operation</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">source</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>the source which provides items</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">nodes</td> <td class=\"jsdoc-param-type\">Array</td> <td class=\"jsdoc-param-description\">\n<p>the list of transferred items</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">copy</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\">\n<p>copy items, if true, move items otherwise</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_AutoSource_onDraggingOut\">\n<span class=\"functionIcon\">onDraggingOut</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p> <p>called during the active DnD operation, when items are dragged away from this target, and it is not disabled</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_AutoSource_onDraggingOver\">\n<span class=\"functionIcon\">onDraggingOver</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p> <p>called during the active DnD operation, when items are dragged over this target, and it is not disabled</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_AutoSource_onDrop\">\n<span class=\"functionIcon\">onDrop</span><span class=\"parameters\">(source,nodes,copy)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p> <p>called only on the current target, when drop is performed</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">source</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>the source which provides items</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">nodes</td> <td class=\"jsdoc-param-type\">Array</td> <td class=\"jsdoc-param-description\">\n<p>the list of transferred items</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">copy</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\">\n<p>copy items, if true, move items otherwise</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_AutoSource_onDropExternal\">\n<span class=\"functionIcon\">onDropExternal</span><span class=\"parameters\">(source,nodes,copy)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p> <p>called only on the current target, when drop is performed from an external source</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">source</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>the source which provides items</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">nodes</td> <td class=\"jsdoc-param-type\">Array</td> <td class=\"jsdoc-param-description\">\n<p>the list of transferred items</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">copy</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\">\n<p>copy items, if true, move items otherwise</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_AutoSource_onDropInternal\">\n<span class=\"functionIcon\">onDropInternal</span><span class=\"parameters\">(nodes,copy)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p> <p>called only on the current target, when drop is performed from the same target/source</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">nodes</td> <td class=\"jsdoc-param-type\">Array</td> <td class=\"jsdoc-param-description\">\n<p>the list of transferred items</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">copy</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\">\n<p>copy items, if true, move items otherwise</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_AutoSource_onMouseDown\">\n<span class=\"functionIcon\">onMouseDown</span><span class=\"parameters\">(e)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p> <p>event processor for onmousedown</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">e</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\">\n<p>mouse event</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_AutoSource_onMouseMove\">\n<span class=\"functionIcon\">onMouseMove</span><span class=\"parameters\">(e)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p> <p>event processor for onmousemove</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">e</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\">\n<p>mouse event</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_AutoSource_onMouseOut\">\n<span class=\"functionIcon\">onMouseOut</span><span class=\"parameters\">(e)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <p>event processor for onmouseout</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">e</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\">\n<p>mouse event</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_AutoSource_onMouseOver\">\n<span class=\"functionIcon\">onMouseOver</span><span class=\"parameters\">(e)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <p>event processor for onmouseover or touch, to mark that element as the current element</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">e</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\">\n<p>mouse event</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_AutoSource_onMouseUp\">\n<span class=\"functionIcon\">onMouseUp</span><span class=\"parameters\">(e)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p> <p>event processor for onmouseup</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">e</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\">\n<p>mouse event</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_AutoSource_onOutEvent\">\n<span class=\"functionIcon\">onOutEvent</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p> <p>this function is called once, when mouse is out of our container</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_AutoSource_onOverEvent\">\n<span class=\"functionIcon\">onOverEvent</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p> <p>this function is called once, when mouse is over our container</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_AutoSource_onSelectStart\">\n<span class=\"functionIcon\">onSelectStart</span><span class=\"parameters\">(e)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <p>event processor for onselectevent and ondragevent</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">e</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\">\n<p>mouse event</p> </td> </tr> </table><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/dnd/AutoSource.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/dnd/AutoSource.html</a>\n  </p>\n</div>\n","dojo/dnd/selector":"<h1>dojo/dnd/Selector</h1> <div class=\"jsdoc-mixins\"> <label>Extends</label><a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </div>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>a Selector object, which knows how to select its children</p>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">\n<span class=\"sig\"><span class=\"keyword\">var </span><span class=\"var\">foo </span><span class=\"eq\">= </span><span class=\"new\">new </span><span class=\"args\">Selector</span></span><span class=\"parameters\"><span class=\"paren\">(</span><span class=\"args\">node,params</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <p class=\"jsdoc-inheritance\"> <label>Defined by </label><span><a class=\"jsdoc-link\" href=\"selector\">dojo/dnd/Selector</a></span> </p> <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">Node | String</td> <td class=\"jsdoc-param-description\">\n<p>node or node's id to build the selector on</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">params</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>a dictionary of parameters</p> </td> </tr> </table> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/dnd.html\" target=\"_blank\">dojo/dnd/Selector reference documentation</a> for more information.</p>              <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Selector_allowNested\">\n<span class=\"booleanIcon\">allowNested</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <div class=\"jsdoc-summary\">\n<p>Indicates whether to allow dnd item nodes to be nested within other elements. By default this is false, indicating that only direct children of the container can be draggable dnd item nodes</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Selector_current\">\n<span class=\"domnodeIcon\">current</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <div class=\"jsdoc-summary\">\n<p>The DOM node the mouse is currently hovered over</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Selector_map\">\n<span class=\"objectIcon\">map</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <div class=\"jsdoc-summary\">\n<p>Map from an item's id (which is also the DOMNode's id) to the <a class=\"jsdoc-link\" href=\"container#Item\">dojo/dnd/Container.Item</a> itself.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Selector_selection\">\n<span class=\"objectIcon\">selection</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"selector\" class=\"jsdoc-link\">dojo/dnd/Selector</a> </p> <div class=\"jsdoc-summary\">\n<p>The set of id's that are currently selected, such that this.selection[id] == 1 if the node w/that id is selected. Can iterate over selected node's id's like: </p> <pre><code>for(var id in this.selection)</code></pre> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Selector_singular\">\n<span class=\"booleanIcon\">singular</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"selector\" class=\"jsdoc-link\">dojo/dnd/Selector</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Selector_skipForm\">\n<span class=\"booleanIcon\">skipForm</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p>    <h2 id=\"methods\">Methods</h2>           <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Selector_clearItems\">\n<span class=\"functionIcon\">clearItems</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <p>removes all data items from the map</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Selector_creator\">\n<span class=\"functionIcon\">creator</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <p>creator function, dummy at the moment</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Selector_deleteSelectedNodes\">\n<span class=\"functionIcon\">deleteSelectedNodes</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"selector\" class=\"jsdoc-link\">dojo/dnd/Selector</a> </p> <p>deletes all selected items</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">function</span></p> <p>deletes all selected items</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Selector_delItem\">\n<span class=\"functionIcon\">delItem</span><span class=\"parameters\">(key)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <p>removes a data item from the map by its key (id)</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">key</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Selector_destroy\">\n<span class=\"functionIcon\">destroy</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"selector\" class=\"jsdoc-link\">dojo/dnd/Selector</a> </p> <p>prepares the object to be garbage-collected</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Selector_emit\">\n<span class=\"functionIcon\">emit</span><span class=\"parameters\">(type,event)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../evented\" class=\"jsdoc-link\">dojo/Evented</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">type</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">event</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Selector_forInItems\">\n<span class=\"functionIcon\">forInItems</span><span class=\"parameters\">(f,o)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <p>iterates over a data map skipping members that are present in the empty object (IE and/or 3rd-party libraries).</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">f</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">o</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">string</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Selector_forInSelectedItems\">\n<span class=\"functionIcon\">forInSelectedItems</span><span class=\"parameters\">(f,o)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"selector\" class=\"jsdoc-link\">dojo/dnd/Selector</a> </p> <p>iterates over selected items; see <code>dojo/dnd/Container.forInItems()</code> for details</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">f</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">o</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Selector_getAllNodes\">\n<span class=\"functionIcon\">getAllNodes</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <p>returns a list (an array) of all valid child nodes</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Selector_getItem\">\n<span class=\"functionIcon\">getItem</span><span class=\"parameters\">(key)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <p>returns a data item by its key (id)</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">key</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Selector_getSelectedNodes\">\n<span class=\"functionIcon\">getSelectedNodes</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"selector\" class=\"jsdoc-link\">dojo/dnd/Selector</a> </p> <p>returns a list (an array) of selected nodes</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">instance</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Selector_insertNodes\">\n<span class=\"functionIcon\">insertNodes</span><span class=\"parameters\">(addSelected,data,before,anchor)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"selector\" class=\"jsdoc-link\">dojo/dnd/Selector</a> </p> <p>inserts new data items (see <code>dojo/dnd/Container.insertNodes()</code> method for details)</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">addSelected</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\">\n<p>all new nodes will be added to selected items, if true, no selection change otherwise</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">data</td> <td class=\"jsdoc-param-type\">Array</td> <td class=\"jsdoc-param-description\">\n<p>a list of data items, which should be processed by the creator function</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">before</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\">\n<p>insert before the anchor, if true, and after the anchor otherwise</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">anchor</td> <td class=\"jsdoc-param-type\">Node</td> <td class=\"jsdoc-param-description\">\n<p>the anchor node to be used as a point of insertion</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">function</span></p> <p>inserts new data items (see <code>dojo/dnd/Container.insertNodes()</code> method for details)</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Selector_markupFactory\">\n<span class=\"functionIcon\">markupFactory</span><span class=\"parameters\">(params,node,Ctor)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">params</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">Ctor</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">instance</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Selector_on\">\n<span class=\"functionIcon\">on</span><span class=\"parameters\">(type,listener)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../evented\" class=\"jsdoc-link\">dojo/Evented</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">type</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">listener</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Selector_selectAll\">\n<span class=\"functionIcon\">selectAll</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"selector\" class=\"jsdoc-link\">dojo/dnd/Selector</a> </p> <p>selects all items</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Selector_selectNone\">\n<span class=\"functionIcon\">selectNone</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"selector\" class=\"jsdoc-link\">dojo/dnd/Selector</a> </p> <p>unselects all items</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Selector_setItem\">\n<span class=\"functionIcon\">setItem</span><span class=\"parameters\">(key,data)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <p>associates a data item with its key (id)</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">key</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">data</td> <td class=\"jsdoc-param-type\">Container.Item</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Selector_startup\">\n<span class=\"functionIcon\">startup</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <p>collects valid child items and populate the map</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Selector_sync\">\n<span class=\"functionIcon\">sync</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"selector\" class=\"jsdoc-link\">dojo/dnd/Selector</a> </p> <p>sync up the node list with the data map</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">function</span></p> <p>sync up the node list with the data map</p>     <h2 id=\"events\">Events</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Selector_onMouseDown\">\n<span class=\"functionIcon\">onMouseDown</span><span class=\"parameters\">(e)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"selector\" class=\"jsdoc-link\">dojo/dnd/Selector</a> </p> <p>event processor for onmousedown</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">e</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\">\n<p>mouse event</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Selector_onMouseMove\">\n<span class=\"functionIcon\">onMouseMove</span><span class=\"parameters\">(e)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"selector\" class=\"jsdoc-link\">dojo/dnd/Selector</a> </p> <p>event processor for onmousemove</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">e</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\">\n<p>mouse event</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Selector_onMouseOut\">\n<span class=\"functionIcon\">onMouseOut</span><span class=\"parameters\">(e)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <p>event processor for onmouseout</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">e</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\">\n<p>mouse event</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Selector_onMouseOver\">\n<span class=\"functionIcon\">onMouseOver</span><span class=\"parameters\">(e)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <p>event processor for onmouseover or touch, to mark that element as the current element</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">e</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\">\n<p>mouse event</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Selector_onMouseUp\">\n<span class=\"functionIcon\">onMouseUp</span><span class=\"parameters\">(e)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"selector\" class=\"jsdoc-link\">dojo/dnd/Selector</a> </p> <p>event processor for onmouseup</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">e</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\">\n<p>mouse event</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Selector_onOutEvent\">\n<span class=\"functionIcon\">onOutEvent</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"selector\" class=\"jsdoc-link\">dojo/dnd/Selector</a> </p> <p>this function is called once, when mouse is out of our container</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Selector_onOverEvent\">\n<span class=\"functionIcon\">onOverEvent</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"selector\" class=\"jsdoc-link\">dojo/dnd/Selector</a> </p> <p>this function is called once, when mouse is over our container</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Selector_onSelectStart\">\n<span class=\"functionIcon\">onSelectStart</span><span class=\"parameters\">(e)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <p>event processor for onselectevent and ondragevent</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">e</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\">\n<p>mouse event</p> </td> </tr> </table><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/dnd/Selector.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/dnd/Selector.html</a>\n  </p>\n</div>\n","dojo/dom-construct":"<h1>dojo/dom-construct</h1>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/dom-construct.html\" target=\"_blank\">dojo/dom-construct reference documentation</a> for more information.</p>          <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_dom-construct_create\">\n<span class=\"functionIcon\">create</span><span class=\"parameters\">(tag,attrs,refNode,pos)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom-construct\" class=\"jsdoc-link\">dojo/dom-construct</a> </p> <p>Create an element, allowing for optional attribute decoration and placement.</p>  <p>A DOM Element creation function. A shorthand method for creating a node or a fragment, and allowing for a convenient optional attribute setting step, as well as an optional DOM placement reference. </p> <p>Attributes are set by passing the optional object through <code>dojo.setAttr</code>. See <code>dojo.setAttr</code> for noted caveats and nuances, and API if applicable. </p> <p>Placement is done via <code>dojo.place</code>, assuming the new node to be the action node, passing along the optional reference node and position.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">tag</td> <td class=\"jsdoc-param-type\">DOMNode | String</td> <td class=\"jsdoc-param-description\">\n<p>A string of the element to create (eg: \"div\", \"a\", \"p\", \"li\", \"script\", \"br\"), or an existing DOM node to process.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">attrs</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>An object-hash of attributes to set on the newly created node. Can be null, if you don't want to set any attributes/styles. See: <code>dojo.setAttr</code> for a description of available attributes.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">refNode</td> <td class=\"jsdoc-param-type\">DOMNode | String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Optional reference node. Used by <code>dojo.place</code> to place the newly created node somewhere in the dom relative to refNode. Can be a DomNode reference or String ID of a node.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">pos</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Optional positional reference. Defaults to \"last\" by way of <code>dojo.place</code>, though can be set to \"first\",\"after\",\"before\",\"last\", \"replace\" or \"only\" to further control the placement of the new node relative to the refNode. 'refNode' is required if a 'pos' is specified.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Create a DIV: </p> <pre><code>require([\"dojo/dom-construct\"], function(domConstruct){\n    var n = domConstruct.create(\"div\");\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>Create a DIV with content: </p> <pre><code>require([\"dojo/dom-construct\"], function(domConstruct){\n    var n = domConstruct.create(\"div\", { innerHTML:\"&lt;p&gt;hi&lt;/p&gt;\" });\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<p>Place a new DIV in the BODY, with no attributes set </p> <pre><code>require([\"dojo/dom-construct\"], function(domConstruct){\n    var n = domConstruct.create(\"div\", null, dojo.body());\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 4</h3>\n<p>Create an UL, and populate it with LI's. Place the list as the first-child of a node with id=\"someId\": </p> <pre><code>require([\"dojo/dom-construct\", \"dojo/_base/array\"],\nfunction(domConstruct, arrayUtil){\n    var ul = domConstruct.create(\"ul\", null, \"someId\", \"first\");\n    var items = [\"one\", \"two\", \"three\", \"four\"];\n    arrayUtil.forEach(items, function(data){\n        domConstruct.create(\"li\", { innerHTML: data }, ul);\n    });\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 5</h3>\n<p>Create an anchor, with an href. Place in BODY: </p> <pre><code>require([\"dojo/dom-construct\"], function(domConstruct){\n    domConstruct.create(\"a\", { href:\"foo.html\", title:\"Goto FOO!\" }, dojo.body());\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dom-construct_destroy\">\n<span class=\"functionIcon\">destroy</span><span class=\"parameters\">(node)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom-construct\" class=\"jsdoc-link\">dojo/dom-construct</a> </p> <p>Removes a node from its parent, clobbering it and all of its children. </p>  <p>Removes a node from its parent, clobbering it and all of its children. Function only works with DomNodes, and returns nothing. </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode | String</td> <td class=\"jsdoc-param-description\">\n<p>A String ID or DomNode reference of the element to be destroyed </p> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Destroy a node byId: </p> <pre><code>require([\"dojo/dom-construct\"], function(domConstruct){\n    domConstruct.destroy(\"someId\");\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dom-construct_empty\">\n<span class=\"functionIcon\">empty</span><span class=\"parameters\">(node)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom-construct\" class=\"jsdoc-link\">dojo/dom-construct</a> </p> <p>safely removes all children of the node.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode | String</td> <td class=\"jsdoc-param-description\">\n<p>a reference to a DOM node or an id.</p> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Destroy node's children byId: </p> <pre><code>require([\"dojo/dom-construct\"], function(domConstruct){\n    domConstruct.empty(\"someId\");\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dom-construct_place\">\n<span class=\"functionIcon\">place</span><span class=\"parameters\">(node,refNode,position)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom-construct\" class=\"jsdoc-link\">dojo/dom-construct</a> </p> <p>Attempt to insert node into the DOM, choosing from various positioning options. Returns the first argument resolved to a DOM node.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode | DocumentFragment | String</td> <td class=\"jsdoc-param-description\">\n<p>id or node reference, or HTML fragment starting with \"&lt;\" to place relative to refNode</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">refNode</td> <td class=\"jsdoc-param-type\">DOMNode | String</td> <td class=\"jsdoc-param-description\">\n<p>id or node reference to use as basis for placement</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">position</td> <td class=\"jsdoc-param-type\">String | Number</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>string noting the position of node relative to refNode or a number indicating the location in the childNodes collection of refNode. Accepted string values are: </p> <ul> <li>before</li> <li>after</li> <li>replace</li> <li>only</li> <li>first</li> <li>last</li> </ul> <p>\"first\" and \"last\" indicate positions as children of refNode, \"replace\" replaces refNode, \"only\" replaces all children. position defaults to \"last\" if not specified</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">DOMNode | undefined</span></p> <p>Returned values is the first argument resolved to a DOM node. </p> <p>.place() is also a method of <code>dojo/NodeList</code>, allowing <code>dojo/query</code> node lookups.</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Place a node by string id as the last child of another node by string id: </p> <pre><code>require([\"dojo/dom-construct\"], function(domConstruct){\n    domConstruct.place(\"someNode\", \"anotherNode\");\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>Place a node by string id before another node by string id </p> <pre><code>require([\"dojo/dom-construct\"], function(domConstruct){\n    domConstruct.place(\"someNode\", \"anotherNode\", \"before\");\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<p>Create a Node, and place it in the body element (last child): </p> <pre><code>require([\"dojo/dom-construct\", \"dojo/_base/window\"\n], function(domConstruct, win){\n    domConstruct.place(\"&lt;div&gt;&lt;/div&gt;\", win.body());\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 4</h3>\n<p>Put a new LI as the first child of a list by id: </p> <pre><code>require([\"dojo/dom-construct\"], function(domConstruct){\n    domConstruct.place(\"&lt;li&gt;&lt;/li&gt;\", \"someUl\", \"first\");\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dom-construct_toDom\">\n<span class=\"functionIcon\">toDom</span><span class=\"parameters\">(frag,doc)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom-construct\" class=\"jsdoc-link\">dojo/dom-construct</a> </p> <p>instantiates an HTML fragment returning the corresponding DOM.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">frag</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>the HTML fragment</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">doc</td> <td class=\"jsdoc-param-type\">DocumentNode</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>optional document to use when creating DOM nodes, defaults to dojo/_base/window.doc if not specified.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | undefined</span></p> <p>Document fragment, unless it's a single node in which case it returns the node itself</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Create a table row: </p> <pre><code>require([\"dojo/dom-construct\"], function(domConstruct){\n    var tr = domConstruct.toDom(\"&lt;tr&gt;&lt;td&gt;First!&lt;/td&gt;&lt;/tr&gt;\");\n});</code></pre> </div> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/dom-construct.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/dom-construct.html</a>\n  </p>\n</div>\n","dojo/dom-style":"<h1>dojo/dom-style</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>This module defines the core dojo DOM style API.</p>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/dom-style.html\" target=\"_blank\">dojo/dom-style reference documentation</a> for more information.</p>          <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_dom-style_get\">\n<span class=\"functionIcon\">get</span><span class=\"parameters\">(node,name)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"http://dojotoolkit.org/api/1.10/dojox/html/ext-dojo/style\" class=\"jsdoc-link\">dojox/html/ext-dojo/style</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode | String</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">name</td> <td class=\"jsdoc-param-type\">String | Object</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dom-style_getComputedStyle\">\n<span class=\"functionIcon\">getComputedStyle</span><span class=\"parameters\">(node)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom-style\" class=\"jsdoc-link\">dojo/dom-style</a> </p> <p>Returns a \"computed style\" object. </p>  <p>Gets a \"computed style\" object which can be used to gather information about the current state of the rendered node. </p> <p>Note that this may behave differently on different browsers. Values may have different formats and value encodings across browsers. </p> <p>Note also that this method is expensive. Wherever possible, reuse the returned object. </p> <p>Use the <a class=\"jsdoc-link\" href=\"dom-style#get\">dojo/dom-style.get()</a> method for more consistent (pixelized) return values. </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode</td> <td class=\"jsdoc-param-description\">\n<p>A reference to a DOM node. Does NOT support taking an ID string for speed reasons.</p> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>require([\"dojo/dom-style\", \"dojo/dom\"], function(domStyle, dom){\n    domStyle.getComputedStyle(dom.byId('foo')).borderWidth;\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>Reusing the returned object, avoiding multiple lookups: </p> <pre><code>require([\"dojo/dom-style\", \"dojo/dom\"], function(domStyle, dom){\n    var cs = domStyle.getComputedStyle(dom.byId(\"someNode\"));\n    var w = cs.width, h = cs.height;\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dom-style_set\">\n<span class=\"functionIcon\">set</span><span class=\"parameters\">(node,name,value)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"http://dojotoolkit.org/api/1.10/dojox/html/ext-dojo/style\" class=\"jsdoc-link\">dojox/html/ext-dojo/style</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode | String</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">name</td> <td class=\"jsdoc-param-type\">String | Object</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">value</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined | instance</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dom-style_toPixelValue\">\n<span class=\"functionIcon\">toPixelValue</span><span class=\"parameters\">(node,value)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom-style\" class=\"jsdoc-link\">dojo/dom-style</a> </p> <p>converts style value to pixels on IE or return a numeric value.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">value</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Number</span></p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/dom-style.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/dom-style.html</a>\n  </p>\n</div>\n","dojo/domready":"<h1>dojo/domReady</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>Plugin to delay require()/define() callback from firing until the DOM has finished loading.</p>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">domReady<span class=\"parameters\"><span class=\"paren\">(</span><span class=\"args\">callback</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">callback</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/domReady.html\" target=\"_blank\">dojo/domReady reference documentation</a> for more information.</p>              <h2 id=\"properties\">Properties</h2>    <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_domReady_load\">\n<span class=\"functionIcon\">load</span><span class=\"parameters\">(id,req,load)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"domready\" class=\"jsdoc-link\">dojo/domReady</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">id</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">req</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">load</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>    <h2 id=\"events\">Events</h2><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/domReady.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/domReady.html</a>\n  </p>\n</div>\n","dojo/errors/cancelerror":"<h1>dojo/errors/CancelError</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>Default error if a promise is canceled without a reason.</p>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">CancelError<span class=\"parameters\"><span class=\"paren\">(</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/errors/CancelError.html\" target=\"_blank\">dojo/errors/CancelError reference documentation</a> for more information.</p>          <h2 id=\"methods\">Methods</h2><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/errors/CancelError.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/errors/CancelError.html</a>\n  </p>\n</div>\n","dojo/errors/create":"<h1>dojo/errors/create</h1>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">create<span class=\"parameters\"><span class=\"paren\">(</span><span class=\"args\">name,ctor,base,props</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">name</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">ctor</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">base</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">props</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">function</span></p>          <h2 id=\"methods\">Methods</h2><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/errors/create.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/errors/create.html</a>\n  </p>\n</div>\n","dojo/errors/requesterror":"<h1>dojo/errors/RequestError</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>TODOC</p>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">RequestError<span class=\"parameters\"><span class=\"paren\">(</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div>          <h2 id=\"methods\">Methods</h2><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/errors/RequestError.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/errors/RequestError.html</a>\n  </p>\n</div>\n","dojo/errors/requesttimeouterror":"<h1>dojo/errors/RequestTimeoutError</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>TODOC</p>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">RequestTimeoutError<span class=\"parameters\"><span class=\"paren\">(</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div>          <h2 id=\"methods\">Methods</h2><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/errors/RequestTimeoutError.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/errors/RequestTimeoutError.html</a>\n  </p>\n</div>\n","dojo/dnd/source":"<h1>dojo/dnd/Source</h1> <div class=\"jsdoc-mixins\"> <label>Extends</label><a href=\"selector\" class=\"jsdoc-link\">dojo/dnd/Selector</a> </div>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>a Source object, which can be used as a DnD source, or a DnD target</p>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">\n<span class=\"sig\"><span class=\"keyword\">var </span><span class=\"var\">foo </span><span class=\"eq\">= </span><span class=\"new\">new </span><span class=\"args\">Source</span></span><span class=\"parameters\"><span class=\"paren\">(</span><span class=\"args\">node,params</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <p class=\"jsdoc-inheritance\"> <label>Defined by </label><span><a class=\"jsdoc-link\" href=\"source\">dojo/dnd/Source</a></span> </p> <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode | String</td> <td class=\"jsdoc-param-description\">\n<p>node or node's id to build the source on</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">params</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>any property of this class may be configured via the params object which is mixed-in to the <code>dojo/dnd/Source</code> instance</p> </td> </tr> </table> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/dnd.html\" target=\"_blank\">dojo/dnd/Source reference documentation</a> for more information.</p>              <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Source_accept\">\n<span class=\"arrayIcon\">accept</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Source_allowNested\">\n<span class=\"booleanIcon\">allowNested</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <div class=\"jsdoc-summary\">\n<p>Indicates whether to allow dnd item nodes to be nested within other elements. By default this is false, indicating that only direct children of the container can be draggable dnd item nodes</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Source_autoSync\">\n<span class=\"booleanIcon\">autoSync</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Source_copyOnly\">\n<span class=\"booleanIcon\">copyOnly</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Source_current\">\n<span class=\"domnodeIcon\">current</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <div class=\"jsdoc-summary\">\n<p>The DOM node the mouse is currently hovered over</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Source_delay\">\n<span class=\"numberIcon\">delay</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Source_generateText\">\n<span class=\"booleanIcon\">generateText</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Source_horizontal\">\n<span class=\"booleanIcon\">horizontal</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Source_isSource\">\n<span class=\"booleanIcon\">isSource</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Source_map\">\n<span class=\"objectIcon\">map</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <div class=\"jsdoc-summary\">\n<p>Map from an item's id (which is also the DOMNode's id) to the <a class=\"jsdoc-link\" href=\"container#Item\">dojo/dnd/Container.Item</a> itself.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Source_selection\">\n<span class=\"objectIcon\">selection</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"selector\" class=\"jsdoc-link\">dojo/dnd/Selector</a> </p> <div class=\"jsdoc-summary\">\n<p>The set of id's that are currently selected, such that this.selection[id] == 1 if the node w/that id is selected. Can iterate over selected node's id's like: </p> <pre><code>for(var id in this.selection)</code></pre> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Source_selfAccept\">\n<span class=\"booleanIcon\">selfAccept</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Source_selfCopy\">\n<span class=\"booleanIcon\">selfCopy</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Source_singular\">\n<span class=\"booleanIcon\">singular</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"selector\" class=\"jsdoc-link\">dojo/dnd/Selector</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Source_skipForm\">\n<span class=\"booleanIcon\">skipForm</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Source_withHandles\">\n<span class=\"booleanIcon\">withHandles</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p>    <h2 id=\"methods\">Methods</h2>               <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Source_checkAcceptance\">\n<span class=\"functionIcon\">checkAcceptance</span><span class=\"parameters\">(source,nodes)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p> <p>checks if the target can accept nodes from this source</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">source</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>the source which provides items</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">nodes</td> <td class=\"jsdoc-param-type\">Array</td> <td class=\"jsdoc-param-description\">\n<p>the list of transferred items</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">boolean</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Source_clearItems\">\n<span class=\"functionIcon\">clearItems</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <p>removes all data items from the map</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Source_copyState\">\n<span class=\"functionIcon\">copyState</span><span class=\"parameters\">(keyPressed,self)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p> <p>Returns true if we need to copy items, false to move. It is separated to be overwritten dynamically, if needed.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">keyPressed</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\">\n<p>the \"copy\" key was pressed</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">self</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>optional flag that means that we are about to drop on itself</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">boolean | undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Source_creator\">\n<span class=\"functionIcon\">creator</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <p>creator function, dummy at the moment</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Source_deleteSelectedNodes\">\n<span class=\"functionIcon\">deleteSelectedNodes</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"selector\" class=\"jsdoc-link\">dojo/dnd/Selector</a> </p> <p>deletes all selected items</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">function</span></p> <p>deletes all selected items</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Source_delItem\">\n<span class=\"functionIcon\">delItem</span><span class=\"parameters\">(key)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <p>removes a data item from the map by its key (id)</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">key</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Source_destroy\">\n<span class=\"functionIcon\">destroy</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p> <p>prepares the object to be garbage-collected</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Source_emit\">\n<span class=\"functionIcon\">emit</span><span class=\"parameters\">(type,event)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../evented\" class=\"jsdoc-link\">dojo/Evented</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">type</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">event</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Source_forInItems\">\n<span class=\"functionIcon\">forInItems</span><span class=\"parameters\">(f,o)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <p>iterates over a data map skipping members that are present in the empty object (IE and/or 3rd-party libraries).</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">f</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">o</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">string</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Source_forInSelectedItems\">\n<span class=\"functionIcon\">forInSelectedItems</span><span class=\"parameters\">(f,o)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"selector\" class=\"jsdoc-link\">dojo/dnd/Selector</a> </p> <p>iterates over selected items; see <code>dojo/dnd/Container.forInItems()</code> for details</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">f</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">o</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Source_getAllNodes\">\n<span class=\"functionIcon\">getAllNodes</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <p>returns a list (an array) of all valid child nodes</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Source_getItem\">\n<span class=\"functionIcon\">getItem</span><span class=\"parameters\">(key)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <p>returns a data item by its key (id)</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">key</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Source_getSelectedNodes\">\n<span class=\"functionIcon\">getSelectedNodes</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"selector\" class=\"jsdoc-link\">dojo/dnd/Selector</a> </p> <p>returns a list (an array) of selected nodes</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">instance</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Source_insertNodes\">\n<span class=\"functionIcon\">insertNodes</span><span class=\"parameters\">(addSelected,data,before,anchor)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"selector\" class=\"jsdoc-link\">dojo/dnd/Selector</a> </p> <p>inserts new data items (see <code>dojo/dnd/Container.insertNodes()</code> method for details)</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">addSelected</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\">\n<p>all new nodes will be added to selected items, if true, no selection change otherwise</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">data</td> <td class=\"jsdoc-param-type\">Array</td> <td class=\"jsdoc-param-description\">\n<p>a list of data items, which should be processed by the creator function</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">before</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\">\n<p>insert before the anchor, if true, and after the anchor otherwise</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">anchor</td> <td class=\"jsdoc-param-type\">Node</td> <td class=\"jsdoc-param-description\">\n<p>the anchor node to be used as a point of insertion</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">function</span></p> <p>inserts new data items (see <code>dojo/dnd/Container.insertNodes()</code> method for details)</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Source_markupFactory\">\n<span class=\"functionIcon\">markupFactory</span><span class=\"parameters\">(params,node,Ctor)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">params</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">Ctor</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">instance</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Source_on\">\n<span class=\"functionIcon\">on</span><span class=\"parameters\">(type,listener)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../evented\" class=\"jsdoc-link\">dojo/Evented</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">type</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">listener</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Source_selectAll\">\n<span class=\"functionIcon\">selectAll</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"selector\" class=\"jsdoc-link\">dojo/dnd/Selector</a> </p> <p>selects all items</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Source_selectNone\">\n<span class=\"functionIcon\">selectNone</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"selector\" class=\"jsdoc-link\">dojo/dnd/Selector</a> </p> <p>unselects all items</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Source_setItem\">\n<span class=\"functionIcon\">setItem</span><span class=\"parameters\">(key,data)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <p>associates a data item with its key (id)</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">key</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">data</td> <td class=\"jsdoc-param-type\">Container.Item</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Source_startup\">\n<span class=\"functionIcon\">startup</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <p>collects valid child items and populate the map</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Source_sync\">\n<span class=\"functionIcon\">sync</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"selector\" class=\"jsdoc-link\">dojo/dnd/Selector</a> </p> <p>sync up the node list with the data map</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">function</span></p> <p>sync up the node list with the data map</p>     <h2 id=\"events\">Events</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Source_onDndCancel\">\n<span class=\"functionIcon\">onDndCancel</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p> <p>topic event processor for /dnd/cancel, called to cancel the DnD operation</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Source_onDndDrop\">\n<span class=\"functionIcon\">onDndDrop</span><span class=\"parameters\">(source,nodes,copy,target)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p> <p>topic event processor for /dnd/drop, called to finish the DnD operation</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">source</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>the source which provides items</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">nodes</td> <td class=\"jsdoc-param-type\">Array</td> <td class=\"jsdoc-param-description\">\n<p>the list of transferred items</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">copy</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\">\n<p>copy items, if true, move items otherwise</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">target</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>the target which accepts items</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Source_onDndSourceOver\">\n<span class=\"functionIcon\">onDndSourceOver</span><span class=\"parameters\">(source)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p> <p>topic event processor for /dnd/source/over, called when detected a current source</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">source</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>the source which has the mouse over it</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Source_onDndStart\">\n<span class=\"functionIcon\">onDndStart</span><span class=\"parameters\">(source,nodes,copy)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p> <p>topic event processor for /dnd/start, called to initiate the DnD operation</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">source</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>the source which provides items</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">nodes</td> <td class=\"jsdoc-param-type\">Array</td> <td class=\"jsdoc-param-description\">\n<p>the list of transferred items</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">copy</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\">\n<p>copy items, if true, move items otherwise</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Source_onDraggingOut\">\n<span class=\"functionIcon\">onDraggingOut</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p> <p>called during the active DnD operation, when items are dragged away from this target, and it is not disabled</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Source_onDraggingOver\">\n<span class=\"functionIcon\">onDraggingOver</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p> <p>called during the active DnD operation, when items are dragged over this target, and it is not disabled</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Source_onDrop\">\n<span class=\"functionIcon\">onDrop</span><span class=\"parameters\">(source,nodes,copy)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p> <p>called only on the current target, when drop is performed</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">source</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>the source which provides items</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">nodes</td> <td class=\"jsdoc-param-type\">Array</td> <td class=\"jsdoc-param-description\">\n<p>the list of transferred items</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">copy</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\">\n<p>copy items, if true, move items otherwise</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Source_onDropExternal\">\n<span class=\"functionIcon\">onDropExternal</span><span class=\"parameters\">(source,nodes,copy)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p> <p>called only on the current target, when drop is performed from an external source</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">source</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>the source which provides items</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">nodes</td> <td class=\"jsdoc-param-type\">Array</td> <td class=\"jsdoc-param-description\">\n<p>the list of transferred items</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">copy</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\">\n<p>copy items, if true, move items otherwise</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Source_onDropInternal\">\n<span class=\"functionIcon\">onDropInternal</span><span class=\"parameters\">(nodes,copy)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p> <p>called only on the current target, when drop is performed from the same target/source</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">nodes</td> <td class=\"jsdoc-param-type\">Array</td> <td class=\"jsdoc-param-description\">\n<p>the list of transferred items</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">copy</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\">\n<p>copy items, if true, move items otherwise</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Source_onMouseDown\">\n<span class=\"functionIcon\">onMouseDown</span><span class=\"parameters\">(e)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p> <p>event processor for onmousedown</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">e</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\">\n<p>mouse event</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Source_onMouseMove\">\n<span class=\"functionIcon\">onMouseMove</span><span class=\"parameters\">(e)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p> <p>event processor for onmousemove</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">e</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\">\n<p>mouse event</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Source_onMouseOut\">\n<span class=\"functionIcon\">onMouseOut</span><span class=\"parameters\">(e)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <p>event processor for onmouseout</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">e</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\">\n<p>mouse event</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Source_onMouseOver\">\n<span class=\"functionIcon\">onMouseOver</span><span class=\"parameters\">(e)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <p>event processor for onmouseover or touch, to mark that element as the current element</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">e</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\">\n<p>mouse event</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Source_onMouseUp\">\n<span class=\"functionIcon\">onMouseUp</span><span class=\"parameters\">(e)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p> <p>event processor for onmouseup</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">e</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\">\n<p>mouse event</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Source_onOutEvent\">\n<span class=\"functionIcon\">onOutEvent</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p> <p>this function is called once, when mouse is out of our container</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Source_onOverEvent\">\n<span class=\"functionIcon\">onOverEvent</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p> <p>this function is called once, when mouse is over our container</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Source_onSelectStart\">\n<span class=\"functionIcon\">onSelectStart</span><span class=\"parameters\">(e)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <p>event processor for onselectevent and ondragevent</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">e</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\">\n<p>mouse event</p> </td> </tr> </table><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/dnd/Source.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/dnd/Source.html</a>\n  </p>\n</div>\n","dojo/dom-geometry":"<h1>dojo/dom-geometry</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>This module defines the core dojo DOM geometry API.</p>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/dom-geometry.html\" target=\"_blank\">dojo/dom-geometry reference documentation</a> for more information.</p>            <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_dom-geometry_boxModel\">\n<span class=\"stringIcon\">boxModel</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"dom-geometry\" class=\"jsdoc-link\">dojo/dom-geometry</a> </p>    <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_dom-geometry_docScroll\">\n<span class=\"functionIcon\">docScroll</span><span class=\"parameters\">(doc)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom-geometry\" class=\"jsdoc-link\">dojo/dom-geometry</a> </p> <p>Returns an object with {node, x, y} with corresponding offsets.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">doc</td> <td class=\"jsdoc-param-type\">Document</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Optional document to query. If unspecified, use win.doc.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Object | undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dom-geometry_fixIeBiDiScrollLeft\">\n<span class=\"functionIcon\">fixIeBiDiScrollLeft</span><span class=\"parameters\">(scrollLeft,doc)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom-geometry\" class=\"jsdoc-link\">dojo/dom-geometry</a> </p> <p>In RTL direction, scrollLeft should be a negative value, but IE returns a positive one. All codes using documentElement.scrollLeft must call this function to fix this error, otherwise the position will offset to right when there is a horizontal scrollbar.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">scrollLeft</td> <td class=\"jsdoc-param-type\">Number</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">doc</td> <td class=\"jsdoc-param-type\">Document</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Optional document to query. If unspecified, use win.doc.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Number | number</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dom-geometry_getBorderExtents\">\n<span class=\"functionIcon\">getBorderExtents</span><span class=\"parameters\">(node,computedStyle)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom-geometry\" class=\"jsdoc-link\">dojo/dom-geometry</a> </p> <p>returns an object with properties useful for noting the border dimensions.</p>  <ul> <li>l/t/r/b = the sum of left/top/right/bottom border (respectively)</li> <li>w = the sum of the left and right border</li> <li>h = the sum of the top and bottom border</li> </ul> <p>The w/h are used for calculating boxes. Normally application code will not need to invoke this directly, and will use the ...box... functions instead.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">computedStyle</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>This parameter accepts computed styles object. If this parameter is omitted, the functions will call dojo/dom-style.getComputedStyle to get one. It is a better way, calling dojo/dom-style.getComputedStyle once, and then pass the reference to this computedStyle parameter. Wherever possible, reuse the returned object of dojo/dom-style.getComputedStyle().</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">object</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dom-geometry_getContentBox\">\n<span class=\"functionIcon\">getContentBox</span><span class=\"parameters\">(node,computedStyle)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom-geometry\" class=\"jsdoc-link\">dojo/dom-geometry</a> </p> <p>Returns an object that encodes the width, height, left and top positions of the node's content box, irrespective of the current box model.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">computedStyle</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>This parameter accepts computed styles object. If this parameter is omitted, the functions will call dojo/dom-style.getComputedStyle to get one. It is a better way, calling dojo/dom-style.getComputedStyle once, and then pass the reference to this computedStyle parameter. Wherever possible, reuse the returned object of dojo/dom-style.getComputedStyle().</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">object</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dom-geometry_getIeDocumentElementOffset\">\n<span class=\"functionIcon\">getIeDocumentElementOffset</span><span class=\"parameters\">(doc)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom-geometry\" class=\"jsdoc-link\">dojo/dom-geometry</a> </p> <p>returns the offset in x and y from the document body to the visual edge of the page for IE</p>  <p>The following values in IE contain an offset: </p> <pre><code>event.clientX\nevent.clientY\nnode.getBoundingClientRect().left\nnode.getBoundingClientRect().top</code></pre> <p>But other position related values do not contain this offset, </p> <p>such as node.offsetLeft, node.offsetTop, node.style.left and node.style.top. The offset is always (2, 2) in LTR direction. When the body is in RTL direction, the offset counts the width of left scroll bar's width. This function computes the actual offset.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">doc</td> <td class=\"jsdoc-param-type\">Document</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Optional document to query. If unspecified, use win.doc.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">object</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dom-geometry_getMarginBox\">\n<span class=\"functionIcon\">getMarginBox</span><span class=\"parameters\">(node,computedStyle)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom-geometry\" class=\"jsdoc-link\">dojo/dom-geometry</a> </p> <p>returns an object that encodes the width, height, left and top positions of the node's margin box.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">computedStyle</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>This parameter accepts computed styles object. If this parameter is omitted, the functions will call dojo/dom-style.getComputedStyle to get one. It is a better way, calling dojo/dom-style.getComputedStyle once, and then pass the reference to this computedStyle parameter. Wherever possible, reuse the returned object of dojo/dom-style.getComputedStyle().</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">object</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dom-geometry_getMarginExtents\">\n<span class=\"functionIcon\">getMarginExtents</span><span class=\"parameters\">(node,computedStyle)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom-geometry\" class=\"jsdoc-link\">dojo/dom-geometry</a> </p> <p>returns object with properties useful for box fitting with regards to box margins (i.e., the outer-box). </p> <ul> <li>l/t = marginLeft, marginTop, respectively</li> <li>w = total width, margin inclusive</li> <li>h = total height, margin inclusive</li> </ul> <p>The w/h are used for calculating boxes. Normally application code will not need to invoke this directly, and will use the ...box... functions instead.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">computedStyle</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>This parameter accepts computed styles object. If this parameter is omitted, the functions will call dojo/dom-style.getComputedStyle to get one. It is a better way, calling dojo/dom-style.getComputedStyle once, and then pass the reference to this computedStyle parameter. Wherever possible, reuse the returned object of dojo/dom-style.getComputedStyle().</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">object</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dom-geometry_getMarginSize\">\n<span class=\"functionIcon\">getMarginSize</span><span class=\"parameters\">(node,computedStyle)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom-geometry\" class=\"jsdoc-link\">dojo/dom-geometry</a> </p> <p>returns an object that encodes the width and height of the node's margin box</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode | String</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">computedStyle</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>This parameter accepts computed styles object. If this parameter is omitted, the functions will call dojo/dom-style.getComputedStyle to get one. It is a better way, calling dojo/dom-style.getComputedStyle once, and then pass the reference to this computedStyle parameter. Wherever possible, reuse the returned object of dojo/dom-style.getComputedStyle().</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">object</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dom-geometry_getPadBorderExtents\">\n<span class=\"functionIcon\">getPadBorderExtents</span><span class=\"parameters\">(node,computedStyle)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom-geometry\" class=\"jsdoc-link\">dojo/dom-geometry</a> </p> <p>Returns object with properties useful for box fitting with regards to padding.</p>  <ul> <li>l/t/r/b = the sum of left/top/right/bottom padding and left/top/right/bottom border (respectively)</li> <li>w = the sum of the left and right padding and border</li> <li>h = the sum of the top and bottom padding and border</li> </ul> <p>The w/h are used for calculating boxes. Normally application code will not need to invoke this directly, and will use the ...box... functions instead.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">computedStyle</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>This parameter accepts computed styles object. If this parameter is omitted, the functions will call dojo/dom-style.getComputedStyle to get one. It is a better way, calling dojo/dom-style.getComputedStyle once, and then pass the reference to this computedStyle parameter. Wherever possible, reuse the returned object of dojo/dom-style.getComputedStyle().</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">object</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dom-geometry_getPadExtents\">\n<span class=\"functionIcon\">getPadExtents</span><span class=\"parameters\">(node,computedStyle)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom-geometry\" class=\"jsdoc-link\">dojo/dom-geometry</a> </p> <p>Returns object with special values specifically useful for node fitting.</p>  <p>Returns an object with <code>w</code>, <code>h</code>, <code>l</code>, <code>t</code> properties: </p> <pre><code>l/t/r/b = left/top/right/bottom padding (respectively)\nw = the total of the left and right padding\nh = the total of the top and bottom padding</code></pre> <p>If 'node' has position, l/t forms the origin for child nodes. </p> <p>The w/h are used for calculating boxes. Normally application code will not need to invoke this directly, and will use the ...box... functions instead.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">computedStyle</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>This parameter accepts computed styles object. If this parameter is omitted, the functions will call dojo/dom-style.getComputedStyle to get one. It is a better way, calling dojo/dom-style.getComputedStyle once, and then pass the reference to this computedStyle parameter. Wherever possible, reuse the returned object of dojo/dom-style.getComputedStyle().</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">object</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dom-geometry_isBodyLtr\">\n<span class=\"functionIcon\">isBodyLtr</span><span class=\"parameters\">(doc)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom-geometry\" class=\"jsdoc-link\">dojo/dom-geometry</a> </p> <p>Returns true if the current language is left-to-right, and false otherwise.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">doc</td> <td class=\"jsdoc-param-type\">Document</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Optional document to query. If unspecified, use win.doc.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Boolean | boolean</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dom-geometry_normalizeEvent\">\n<span class=\"functionIcon\">normalizeEvent</span><span class=\"parameters\">(event)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom-geometry\" class=\"jsdoc-link\">dojo/dom-geometry</a> </p> <p>Normalizes the geometry of a DOM event, normalizing the pageX, pageY, offsetX, offsetY, layerX, and layerX properties</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">event</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dom-geometry_position\">\n<span class=\"functionIcon\">position</span><span class=\"parameters\">(node,includeScroll)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom-geometry\" class=\"jsdoc-link\">dojo/dom-geometry</a> </p> <p>Gets the position and size of the passed element relative to the viewport (if includeScroll==false), or relative to the document root (if includeScroll==true). </p>  <p>Returns an object of the form: <code>{ x: 100, y: 300, w: 20, h: 15 }</code>. If includeScroll==true, the x and y values will include any document offsets that may affect the position relative to the viewport. Uses the border-box model (inclusive of border and padding but not margin). Does not act as a setter.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode | String</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">includeScroll</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Object | object</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dom-geometry_setContentSize\">\n<span class=\"functionIcon\">setContentSize</span><span class=\"parameters\">(node,box,computedStyle)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom-geometry\" class=\"jsdoc-link\">dojo/dom-geometry</a> </p> <p>Sets the size of the node's contents, irrespective of margins, padding, or borders.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">box</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>hash with optional \"w\", and \"h\" properties for \"width\", and \"height\" respectively. All specified properties should have numeric values in whole pixels.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">computedStyle</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>This parameter accepts computed styles object. If this parameter is omitted, the functions will call dojo/dom-style.getComputedStyle to get one. It is a better way, calling dojo/dom-style.getComputedStyle once, and then pass the reference to this computedStyle parameter. Wherever possible, reuse the returned object of dojo/dom-style.getComputedStyle().</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dom-geometry_setMarginBox\">\n<span class=\"functionIcon\">setMarginBox</span><span class=\"parameters\">(node,box,computedStyle)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom-geometry\" class=\"jsdoc-link\">dojo/dom-geometry</a> </p> <p>sets the size of the node's margin box and placement (left/top), irrespective of box model. Think of it as a passthrough to setBox that handles box-model vagaries for you.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">box</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>hash with optional \"l\", \"t\", \"w\", and \"h\" properties for \"left\", \"right\", \"width\", and \"height\" respectively. All specified properties should have numeric values in whole pixels.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">computedStyle</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>This parameter accepts computed styles object. If this parameter is omitted, the functions will call dojo/dom-style.getComputedStyle to get one. It is a better way, calling dojo/dom-style.getComputedStyle once, and then pass the reference to this computedStyle parameter. Wherever possible, reuse the returned object of dojo/dom-style.getComputedStyle().</p> </td> </tr> </table><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/dom-geometry.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/dom-geometry.html</a>\n  </p>\n</div>\n","dojo/evented":"<h1>dojo/Evented</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>A class that can be used as a mixin or base class, to add on() and emit() methods to a class for listening for events and emitting events:</p>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/Evented.html\" target=\"_blank\">dojo/Evented reference documentation</a> for more information.</p>    <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>define([\"dojo/Evented\", \"dojo/_base/declare\", \"dojo/Stateful\"\n], function(Evented, declare, Stateful){\n    var EventedStateful = declare([Evented, Stateful], {...});\n    var instance = new EventedStateful();\n    instance.on(\"open\", function(event){\n    ... do something with event\n });\n\ninstance.emit(\"open\", {name:\"some event\", ...});</code></pre> </div> </div>       <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_Evented_emit\">\n<span class=\"functionIcon\">emit</span><span class=\"parameters\">(type,event)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"evented\" class=\"jsdoc-link\">dojo/Evented</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">type</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">event</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_Evented_on\">\n<span class=\"functionIcon\">on</span><span class=\"parameters\">(type,listener)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"evented\" class=\"jsdoc-link\">dojo/Evented</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">type</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">listener</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/Evented.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/Evented.html</a>\n  </p>\n</div>\n","dojo/fx":"<h1>dojo/fx</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>Effects library on top of Base animations</p>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/fx.html\" target=\"_blank\">dojo/fx reference documentation</a> for more information.</p>            <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_easing\">\n<span class=\"objectIcon\">easing</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"fx/easing\" class=\"jsdoc-link\">dojo/fx/easing</a> </p> <div class=\"jsdoc-summary\">\n<p>Collection of easing functions to use beyond the default <code>dojo._defaultEasing</code> function.</p> </div>    <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_chain\">\n<span class=\"functionIcon\">chain</span><span class=\"parameters\">(animations)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"fx\" class=\"jsdoc-link\">dojo/fx</a> </p> <p>Chain a list of <code>dojo/_base/fx.Animation</code>s to run in sequence </p>  <p>Return a <a class=\"jsdoc-link\" href=\"_base/fx#Animation\">dojo/_base/fx.Animation</a> which will play all passed <a class=\"jsdoc-link\" href=\"_base/fx#Animation\">dojo/_base/fx.Animation</a> instances in sequence, firing its own synthesized events simulating a single animation. (eg: onEnd of this animation means the end of the chain, not the individual animations within) </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">animations</td> <td class=\"jsdoc-param-type\">\n<a class=\"jsdoc-link\" href=\"_base/fx#Animation\">dojo/_base/fx.Animation</a>[]</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">instance</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Once <code>node</code> is faded out, fade in <code>otherNode</code> </p> <pre><code>require([\"dojo/fx\"], function(fx){\n    fx.chain([\n        fx.fadeIn({ node:node }),\n        fx.fadeOut({ node:otherNode })\n    ]).play();\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_combine\">\n<span class=\"functionIcon\">combine</span><span class=\"parameters\">(animations)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"fx\" class=\"jsdoc-link\">dojo/fx</a> </p> <p>Combine a list of <code>dojo/_base/fx.Animation</code>s to run in parallel </p>  <p>Combine an array of <a class=\"jsdoc-link\" href=\"_base/fx#Animation\">dojo/_base/fx.Animation</a>s to run in parallel, providing a new <a class=\"jsdoc-link\" href=\"_base/fx#Animation\">dojo/_base/fx.Animation</a> instance encompasing each animation, firing standard animation events. </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">animations</td> <td class=\"jsdoc-param-type\">\n<a class=\"jsdoc-link\" href=\"_base/fx#Animation\">dojo/_base/fx.Animation</a>[]</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">instance</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Fade out <code>node</code> while fading in <code>otherNode</code> simultaneously </p> <pre><code>require([\"dojo/fx\"], function(fx){\n    fx.combine([\n        fx.fadeIn({ node:node }),\n        fx.fadeOut({ node:otherNode })\n    ]).play();\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>When the longest animation ends, execute a function: </p> <pre><code>require([\"dojo/fx\"], function(fx){\n    var anim = fx.combine([\n        fx.fadeIn({ node: n, duration:700 }),\n        fx.fadeOut({ node: otherNode, duration: 300 })\n    ]);\n    aspect.after(anim, \"onEnd\", function(){\n        // overall animation is done.\n    }, true);\n    anim.play(); // play the animation\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_slideTo\">\n<span class=\"functionIcon\">slideTo</span><span class=\"parameters\">(args)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"fx\" class=\"jsdoc-link\">dojo/fx</a> </p> <p>Slide a node to a new top/left position </p>  <p>Returns an animation that will slide \"node\" defined in args Object from its current position to the position defined by (args.left, args.top). </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">args</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>A hash-map of standard <code>dojo/_base/fx.Animation</code> constructor properties (such as easing: node: duration: and so on). Special args members are <code>top</code> and <code>left</code>, which indicate the new position to slide to. </p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>.slideTo({ node: node, left:\"40\", top:\"50\", units:\"px\" }).play()</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_Toggler\">\n<span class=\"functionIcon\">Toggler</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"fx/toggler\" class=\"jsdoc-link\">dojo/fx/Toggler</a> </p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_wipeIn\">\n<span class=\"functionIcon\">wipeIn</span><span class=\"parameters\">(args)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"fx\" class=\"jsdoc-link\">dojo/fx</a> </p> <p>Expand a node to it's natural height. </p>  <p>Returns an animation that will expand the node defined in 'args' object from it's current height to it's natural height (with no scrollbar). Node must have no margin/border/padding. </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">args</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>A hash-map of standard <code>dojo/_base/fx.Animation</code> constructor properties (such as easing: node: duration: and so on) </p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>require([\"dojo/fx\"], function(fx){\n    fx.wipeIn({\n        node:\"someId\"\n    }).play()\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_wipeOut\">\n<span class=\"functionIcon\">wipeOut</span><span class=\"parameters\">(args)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"fx\" class=\"jsdoc-link\">dojo/fx</a> </p> <p>Shrink a node to nothing and hide it. </p>  <p>Returns an animation that will shrink node defined in \"args\" from it's current height to 1px, and then hide it. </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">args</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>A hash-map of standard <code>dojo/_base/fx.Animation</code> constructor properties (such as easing: node: duration: and so on) </p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>require([\"dojo/fx\"], function(fx){\n    fx.wipeOut({ node:\"someId\" }).play()\n});</code></pre> </div> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/fx.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/fx.html</a>\n  </p>\n</div>\n","dojo/fx/toggler":"<h1>dojo/fx/Toggler</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>A simple <code>dojo.Animation</code> toggler API.</p>  <p>class constructor for an animation toggler. It accepts a packed set of arguments about what type of animation to use in each direction, duration, etc. All available members are mixed into these animations from the constructor (for example, <code>node</code>, <code>showDuration</code>, <code>hideDuration</code>).</p>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">\n<span class=\"sig\"><span class=\"keyword\">var </span><span class=\"var\">foo </span><span class=\"eq\">= </span><span class=\"new\">new </span><span class=\"args\">Toggler</span></span><span class=\"parameters\"><span class=\"paren\">(</span><span class=\"args\">args</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <p class=\"jsdoc-inheritance\"> <label>Defined by </label><span><a class=\"jsdoc-link\" href=\"toggler\">dojo/fx/Toggler</a></span> </p> <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">args</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/fx/Toggler.html\" target=\"_blank\">dojo/fx/Toggler reference documentation</a> for more information.</p>    <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>var t = new dojo/fx/Toggler({\n    node: \"nodeId\",\n    showDuration: 500,\n    // hideDuration will default to \"200\"\n    showFunc: dojo/fx/wipeIn,\n    // hideFunc will default to \"fadeOut\"\n});\nt.show(100); // delay showing for 100ms\n// ...time passes...\nt.hide();</code></pre> </div> </div>         <h2 id=\"properties\">Properties</h2>          <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_Toggler_hideDuration\">\n<span class=\"numberIcon\">hideDuration</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"toggler\" class=\"jsdoc-link\">dojo/fx/Toggler</a> </p> <div class=\"jsdoc-summary\">\n<p>Time in milliseconds to run the hide Animation</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_Toggler_node\">\n<span class=\"domnodeIcon\">node</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"toggler\" class=\"jsdoc-link\">dojo/fx/Toggler</a> </p> <div class=\"jsdoc-summary\">\n<p>the node to target for the showing and hiding animations</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_Toggler_showDuration\">\n<span class=\"numberIcon\">showDuration</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"toggler\" class=\"jsdoc-link\">dojo/fx/Toggler</a> </p> <div class=\"jsdoc-summary\">\n<p>Time in milliseconds to run the show Animation</p> </div>    <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_Toggler_hide\">\n<span class=\"functionIcon\">hide</span><span class=\"parameters\">(delay)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"toggler\" class=\"jsdoc-link\">dojo/fx/Toggler</a> </p> <p>Toggle the node to hidden</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">delay</td> <td class=\"jsdoc-param-type\">Integer</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Amount of time to stall playing the hide animation</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_Toggler_hideFunc\">\n<span class=\"functionIcon\">hideFunc</span><span class=\"parameters\">(args)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"toggler\" class=\"jsdoc-link\">dojo/fx/Toggler</a> </p> <p>The function that returns the <code>dojo.Animation</code> to hide the node</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">args</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>An object with the following properties:</p>\n<ul>\n<li>node (DOMNode|String): <p>The node referenced in the animation</p> </li>\n<li>duration (Integer, optional): <p>Duration of the animation in milliseconds.</p> </li>\n<li>easing (Function, optional): <p>An easing function.</p> </li>\n</ul> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_Toggler_show\">\n<span class=\"functionIcon\">show</span><span class=\"parameters\">(delay)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"toggler\" class=\"jsdoc-link\">dojo/fx/Toggler</a> </p> <p>Toggle the node to showing</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">delay</td> <td class=\"jsdoc-param-type\">Integer</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Amount of time to stall playing the show animation</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_Toggler_showFunc\">\n<span class=\"functionIcon\">showFunc</span><span class=\"parameters\">(args)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"toggler\" class=\"jsdoc-link\">dojo/fx/Toggler</a> </p> <p>The function that returns the <code>dojo.Animation</code> to show the node</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">args</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>An object with the following properties:</p>\n<ul>\n<li>node (DOMNode|String): <p>The node referenced in the animation</p> </li>\n<li>duration (Integer, optional): <p>Duration of the animation in milliseconds.</p> </li>\n<li>easing (Function, optional): <p>An easing function.</p> </li>\n</ul> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/fx/Toggler.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/fx/Toggler.html</a>\n  </p>\n</div>\n","dojo/fx.toggler":"<h1>dojo/fx.Toggler</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>A simple <code>dojo.Animation</code> toggler API.</p>  <p>class constructor for an animation toggler. It accepts a packed set of arguments about what type of animation to use in each direction, duration, etc. All available members are mixed into these animations from the constructor (for example, <code>node</code>, <code>showDuration</code>, <code>hideDuration</code>).</p>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">\n<span class=\"sig\"><span class=\"keyword\">var </span><span class=\"var\">foo </span><span class=\"eq\">= </span><span class=\"new\">new </span><span class=\"args\">fx.Toggler</span></span><span class=\"parameters\"><span class=\"paren\">(</span><span class=\"args\">args</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <p class=\"jsdoc-inheritance\"> <label>Defined by </label><span><a class=\"jsdoc-link\" href=\"fx/toggler\">dojo/fx/Toggler</a></span> </p> <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">args</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>    <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>var t = new dojo/fx/Toggler({\n    node: \"nodeId\",\n    showDuration: 500,\n    // hideDuration will default to \"200\"\n    showFunc: dojo/fx/wipeIn,\n    // hideFunc will default to \"fadeOut\"\n});\nt.show(100); // delay showing for 100ms\n// ...time passes...\nt.hide();</code></pre> </div> </div>         <h2 id=\"properties\">Properties</h2>          <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_Toggler_hideDuration\">\n<span class=\"numberIcon\">hideDuration</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"fx/toggler\" class=\"jsdoc-link\">dojo/fx/Toggler</a> </p> <div class=\"jsdoc-summary\">\n<p>Time in milliseconds to run the hide Animation</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_Toggler_node\">\n<span class=\"domnodeIcon\">node</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"fx/toggler\" class=\"jsdoc-link\">dojo/fx/Toggler</a> </p> <div class=\"jsdoc-summary\">\n<p>the node to target for the showing and hiding animations</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_Toggler_showDuration\">\n<span class=\"numberIcon\">showDuration</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"fx/toggler\" class=\"jsdoc-link\">dojo/fx/Toggler</a> </p> <div class=\"jsdoc-summary\">\n<p>Time in milliseconds to run the show Animation</p> </div>    <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_Toggler_hide\">\n<span class=\"functionIcon\">hide</span><span class=\"parameters\">(delay)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"fx/toggler\" class=\"jsdoc-link\">dojo/fx/Toggler</a> </p> <p>Toggle the node to hidden</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">delay</td> <td class=\"jsdoc-param-type\">Integer</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Amount of time to stall playing the hide animation</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_Toggler_hideFunc\">\n<span class=\"functionIcon\">hideFunc</span><span class=\"parameters\">(args)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"fx/toggler\" class=\"jsdoc-link\">dojo/fx/Toggler</a> </p> <p>The function that returns the <code>dojo.Animation</code> to hide the node</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">args</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>An object with the following properties:</p>\n<ul>\n<li>node (DOMNode|String): <p>The node referenced in the animation</p> </li>\n<li>duration (Integer, optional): <p>Duration of the animation in milliseconds.</p> </li>\n<li>easing (Function, optional): <p>An easing function.</p> </li>\n</ul> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_Toggler_show\">\n<span class=\"functionIcon\">show</span><span class=\"parameters\">(delay)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"fx/toggler\" class=\"jsdoc-link\">dojo/fx/Toggler</a> </p> <p>Toggle the node to showing</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">delay</td> <td class=\"jsdoc-param-type\">Integer</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Amount of time to stall playing the show animation</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_Toggler_showFunc\">\n<span class=\"functionIcon\">showFunc</span><span class=\"parameters\">(args)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"fx/toggler\" class=\"jsdoc-link\">dojo/fx/Toggler</a> </p> <p>The function that returns the <code>dojo.Animation</code> to show the node</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">args</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>An object with the following properties:</p>\n<ul>\n<li>node (DOMNode|String): <p>The node referenced in the animation</p> </li>\n<li>duration (Integer, optional): <p>Duration of the animation in milliseconds.</p> </li>\n<li>easing (Function, optional): <p>An easing function.</p> </li>\n</ul> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/fx.Toggler.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/fx.Toggler.html</a>\n  </p>\n</div>\n","dojo/gears":"<h1>dojo/gears</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>TODOC</p>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/gears.html\" target=\"_blank\">dojo/gears reference documentation</a> for more information.</p>            <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_gears_available\">\n<span class=\"objectIcon\">available</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"gears\" class=\"jsdoc-link\">dojo/gears</a> </p> <div class=\"jsdoc-summary\">\n<p>True if client is using Google Gears</p> </div>    <h2 id=\"methods\">Methods</h2><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/gears.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/gears.html</a>\n  </p>\n</div>\n","dojo/gears.available":"<h1>dojo/gears.available</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>True if client is using Google Gears</p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/gears.available.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/gears.available.html</a>\n  </p>\n</div>\n","dojo/has":"<h1>dojo/has</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>Return the current value of the named feature. </p>  <p>Returns the value of the feature named by name. The feature must have been previously added to the cache by has.add.</p>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">has<span class=\"parameters\"><span class=\"paren\">(</span><span class=\"args\">name</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">name</td> <td class=\"jsdoc-param-type\">String | Integer</td> <td class=\"jsdoc-param-description\">\n<p>The name (if a string) or identifier (if an integer) of the feature to test. </p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">boolean</span></p> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/has.html\" target=\"_blank\">dojo/has reference documentation</a> for more information.</p>            <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_has_cache\">\n<span class=\"stringIcon\">cache</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"has\" class=\"jsdoc-link\">dojo/has</a> </p>    <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_has_add\">\n<span class=\"functionIcon\">add</span><span class=\"parameters\">(name,test,now,force)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"has\" class=\"jsdoc-link\">dojo/has</a> </p> <p>Register a new feature test for some named feature.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">name</td> <td class=\"jsdoc-param-type\">String | Integer</td> <td class=\"jsdoc-param-description\">\n<p>The name (if a string) or identifier (if an integer) of the feature to test.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">test</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\">\n<p>A test function to register. If a function, queued for testing until actually needed. The test function should return a boolean indicating the presence of a feature or bug.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">now</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Optional. Omit if <code>test</code> is not a function. Provides a way to immediately run the test and cache the result.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">force</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Optional. If the test already exists and force is truthy, then the existing test will be replaced; otherwise, add does not replace an existing test (that is, by default, the first test advice wins).</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>A redundant test, testFn with immediate execution: </p> <pre><code>has.add(\"javascript\", function(){ return true; }, true);</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>Again with the redundantness. You can do this in your tests, but we should not be doing this in any internal has.js tests </p> <pre><code>has.add(\"javascript\", true);</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<p>Three things are passed to the testFunction. <code>global</code>, <code>document</code>, and a generic element from which to work your test should the need arise. </p> <pre><code>has.add(\"bug-byid\", function(g, d, el){\n    // g    == global, typically window, yadda yadda\n    // d    == document object\n    // el == the generic element. a `has` element.\n    return false; // fake test, byid-when-form-has-name-matching-an-id is slightly longer\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_has_clearElement\">\n<span class=\"functionIcon\">clearElement</span><span class=\"parameters\">(element)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"has\" class=\"jsdoc-link\">dojo/has</a> </p> <p>Deletes the contents of the element passed to test functions.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">element</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_has_load\">\n<span class=\"functionIcon\">load</span><span class=\"parameters\">(id,parentRequire,loaded)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"has\" class=\"jsdoc-link\">dojo/has</a> </p> <p>Conditional loading of AMD modules based on a has feature test value.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">id</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>Gives the resolved module id to load.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">parentRequire</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\">\n<p>The loader require function with respect to the module that contained the plugin resource in it's dependency list.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">loaded</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\">\n<p>Callback to loader that consumes result of plugin demand.</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_has_normalize\">\n<span class=\"functionIcon\">normalize</span><span class=\"parameters\">(id,toAbsMid)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"has\" class=\"jsdoc-link\">dojo/has</a> </p> <p>Resolves id into a module id based on possibly-nested tenary expression that branches on has feature test value(s). </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">id</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">toAbsMid</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\">\n<p>Resolves a relative module id into an absolute module id</p> </td> </tr> </table><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/has.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/has.html</a>\n  </p>\n</div>\n","dojo/hash":"<h1>dojo/hash</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>Gets or sets the hash string in the browser URL.</p>  <p>Handles getting and setting of location.hash. </p> <ul> <li>If no arguments are passed, acts as a getter.</li> <li>If a string is passed, acts as a setter.</li> </ul>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">hash<span class=\"parameters\"><span class=\"paren\">(</span><span class=\"args\">hash,replace</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">hash</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>the hash is set - #string.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">replace</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>If true, updates the hash value in the current history state instead of creating a new history state.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | undefined</span></p> <p>when used as a getter, returns the current hash string. when used as a setter, returns the new hash string.</p>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/hash.html\" target=\"_blank\">dojo/hash reference documentation</a> for more information.</p>    <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>topic.subscribe(\"/dojo/hashchange\", context, callback);\n\nfunction callback (hashValue){\n    // do something based on the hash value.\n}</code></pre> </div> </div>       <h2 id=\"methods\">Methods</h2><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/hash.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/hash.html</a>\n  </p>\n</div>\n","dojo/hccss":"<h1>dojo/hccss</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>Test if computer is in high contrast mode (i.e. if browser is not displaying background images). Defines <code>has(\"highcontrast\")</code> and sets <code>dj_a11y</code> CSS class on <code>&lt;body&gt;</code> if machine is in high contrast mode. Returns <code>has()</code> method;</p>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">hccss<span class=\"parameters\"><span class=\"paren\">(</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/hccss.html\" target=\"_blank\">dojo/hccss reference documentation</a> for more information.</p>          <h2 id=\"methods\">Methods</h2><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/hccss.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/hccss.html</a>\n  </p>\n</div>\n","dojo/html":"<h1>dojo/html</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>TODOC</p>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/html.html\" target=\"_blank\">dojo/html reference documentation</a> for more information.</p>          <h2 id=\"methods\">Methods</h2>        <h3 class=\"jsdoc-title\" id=\"1_10dojo_html_set\">\n<span class=\"functionIcon\">set</span><span class=\"parameters\">(node,cont,params)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"html\" class=\"jsdoc-link\">dojo/html</a> </p> <p>inserts (replaces) the given content into the given node. dojo/dom-construct.place(cont, node, \"only\") may be a better choice for simple HTML insertion.</p>  <p>Unless you need to use the params capabilities of this method, you should use <a class=\"jsdoc-link\" href=\"dom-construct#place\">dojo/dom-construct.place(cont, node, \"only\")</a>. <a class=\"jsdoc-link\" href=\"dom-construct\">dojo/dom-construct</a>..place() has more robust support for injecting an HTML string into the DOM, but it only handles inserting an HTML string as DOM elements, or inserting a DOM node. <a class=\"jsdoc-link\" href=\"dom-construct\">dojo/dom-construct</a>..place does not handle NodeList insertions <a class=\"jsdoc-link\" href=\"dom-construct#place\">dojo/dom-construct.place(cont, node, \"only\")</a>. <a class=\"jsdoc-link\" href=\"dom-construct#place\">dojo/dom-construct.place()</a> has more robust support for injecting an HTML string into the DOM, but it only handles inserting an HTML string as DOM elements, or inserting a DOM node. <a class=\"jsdoc-link\" href=\"dom-construct#place\">dojo/dom-construct.place</a> does not handle NodeList insertions or the other capabilities as defined by the params object for this method.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DomNode</td> <td class=\"jsdoc-param-description\">\n<p>the parent element that will receive the content</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">cont</td> <td class=\"jsdoc-param-type\">String | DomNode | NodeList</td> <td class=\"jsdoc-param-description\">\n<p>the content to be set on the parent element. This can be an html string, a node reference or a NodeList, dojo/NodeList, Array or other enumerable list of nodes</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">params</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Optional flags/properties to configure the content-setting. See dojo/html/_ContentSetter</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>A safe string/node/nodelist content replacement/injection with hooks for extension Example Usage: </p> <pre><code>html.set(node, \"some string\");\nhtml.set(node, contentNode, {options});\nhtml.set(node, myNode.childNodes, {options});</code></pre> </div> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/html.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/html.html</a>\n  </p>\n</div>\n","dojo/i18n.cache":"<h1>dojo/i18n.cache</h1><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/i18n.cache.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/i18n.cache.html</a>\n  </p>\n</div>\n","dojo/dnd/target":"<h1>dojo/dnd/Target</h1> <div class=\"jsdoc-mixins\"> <label>Extends</label><a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </div>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>a Target object, which can be used as a DnD target</p>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">\n<span class=\"sig\"><span class=\"keyword\">var </span><span class=\"var\">foo </span><span class=\"eq\">= </span><span class=\"new\">new </span><span class=\"args\">Target</span></span><span class=\"parameters\"><span class=\"paren\">(</span><span class=\"args\">node,params</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <p class=\"jsdoc-inheritance\"> <label>Defined by </label><span><a class=\"jsdoc-link\" href=\"target\">dojo/dnd/Target</a></span> </p> <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">params</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/dnd.html\" target=\"_blank\">dojo/dnd/Target reference documentation</a> for more information.</p>              <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Target_accept\">\n<span class=\"arrayIcon\">accept</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Target_allowNested\">\n<span class=\"booleanIcon\">allowNested</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <div class=\"jsdoc-summary\">\n<p>Indicates whether to allow dnd item nodes to be nested within other elements. By default this is false, indicating that only direct children of the container can be draggable dnd item nodes</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Target_autoSync\">\n<span class=\"booleanIcon\">autoSync</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Target_copyOnly\">\n<span class=\"booleanIcon\">copyOnly</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Target_current\">\n<span class=\"domnodeIcon\">current</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <div class=\"jsdoc-summary\">\n<p>The DOM node the mouse is currently hovered over</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Target_delay\">\n<span class=\"numberIcon\">delay</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Target_generateText\">\n<span class=\"booleanIcon\">generateText</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Target_horizontal\">\n<span class=\"booleanIcon\">horizontal</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Target_isSource\">\n<span class=\"booleanIcon\">isSource</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Target_map\">\n<span class=\"objectIcon\">map</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <div class=\"jsdoc-summary\">\n<p>Map from an item's id (which is also the DOMNode's id) to the <a class=\"jsdoc-link\" href=\"container#Item\">dojo/dnd/Container.Item</a> itself.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Target_selection\">\n<span class=\"objectIcon\">selection</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"selector\" class=\"jsdoc-link\">dojo/dnd/Selector</a> </p> <div class=\"jsdoc-summary\">\n<p>The set of id's that are currently selected, such that this.selection[id] == 1 if the node w/that id is selected. Can iterate over selected node's id's like: </p> <pre><code>for(var id in this.selection)</code></pre> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Target_selfAccept\">\n<span class=\"booleanIcon\">selfAccept</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Target_selfCopy\">\n<span class=\"booleanIcon\">selfCopy</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Target_singular\">\n<span class=\"booleanIcon\">singular</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"selector\" class=\"jsdoc-link\">dojo/dnd/Selector</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Target_skipForm\">\n<span class=\"booleanIcon\">skipForm</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Target_withHandles\">\n<span class=\"booleanIcon\">withHandles</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p>    <h2 id=\"methods\">Methods</h2>               <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Target_checkAcceptance\">\n<span class=\"functionIcon\">checkAcceptance</span><span class=\"parameters\">(source,nodes)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p> <p>checks if the target can accept nodes from this source</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">source</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>the source which provides items</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">nodes</td> <td class=\"jsdoc-param-type\">Array</td> <td class=\"jsdoc-param-description\">\n<p>the list of transferred items</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">boolean</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Target_clearItems\">\n<span class=\"functionIcon\">clearItems</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <p>removes all data items from the map</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Target_copyState\">\n<span class=\"functionIcon\">copyState</span><span class=\"parameters\">(keyPressed,self)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p> <p>Returns true if we need to copy items, false to move. It is separated to be overwritten dynamically, if needed.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">keyPressed</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\">\n<p>the \"copy\" key was pressed</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">self</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>optional flag that means that we are about to drop on itself</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">boolean | undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Target_creator\">\n<span class=\"functionIcon\">creator</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <p>creator function, dummy at the moment</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Target_deleteSelectedNodes\">\n<span class=\"functionIcon\">deleteSelectedNodes</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"selector\" class=\"jsdoc-link\">dojo/dnd/Selector</a> </p> <p>deletes all selected items</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">function</span></p> <p>deletes all selected items</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Target_delItem\">\n<span class=\"functionIcon\">delItem</span><span class=\"parameters\">(key)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <p>removes a data item from the map by its key (id)</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">key</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Target_destroy\">\n<span class=\"functionIcon\">destroy</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p> <p>prepares the object to be garbage-collected</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Target_emit\">\n<span class=\"functionIcon\">emit</span><span class=\"parameters\">(type,event)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../evented\" class=\"jsdoc-link\">dojo/Evented</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">type</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">event</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Target_forInItems\">\n<span class=\"functionIcon\">forInItems</span><span class=\"parameters\">(f,o)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <p>iterates over a data map skipping members that are present in the empty object (IE and/or 3rd-party libraries).</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">f</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">o</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">string</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Target_forInSelectedItems\">\n<span class=\"functionIcon\">forInSelectedItems</span><span class=\"parameters\">(f,o)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"selector\" class=\"jsdoc-link\">dojo/dnd/Selector</a> </p> <p>iterates over selected items; see <code>dojo/dnd/Container.forInItems()</code> for details</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">f</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">o</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Target_getAllNodes\">\n<span class=\"functionIcon\">getAllNodes</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <p>returns a list (an array) of all valid child nodes</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Target_getItem\">\n<span class=\"functionIcon\">getItem</span><span class=\"parameters\">(key)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <p>returns a data item by its key (id)</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">key</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Target_getSelectedNodes\">\n<span class=\"functionIcon\">getSelectedNodes</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"selector\" class=\"jsdoc-link\">dojo/dnd/Selector</a> </p> <p>returns a list (an array) of selected nodes</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">instance</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Target_insertNodes\">\n<span class=\"functionIcon\">insertNodes</span><span class=\"parameters\">(addSelected,data,before,anchor)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"selector\" class=\"jsdoc-link\">dojo/dnd/Selector</a> </p> <p>inserts new data items (see <code>dojo/dnd/Container.insertNodes()</code> method for details)</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">addSelected</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\">\n<p>all new nodes will be added to selected items, if true, no selection change otherwise</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">data</td> <td class=\"jsdoc-param-type\">Array</td> <td class=\"jsdoc-param-description\">\n<p>a list of data items, which should be processed by the creator function</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">before</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\">\n<p>insert before the anchor, if true, and after the anchor otherwise</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">anchor</td> <td class=\"jsdoc-param-type\">Node</td> <td class=\"jsdoc-param-description\">\n<p>the anchor node to be used as a point of insertion</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">function</span></p> <p>inserts new data items (see <code>dojo/dnd/Container.insertNodes()</code> method for details)</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Target_markupFactory\">\n<span class=\"functionIcon\">markupFactory</span><span class=\"parameters\">(params,node,Ctor)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">params</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">Ctor</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">instance</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Target_on\">\n<span class=\"functionIcon\">on</span><span class=\"parameters\">(type,listener)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../evented\" class=\"jsdoc-link\">dojo/Evented</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">type</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">listener</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Target_selectAll\">\n<span class=\"functionIcon\">selectAll</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"selector\" class=\"jsdoc-link\">dojo/dnd/Selector</a> </p> <p>selects all items</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Target_selectNone\">\n<span class=\"functionIcon\">selectNone</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"selector\" class=\"jsdoc-link\">dojo/dnd/Selector</a> </p> <p>unselects all items</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Target_setItem\">\n<span class=\"functionIcon\">setItem</span><span class=\"parameters\">(key,data)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <p>associates a data item with its key (id)</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">key</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">data</td> <td class=\"jsdoc-param-type\">Container.Item</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Target_startup\">\n<span class=\"functionIcon\">startup</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <p>collects valid child items and populate the map</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Target_sync\">\n<span class=\"functionIcon\">sync</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"selector\" class=\"jsdoc-link\">dojo/dnd/Selector</a> </p> <p>sync up the node list with the data map</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">function</span></p> <p>sync up the node list with the data map</p>     <h2 id=\"events\">Events</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Target_onDndCancel\">\n<span class=\"functionIcon\">onDndCancel</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p> <p>topic event processor for /dnd/cancel, called to cancel the DnD operation</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Target_onDndDrop\">\n<span class=\"functionIcon\">onDndDrop</span><span class=\"parameters\">(source,nodes,copy,target)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p> <p>topic event processor for /dnd/drop, called to finish the DnD operation</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">source</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>the source which provides items</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">nodes</td> <td class=\"jsdoc-param-type\">Array</td> <td class=\"jsdoc-param-description\">\n<p>the list of transferred items</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">copy</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\">\n<p>copy items, if true, move items otherwise</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">target</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>the target which accepts items</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Target_onDndSourceOver\">\n<span class=\"functionIcon\">onDndSourceOver</span><span class=\"parameters\">(source)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p> <p>topic event processor for /dnd/source/over, called when detected a current source</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">source</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>the source which has the mouse over it</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Target_onDndStart\">\n<span class=\"functionIcon\">onDndStart</span><span class=\"parameters\">(source,nodes,copy)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p> <p>topic event processor for /dnd/start, called to initiate the DnD operation</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">source</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>the source which provides items</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">nodes</td> <td class=\"jsdoc-param-type\">Array</td> <td class=\"jsdoc-param-description\">\n<p>the list of transferred items</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">copy</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\">\n<p>copy items, if true, move items otherwise</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Target_onDraggingOut\">\n<span class=\"functionIcon\">onDraggingOut</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p> <p>called during the active DnD operation, when items are dragged away from this target, and it is not disabled</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Target_onDraggingOver\">\n<span class=\"functionIcon\">onDraggingOver</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p> <p>called during the active DnD operation, when items are dragged over this target, and it is not disabled</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Target_onDrop\">\n<span class=\"functionIcon\">onDrop</span><span class=\"parameters\">(source,nodes,copy)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p> <p>called only on the current target, when drop is performed</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">source</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>the source which provides items</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">nodes</td> <td class=\"jsdoc-param-type\">Array</td> <td class=\"jsdoc-param-description\">\n<p>the list of transferred items</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">copy</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\">\n<p>copy items, if true, move items otherwise</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Target_onDropExternal\">\n<span class=\"functionIcon\">onDropExternal</span><span class=\"parameters\">(source,nodes,copy)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p> <p>called only on the current target, when drop is performed from an external source</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">source</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>the source which provides items</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">nodes</td> <td class=\"jsdoc-param-type\">Array</td> <td class=\"jsdoc-param-description\">\n<p>the list of transferred items</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">copy</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\">\n<p>copy items, if true, move items otherwise</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Target_onDropInternal\">\n<span class=\"functionIcon\">onDropInternal</span><span class=\"parameters\">(nodes,copy)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p> <p>called only on the current target, when drop is performed from the same target/source</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">nodes</td> <td class=\"jsdoc-param-type\">Array</td> <td class=\"jsdoc-param-description\">\n<p>the list of transferred items</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">copy</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\">\n<p>copy items, if true, move items otherwise</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Target_onMouseDown\">\n<span class=\"functionIcon\">onMouseDown</span><span class=\"parameters\">(e)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p> <p>event processor for onmousedown</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">e</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\">\n<p>mouse event</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Target_onMouseMove\">\n<span class=\"functionIcon\">onMouseMove</span><span class=\"parameters\">(e)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p> <p>event processor for onmousemove</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">e</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\">\n<p>mouse event</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Target_onMouseOut\">\n<span class=\"functionIcon\">onMouseOut</span><span class=\"parameters\">(e)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <p>event processor for onmouseout</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">e</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\">\n<p>mouse event</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Target_onMouseOver\">\n<span class=\"functionIcon\">onMouseOver</span><span class=\"parameters\">(e)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <p>event processor for onmouseover or touch, to mark that element as the current element</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">e</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\">\n<p>mouse event</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Target_onMouseUp\">\n<span class=\"functionIcon\">onMouseUp</span><span class=\"parameters\">(e)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p> <p>event processor for onmouseup</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">e</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\">\n<p>mouse event</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Target_onOutEvent\">\n<span class=\"functionIcon\">onOutEvent</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p> <p>this function is called once, when mouse is out of our container</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Target_onOverEvent\">\n<span class=\"functionIcon\">onOverEvent</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p> <p>this function is called once, when mouse is over our container</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_dnd_Target_onSelectStart\">\n<span class=\"functionIcon\">onSelectStart</span><span class=\"parameters\">(e)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p> <p>event processor for onselectevent and ondragevent</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">e</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\">\n<p>mouse event</p> </td> </tr> </table><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/dnd/Target.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/dnd/Target.html</a>\n  </p>\n</div>\n","dojo/fx/easing":"<h1>dojo/fx/easing</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>Collection of easing functions to use beyond the default <code>dojo._defaultEasing</code> function.</p>  <p>Easing functions are used to manipulate the iteration through an <code>dojo.Animation</code>s _Line. _Line being the properties of an Animation, and the easing function progresses through that Line determining how quickly (or slowly) it should go. Or more accurately: modify the value of the _Line based on the percentage of animation completed. </p> <p>All functions follow a simple naming convention of \"ease type\" + \"when\". If the name of the function ends in Out, the easing described appears towards the end of the animation. \"In\" means during the beginning, and InOut means both ranges of the Animation will applied, both beginning and end. </p> <p>One does not call the easing function directly, it must be passed to the <code>easing</code> property of an animation.</p>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/fx/easing.html\" target=\"_blank\">dojo/fx/easing reference documentation</a> for more information.</p>    <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>dojo.require(\"dojo.fx.easing\");\nvar anim = dojo.fadeOut({\n    node: 'node',\n    duration: 2000,\n    //  note there is no ()\n    easing: dojo.fx.easing.quadIn\n}).play();</code></pre> </div> </div>       <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_easing_backIn\">\n<span class=\"functionIcon\">backIn</span><span class=\"parameters\">(n)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"easing\" class=\"jsdoc-link\">dojo/fx/easing</a> </p> <p>An easing function that starts away from the target, and quickly accelerates towards the end value. </p> <p>Use caution when the easing will cause values to become negative as some properties cannot be set to negative values.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">n</td> <td class=\"jsdoc-param-type\">Decimal</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">number</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_easing_backInOut\">\n<span class=\"functionIcon\">backInOut</span><span class=\"parameters\">(n)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"easing\" class=\"jsdoc-link\">dojo/fx/easing</a> </p> <p>An easing function combining the effects of <code>backIn</code> and <code>backOut</code></p>  <p>An easing function combining the effects of <code>backIn</code> and <code>backOut</code>. Use caution when the easing will cause values to become negative as some properties cannot be set to negative values.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">n</td> <td class=\"jsdoc-param-type\">Decimal</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">number</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_easing_backOut\">\n<span class=\"functionIcon\">backOut</span><span class=\"parameters\">(n)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"easing\" class=\"jsdoc-link\">dojo/fx/easing</a> </p> <p>An easing function that pops past the range briefly, and slowly comes back.</p>  <p>An easing function that pops past the range briefly, and slowly comes back. </p> <p>Use caution when the easing will cause values to become negative as some properties cannot be set to negative values.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">n</td> <td class=\"jsdoc-param-type\">Decimal</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">number</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_easing_bounceIn\">\n<span class=\"functionIcon\">bounceIn</span><span class=\"parameters\">(n)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"easing\" class=\"jsdoc-link\">dojo/fx/easing</a> </p> <p>An easing function that 'bounces' near the beginning of an Animation</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">n</td> <td class=\"jsdoc-param-type\">Decimal</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">number</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_easing_bounceInOut\">\n<span class=\"functionIcon\">bounceInOut</span><span class=\"parameters\">(n)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"easing\" class=\"jsdoc-link\">dojo/fx/easing</a> </p> <p>An easing function that 'bounces' at the beginning and end of the Animation</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">n</td> <td class=\"jsdoc-param-type\">Decimal</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">number</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_easing_bounceOut\">\n<span class=\"functionIcon\">bounceOut</span><span class=\"parameters\">(n)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"easing\" class=\"jsdoc-link\">dojo/fx/easing</a> </p> <p>An easing function that 'bounces' near the end of an Animation</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">n</td> <td class=\"jsdoc-param-type\">Decimal</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">number</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_easing_circIn\">\n<span class=\"functionIcon\">circIn</span><span class=\"parameters\">(n)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"easing\" class=\"jsdoc-link\">dojo/fx/easing</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">n</td> <td class=\"jsdoc-param-type\">Decimal</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">number</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_easing_circInOut\">\n<span class=\"functionIcon\">circInOut</span><span class=\"parameters\">(n)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"easing\" class=\"jsdoc-link\">dojo/fx/easing</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">n</td> <td class=\"jsdoc-param-type\">Decimal</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">number</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_easing_circOut\">\n<span class=\"functionIcon\">circOut</span><span class=\"parameters\">(n)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"easing\" class=\"jsdoc-link\">dojo/fx/easing</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">n</td> <td class=\"jsdoc-param-type\">Decimal</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_easing_cubicIn\">\n<span class=\"functionIcon\">cubicIn</span><span class=\"parameters\">(n)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"easing\" class=\"jsdoc-link\">dojo/fx/easing</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">n</td> <td class=\"jsdoc-param-type\">Decimal</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_easing_cubicInOut\">\n<span class=\"functionIcon\">cubicInOut</span><span class=\"parameters\">(n)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"easing\" class=\"jsdoc-link\">dojo/fx/easing</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">n</td> <td class=\"jsdoc-param-type\">Decimal</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">number</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_easing_cubicOut\">\n<span class=\"functionIcon\">cubicOut</span><span class=\"parameters\">(n)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"easing\" class=\"jsdoc-link\">dojo/fx/easing</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">n</td> <td class=\"jsdoc-param-type\">Decimal</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">number</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_easing_elasticIn\">\n<span class=\"functionIcon\">elasticIn</span><span class=\"parameters\">(n)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"easing\" class=\"jsdoc-link\">dojo/fx/easing</a> </p> <p>An easing function the elastically snaps from the start value</p>  <p>An easing function the elastically snaps from the start value </p> <p>Use caution when the elasticity will cause values to become negative as some properties cannot be set to negative values.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">n</td> <td class=\"jsdoc-param-type\">Decimal</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Decimal | number</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_easing_elasticInOut\">\n<span class=\"functionIcon\">elasticInOut</span><span class=\"parameters\">(n)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"easing\" class=\"jsdoc-link\">dojo/fx/easing</a> </p> <p>An easing function that elasticly snaps around the value, near the beginning and end of the Animation.</p>  <p>An easing function that elasticly snaps around the value, near the beginning and end of the Animation. </p> <p>Use caution when the elasticity will cause values to become negative as some properties cannot be set to negative values.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">n</td> <td class=\"jsdoc-param-type\">Decimal</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">number</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_easing_elasticOut\">\n<span class=\"functionIcon\">elasticOut</span><span class=\"parameters\">(n)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"easing\" class=\"jsdoc-link\">dojo/fx/easing</a> </p> <p>An easing function that elasticly snaps around the target value, near the end of the Animation</p>  <p>An easing function that elasticly snaps around the target value, near the end of the Animation </p> <p>Use caution when the elasticity will cause values to become negative as some properties cannot be set to negative values.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">n</td> <td class=\"jsdoc-param-type\">Decimal</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Decimal | number</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_easing_expoIn\">\n<span class=\"functionIcon\">expoIn</span><span class=\"parameters\">(n)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"easing\" class=\"jsdoc-link\">dojo/fx/easing</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">n</td> <td class=\"jsdoc-param-type\">Decimal</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_easing_expoInOut\">\n<span class=\"functionIcon\">expoInOut</span><span class=\"parameters\">(n)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"easing\" class=\"jsdoc-link\">dojo/fx/easing</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">n</td> <td class=\"jsdoc-param-type\">Decimal</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">number</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_easing_expoOut\">\n<span class=\"functionIcon\">expoOut</span><span class=\"parameters\">(n)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"easing\" class=\"jsdoc-link\">dojo/fx/easing</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">n</td> <td class=\"jsdoc-param-type\">Decimal</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">number</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_easing_linear\">\n<span class=\"functionIcon\">linear</span><span class=\"parameters\">(n)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"easing\" class=\"jsdoc-link\">dojo/fx/easing</a> </p> <p>A linear easing function</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">n</td> <td class=\"jsdoc-param-type\">Decimal</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Decimal</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_easing_quadIn\">\n<span class=\"functionIcon\">quadIn</span><span class=\"parameters\">(n)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"easing\" class=\"jsdoc-link\">dojo/fx/easing</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">n</td> <td class=\"jsdoc-param-type\">Decimal</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_easing_quadInOut\">\n<span class=\"functionIcon\">quadInOut</span><span class=\"parameters\">(n)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"easing\" class=\"jsdoc-link\">dojo/fx/easing</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">n</td> <td class=\"jsdoc-param-type\">Decimal</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">number</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_easing_quadOut\">\n<span class=\"functionIcon\">quadOut</span><span class=\"parameters\">(n)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"easing\" class=\"jsdoc-link\">dojo/fx/easing</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">n</td> <td class=\"jsdoc-param-type\">Decimal</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">number</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_easing_quartIn\">\n<span class=\"functionIcon\">quartIn</span><span class=\"parameters\">(n)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"easing\" class=\"jsdoc-link\">dojo/fx/easing</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">n</td> <td class=\"jsdoc-param-type\">Decimal</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_easing_quartInOut\">\n<span class=\"functionIcon\">quartInOut</span><span class=\"parameters\">(n)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"easing\" class=\"jsdoc-link\">dojo/fx/easing</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">n</td> <td class=\"jsdoc-param-type\">Decimal</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">number</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_easing_quartOut\">\n<span class=\"functionIcon\">quartOut</span><span class=\"parameters\">(n)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"easing\" class=\"jsdoc-link\">dojo/fx/easing</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">n</td> <td class=\"jsdoc-param-type\">Decimal</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">number</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_easing_quintIn\">\n<span class=\"functionIcon\">quintIn</span><span class=\"parameters\">(n)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"easing\" class=\"jsdoc-link\">dojo/fx/easing</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">n</td> <td class=\"jsdoc-param-type\">Decimal</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_easing_quintInOut\">\n<span class=\"functionIcon\">quintInOut</span><span class=\"parameters\">(n)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"easing\" class=\"jsdoc-link\">dojo/fx/easing</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">n</td> <td class=\"jsdoc-param-type\">Decimal</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">number</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_easing_quintOut\">\n<span class=\"functionIcon\">quintOut</span><span class=\"parameters\">(n)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"easing\" class=\"jsdoc-link\">dojo/fx/easing</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">n</td> <td class=\"jsdoc-param-type\">Decimal</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">number</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_easing_sineIn\">\n<span class=\"functionIcon\">sineIn</span><span class=\"parameters\">(n)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"easing\" class=\"jsdoc-link\">dojo/fx/easing</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">n</td> <td class=\"jsdoc-param-type\">Decimal</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">number</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_easing_sineInOut\">\n<span class=\"functionIcon\">sineInOut</span><span class=\"parameters\">(n)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"easing\" class=\"jsdoc-link\">dojo/fx/easing</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">n</td> <td class=\"jsdoc-param-type\">Decimal</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">number</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_easing_sineOut\">\n<span class=\"functionIcon\">sineOut</span><span class=\"parameters\">(n)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"easing\" class=\"jsdoc-link\">dojo/fx/easing</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">n</td> <td class=\"jsdoc-param-type\">Decimal</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/fx/easing.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/fx/easing.html</a>\n  </p>\n</div>\n","dojo/html._contentsetter":"<h1>dojo/html._ContentSetter</h1>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">\n<span class=\"sig\"><span class=\"keyword\">var </span><span class=\"var\">foo </span><span class=\"eq\">= </span><span class=\"new\">new </span><span class=\"args\">html._ContentSetter</span></span><span class=\"parameters\"><span class=\"paren\">(</span><span class=\"args\">params,node</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <p class=\"jsdoc-inheritance\"> <label>Defined by </label><span><a class=\"jsdoc-link\" href=\"html\">dojo/html</a></span> </p> <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">params</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">String | DomNode</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>              <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_html__ContentSetter_cleanContent\">\n<span class=\"booleanIcon\">cleanContent</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"html\" class=\"jsdoc-link\">dojo/html</a> </p> <div class=\"jsdoc-summary\">\n<p>Should the content be treated as a full html document, and the real content stripped of , </p> wrapper before injection </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_html__ContentSetter_content\">\n<span class=\"stringIcon\">content</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"html\" class=\"jsdoc-link\">dojo/html</a> </p> <div class=\"jsdoc-summary\">\n<p>The content to be placed in the node. Can be an HTML string, a node reference, or a enumerable list of nodes</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_html__ContentSetter_extractContent\">\n<span class=\"booleanIcon\">extractContent</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"html\" class=\"jsdoc-link\">dojo/html</a> </p> <div class=\"jsdoc-summary\">\n<p>Should the content be treated as a full html document, and the real content stripped of <code>&lt;html&gt; &lt;body&gt;</code> wrapper before injection</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_html__ContentSetter_id\">\n<span class=\"objectIcon\">id</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"html\" class=\"jsdoc-link\">dojo/html</a> </p> <div class=\"jsdoc-summary\">\n<p>Usually only used internally, and auto-generated with each instance</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_html__ContentSetter_node\">\n<span class=\"domnodeIcon\">node</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"html\" class=\"jsdoc-link\">dojo/html</a> </p> <div class=\"jsdoc-summary\">\n<p>An node which will be the parent element that we set content into</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_html__ContentSetter_parseContent\">\n<span class=\"booleanIcon\">parseContent</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"html\" class=\"jsdoc-link\">dojo/html</a> </p> <div class=\"jsdoc-summary\">\n<p>Should the node by passed to the parser after the new content is set</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_html__ContentSetter_parserScope\">\n<span class=\"stringIcon\">parserScope</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"html\" class=\"jsdoc-link\">dojo/html</a> </p> <div class=\"jsdoc-summary\">\n<p>Flag passed to parser. Root for attribute names to search for. If scopeName is dojo, will search for data-dojo-type (or dojoType). For backwards compatibility reasons defaults to dojo._scopeName (which is \"dojo\" except when multi-version support is used, when it will be something like dojo16, dojo20, etc.)</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_html__ContentSetter_startup\">\n<span class=\"booleanIcon\">startup</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"html\" class=\"jsdoc-link\">dojo/html</a> </p> <div class=\"jsdoc-summary\">\n<p>Start the child widgets after parsing them. Only obeyed if parseContent is true.</p> </div>    <h2 id=\"methods\">Methods</h2>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_html__ContentSetter_empty\">\n<span class=\"functionIcon\">empty</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"html\" class=\"jsdoc-link\">dojo/html</a> </p> <p>cleanly empty out existing content</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_html__ContentSetter_set\">\n<span class=\"functionIcon\">set</span><span class=\"parameters\">(cont,params)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"html\" class=\"jsdoc-link\">dojo/html</a> </p> <p>front-end to the set-content sequence</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">cont</td> <td class=\"jsdoc-param-type\">String | DomNode | NodeList</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>An html string, node or enumerable list of nodes for insertion into the dom If not provided, the object's content property will be used</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">params</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_html__ContentSetter_setContent\">\n<span class=\"functionIcon\">setContent</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"html\" class=\"jsdoc-link\">dojo/html</a> </p> <p>sets the content on the node</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_html__ContentSetter_tearDown\">\n<span class=\"functionIcon\">tearDown</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"html\" class=\"jsdoc-link\">dojo/html</a> </p> <p>manually reset the Setter instance if its being re-used for example for another set()</p>  <p>tearDown() is not called automatically. In normal use, the Setter instance properties are simply allowed to fall out of scope but the tearDown method can be called to explicitly reset this instance.</p>     <h2 id=\"events\">Events</h2>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_html__ContentSetter_onBegin\">\n<span class=\"functionIcon\">onBegin</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"html\" class=\"jsdoc-link\">dojo/html</a> </p> <p>Called after instantiation, but before set(); It allows modification of any of the object properties - including the node and content provided - before the set operation actually takes place This default implementation checks for cleanContent and extractContent flags to optionally pre-process html string content</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_html__ContentSetter_onContentError\">\n<span class=\"functionIcon\">onContentError</span><span class=\"parameters\">(err)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"html\" class=\"jsdoc-link\">dojo/html</a> </p> <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">err</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">string</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_html__ContentSetter_onEnd\">\n<span class=\"functionIcon\">onEnd</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"html\" class=\"jsdoc-link\">dojo/html</a> </p> <p>Called after set(), when the new content has been pushed into the node It provides an opportunity for post-processing before handing back the node to the caller This default implementation checks a parseContent flag to optionally run the dojo parser over the new content</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_html__ContentSetter_onExecError\">\n<span class=\"functionIcon\">onExecError</span><span class=\"parameters\">(err)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"html\" class=\"jsdoc-link\">dojo/html</a> </p> <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">err</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">string</span></p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/html._ContentSetter.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/html._ContentSetter.html</a>\n  </p>\n</div>\n","dojo/i18n":"<h1>dojo/i18n</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>This module implements the <a class=\"jsdoc-link\" href=\"i18n\">dojo/i18n</a>! plugin and the v1.6- i18n API</p>  <p>We choose to include our own plugin to leverage functionality already contained in dojo and thereby reduce the size of the plugin compared to various loader implementations. Also, this allows foreign AMD loaders to be used without their plugins.</p>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/i18n.html\" target=\"_blank\">dojo/i18n reference documentation</a> for more information.</p>            <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_i18n_cache\">\n<span class=\"objectIcon\">cache</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"i18n\" class=\"jsdoc-link\">dojo/i18n</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_i18n_dynamic\">\n<span class=\"booleanIcon\">dynamic</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"i18n\" class=\"jsdoc-link\">dojo/i18n</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_i18n_unitTests\">\n<span class=\"arrayIcon\">unitTests</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"i18n\" class=\"jsdoc-link\">dojo/i18n</a> </p>    <h2 id=\"methods\">Methods</h2>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_i18n_getL10nName\">\n<span class=\"functionIcon\">getL10nName</span><span class=\"parameters\">(moduleName,bundleName,locale)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"i18n\" class=\"jsdoc-link\">dojo/i18n</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">moduleName</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">bundleName</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">locale</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">string</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_i18n_getLocalization\">\n<span class=\"functionIcon\">getLocalization</span><span class=\"parameters\">(moduleName,bundleName,locale)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"i18n\" class=\"jsdoc-link\">dojo/i18n</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">moduleName</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">bundleName</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">locale</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_i18n_load\">\n<span class=\"functionIcon\">load</span><span class=\"parameters\">(id,require,load)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"i18n\" class=\"jsdoc-link\">dojo/i18n</a> </p> <p>id is in one of the following formats </p> <ol> <li>\n<p><path>/nls/<bundle> =&gt; load the bundle, localized to config.locale; load all bundles localized to config.extraLocale (if any); return the loaded bundle localized to config.locale.</bundle></path></p> </li> <li>\n<p><path>/nls/<locale>/<bundle> =&gt; load then return the bundle localized to </bundle></locale></path></p> </li> <li>\n<p><em>preload</em><path>/nls/<module>*<json array of available locales> =&gt; for config.locale and all config.extraLocale, load all bundles found in the best-matching bundle rollup. A value of 1 is returned, which is meaningless other than to say the plugin is executing the requested preloads</json></module></path></p> </li> </ol> <p>In cases 1 and 2, <path> is always normalized to an absolute module id upon entry; see normalize. In case 3, it <path> is assumed to be absolute; this is arranged by the builder. </path></path></p> <p>To load a bundle means to insert the bundle into the plugin's cache and publish the bundle value to the loader. Given <path>, <bundle>, and a particular <locale>, the cache key </locale></bundle></path></p> <pre><code>&lt;path&gt;/nls/&lt;bundle&gt;/&lt;locale&gt;</code></pre> <p>will hold the value. Similarly, then plugin will publish this value to the loader by </p> <pre><code>define(\"&lt;path&gt;/nls/&lt;bundle&gt;/&lt;locale&gt;\", &lt;bundle-value&gt;);</code></pre> <p>Given this algorithm, other machinery can provide fast load paths be preplacing values in the plugin's cache, which is public. When a load is demanded the cache is inspected before starting any loading. Explicitly placing values in the plugin cache is an advanced/experimental feature that should not be needed; use at your own risk. </p> <p>For the normal AMD algorithm, the root bundle is loaded first, which instructs the plugin what additional localized bundles are required for a particular locale. These additional locales are loaded and a mix of the root and each progressively-specific locale is returned. For example: </p> <ol> <li>\n<p>The client demands \"dojo/i18n!some/path/nls/someBundle</p> </li> <li>\n<p>The loader demands load(some/path/nls/someBundle)</p> </li> <li>\n<p>This plugin require's \"some/path/nls/someBundle\", which is the root bundle.</p> </li> <li>\n<p>Assuming config.locale is \"ab-cd-ef\" and the root bundle indicates that localizations are available for \"ab\" and \"ab-cd-ef\" (note the missing \"ab-cd\", then the plugin requires \"some/path/nls/ab/someBundle\" and \"some/path/nls/ab-cd-ef/someBundle\"</p> </li> <li>\n<p>Upon receiving all required bundles, the plugin constructs the value of the bundle ab-cd-ef as...</p> <pre><code> mixin(mixin(mixin({}, require(\"some/path/nls/someBundle\"),\n     require(\"some/path/nls/ab/someBundle\")),\n     require(\"some/path/nls/ab-cd-ef/someBundle\"));</code></pre> </li> </ol> <p>This value is inserted into the cache and published to the loader at the key/module-id some/path/nls/someBundle/ab-cd-ef. </p> <p>The special preload signature (case 3) instructs the plugin to stop servicing all normal requests (further preload requests will be serviced) until all ongoing preloading has completed. </p> <p>The preload signature instructs the plugin that a special rollup module is available that contains one or more flattened, localized bundles. The JSON array of available locales indicates which locales are available. Here is an example: </p> <pre><code>*preload*some/path/nls/someModule*[\"root\", \"ab\", \"ab-cd-ef\"]</code></pre> <p>This indicates the following rollup modules are available: </p> <pre><code>some/path/nls/someModule_ROOT\nsome/path/nls/someModule_ab\nsome/path/nls/someModule_ab-cd-ef</code></pre> <p>Each of these modules is a normal AMD module that contains one or more flattened bundles in a hash. For example, assume someModule contained the bundles some/bundle/path/someBundle and some/bundle/path/someOtherBundle, then some/path/nls/someModule_ab would be expressed as follows: </p> <pre><code>define({\n    some/bundle/path/someBundle:&lt;value of someBundle, flattened with respect to locale ab&gt;,\n    some/bundle/path/someOtherBundle:&lt;value of someOtherBundle, flattened with respect to locale ab&gt;,\n});</code></pre> <p>E.g., given this design, preloading for locale==\"ab\" can execute the following algorithm: </p> <pre><code>require([\"some/path/nls/someModule_ab\"], function(rollup){\n    for(var p in rollup){\n        var id = p + \"/ab\",\n        cache[id] = rollup[p];\n        define(id, rollup[p]);\n    }\n});</code></pre> <p>Similarly, if \"ab-cd\" is requested, the algorithm can determine that \"ab\" is the best available and load accordingly. </p> <p>The builder will write such rollups for every layer if a non-empty localeList profile property is provided. Further, the builder will include the following cache entry in the cache associated with any layer. </p> <pre><code>\"*now\":function(r){r(['dojo/i18n!*preload*&lt;path&gt;/nls/&lt;module&gt;*&lt;JSON array of available locales&gt;']);}</code></pre> <p>The *now special cache module instructs the loader to apply the provided function to context-require with respect to the particular layer being defined. This causes the plugin to hold all normal service requests until all preloading is complete. </p> <p>Notice that this algorithm is rarely better than the standard AMD load algorithm. Consider the normal case where the target locale has a single segment and a layer depends on a single bundle: </p> <p>Without Preloads: </p> <ol> <li>Layer loads root bundle.</li> <li>bundle is demanded; plugin loads single localized bundle.</li> </ol> <p>With Preloads: </p> <ol> <li>Layer causes preloading of target bundle.</li> <li>bundle is demanded; service is delayed until preloading complete; bundle is returned.</li> </ol> <p>In each case a single transaction is required to load the target bundle. In cases where multiple bundles are required and/or the locale has multiple segments, preloads still requires a single transaction whereas the normal path requires an additional transaction for each additional bundle/locale-segment. However all of these additional transactions can be done concurrently. Owing to this analysis, the entire preloading algorithm can be discard during a build by setting the has feature dojo-preload-i18n-Api to false.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">id</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">require</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">load</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_i18n_normalize\">\n<span class=\"functionIcon\">normalize</span><span class=\"parameters\">(id,toAbsMid)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"i18n\" class=\"jsdoc-link\">dojo/i18n</a> </p> <p>id may be relative. preload has form <code>*preload*&lt;path&gt;/nls/&lt;module&gt;*&lt;flattened locales&gt;</code> and therefore never looks like a relative</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">id</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">toAbsMid</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_i18n_normalizeLocale\">\n<span class=\"functionIcon\">normalizeLocale</span><span class=\"parameters\">(locale)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"i18n\" class=\"jsdoc-link\">dojo/i18n</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">locale</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/i18n.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/i18n.html</a>\n  </p>\n</div>\n","dojo/io-query":"<h1>dojo/io-query</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>This module defines query string processing functions.</p>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/io-query.html\" target=\"_blank\">dojo/io-query reference documentation</a> for more information.</p>          <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_io-query_objectToQuery\">\n<span class=\"functionIcon\">objectToQuery</span><span class=\"parameters\">(map)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"io-query\" class=\"jsdoc-link\">dojo/io-query</a> </p> <p>takes a name/value mapping object and returns a string representing a URL-encoded version of that object.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">map</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>this object: </p> <pre><code>{\n    blah: \"blah\",\n    multi: [\n        \"thud\",\n        \"thonk\"\n    ]\n};</code></pre> <p>yields the following query string: </p> <pre><code>\"blah=blah&amp;multi=thud&amp;multi=thonk\"</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_io-query_queryToObject\">\n<span class=\"functionIcon\">queryToObject</span><span class=\"parameters\">(str)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"io-query\" class=\"jsdoc-link\">dojo/io-query</a> </p> <p>Create an object representing a de-serialized query section of a URL. Query keys with multiple values are returned in an array. </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">str</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">object</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>This string: </p> <pre><code>\"foo=bar&amp;foo=baz&amp;thinger=%20spaces%20=blah&amp;zonk=blarg&amp;\"</code></pre> <p>results in this object structure: </p> <pre><code>{\n    foo: [ \"bar\", \"baz\" ],\n    thinger: \" spaces =blah\",\n    zonk: \"blarg\"\n}</code></pre> <p>Note that spaces and other urlencoded entities are correctly handled.</p> </div> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/io-query.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/io-query.html</a>\n  </p>\n</div>\n","dojo/io/iframe":"<h1>dojo/io/iframe</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>Deprecated, use <a class=\"jsdoc-link\" href=\"../request/iframe\">dojo/request/iframe</a> instead. Sends an Ajax I/O call using and Iframe (for instance, to upload files)</p>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/io/iframe.html\" target=\"_blank\">dojo/io/iframe reference documentation</a> for more information.</p>          <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_io_iframe_create\">\n<span class=\"functionIcon\">create</span><span class=\"parameters\">(fname,onloadstr,uri)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"iframe\" class=\"jsdoc-link\">dojo/io/iframe</a> </p> <p>Creates a hidden iframe in the page. Used mostly for IO transports. You do not need to call this to start a dojo/io/iframe request. Just call send().</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">fname</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>The name of the iframe. Used for the name attribute on the iframe.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">onloadstr</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>A string of JavaScript that will be executed when the content in the iframe loads.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">uri</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>The value of the src attribute on the iframe element. If a value is not given, then dojo/resources/blank.html will be used.</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_io_iframe_doc\">\n<span class=\"functionIcon\">doc</span><span class=\"parameters\">(iframeNode)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"iframe\" class=\"jsdoc-link\">dojo/io/iframe</a> </p> <p>Returns the document object associated with the iframe DOM Node argument.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">iframeNode</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_io_iframe_setSrc\">\n<span class=\"functionIcon\">setSrc</span><span class=\"parameters\">(iframe,src,replace)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"iframe\" class=\"jsdoc-link\">dojo/io/iframe</a> </p> <p>Sets the URL that is loaded in an IFrame. The replace parameter indicates whether location.replace() should be used when changing the location of the iframe.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">iframe</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">src</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">replace</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/io/iframe.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/io/iframe.html</a>\n  </p>\n</div>\n","dojo/json":"<h1>dojo/json</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>Functions to parse and serialize JSON</p>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/json.html\" target=\"_blank\">dojo/json reference documentation</a> for more information.</p>          <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_json_parse\">\n<span class=\"functionIcon\">parse</span><span class=\"parameters\">(str,strict)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"json\" class=\"jsdoc-link\">dojo/json</a> </p> <p>Parses a <a href=\"http://json.org\">JSON</a> string to return a JavaScript object.</p>  <p>This function follows <a href=\"https://developer.mozilla.org/en/JSON\">native JSON API</a> Throws for invalid JSON strings. This delegates to eval() if native JSON support is not available. By default this will evaluate any valid JS expression. With the strict parameter set to true, the parser will ensure that only valid JSON strings are parsed (otherwise throwing an error). Without the strict parameter, the content passed to this method must come from a trusted source.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">str</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\">\n<p>a string literal of a JSON item, for instance: <code>'{ \"foo\": [ \"bar\", 1, { \"baz\": \"thud\" } ] }'</code></p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">strict</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\">\n<p>When set to true, this will ensure that only valid, secure JSON is ever parsed. Make sure this is set to true for untrusted content. Note that on browsers/engines without native JSON support, setting this to true will run slower.</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_json_stringify\">\n<span class=\"functionIcon\">stringify</span><span class=\"parameters\">(value,replacer,spacer)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"json\" class=\"jsdoc-link\">dojo/json</a> </p> <p>Returns a <a href=\"http://json.org\">JSON</a> serialization of an object.</p>  <p>Returns a <a href=\"http://json.org\">JSON</a> serialization of an object. This function follows <a href=\"https://developer.mozilla.org/en/JSON\">native JSON API</a> Note that this doesn't check for infinite recursion, so don't do that!</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">value</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\">\n<p>A value to be serialized.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">replacer</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\">\n<p>A replacer function that is called for each value and can return a replacement</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">spacer</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\">\n<p>A spacer string to be used for pretty printing of JSON</p> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>simple serialization of a trivial object </p> <pre><code>define([\"dojo/json\"], function(JSON){\n    var jsonStr = JSON.stringify({ howdy: \"stranger!\", isStrange: true });\n    doh.is('{\"howdy\":\"stranger!\",\"isStrange\":true}', jsonStr);</code></pre> </div> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/json.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/json.html</a>\n  </p>\n</div>\n","dojo/fx.easing":"<h1>dojo/fx.easing</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>Collection of easing functions to use beyond the default <code>dojo._defaultEasing</code> function.</p>  <p>Easing functions are used to manipulate the iteration through an <code>dojo.Animation</code>s _Line. _Line being the properties of an Animation, and the easing function progresses through that Line determining how quickly (or slowly) it should go. Or more accurately: modify the value of the _Line based on the percentage of animation completed. </p> <p>All functions follow a simple naming convention of \"ease type\" + \"when\". If the name of the function ends in Out, the easing described appears towards the end of the animation. \"In\" means during the beginning, and InOut means both ranges of the Animation will applied, both beginning and end. </p> <p>One does not call the easing function directly, it must be passed to the <code>easing</code> property of an animation.</p>     <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>dojo.require(\"dojo.fx.easing\");\nvar anim = dojo.fadeOut({\n    node: 'node',\n    duration: 2000,\n    //  note there is no ()\n    easing: dojo.fx.easing.quadIn\n}).play();</code></pre> </div> </div>       <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_easing_backIn\">\n<span class=\"functionIcon\">backIn</span><span class=\"parameters\">(n)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"fx/easing\" class=\"jsdoc-link\">dojo/fx/easing</a> </p> <p>An easing function that starts away from the target, and quickly accelerates towards the end value. </p> <p>Use caution when the easing will cause values to become negative as some properties cannot be set to negative values.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">n</td> <td class=\"jsdoc-param-type\">Decimal</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">number</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_easing_backInOut\">\n<span class=\"functionIcon\">backInOut</span><span class=\"parameters\">(n)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"fx/easing\" class=\"jsdoc-link\">dojo/fx/easing</a> </p> <p>An easing function combining the effects of <code>backIn</code> and <code>backOut</code></p>  <p>An easing function combining the effects of <code>backIn</code> and <code>backOut</code>. Use caution when the easing will cause values to become negative as some properties cannot be set to negative values.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">n</td> <td class=\"jsdoc-param-type\">Decimal</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">number</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_easing_backOut\">\n<span class=\"functionIcon\">backOut</span><span class=\"parameters\">(n)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"fx/easing\" class=\"jsdoc-link\">dojo/fx/easing</a> </p> <p>An easing function that pops past the range briefly, and slowly comes back.</p>  <p>An easing function that pops past the range briefly, and slowly comes back. </p> <p>Use caution when the easing will cause values to become negative as some properties cannot be set to negative values.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">n</td> <td class=\"jsdoc-param-type\">Decimal</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">number</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_easing_bounceIn\">\n<span class=\"functionIcon\">bounceIn</span><span class=\"parameters\">(n)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"fx/easing\" class=\"jsdoc-link\">dojo/fx/easing</a> </p> <p>An easing function that 'bounces' near the beginning of an Animation</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">n</td> <td class=\"jsdoc-param-type\">Decimal</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">number</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_easing_bounceInOut\">\n<span class=\"functionIcon\">bounceInOut</span><span class=\"parameters\">(n)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"fx/easing\" class=\"jsdoc-link\">dojo/fx/easing</a> </p> <p>An easing function that 'bounces' at the beginning and end of the Animation</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">n</td> <td class=\"jsdoc-param-type\">Decimal</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">number</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_easing_bounceOut\">\n<span class=\"functionIcon\">bounceOut</span><span class=\"parameters\">(n)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"fx/easing\" class=\"jsdoc-link\">dojo/fx/easing</a> </p> <p>An easing function that 'bounces' near the end of an Animation</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">n</td> <td class=\"jsdoc-param-type\">Decimal</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">number</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_easing_circIn\">\n<span class=\"functionIcon\">circIn</span><span class=\"parameters\">(n)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"fx/easing\" class=\"jsdoc-link\">dojo/fx/easing</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">n</td> <td class=\"jsdoc-param-type\">Decimal</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">number</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_easing_circInOut\">\n<span class=\"functionIcon\">circInOut</span><span class=\"parameters\">(n)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"fx/easing\" class=\"jsdoc-link\">dojo/fx/easing</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">n</td> <td class=\"jsdoc-param-type\">Decimal</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">number</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_easing_circOut\">\n<span class=\"functionIcon\">circOut</span><span class=\"parameters\">(n)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"fx/easing\" class=\"jsdoc-link\">dojo/fx/easing</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">n</td> <td class=\"jsdoc-param-type\">Decimal</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_easing_cubicIn\">\n<span class=\"functionIcon\">cubicIn</span><span class=\"parameters\">(n)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"fx/easing\" class=\"jsdoc-link\">dojo/fx/easing</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">n</td> <td class=\"jsdoc-param-type\">Decimal</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_easing_cubicInOut\">\n<span class=\"functionIcon\">cubicInOut</span><span class=\"parameters\">(n)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"fx/easing\" class=\"jsdoc-link\">dojo/fx/easing</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">n</td> <td class=\"jsdoc-param-type\">Decimal</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">number</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_easing_cubicOut\">\n<span class=\"functionIcon\">cubicOut</span><span class=\"parameters\">(n)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"fx/easing\" class=\"jsdoc-link\">dojo/fx/easing</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">n</td> <td class=\"jsdoc-param-type\">Decimal</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">number</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_easing_elasticIn\">\n<span class=\"functionIcon\">elasticIn</span><span class=\"parameters\">(n)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"fx/easing\" class=\"jsdoc-link\">dojo/fx/easing</a> </p> <p>An easing function the elastically snaps from the start value</p>  <p>An easing function the elastically snaps from the start value </p> <p>Use caution when the elasticity will cause values to become negative as some properties cannot be set to negative values.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">n</td> <td class=\"jsdoc-param-type\">Decimal</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Decimal | number</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_easing_elasticInOut\">\n<span class=\"functionIcon\">elasticInOut</span><span class=\"parameters\">(n)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"fx/easing\" class=\"jsdoc-link\">dojo/fx/easing</a> </p> <p>An easing function that elasticly snaps around the value, near the beginning and end of the Animation.</p>  <p>An easing function that elasticly snaps around the value, near the beginning and end of the Animation. </p> <p>Use caution when the elasticity will cause values to become negative as some properties cannot be set to negative values.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">n</td> <td class=\"jsdoc-param-type\">Decimal</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">number</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_easing_elasticOut\">\n<span class=\"functionIcon\">elasticOut</span><span class=\"parameters\">(n)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"fx/easing\" class=\"jsdoc-link\">dojo/fx/easing</a> </p> <p>An easing function that elasticly snaps around the target value, near the end of the Animation</p>  <p>An easing function that elasticly snaps around the target value, near the end of the Animation </p> <p>Use caution when the elasticity will cause values to become negative as some properties cannot be set to negative values.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">n</td> <td class=\"jsdoc-param-type\">Decimal</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Decimal | number</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_easing_expoIn\">\n<span class=\"functionIcon\">expoIn</span><span class=\"parameters\">(n)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"fx/easing\" class=\"jsdoc-link\">dojo/fx/easing</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">n</td> <td class=\"jsdoc-param-type\">Decimal</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_easing_expoInOut\">\n<span class=\"functionIcon\">expoInOut</span><span class=\"parameters\">(n)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"fx/easing\" class=\"jsdoc-link\">dojo/fx/easing</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">n</td> <td class=\"jsdoc-param-type\">Decimal</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">number</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_easing_expoOut\">\n<span class=\"functionIcon\">expoOut</span><span class=\"parameters\">(n)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"fx/easing\" class=\"jsdoc-link\">dojo/fx/easing</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">n</td> <td class=\"jsdoc-param-type\">Decimal</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">number</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_easing_linear\">\n<span class=\"functionIcon\">linear</span><span class=\"parameters\">(n)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"fx/easing\" class=\"jsdoc-link\">dojo/fx/easing</a> </p> <p>A linear easing function</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">n</td> <td class=\"jsdoc-param-type\">Decimal</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Decimal</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_easing_quadIn\">\n<span class=\"functionIcon\">quadIn</span><span class=\"parameters\">(n)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"fx/easing\" class=\"jsdoc-link\">dojo/fx/easing</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">n</td> <td class=\"jsdoc-param-type\">Decimal</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_easing_quadInOut\">\n<span class=\"functionIcon\">quadInOut</span><span class=\"parameters\">(n)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"fx/easing\" class=\"jsdoc-link\">dojo/fx/easing</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">n</td> <td class=\"jsdoc-param-type\">Decimal</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">number</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_easing_quadOut\">\n<span class=\"functionIcon\">quadOut</span><span class=\"parameters\">(n)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"fx/easing\" class=\"jsdoc-link\">dojo/fx/easing</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">n</td> <td class=\"jsdoc-param-type\">Decimal</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">number</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_easing_quartIn\">\n<span class=\"functionIcon\">quartIn</span><span class=\"parameters\">(n)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"fx/easing\" class=\"jsdoc-link\">dojo/fx/easing</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">n</td> <td class=\"jsdoc-param-type\">Decimal</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_easing_quartInOut\">\n<span class=\"functionIcon\">quartInOut</span><span class=\"parameters\">(n)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"fx/easing\" class=\"jsdoc-link\">dojo/fx/easing</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">n</td> <td class=\"jsdoc-param-type\">Decimal</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">number</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_easing_quartOut\">\n<span class=\"functionIcon\">quartOut</span><span class=\"parameters\">(n)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"fx/easing\" class=\"jsdoc-link\">dojo/fx/easing</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">n</td> <td class=\"jsdoc-param-type\">Decimal</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">number</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_easing_quintIn\">\n<span class=\"functionIcon\">quintIn</span><span class=\"parameters\">(n)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"fx/easing\" class=\"jsdoc-link\">dojo/fx/easing</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">n</td> <td class=\"jsdoc-param-type\">Decimal</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_easing_quintInOut\">\n<span class=\"functionIcon\">quintInOut</span><span class=\"parameters\">(n)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"fx/easing\" class=\"jsdoc-link\">dojo/fx/easing</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">n</td> <td class=\"jsdoc-param-type\">Decimal</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">number</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_easing_quintOut\">\n<span class=\"functionIcon\">quintOut</span><span class=\"parameters\">(n)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"fx/easing\" class=\"jsdoc-link\">dojo/fx/easing</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">n</td> <td class=\"jsdoc-param-type\">Decimal</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">number</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_easing_sineIn\">\n<span class=\"functionIcon\">sineIn</span><span class=\"parameters\">(n)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"fx/easing\" class=\"jsdoc-link\">dojo/fx/easing</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">n</td> <td class=\"jsdoc-param-type\">Decimal</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">number</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_easing_sineInOut\">\n<span class=\"functionIcon\">sineInOut</span><span class=\"parameters\">(n)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"fx/easing\" class=\"jsdoc-link\">dojo/fx/easing</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">n</td> <td class=\"jsdoc-param-type\">Decimal</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">number</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_fx_easing_sineOut\">\n<span class=\"functionIcon\">sineOut</span><span class=\"parameters\">(n)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"fx/easing\" class=\"jsdoc-link\">dojo/fx/easing</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">n</td> <td class=\"jsdoc-param-type\">Decimal</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/fx.easing.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/fx.easing.html</a>\n  </p>\n</div>\n","dojo/io/script":"<h1>dojo/io/script</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>TODOC</p>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/io/script.html\" target=\"_blank\">dojo/io/script reference documentation</a> for more information.</p>            <h2 id=\"properties\">Properties</h2>     <h2 id=\"methods\">Methods</h2>              <h3 class=\"jsdoc-title\" id=\"1_10dojo_io_script_attach\">\n<span class=\"functionIcon\">attach</span><span class=\"parameters\">(id,url,frameDocument)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"script\" class=\"jsdoc-link\">dojo/io/script</a> </p> <p>creates a new <code>&lt;script&gt;</code> tag pointing to the specified URL and adds it to the document.</p>  <p>Attaches the script element to the DOM. Use this method if you just want to attach a script to the DOM and do not care when or if it loads.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">id</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">url</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">frameDocument</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_io_script_get\">\n<span class=\"functionIcon\">get</span><span class=\"parameters\">(args)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"script\" class=\"jsdoc-link\">dojo/io/script</a> </p> <p>sends a get request using a dynamically created script tag.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">args</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>An object with the following properties:</p>\n<ul>\n<li>callbackParamName (String): <p>Deprecated as of Dojo 1.4 in favor of \"jsonp\", but still supported for legacy code. See notes for jsonp property.</p> </li>\n<li>jsonp (String): <p>The URL parameter name that indicates the JSONP callback string. For instance, when using Yahoo JSONP calls it is normally, jsonp: \"callback\". For AOL JSONP calls it is normally jsonp: \"c\".</p> </li>\n<li>checkString (String): <p>A string of JavaScript that when evaluated like so: \"typeof(\" + checkString + \") != 'undefined'\" being true means that the script fetched has been loaded. Do not use this if doing a JSONP type of call (use callbackParamName instead).</p> </li>\n<li>frameDoc (Document): <p>The Document object for a child iframe. If this is passed in, the script will be attached to that document. This can be helpful in some comet long-polling scenarios with Firefox and Opera.</p> </li>\n<li>load: <p>This function will be called on a successful HTTP response code.</p> </li>\n<li>error: <p>This function will be called when the request fails due to a network or server error, the url is invalid, etc. It will also be called if the load or handle callback throws an exception, unless djConfig.debugAtAllCosts is true. This allows deployed applications to continue to run even when a logic error happens in the callback, while making it easier to troubleshoot while in debug mode.</p> </li>\n<li>handle: <p>This function will be called at the end of every request, whether or not an error occurs.</p> </li>\n<li>url (String): <p>URL to server endpoint.</p> </li>\n<li>content (Object, optional): <p>Contains properties with string values. These properties will be serialized as name1=value2 and passed in the request.</p> </li>\n<li>timeout (Integer, optional): <p>Milliseconds to wait for the response. If this time passes, the then error callbacks are called.</p> </li>\n<li>form (DOMNode, optional): <p>DOM node for a form. Used to extract the form values and send to the server.</p> </li>\n<li>preventCache (Boolean, optional): <p>Default is false. If true, then a \"dojo.preventCache\" parameter is sent in the request with a value that changes with each request (timestamp). Useful only with GET-type requests.</p> </li>\n<li>handleAs (String, optional): <p>Acceptable values depend on the type of IO transport (see specific IO calls for more information).</p> </li>\n<li>rawBody (String, optional): <p>Sets the raw body for an HTTP request. If this is used, then the content property is ignored. This is mostly useful for HTTP methods that have a body to their requests, like PUT or POST. This property can be used instead of postData and putData for dojo/_base/xhr.rawXhrPost and dojo/_base/xhr.rawXhrPut respectively.</p> </li>\n<li>ioPublish (Boolean, optional): <p>Set this explicitly to false to prevent publishing of topics related to IO operations. Otherwise, if djConfig.ioPublish is set to true, topics will be published via dojo/topic.publish() for different phases of an IO operation. See dojo/main.__IoPublish for a list of topics that are published.</p> </li>\n</ul> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_io_script_remove\">\n<span class=\"functionIcon\">remove</span><span class=\"parameters\">(id,frameDocument)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"script\" class=\"jsdoc-link\">dojo/io/script</a> </p> <p>removes the script element with the given id, from the given frameDocument. If no frameDocument is passed, the current document is used.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">id</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">frameDocument</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/io/script.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/io/script.html</a>\n  </p>\n</div>\n","dojo/keys":"<h1>dojo/keys</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>Definitions for common key values. Client code should test keyCode against these named constants, as the actual codes can vary by browser.</p>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/keys.html\" target=\"_blank\">dojo/keys reference documentation</a> for more information.</p>          <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_keys_ALT\">\n<span class=\"numberIcon\">ALT</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_keys_BACKSPACE\">\n<span class=\"numberIcon\">BACKSPACE</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_keys_CAPS_LOCK\">\n<span class=\"numberIcon\">CAPS_LOCK</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_keys_CLEAR\">\n<span class=\"numberIcon\">CLEAR</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_keys_copyKey\">\n<span class=\"numberIcon\">copyKey</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_keys_CTRL\">\n<span class=\"numberIcon\">CTRL</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_keys_DELETE\">\n<span class=\"numberIcon\">DELETE</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_keys_DOWN_ARROW\">\n<span class=\"numberIcon\">DOWN_ARROW</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_keys_DOWN_DPAD\">\n<span class=\"numberIcon\">DOWN_DPAD</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_keys_END\">\n<span class=\"numberIcon\">END</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_keys_ENTER\">\n<span class=\"numberIcon\">ENTER</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_keys_ESCAPE\">\n<span class=\"numberIcon\">ESCAPE</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_keys_F1\">\n<span class=\"numberIcon\">F1</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_keys_F10\">\n<span class=\"numberIcon\">F10</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_keys_F11\">\n<span class=\"numberIcon\">F11</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_keys_F12\">\n<span class=\"numberIcon\">F12</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_keys_F13\">\n<span class=\"numberIcon\">F13</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_keys_F14\">\n<span class=\"numberIcon\">F14</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_keys_F15\">\n<span class=\"numberIcon\">F15</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_keys_F2\">\n<span class=\"numberIcon\">F2</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_keys_F3\">\n<span class=\"numberIcon\">F3</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_keys_F4\">\n<span class=\"numberIcon\">F4</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_keys_F5\">\n<span class=\"numberIcon\">F5</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_keys_F6\">\n<span class=\"numberIcon\">F6</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_keys_F7\">\n<span class=\"numberIcon\">F7</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_keys_F8\">\n<span class=\"numberIcon\">F8</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_keys_F9\">\n<span class=\"numberIcon\">F9</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_keys_HELP\">\n<span class=\"numberIcon\">HELP</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_keys_HOME\">\n<span class=\"numberIcon\">HOME</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_keys_INSERT\">\n<span class=\"numberIcon\">INSERT</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_keys_LEFT_ARROW\">\n<span class=\"numberIcon\">LEFT_ARROW</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_keys_LEFT_DPAD\">\n<span class=\"numberIcon\">LEFT_DPAD</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_keys_LEFT_WINDOW\">\n<span class=\"numberIcon\">LEFT_WINDOW</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_keys_META\">\n<span class=\"numberIcon\">META</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_keys_NUM_LOCK\">\n<span class=\"numberIcon\">NUM_LOCK</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_keys_NUMPAD_0\">\n<span class=\"numberIcon\">NUMPAD_0</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_keys_NUMPAD_1\">\n<span class=\"numberIcon\">NUMPAD_1</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_keys_NUMPAD_2\">\n<span class=\"numberIcon\">NUMPAD_2</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_keys_NUMPAD_3\">\n<span class=\"numberIcon\">NUMPAD_3</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_keys_NUMPAD_4\">\n<span class=\"numberIcon\">NUMPAD_4</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_keys_NUMPAD_5\">\n<span class=\"numberIcon\">NUMPAD_5</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_keys_NUMPAD_6\">\n<span class=\"numberIcon\">NUMPAD_6</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_keys_NUMPAD_7\">\n<span class=\"numberIcon\">NUMPAD_7</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_keys_NUMPAD_8\">\n<span class=\"numberIcon\">NUMPAD_8</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_keys_NUMPAD_9\">\n<span class=\"numberIcon\">NUMPAD_9</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_keys_NUMPAD_DIVIDE\">\n<span class=\"numberIcon\">NUMPAD_DIVIDE</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_keys_NUMPAD_ENTER\">\n<span class=\"numberIcon\">NUMPAD_ENTER</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_keys_NUMPAD_MINUS\">\n<span class=\"numberIcon\">NUMPAD_MINUS</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_keys_NUMPAD_MULTIPLY\">\n<span class=\"numberIcon\">NUMPAD_MULTIPLY</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_keys_NUMPAD_PERIOD\">\n<span class=\"numberIcon\">NUMPAD_PERIOD</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_keys_NUMPAD_PLUS\">\n<span class=\"numberIcon\">NUMPAD_PLUS</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_keys_PAGE_DOWN\">\n<span class=\"numberIcon\">PAGE_DOWN</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_keys_PAGE_UP\">\n<span class=\"numberIcon\">PAGE_UP</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_keys_PAUSE\">\n<span class=\"numberIcon\">PAUSE</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_keys_RIGHT_ARROW\">\n<span class=\"numberIcon\">RIGHT_ARROW</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_keys_RIGHT_DPAD\">\n<span class=\"numberIcon\">RIGHT_DPAD</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_keys_RIGHT_WINDOW\">\n<span class=\"numberIcon\">RIGHT_WINDOW</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_keys_SCROLL_LOCK\">\n<span class=\"numberIcon\">SCROLL_LOCK</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_keys_SELECT\">\n<span class=\"numberIcon\">SELECT</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_keys_SHIFT\">\n<span class=\"numberIcon\">SHIFT</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_keys_SPACE\">\n<span class=\"numberIcon\">SPACE</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_keys_TAB\">\n<span class=\"numberIcon\">TAB</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_keys_UP_ARROW\">\n<span class=\"numberIcon\">UP_ARROW</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_keys_UP_DPAD\">\n<span class=\"numberIcon\">UP_DPAD</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/keys.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/keys.html</a>\n  </p>\n</div>\n","dojo/loadinit":"<h1>dojo/loadInit</h1>             <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_loadInit_dynamic\">\n<span class=\"numberIcon\">dynamic</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"loadinit\" class=\"jsdoc-link\">dojo/loadInit</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_loadInit_load\">\n<span class=\"objectIcon\">load</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"loadinit\" class=\"jsdoc-link\">dojo/loadInit</a> </p>    <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_loadInit_normalize\">\n<span class=\"functionIcon\">normalize</span><span class=\"parameters\">(id)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"loadinit\" class=\"jsdoc-link\">dojo/loadInit</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">id</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/loadInit.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/loadInit.html</a>\n  </p>\n</div>\n","dojo/main.__iocallbackargs":"<h1>dojo/main.__IoCallbackArgs</h1>  <p> <strong>Note:</strong> This is not a real constructor, but just a description of the type of object that should be passed as a parameter to some method(s), and/or the return value from some method(s). In other words, the type exists only for documentation purposes, and you <strong>cannot</strong> call <code>new main.__IoCallbackArgs()</code> </p>          <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_main___IoCallbackArgs_args\">\n<span class=\"objectIcon\">args</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>the original object argument to the IO call.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main___IoCallbackArgs_canDelete\">\n<span class=\"booleanIcon\">canDelete</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>For <a class=\"jsdoc-link\" href=\"io/script\">dojo/io/script</a> calls only, indicates whether the script tag that represents the request can be deleted after callbacks have been called. Used internally to know when cleanup can happen on JSONP-type requests.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main___IoCallbackArgs_handleAs\">\n<span class=\"stringIcon\">handleAs</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>The final indicator on how the response will be handled.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main___IoCallbackArgs_id\">\n<span class=\"stringIcon\">id</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>For <a class=\"jsdoc-link\" href=\"io/script\">dojo/io/script</a> calls only, the internal script ID used for the request.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main___IoCallbackArgs_json\">\n<span class=\"objectIcon\">json</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>For <a class=\"jsdoc-link\" href=\"io/script\">dojo/io/script</a> calls only: holds the JSON response for JSONP-type requests. Used internally to hold on to the JSON responses. You should not need to access it directly -- the same object should be passed to the success callbacks directly.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main___IoCallbackArgs_query\">\n<span class=\"stringIcon\">query</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>For non-GET requests, the name1=value1&amp;name2=value2 parameters sent up in the request.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main___IoCallbackArgs_url\">\n<span class=\"stringIcon\">url</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>The final URL used for the call. Many times it will be different than the original args.url value.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main___IoCallbackArgs_xhr\">\n<span class=\"objectIcon\">xhr</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>For XMLHttpRequest calls only, the XMLHttpRequest object that was used for the request.</p> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/main.__IoCallbackArgs.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/main.__IoCallbackArgs.html</a>\n  </p>\n</div>\n","dojo/main.__iopublish":"<h1>dojo/main.__IoPublish</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>This is a list of IO topics that can be published if djConfig.ioPublish is set to true. IO topics can be published for any Input/Output, network operation. So, dojo.xhr, dojo.io.script and dojo.io.iframe can all trigger these topics to be published.</p>  <p> <strong>Note:</strong> This is not a real constructor, but just a description of the type of object that should be passed as a parameter to some method(s), and/or the return value from some method(s). In other words, the type exists only for documentation purposes, and you <strong>cannot</strong> call <code>new main.__IoPublish()</code> </p>          <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_main___IoPublish_done\">\n<span class=\"stringIcon\">done</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>\"/dojo/io/done\" is sent whenever an IO request has completed, either by loading or by erroring. It passes the error and the dojo.Deferred for the request with the topic.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main___IoPublish_error\">\n<span class=\"stringIcon\">error</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>\"/dojo/io/error\" is sent whenever an IO request has errored. It passes the error and the dojo.Deferred for the request with the topic.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main___IoPublish_load\">\n<span class=\"stringIcon\">load</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>\"/dojo/io/load\" is sent whenever an IO request has loaded successfully. It passes the response and the dojo.Deferred for the request with the topic.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main___IoPublish_send\">\n<span class=\"stringIcon\">send</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>\"/dojo/io/send\" is sent whenever a new IO request is started. It passes the dojo.Deferred for the request with the topic.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main___IoPublish_start\">\n<span class=\"stringIcon\">start</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>\"/dojo/io/start\" is sent when there are no outstanding IO requests, and a new IO request is started. No arguments are passed with this topic.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main___IoPublish_stop\">\n<span class=\"stringIcon\">stop</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>\"/dojo/io/stop\" is sent when all outstanding IO requests have finished. No arguments are passed with this topic.</p> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/main.__IoPublish.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/main.__IoPublish.html</a>\n  </p>\n</div>\n","dojo/main._contenthandlers":"<h1>dojo/main._contentHandlers</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>A map of available XHR transport handle types. Name matches the <code>handleAs</code> attribute passed to XHR calls.</p>  <p>A map of available XHR transport handle types. Name matches the <code>handleAs</code> attribute passed to XHR calls. Each contentHandler is called, passing the xhr object for manipulation. The return value from the contentHandler will be passed to the <code>load</code> or <code>handle</code> functions defined in the original xhr call.</p>     <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Creating a custom content-handler: </p> <pre><code>xhr.contentHandlers.makeCaps = function(xhr){\n    return xhr.responseText.toUpperCase();\n}\n// and later:\ndojo.xhrGet({\n    url:\"foo.txt\",\n    handleAs:\"makeCaps\",\n    load: function(data){ /* data is a toUpper version of foo.txt */ }\n});</code></pre> </div> </div>       <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_main__contentHandlers_auto\">\n<span class=\"functionIcon\">auto</span><span class=\"parameters\">(xhr)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"http://dojotoolkit.org/api/1.10/dojox/rpc/Service\" class=\"jsdoc-link\">dojox/rpc/Service</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">xhr</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main__contentHandlers_javascript\">\n<span class=\"functionIcon\">javascript</span><span class=\"parameters\">(xhr)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <p>A contentHandler which evaluates the response data, expecting it to be valid JavaScript</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">xhr</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main__contentHandlers_json\">\n<span class=\"functionIcon\">json</span><span class=\"parameters\">(xhr)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <p>A contentHandler which returns a JavaScript object created from the response data</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">xhr</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main__contentHandlers_json-comment-filtered\">\n<span class=\"functionIcon\">json-comment-filtered</span><span class=\"parameters\">(xhr)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <p>A contentHandler which expects comment-filtered JSON.</p>  <p>A contentHandler which expects comment-filtered JSON. the json-comment-filtered option was implemented to prevent \"JavaScript Hijacking\", but it is less secure than standard JSON. Use standard JSON instead. JSON prefixing can be used to subvert hijacking. </p> <p>Will throw a notice suggesting to use application/json mimetype, as json-commenting can introduce security issues. To decrease the chances of hijacking, use the standard <code>json</code> contentHandler, and prefix your \"JSON\" with: {}&amp;&amp; </p> <p>use djConfig.useCommentedJson = true to turn off the notice</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">xhr</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main__contentHandlers_json-comment-optional\">\n<span class=\"functionIcon\">json-comment-optional</span><span class=\"parameters\">(xhr)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <p>A contentHandler which checks the presence of comment-filtered JSON and alternates between the <code>json</code> and <code>json-comment-filtered</code> contentHandlers.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">xhr</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main__contentHandlers_text\">\n<span class=\"functionIcon\">text</span><span class=\"parameters\">(xhr)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <p>A contentHandler which simply returns the plaintext response data</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">xhr</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main__contentHandlers_xml\">\n<span class=\"functionIcon\">xml</span><span class=\"parameters\">(xhr)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <p>A contentHandler returning an XML Document parsed from the response data</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">xhr</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/main._contentHandlers.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/main._contentHandlers.html</a>\n  </p>\n</div>\n","dojo/main._hasresource":"<h1>dojo/main._hasResource</h1><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/main._hasResource.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/main._hasResource.html</a>\n  </p>\n</div>\n","dojo/main.__ioargs":"<h1>dojo/main.__IoArgs</h1>  <p> <strong>Note:</strong> This is not a real constructor, but just a description of the type of object that should be passed as a parameter to some method(s), and/or the return value from some method(s). In other words, the type exists only for documentation purposes, and you <strong>cannot</strong> call <code>new main.__IoArgs()</code> </p>            <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_main___IoArgs_content\">\n<span class=\"objectIcon\">content</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>Contains properties with string values. These properties will be serialized as name1=value2 and passed in the request.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main___IoArgs_form\">\n<span class=\"domnodeIcon\">form</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>DOM node for a form. Used to extract the form values and send to the server.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main___IoArgs_handleAs\">\n<span class=\"stringIcon\">handleAs</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>Acceptable values depend on the type of IO transport (see specific IO calls for more information).</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main___IoArgs_ioPublish\">\n<span class=\"booleanIcon\">ioPublish</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>Set this explicitly to false to prevent publishing of topics related to IO operations. Otherwise, if djConfig.ioPublish is set to true, topics will be published via <a class=\"jsdoc-link\" href=\"topic#publish\">dojo/topic.publish()</a> for different phases of an IO operation. See <a class=\"jsdoc-link\" href=\"main.__iopublish\">dojo/main.__IoPublish</a> for a list of topics that are published.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main___IoArgs_preventCache\">\n<span class=\"booleanIcon\">preventCache</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>Default is false. If true, then a \"dojo.preventCache\" parameter is sent in the request with a value that changes with each request (timestamp). Useful only with GET-type requests.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main___IoArgs_rawBody\">\n<span class=\"stringIcon\">rawBody</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>Sets the raw body for an HTTP request. If this is used, then the content property is ignored. This is mostly useful for HTTP methods that have a body to their requests, like PUT or POST. This property can be used instead of postData and putData for <a class=\"jsdoc-link\" href=\"_base/xhr#rawXhrPost\">dojo/_base/xhr.rawXhrPost</a> and <a class=\"jsdoc-link\" href=\"_base/xhr#rawXhrPut\">dojo/_base/xhr.rawXhrPut</a> respectively.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main___IoArgs_timeout\">\n<span class=\"numberIcon\">timeout</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>Milliseconds to wait for the response. If this time passes, the then error callbacks are called.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main___IoArgs_url\">\n<span class=\"stringIcon\">url</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>URL to server endpoint.</p> </div>    <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_main___IoArgs_error\">\n<span class=\"functionIcon\">error</span><span class=\"parameters\">(response,ioArgs)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <p>This function will be called when the request fails due to a network or server error, the url is invalid, etc. It will also be called if the load or handle callback throws an exception, unless djConfig.debugAtAllCosts is true. This allows deployed applications to continue to run even when a logic error happens in the callback, while making it easier to troubleshoot while in debug mode.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">response</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>The response in the format as defined with handleAs.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">ioArgs</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"main.__iocallbackargs\">dojo/main.__IoCallbackArgs</a></td> <td class=\"jsdoc-param-description\">\n<p>Provides additional information about the request.</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main___IoArgs_handle\">\n<span class=\"functionIcon\">handle</span><span class=\"parameters\">(loadOrError,response,ioArgs)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <p>This function will be called at the end of every request, whether or not an error occurs.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">loadOrError</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>Provides a string that tells you whether this function was called because of success (load) or failure (error).</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">response</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>The response in the format as defined with handleAs.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">ioArgs</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"main.__iocallbackargs\">dojo/main.__IoCallbackArgs</a></td> <td class=\"jsdoc-param-description\">\n<p>Provides additional information about the request.</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main___IoArgs_load\">\n<span class=\"functionIcon\">load</span><span class=\"parameters\">(response,ioArgs)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <p>This function will be called on a successful HTTP response code.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">response</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>The response in the format as defined with handleAs.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">ioArgs</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"main.__iocallbackargs\">dojo/main.__IoCallbackArgs</a></td> <td class=\"jsdoc-param-description\">\n<p>Provides additional information about the request.</p> </td> </tr> </table><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/main.__IoArgs.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/main.__IoArgs.html</a>\n  </p>\n</div>\n","dojo/main.__xhrargs":"<h1>dojo/main.__XhrArgs</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>In addition to the properties listed for the dojo._IoArgs type, the following properties are allowed for dojo.xhr* methods.</p>  <p> <strong>Note:</strong> This is not a real constructor, but just a description of the type of object that should be passed as a parameter to some method(s), and/or the return value from some method(s). In other words, the type exists only for documentation purposes, and you <strong>cannot</strong> call <code>new main.__XhrArgs()</code> </p>            <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_main___XhrArgs_content\">\n<span class=\"objectIcon\">content</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>Contains properties with string values. These properties will be serialized as name1=value2 and passed in the request.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main___XhrArgs_contentType\">\n<span class=\"stringIcon\">contentType</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>\"application/x-www-form-urlencoded\" is default. Set to false to prevent a Content-Type header from being sent, or to a string to send a different Content-Type.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main___XhrArgs_failOk\">\n<span class=\"booleanIcon\">failOk</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>false is default. Indicates whether a request should be allowed to fail (and therefore no console error message in the event of a failure)</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main___XhrArgs_form\">\n<span class=\"domnodeIcon\">form</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>DOM node for a form. Used to extract the form values and send to the server.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main___XhrArgs_handleAs\">\n<span class=\"stringIcon\">handleAs</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>Acceptable values are: text (default), json, json-comment-optional, json-comment-filtered, javascript, xml. See <a class=\"jsdoc-link\" href=\"_base/xhr.contenthandlers\">dojo/_base/xhr.contentHandlers</a></p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main___XhrArgs_headers\">\n<span class=\"objectIcon\">headers</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>Additional HTTP headers to send in the request.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main___XhrArgs_ioPublish\">\n<span class=\"booleanIcon\">ioPublish</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>Set this explicitly to false to prevent publishing of topics related to IO operations. Otherwise, if djConfig.ioPublish is set to true, topics will be published via <a class=\"jsdoc-link\" href=\"topic#publish\">dojo/topic.publish()</a> for different phases of an IO operation. See <a class=\"jsdoc-link\" href=\"main.__iopublish\">dojo/main.__IoPublish</a> for a list of topics that are published.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main___XhrArgs_preventCache\">\n<span class=\"booleanIcon\">preventCache</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>Default is false. If true, then a \"dojo.preventCache\" parameter is sent in the request with a value that changes with each request (timestamp). Useful only with GET-type requests.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main___XhrArgs_rawBody\">\n<span class=\"stringIcon\">rawBody</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>Sets the raw body for an HTTP request. If this is used, then the content property is ignored. This is mostly useful for HTTP methods that have a body to their requests, like PUT or POST. This property can be used instead of postData and putData for <a class=\"jsdoc-link\" href=\"_base/xhr#rawXhrPost\">dojo/_base/xhr.rawXhrPost</a> and <a class=\"jsdoc-link\" href=\"_base/xhr#rawXhrPut\">dojo/_base/xhr.rawXhrPut</a> respectively.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main___XhrArgs_sync\">\n<span class=\"booleanIcon\">sync</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>false is default. Indicates whether the request should be a synchronous (blocking) request.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main___XhrArgs_timeout\">\n<span class=\"numberIcon\">timeout</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>Milliseconds to wait for the response. If this time passes, the then error callbacks are called.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main___XhrArgs_url\">\n<span class=\"stringIcon\">url</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>URL to server endpoint.</p> </div>    <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_main___XhrArgs_error\">\n<span class=\"functionIcon\">error</span><span class=\"parameters\">(response,ioArgs)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <p>This function will be called when the request fails due to a network or server error, the url is invalid, etc. It will also be called if the load or handle callback throws an exception, unless djConfig.debugAtAllCosts is true. This allows deployed applications to continue to run even when a logic error happens in the callback, while making it easier to troubleshoot while in debug mode.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">response</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>The response in the format as defined with handleAs.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">ioArgs</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"main.__iocallbackargs\">dojo/main.__IoCallbackArgs</a></td> <td class=\"jsdoc-param-description\">\n<p>Provides additional information about the request.</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main___XhrArgs_handle\">\n<span class=\"functionIcon\">handle</span><span class=\"parameters\">(loadOrError,response,ioArgs)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <p>This function will be called at the end of every request, whether or not an error occurs.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">loadOrError</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>Provides a string that tells you whether this function was called because of success (load) or failure (error).</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">response</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>The response in the format as defined with handleAs.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">ioArgs</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"main.__iocallbackargs\">dojo/main.__IoCallbackArgs</a></td> <td class=\"jsdoc-param-description\">\n<p>Provides additional information about the request.</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main___XhrArgs_load\">\n<span class=\"functionIcon\">load</span><span class=\"parameters\">(response,ioArgs)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <p>This function will be called on a successful HTTP response code.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">response</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>The response in the format as defined with handleAs.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">ioArgs</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"main.__iocallbackargs\">dojo/main.__IoCallbackArgs</a></td> <td class=\"jsdoc-param-description\">\n<p>Provides additional information about the request.</p> </td> </tr> </table><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/main.__XhrArgs.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/main.__XhrArgs.html</a>\n  </p>\n</div>\n","dojo/main._nodedatacache":"<h1>dojo/main._nodeDataCache</h1><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/main._nodeDataCache.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/main._nodeDataCache.html</a>\n  </p>\n</div>\n","dojo/main.back":"<h1>dojo/main.back</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>Browser history management resources</p>           <h2 id=\"methods\">Methods</h2>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_back_addToHistory\">\n<span class=\"functionIcon\">addToHistory</span><span class=\"parameters\">(args)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"back\" class=\"jsdoc-link\">dojo/back</a> </p> <p>adds a state object (args) to the history list.</p>  <p>To support getting back button notifications, the object argument should implement a function called either \"back\", \"backButton\", or \"handle\". The string \"back\" will be passed as the first and only argument to this callback. </p> <p>To support getting forward button notifications, the object argument should implement a function called either \"forward\", \"forwardButton\", or \"handle\". The string \"forward\" will be passed as the first and only argument to this callback. </p> <p>If you want the browser location string to change, define \"changeUrl\" on the object. If the value of \"changeUrl\" is true, then a unique number will be appended to the URL as a fragment identifier (<a href=\"http://some.domain.com/path#uniquenumber\">http://some.domain.com/path#uniquenumber</a>). If it is any other value that does not evaluate to false, that value will be used as the fragment identifier. For example, if changeUrl: 'page1', then the URL will look like: <a href=\"http://some.domain.com/path#page1\">http://some.domain.com/path#page1</a> </p> <p>There are problems with using <a class=\"jsdoc-link\" href=\"back\">dojo/back</a> with semantically-named fragment identifiers (\"hash values\" on an URL). In most browsers it will be hard for <a class=\"jsdoc-link\" href=\"back\">dojo/back</a> to know distinguish a back from a forward event in those cases. For back/forward support to work best, the fragment ID should always be a unique value (something using new Date().getTime() for example). If you want to detect hash changes using semantic fragment IDs, then consider using <a class=\"jsdoc-link\" href=\"hash\">dojo/hash</a> instead (in Dojo 1.4+). </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">args</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>The state object that will be added to the history list.</p> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>back.addToHistory({\n    back: function(){ console.log('back pressed'); },\n    forward: function(){ console.log('forward pressed'); },\n    changeUrl: true\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_back_getHash\">\n<span class=\"functionIcon\">getHash</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"back\" class=\"jsdoc-link\">dojo/back</a> </p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_back_goBack\">\n<span class=\"functionIcon\">goBack</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"back\" class=\"jsdoc-link\">dojo/back</a> </p> <p>private method. Do not call this directly.</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_back_goForward\">\n<span class=\"functionIcon\">goForward</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"back\" class=\"jsdoc-link\">dojo/back</a> </p> <p>private method. Do not call this directly.</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_back_init\">\n<span class=\"functionIcon\">init</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"back\" class=\"jsdoc-link\">dojo/back</a> </p> <p>Initializes the undo stack. This must be called from a </p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/main.back.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/main.back.html</a>\n  </p>\n</div>\n","dojo/main.cldr":"<h1>dojo/main.cldr</h1>           <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_cldr_monetary\">\n<span class=\"objectIcon\">monetary</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"cldr/monetary\" class=\"jsdoc-link\">dojo/cldr/monetary</a> </p> <div class=\"jsdoc-summary\">\n<p>TODOC</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_cldr_supplemental\">\n<span class=\"objectIcon\">supplemental</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"cldr/supplemental\" class=\"jsdoc-link\">dojo/cldr/supplemental</a> </p> <div class=\"jsdoc-summary\">\n<p>TODOC</p> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/main.cldr.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/main.cldr.html</a>\n  </p>\n</div>\n","dojo/main.colors":"<h1>dojo/main.colors</h1>           <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_colors_makeGrey\">\n<span class=\"functionIcon\">makeGrey</span><span class=\"parameters\">(g,a)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"colors\" class=\"jsdoc-link\">dojo/colors</a> </p> <p>creates a greyscale color with an optional alpha</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">g</td> <td class=\"jsdoc-param-type\">Number</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">a</td> <td class=\"jsdoc-param-type\">Number</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/main.colors.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/main.colors.html</a>\n  </p>\n</div>\n","dojo/main.contenthandlers":"<h1>dojo/main.contentHandlers</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>A map of available XHR transport handle types. Name matches the <code>handleAs</code> attribute passed to XHR calls.</p>  <p>A map of available XHR transport handle types. Name matches the <code>handleAs</code> attribute passed to XHR calls. Each contentHandler is called, passing the xhr object for manipulation. The return value from the contentHandler will be passed to the <code>load</code> or <code>handle</code> functions defined in the original xhr call.</p>     <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Creating a custom content-handler: </p> <pre><code>xhr.contentHandlers.makeCaps = function(xhr){\n    return xhr.responseText.toUpperCase();\n}\n// and later:\ndojo.xhrGet({\n    url:\"foo.txt\",\n    handleAs:\"makeCaps\",\n    load: function(data){ /* data is a toUpper version of foo.txt */ }\n});</code></pre> </div> </div>       <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_contentHandlers_auto\">\n<span class=\"functionIcon\">auto</span><span class=\"parameters\">(xhr)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"http://dojotoolkit.org/api/1.10/dojox/rpc/Service\" class=\"jsdoc-link\">dojox/rpc/Service</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">xhr</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_contentHandlers_javascript\">\n<span class=\"functionIcon\">javascript</span><span class=\"parameters\">(xhr)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <p>A contentHandler which evaluates the response data, expecting it to be valid JavaScript</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">xhr</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_contentHandlers_json\">\n<span class=\"functionIcon\">json</span><span class=\"parameters\">(xhr)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <p>A contentHandler which returns a JavaScript object created from the response data</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">xhr</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_contentHandlers_json-comment-filtered\">\n<span class=\"functionIcon\">json-comment-filtered</span><span class=\"parameters\">(xhr)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <p>A contentHandler which expects comment-filtered JSON.</p>  <p>A contentHandler which expects comment-filtered JSON. the json-comment-filtered option was implemented to prevent \"JavaScript Hijacking\", but it is less secure than standard JSON. Use standard JSON instead. JSON prefixing can be used to subvert hijacking. </p> <p>Will throw a notice suggesting to use application/json mimetype, as json-commenting can introduce security issues. To decrease the chances of hijacking, use the standard <code>json</code> contentHandler, and prefix your \"JSON\" with: {}&amp;&amp; </p> <p>use djConfig.useCommentedJson = true to turn off the notice</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">xhr</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_contentHandlers_json-comment-optional\">\n<span class=\"functionIcon\">json-comment-optional</span><span class=\"parameters\">(xhr)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <p>A contentHandler which checks the presence of comment-filtered JSON and alternates between the <code>json</code> and <code>json-comment-filtered</code> contentHandlers.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">xhr</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_contentHandlers_text\">\n<span class=\"functionIcon\">text</span><span class=\"parameters\">(xhr)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <p>A contentHandler which simply returns the plaintext response data</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">xhr</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_contentHandlers_xml\">\n<span class=\"functionIcon\">xml</span><span class=\"parameters\">(xhr)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <p>A contentHandler returning an XML Document parsed from the response data</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">xhr</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/main.contentHandlers.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/main.contentHandlers.html</a>\n  </p>\n</div>\n","dojo/main.currency":"<h1>dojo/main.currency</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>localized formatting and parsing routines for currencies</p>  <p>extends dojo.number to provide culturally-appropriate formatting of values in various world currencies, including use of a currency symbol. The currencies are specified by a three-letter international symbol in all uppercase, and support for the currencies is provided by the data in <code>dojo.cldr</code>. The scripts generating dojo.cldr specify which currency support is included. A fixed number of decimal places is determined based on the currency type and is not determined by the 'pattern' argument. The fractional portion is optional, by default, and variable length decimals are not supported.</p>           <h2 id=\"methods\">Methods</h2>       <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_currency_format\">\n<span class=\"functionIcon\">format</span><span class=\"parameters\">(value,options)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"currency\" class=\"jsdoc-link\">dojo/currency</a> </p> <p>Format a Number as a currency, using locale-specific settings </p>  <p>Create a string from a Number using a known, localized pattern. <a href=\"http://www.unicode.org/reports/tr35/#Number_Elements\">Formatting patterns</a> appropriate to the locale are chosen from the <a href=\"http://unicode.org/cldr\">CLDR</a> as well as the appropriate symbols and delimiters and number of decimal places. </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">value</td> <td class=\"jsdoc-param-type\">Number</td> <td class=\"jsdoc-param-description\">\n<p>the number to be formatted.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">options</td> <td class=\"jsdoc-param-type\">__FormatOptions</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_currency_parse\">\n<span class=\"functionIcon\">parse</span><span class=\"parameters\">(expression,options)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"currency\" class=\"jsdoc-link\">dojo/currency</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">expression</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">options</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>An object with the following properties:</p>\n<ul>\n<li>type (String, optional): <p>Should not be set. Value is assumed to be currency.</p> </li>\n<li>currency (String, optional): <p>an <a href=\"http://en.wikipedia.org/wiki/ISO_4217\">ISO4217</a> currency code, a three letter sequence like \"USD\". For use with dojo.currency only.</p> </li>\n<li>symbol (String, optional): <p>localized currency symbol. The default will be looked up in table of supported currencies in <code>dojo.cldr</code> A <a href=\"http://en.wikipedia.org/wiki/ISO_4217\">ISO4217</a> currency code will be used if not found.</p> </li>\n<li>places (Number, optional): <p>fixed number of decimal places to accept. The default is determined based on which currency is used.</p> </li>\n<li>fractional (Boolean|Array, optional): <p>Whether to include the fractional portion, where the number of decimal places are implied by the currency or explicit 'places' parameter. The value [true,false] makes the fractional portion optional. By default for currencies, it the fractional portion is optional.</p> </li>\n<li>pattern (String, optional): <p>override <a href=\"http://www.unicode.org/reports/tr35/#Number_Format_Patterns\">formatting pattern</a> with this string. Default value is based on locale. Overriding this property will defeat localization. Literal characters in patterns are not supported.</p> </li>\n<li>locale (String, optional): <p>override the locale used to determine formatting rules</p> </li>\n<li>strict (Boolean, optional): <p>strict parsing, false by default. Strict parsing requires input as produced by the format() method. Non-strict is more permissive, e.g. flexible on white space, omitting thousands separators</p> </li>\n</ul> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_currency_regexp\">\n<span class=\"functionIcon\">regexp</span><span class=\"parameters\">(options)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"currency\" class=\"jsdoc-link\">dojo/currency</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">options</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>An object with the following properties:</p>\n<ul>\n<li>pattern (String, optional): <p>override <a href=\"http://www.unicode.org/reports/tr35/#Number_Format_Patterns\">formatting pattern</a> with this string. Default value is based on locale. Overriding this property will defeat localization.</p> </li>\n<li>type (String, optional): <p>choose a format type based on the locale from the following: decimal, scientific (not yet supported), percent, currency. decimal by default.</p> </li>\n<li>locale (String, optional): <p>override the locale used to determine formatting rules</p> </li>\n<li>strict (Boolean, optional): <p>strict parsing, false by default. Strict parsing requires input as produced by the format() method. Non-strict is more permissive, e.g. flexible on white space, omitting thousands separators</p> </li>\n<li>places (Number|String, optional): <p>number of decimal places to accept: Infinity, a positive number, or a range \"n,m\". Defined by pattern or Infinity if pattern not provided.</p> </li>\n</ul> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/main.currency.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/main.currency.html</a>\n  </p>\n</div>\n","dojo/main.data":"<h1>dojo/main.data</h1>             <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_data_api\">\n<span class=\"objectIcon\">api</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"data/api/read\" class=\"jsdoc-link\">dojo/data/api/Read</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_data_util\">\n<span class=\"objectIcon\">util</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"data/util/filter\" class=\"jsdoc-link\">dojo/data/util/filter</a> </p>    <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_data_ItemFileReadStore\">\n<span class=\"functionIcon\">ItemFileReadStore</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"data/itemfilereadstore\" class=\"jsdoc-link\">dojo/data/ItemFileReadStore</a> </p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_data_ItemFileWriteStore\">\n<span class=\"functionIcon\">ItemFileWriteStore</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"data/itemfilewritestore\" class=\"jsdoc-link\">dojo/data/ItemFileWriteStore</a> </p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_data_ObjectStore\">\n<span class=\"functionIcon\">ObjectStore</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"data/objectstore\" class=\"jsdoc-link\">dojo/data/ObjectStore</a> </p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/main.data.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/main.data.html</a>\n  </p>\n</div>\n","dojo/main.config":"<h1>dojo/main.config</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>This module defines the user configuration during bootstrap.</p>  <p>By defining user configuration as a module value, an entire configuration can be specified in a build, thereby eliminating the need for sniffing and or explicitly setting in the global variable dojoConfig. Also, when multiple instances of dojo exist in a single application, each will necessarily be located at an unique absolute module identifier as given by the package configuration. Implementing configuration as a module allows for specifying unique, per-instance configurations.</p>     <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Create a second instance of dojo with a different, instance-unique configuration (assume the loader and dojo.js are already loaded). </p> <pre><code>// specify a configuration that creates a new instance of dojo at the absolute module identifier \"myDojo\"\nrequire({\n    packages:[{\n        name:\"myDojo\",\n        location:\".\", //assume baseUrl points to dojo.js\n    }]\n});\n\n// specify a configuration for the myDojo instance\ndefine(\"myDojo/config\", {\n    // normal configuration variables go here, e.g.,\n    locale:\"fr-ca\"\n});\n\n// load and use the new instance of dojo\nrequire([\"myDojo\"], function(dojo){\n    // dojo is the new instance of dojo\n    // use as required\n});</code></pre> </div> </div>       <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_config_addOnLoad\">\n<span class=\"functionIcon\">addOnLoad</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/config\" class=\"jsdoc-link\">dojo/_base/config</a> </p> <div class=\"jsdoc-summary\">\n<p>Adds a callback via <a class=\"jsdoc-link\" href=\"ready\">dojo/ready</a>. Useful when Dojo is added after the page loads and djConfig.afterOnLoad is true. Supports the same arguments as <a class=\"jsdoc-link\" href=\"ready\">dojo/ready</a>. When using a function reference, use <code>djConfig.addOnLoad = function(){};</code>. For object with function name use <code>djConfig.addOnLoad = [myObject, \"functionName\"];</code> and for object with function reference use <code>djConfig.addOnLoad = [myObject, function(){}];</code></p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_config_afterOnLoad\">\n<span class=\"booleanIcon\">afterOnLoad</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"ready\" class=\"jsdoc-link\">dojo/ready</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_config_baseUrl\">\n<span class=\"objectIcon\">baseUrl</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/kernel\" class=\"jsdoc-link\">dojo/_base/kernel</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_config_callback\">\n<span class=\"functionIcon\">callback</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/config\" class=\"jsdoc-link\">dojo/_base/config</a> </p> <div class=\"jsdoc-summary\">\n<p>Defines a callback to be used when dependencies are defined before the loader has been loaded. When provided, they cause the loader to execute require(deps, callback) once it has finished loading. Should be used with deps.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_config_debugContainerId\">\n<span class=\"stringIcon\">debugContainerId</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_firebug/firebug\" class=\"jsdoc-link\">dojo/_firebug/firebug</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_config_debugHeight\">\n<span class=\"numberIcon\">debugHeight</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"robotx\" class=\"jsdoc-link\">dojo/robotx</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_config_defaultDuration\">\n<span class=\"numberIcon\">defaultDuration</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/config\" class=\"jsdoc-link\">dojo/_base/config</a> </p> <div class=\"jsdoc-summary\">\n<p>Default duration, in milliseconds, for wipe and fade animations within dijits. Assigned to dijit.defaultDuration.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_config_deferredInstrumentation\">\n<span class=\"booleanIcon\">deferredInstrumentation</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/config\" class=\"jsdoc-link\">dojo/_base/config</a> </p> <div class=\"jsdoc-summary\">\n<p>Whether deferred instrumentation should be loaded or included in builds.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_config_deps\">\n<span class=\"functionIcon\">deps</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/config\" class=\"jsdoc-link\">dojo/_base/config</a> </p> <div class=\"jsdoc-summary\">\n<p>Defines dependencies to be used before the loader has been loaded. When provided, they cause the loader to execute require(deps, callback) once it has finished loading. Should be used with callback.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_config_dojoBlankHtmlUrl\">\n<span class=\"stringIcon\">dojoBlankHtmlUrl</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/config\" class=\"jsdoc-link\">dojo/_base/config</a> </p> <div class=\"jsdoc-summary\">\n<p>Used by some modules to configure an empty iframe. Used by <a class=\"jsdoc-link\" href=\"io/iframe\">dojo/io/iframe</a> and <a class=\"jsdoc-link\" href=\"back\">dojo/back</a>, and <a class=\"jsdoc-link\" href=\"http://dojotoolkit.org/api/1.10/dijit/popup\">dijit/popup</a> support in IE where an iframe is needed to make sure native controls do not bleed through the popups. Normally this configuration variable does not need to be set, except when using cross-domain/CDN Dojo builds. Save dojo/resources/blank.html to your domain and set <code>djConfig.dojoBlankHtmlUrl</code> to the path on your domain your copy of blank.html.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_config_extraLocale\">\n<span class=\"arrayIcon\">extraLocale</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/config\" class=\"jsdoc-link\">dojo/_base/config</a> </p> <div class=\"jsdoc-summary\">\n<p>No default value. Specifies additional locales whose resources should also be loaded alongside the default locale when calls to <code>dojo.requireLocalization()</code> are processed.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_config_ioPublish\">\n<span class=\"objectIcon\">ioPublish</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/config\" class=\"jsdoc-link\">dojo/_base/config</a> </p> <div class=\"jsdoc-summary\">\n<p>Set this to true to enable publishing of topics for the different phases of IO operations. Publishing is done via <a class=\"jsdoc-link\" href=\"topic#publish\">dojo/topic.publish()</a>. See <a class=\"jsdoc-link\" href=\"main.__iopublish\">dojo/main.__IoPublish</a> for a list of topics that are published.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_config_isDebug\">\n<span class=\"booleanIcon\">isDebug</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/config\" class=\"jsdoc-link\">dojo/_base/config</a> </p> <div class=\"jsdoc-summary\">\n<p>Defaults to <code>false</code>. If set to <code>true</code>, ensures that Dojo provides extended debugging feedback via Firebug. If Firebug is not available on your platform, setting <code>isDebug</code> to <code>true</code> will force Dojo to pull in (and display) the version of Firebug Lite which is integrated into the Dojo distribution, thereby always providing a debugging/logging console when <code>isDebug</code> is enabled. Note that Firebug's <code>console.*</code> methods are ALWAYS defined by Dojo. If <code>isDebug</code> is false and you are on a platform without Firebug, these methods will be defined as no-ops.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_config_locale\">\n<span class=\"stringIcon\">locale</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/config\" class=\"jsdoc-link\">dojo/_base/config</a> </p> <div class=\"jsdoc-summary\">\n<p>The locale to assume for loading localized resources in this page, specified according to <a href=\"http://www.ietf.org/rfc/rfc3066.txt\">RFC 3066</a>. Must be specified entirely in lowercase, e.g. <code>en-us</code> and <code>zh-cn</code>. See the documentation for <code>dojo.i18n</code> and <code>dojo.requireLocalization</code> for details on loading localized resources. If no locale is specified, Dojo assumes the locale of the user agent, according to <code>navigator.userLanguage</code> or <code>navigator.language</code> properties.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_config_modulePaths\">\n<span class=\"objectIcon\">modulePaths</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/config\" class=\"jsdoc-link\">dojo/_base/config</a> </p> <div class=\"jsdoc-summary\">\n<p>A map of module names to paths relative to <code>dojo.baseUrl</code>. The key/value pairs correspond directly to the arguments which <code>dojo.registerModulePath</code> accepts. Specifying <code>djConfig.modulePaths = { \"foo\": \"../../bar\" }</code> is the equivalent of calling <code>dojo.registerModulePath(\"foo\", \"../../bar\");</code>. Multiple modules may be configured via <code>djConfig.modulePaths</code>.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_config_parseOnLoad\">\n<span class=\"booleanIcon\">parseOnLoad</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/config\" class=\"jsdoc-link\">dojo/_base/config</a> </p> <div class=\"jsdoc-summary\">\n<p>Run the parser after the page is loaded</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_config_require\">\n<span class=\"objectIcon\">require</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/config\" class=\"jsdoc-link\">dojo/_base/config</a> </p> <div class=\"jsdoc-summary\">\n<p>An array of module names to be loaded immediately after dojo.js has been included in a page.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_config_transparentColor\">\n<span class=\"arrayIcon\">transparentColor</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/config\" class=\"jsdoc-link\">dojo/_base/config</a> </p> <div class=\"jsdoc-summary\">\n<p>Array containing the r, g, b components used as transparent color in dojo.Color; if undefined, [255,255,255] (white) will be used.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_config_urchin\">\n<span class=\"stringIcon\">urchin</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"http://dojotoolkit.org/api/1.10/dojox/analytics/Urchin\" class=\"jsdoc-link\">dojox/analytics/Urchin</a> </p> <div class=\"jsdoc-summary\">\n<p>Used by <code>dojox.analytics.Urchin</code> as the default UA-123456-7 account number used when being created. Alternately, you can pass an acct:\"\" parameter to the constructor a la: new dojox.analytics.Urchin({ acct:\"UA-123456-7\" });</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_config_useCustomLogger\">\n<span class=\"objectIcon\">useCustomLogger</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/config\" class=\"jsdoc-link\">dojo/_base/config</a> </p> <div class=\"jsdoc-summary\">\n<p>If set to a value that evaluates to true such as a string or array and isDebug is true and Firebug is not available or running, then it bypasses the creation of Firebug Lite allowing you to define your own console object.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_config_useDeferredInstrumentation\">\n<span class=\"booleanIcon\">useDeferredInstrumentation</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/config\" class=\"jsdoc-link\">dojo/_base/config</a> </p> <div class=\"jsdoc-summary\">\n<p>Whether the deferred instrumentation should be used. </p> <ul> <li>\n<code>\"report-rejections\"</code>: report each rejection as it occurs.</li> <li>\n<code>true</code> or <code>1</code> or <code>\"report-unhandled-rejections\"</code>: wait 1 second in an attempt to detect unhandled rejections.</li> </ul> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/main.config.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/main.config.html</a>\n  </p>\n</div>\n","dojo/main.date":"<h1>dojo/main.date</h1>             <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_date_stamp\">\n<span class=\"objectIcon\">stamp</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"date/stamp\" class=\"jsdoc-link\">dojo/date/stamp</a> </p> <div class=\"jsdoc-summary\">\n<p>TODOC</p> </div>    <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_date_add\">\n<span class=\"functionIcon\">add</span><span class=\"parameters\">(date,interval,amount)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"date\" class=\"jsdoc-link\">dojo/date</a> </p> <p>Add to a Date in intervals of different size, from milliseconds to years</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">date</td> <td class=\"jsdoc-param-type\">Date</td> <td class=\"jsdoc-param-description\">\n<p>Date object to start with</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">interval</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>A string representing the interval. One of the following: \"year\", \"month\", \"day\", \"hour\", \"minute\", \"second\", \"millisecond\", \"quarter\", \"week\", \"weekday\"</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">amount</td> <td class=\"jsdoc-param-type\">int</td> <td class=\"jsdoc-param-description\">\n<p>How much to add to the date.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">instance</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_date_compare\">\n<span class=\"functionIcon\">compare</span><span class=\"parameters\">(date1,date2,portion)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"date\" class=\"jsdoc-link\">dojo/date</a> </p> <p>Compare two date objects by date, time, or both.</p>  <p>Returns 0 if equal, positive if a &gt; b, else negative.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">date1</td> <td class=\"jsdoc-param-type\">Date</td> <td class=\"jsdoc-param-description\">\n<p>Date object</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">date2</td> <td class=\"jsdoc-param-type\">Date</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Date object. If not specified, the current Date is used.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">portion</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>A string indicating the \"date\" or \"time\" portion of a Date object. Compares both \"date\" and \"time\" by default. One of the following: \"date\", \"time\", \"datetime\"</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">number</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_date_difference\">\n<span class=\"functionIcon\">difference</span><span class=\"parameters\">(date1,date2,interval)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"date\" class=\"jsdoc-link\">dojo/date</a> </p> <p>Get the difference in a specific unit of time (e.g., number of months, weeks, days, etc.) between two dates, rounded to the nearest integer.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">date1</td> <td class=\"jsdoc-param-type\">Date</td> <td class=\"jsdoc-param-description\">\n<p>Date object</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">date2</td> <td class=\"jsdoc-param-type\">Date</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Date object. If not specified, the current Date is used.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">interval</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>A string representing the interval. One of the following: \"year\", \"month\", \"day\", \"hour\", \"minute\", \"second\", \"millisecond\", \"quarter\", \"week\", \"weekday\" </p> <p>Defaults to \"day\".</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_date_getDaysInMonth\">\n<span class=\"functionIcon\">getDaysInMonth</span><span class=\"parameters\">(dateObject)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"date\" class=\"jsdoc-link\">dojo/date</a> </p> <p>Returns the number of days in the month used by dateObject</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">dateObject</td> <td class=\"jsdoc-param-type\">Date</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">number | undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_date_getTimezoneName\">\n<span class=\"functionIcon\">getTimezoneName</span><span class=\"parameters\">(dateObject)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"date\" class=\"jsdoc-link\">dojo/date</a> </p> <p>Get the user's time zone as provided by the browser</p>  <p>Try to get time zone info from toString or toLocaleString method of the Date object -- UTC offset is not a time zone. See <a href=\"http://www.twinsun.com/tz/tz-link.htm\">http://www.twinsun.com/tz/tz-link.htm</a> Note: results may be inconsistent across browsers.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">dateObject</td> <td class=\"jsdoc-param-type\">Date</td> <td class=\"jsdoc-param-description\">\n<p>Needed because the timezone may vary with time (daylight savings)</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_date_isLeapYear\">\n<span class=\"functionIcon\">isLeapYear</span><span class=\"parameters\">(dateObject)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"date\" class=\"jsdoc-link\">dojo/date</a> </p> <p>Determines if the year of the dateObject is a leap year</p>  <p>Leap years are years with an additional day YYYY-02-29, where the year number is a multiple of four with the following exception: If a year is a multiple of 100, then it is only a leap year if it is also a multiple of 400. For example, 1900 was not a leap year, but 2000 is one.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">dateObject</td> <td class=\"jsdoc-param-type\">Date</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">boolean</span></p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/main.date.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/main.date.html</a>\n  </p>\n</div>\n","dojo/main.dnd":"<h1>dojo/main.dnd</h1>             <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_dnd_autoscroll\">\n<span class=\"objectIcon\">autoscroll</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"dnd/autoscroll\" class=\"jsdoc-link\">dojo/dnd/autoscroll</a> </p> <div class=\"jsdoc-summary\">\n<p>Used by <a class=\"jsdoc-link\" href=\"dnd/manager\">dojo/dnd/Manager</a> to scroll document or internal node when the user drags near the edge of the viewport or a scrollable node</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_dnd_move\">\n<span class=\"objectIcon\">move</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"dnd/move\" class=\"jsdoc-link\">dojo/dnd/move</a> </p>    <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_dnd_AutoSource\">\n<span class=\"functionIcon\">AutoSource</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dnd/autosource\" class=\"jsdoc-link\">dojo/dnd/AutoSource</a> </p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_dnd_Avatar\">\n<span class=\"functionIcon\">Avatar</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dnd/avatar\" class=\"jsdoc-link\">dojo/dnd/Avatar</a> </p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_dnd_Container\">\n<span class=\"functionIcon\">Container</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dnd/container\" class=\"jsdoc-link\">dojo/dnd/Container</a> </p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_dnd_Manager\">\n<span class=\"functionIcon\">Manager</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dnd/manager\" class=\"jsdoc-link\">dojo/dnd/Manager</a> </p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_dnd_Moveable\">\n<span class=\"functionIcon\">Moveable</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dnd/moveable\" class=\"jsdoc-link\">dojo/dnd/Moveable</a> </p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_dnd_Mover\">\n<span class=\"functionIcon\">Mover</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dnd/mover\" class=\"jsdoc-link\">dojo/dnd/Mover</a> </p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_dnd_Selector\">\n<span class=\"functionIcon\">Selector</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dnd/selector\" class=\"jsdoc-link\">dojo/dnd/Selector</a> </p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_dnd_Source\">\n<span class=\"functionIcon\">Source</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dnd/source\" class=\"jsdoc-link\">dojo/dnd/Source</a> </p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_dnd_Target\">\n<span class=\"functionIcon\">Target</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dnd/target\" class=\"jsdoc-link\">dojo/dnd/Target</a> </p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_dnd_TimedMoveable\">\n<span class=\"functionIcon\">TimedMoveable</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dnd/timedmoveable\" class=\"jsdoc-link\">dojo/dnd/TimedMoveable</a> </p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/main.dnd.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/main.dnd.html</a>\n  </p>\n</div>\n","dojo/main.doc":"<h1>dojo/main.doc</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>Alias for the current document. 'doc' can be modified for temporary context shifting. See also withDoc().</p>  <p>Use this rather than referring to 'window.document' to ensure your code runs correctly in managed contexts.</p>     <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>n.appendChild(dojo.doc.createElement('div'));</code></pre> </div> </div>       <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_doc_documentElement\">\n<span class=\"objectIcon\">documentElement</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"http://dojotoolkit.org/api/1.10/dojox/gfx/_base\" class=\"jsdoc-link\">dojox/gfx/_base</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_doc_dojoClick\">\n<span class=\"booleanIcon\">dojoClick</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"http://dojotoolkit.org/api/1.10/dojox/mobile/common\" class=\"jsdoc-link\">dojox/mobile/common</a> </p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/main.doc.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/main.doc.html</a>\n  </p>\n</div>\n","dojo/main.fx":"<h1>dojo/main.fx</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>Effects library on top of Base animations</p>             <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_fx_easing\">\n<span class=\"objectIcon\">easing</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"fx/easing\" class=\"jsdoc-link\">dojo/fx/easing</a> </p> <div class=\"jsdoc-summary\">\n<p>Collection of easing functions to use beyond the default <code>dojo._defaultEasing</code> function.</p> </div>    <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_fx_chain\">\n<span class=\"functionIcon\">chain</span><span class=\"parameters\">(animations)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"fx\" class=\"jsdoc-link\">dojo/fx</a> </p> <p>Chain a list of <code>dojo/_base/fx.Animation</code>s to run in sequence </p>  <p>Return a <a class=\"jsdoc-link\" href=\"_base/fx#Animation\">dojo/_base/fx.Animation</a> which will play all passed <a class=\"jsdoc-link\" href=\"_base/fx#Animation\">dojo/_base/fx.Animation</a> instances in sequence, firing its own synthesized events simulating a single animation. (eg: onEnd of this animation means the end of the chain, not the individual animations within) </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">animations</td> <td class=\"jsdoc-param-type\">\n<a class=\"jsdoc-link\" href=\"_base/fx#Animation\">dojo/_base/fx.Animation</a>[]</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">instance</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Once <code>node</code> is faded out, fade in <code>otherNode</code> </p> <pre><code>require([\"dojo/fx\"], function(fx){\n    fx.chain([\n        fx.fadeIn({ node:node }),\n        fx.fadeOut({ node:otherNode })\n    ]).play();\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_fx_combine\">\n<span class=\"functionIcon\">combine</span><span class=\"parameters\">(animations)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"fx\" class=\"jsdoc-link\">dojo/fx</a> </p> <p>Combine a list of <code>dojo/_base/fx.Animation</code>s to run in parallel </p>  <p>Combine an array of <a class=\"jsdoc-link\" href=\"_base/fx#Animation\">dojo/_base/fx.Animation</a>s to run in parallel, providing a new <a class=\"jsdoc-link\" href=\"_base/fx#Animation\">dojo/_base/fx.Animation</a> instance encompasing each animation, firing standard animation events. </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">animations</td> <td class=\"jsdoc-param-type\">\n<a class=\"jsdoc-link\" href=\"_base/fx#Animation\">dojo/_base/fx.Animation</a>[]</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">instance</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Fade out <code>node</code> while fading in <code>otherNode</code> simultaneously </p> <pre><code>require([\"dojo/fx\"], function(fx){\n    fx.combine([\n        fx.fadeIn({ node:node }),\n        fx.fadeOut({ node:otherNode })\n    ]).play();\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>When the longest animation ends, execute a function: </p> <pre><code>require([\"dojo/fx\"], function(fx){\n    var anim = fx.combine([\n        fx.fadeIn({ node: n, duration:700 }),\n        fx.fadeOut({ node: otherNode, duration: 300 })\n    ]);\n    aspect.after(anim, \"onEnd\", function(){\n        // overall animation is done.\n    }, true);\n    anim.play(); // play the animation\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_fx_slideTo\">\n<span class=\"functionIcon\">slideTo</span><span class=\"parameters\">(args)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"fx\" class=\"jsdoc-link\">dojo/fx</a> </p> <p>Slide a node to a new top/left position </p>  <p>Returns an animation that will slide \"node\" defined in args Object from its current position to the position defined by (args.left, args.top). </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">args</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>A hash-map of standard <code>dojo/_base/fx.Animation</code> constructor properties (such as easing: node: duration: and so on). Special args members are <code>top</code> and <code>left</code>, which indicate the new position to slide to. </p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>.slideTo({ node: node, left:\"40\", top:\"50\", units:\"px\" }).play()</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_fx_Toggler\">\n<span class=\"functionIcon\">Toggler</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"fx/toggler\" class=\"jsdoc-link\">dojo/fx/Toggler</a> </p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_fx_wipeIn\">\n<span class=\"functionIcon\">wipeIn</span><span class=\"parameters\">(args)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"fx\" class=\"jsdoc-link\">dojo/fx</a> </p> <p>Expand a node to it's natural height. </p>  <p>Returns an animation that will expand the node defined in 'args' object from it's current height to it's natural height (with no scrollbar). Node must have no margin/border/padding. </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">args</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>A hash-map of standard <code>dojo/_base/fx.Animation</code> constructor properties (such as easing: node: duration: and so on) </p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>require([\"dojo/fx\"], function(fx){\n    fx.wipeIn({\n        node:\"someId\"\n    }).play()\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_fx_wipeOut\">\n<span class=\"functionIcon\">wipeOut</span><span class=\"parameters\">(args)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"fx\" class=\"jsdoc-link\">dojo/fx</a> </p> <p>Shrink a node to nothing and hide it. </p>  <p>Returns an animation that will shrink node defined in \"args\" from it's current height to 1px, and then hide it. </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">args</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>A hash-map of standard <code>dojo/_base/fx.Animation</code> constructor properties (such as easing: node: duration: and so on) </p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>require([\"dojo/fx\"], function(fx){\n    fx.wipeOut({ node:\"someId\" }).play()\n});</code></pre> </div> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/main.fx.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/main.fx.html</a>\n  </p>\n</div>\n","dojo/main.gears":"<h1>dojo/main.gears</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>TODOC</p>             <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_gears_available\">\n<span class=\"objectIcon\">available</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"gears\" class=\"jsdoc-link\">dojo/gears</a> </p> <div class=\"jsdoc-summary\">\n<p>True if client is using Google Gears</p> </div>    <h2 id=\"methods\">Methods</h2><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/main.gears.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/main.gears.html</a>\n  </p>\n</div>\n","dojo/main.global":"<h1>dojo/main.global</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>Alias for the current window. 'global' can be modified for temporary context shifting. See also withGlobal().</p>  <p>Use this rather than referring to 'window' to ensure your code runs correctly in managed contexts.</p>           <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_global_$\">\n<span class=\"functionIcon\">$</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"http://dojotoolkit.org/api/1.10/dojox/jq\" class=\"jsdoc-link\">dojox/jq</a> </p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_global_GoogleSearchStoreCallback_undefined_NaN\">\n<span class=\"functionIcon\">GoogleSearchStoreCallback_undefined_NaN</span><span class=\"parameters\">(start,data,responseCode,errorMsg)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"http://dojotoolkit.org/api/1.10/dojox/data/GoogleSearchStore\" class=\"jsdoc-link\">dojox/data/GoogleSearchStore</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">start</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">data</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">responseCode</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">errorMsg</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_global_jQuery\">\n<span class=\"functionIcon\">jQuery</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"http://dojotoolkit.org/api/1.10/dojox/jq\" class=\"jsdoc-link\">dojox/jq</a> </p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_global_swfIsInHTML\">\n<span class=\"functionIcon\">swfIsInHTML</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"http://dojotoolkit.org/api/1.10/dojox/av/FLVideo\" class=\"jsdoc-link\">dojox/av/FLVideo</a> </p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_global_undefined_onload\">\n<span class=\"functionIcon\">undefined_onload</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"request/iframe\" class=\"jsdoc-link\">dojo/request/iframe</a> </p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/main.global.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/main.global.html</a>\n  </p>\n</div>\n","dojo/main.html":"<h1>dojo/main.html</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>TODOC</p>           <h2 id=\"methods\">Methods</h2>        <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_html_set\">\n<span class=\"functionIcon\">set</span><span class=\"parameters\">(node,cont,params)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"html\" class=\"jsdoc-link\">dojo/html</a> </p> <p>inserts (replaces) the given content into the given node. dojo/dom-construct.place(cont, node, \"only\") may be a better choice for simple HTML insertion.</p>  <p>Unless you need to use the params capabilities of this method, you should use <a class=\"jsdoc-link\" href=\"dom-construct#place\">dojo/dom-construct.place(cont, node, \"only\")</a>. <a class=\"jsdoc-link\" href=\"dom-construct\">dojo/dom-construct</a>..place() has more robust support for injecting an HTML string into the DOM, but it only handles inserting an HTML string as DOM elements, or inserting a DOM node. <a class=\"jsdoc-link\" href=\"dom-construct\">dojo/dom-construct</a>..place does not handle NodeList insertions <a class=\"jsdoc-link\" href=\"dom-construct#place\">dojo/dom-construct.place(cont, node, \"only\")</a>. <a class=\"jsdoc-link\" href=\"dom-construct#place\">dojo/dom-construct.place()</a> has more robust support for injecting an HTML string into the DOM, but it only handles inserting an HTML string as DOM elements, or inserting a DOM node. <a class=\"jsdoc-link\" href=\"dom-construct#place\">dojo/dom-construct.place</a> does not handle NodeList insertions or the other capabilities as defined by the params object for this method.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DomNode</td> <td class=\"jsdoc-param-description\">\n<p>the parent element that will receive the content</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">cont</td> <td class=\"jsdoc-param-type\">String | DomNode | NodeList</td> <td class=\"jsdoc-param-description\">\n<p>the content to be set on the parent element. This can be an html string, a node reference or a NodeList, dojo/NodeList, Array or other enumerable list of nodes</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">params</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Optional flags/properties to configure the content-setting. See dojo/html/_ContentSetter</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>A safe string/node/nodelist content replacement/injection with hooks for extension Example Usage: </p> <pre><code>html.set(node, \"some string\");\nhtml.set(node, contentNode, {options});\nhtml.set(node, myNode.childNodes, {options});</code></pre> </div> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/main.html.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/main.html.html</a>\n  </p>\n</div>\n","dojo/main.i18n":"<h1>dojo/main.i18n</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>This module implements the <a class=\"jsdoc-link\" href=\"i18n\">dojo/i18n</a>! plugin and the v1.6- i18n API</p>  <p>We choose to include our own plugin to leverage functionality already contained in dojo and thereby reduce the size of the plugin compared to various loader implementations. Also, this allows foreign AMD loaders to be used without their plugins.</p>             <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_i18n_cache\">\n<span class=\"objectIcon\">cache</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"i18n\" class=\"jsdoc-link\">dojo/i18n</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_i18n_dynamic\">\n<span class=\"booleanIcon\">dynamic</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"i18n\" class=\"jsdoc-link\">dojo/i18n</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_i18n_unitTests\">\n<span class=\"arrayIcon\">unitTests</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"i18n\" class=\"jsdoc-link\">dojo/i18n</a> </p>    <h2 id=\"methods\">Methods</h2>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_i18n_getL10nName\">\n<span class=\"functionIcon\">getL10nName</span><span class=\"parameters\">(moduleName,bundleName,locale)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"i18n\" class=\"jsdoc-link\">dojo/i18n</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">moduleName</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">bundleName</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">locale</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">string</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_i18n_getLocalization\">\n<span class=\"functionIcon\">getLocalization</span><span class=\"parameters\">(moduleName,bundleName,locale)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"i18n\" class=\"jsdoc-link\">dojo/i18n</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">moduleName</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">bundleName</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">locale</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_i18n_load\">\n<span class=\"functionIcon\">load</span><span class=\"parameters\">(id,require,load)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"i18n\" class=\"jsdoc-link\">dojo/i18n</a> </p> <p>id is in one of the following formats </p> <ol> <li>\n<p><path>/nls/<bundle> =&gt; load the bundle, localized to config.locale; load all bundles localized to config.extraLocale (if any); return the loaded bundle localized to config.locale.</bundle></path></p> </li> <li>\n<p><path>/nls/<locale>/<bundle> =&gt; load then return the bundle localized to </bundle></locale></path></p> </li> <li>\n<p><em>preload</em><path>/nls/<module>*<json array of available locales> =&gt; for config.locale and all config.extraLocale, load all bundles found in the best-matching bundle rollup. A value of 1 is returned, which is meaningless other than to say the plugin is executing the requested preloads</json></module></path></p> </li> </ol> <p>In cases 1 and 2, <path> is always normalized to an absolute module id upon entry; see normalize. In case 3, it <path> is assumed to be absolute; this is arranged by the builder. </path></path></p> <p>To load a bundle means to insert the bundle into the plugin's cache and publish the bundle value to the loader. Given <path>, <bundle>, and a particular <locale>, the cache key </locale></bundle></path></p> <pre><code>&lt;path&gt;/nls/&lt;bundle&gt;/&lt;locale&gt;</code></pre> <p>will hold the value. Similarly, then plugin will publish this value to the loader by </p> <pre><code>define(\"&lt;path&gt;/nls/&lt;bundle&gt;/&lt;locale&gt;\", &lt;bundle-value&gt;);</code></pre> <p>Given this algorithm, other machinery can provide fast load paths be preplacing values in the plugin's cache, which is public. When a load is demanded the cache is inspected before starting any loading. Explicitly placing values in the plugin cache is an advanced/experimental feature that should not be needed; use at your own risk. </p> <p>For the normal AMD algorithm, the root bundle is loaded first, which instructs the plugin what additional localized bundles are required for a particular locale. These additional locales are loaded and a mix of the root and each progressively-specific locale is returned. For example: </p> <ol> <li>\n<p>The client demands \"dojo/i18n!some/path/nls/someBundle</p> </li> <li>\n<p>The loader demands load(some/path/nls/someBundle)</p> </li> <li>\n<p>This plugin require's \"some/path/nls/someBundle\", which is the root bundle.</p> </li> <li>\n<p>Assuming config.locale is \"ab-cd-ef\" and the root bundle indicates that localizations are available for \"ab\" and \"ab-cd-ef\" (note the missing \"ab-cd\", then the plugin requires \"some/path/nls/ab/someBundle\" and \"some/path/nls/ab-cd-ef/someBundle\"</p> </li> <li>\n<p>Upon receiving all required bundles, the plugin constructs the value of the bundle ab-cd-ef as...</p> <pre><code> mixin(mixin(mixin({}, require(\"some/path/nls/someBundle\"),\n     require(\"some/path/nls/ab/someBundle\")),\n     require(\"some/path/nls/ab-cd-ef/someBundle\"));</code></pre> </li> </ol> <p>This value is inserted into the cache and published to the loader at the key/module-id some/path/nls/someBundle/ab-cd-ef. </p> <p>The special preload signature (case 3) instructs the plugin to stop servicing all normal requests (further preload requests will be serviced) until all ongoing preloading has completed. </p> <p>The preload signature instructs the plugin that a special rollup module is available that contains one or more flattened, localized bundles. The JSON array of available locales indicates which locales are available. Here is an example: </p> <pre><code>*preload*some/path/nls/someModule*[\"root\", \"ab\", \"ab-cd-ef\"]</code></pre> <p>This indicates the following rollup modules are available: </p> <pre><code>some/path/nls/someModule_ROOT\nsome/path/nls/someModule_ab\nsome/path/nls/someModule_ab-cd-ef</code></pre> <p>Each of these modules is a normal AMD module that contains one or more flattened bundles in a hash. For example, assume someModule contained the bundles some/bundle/path/someBundle and some/bundle/path/someOtherBundle, then some/path/nls/someModule_ab would be expressed as follows: </p> <pre><code>define({\n    some/bundle/path/someBundle:&lt;value of someBundle, flattened with respect to locale ab&gt;,\n    some/bundle/path/someOtherBundle:&lt;value of someOtherBundle, flattened with respect to locale ab&gt;,\n});</code></pre> <p>E.g., given this design, preloading for locale==\"ab\" can execute the following algorithm: </p> <pre><code>require([\"some/path/nls/someModule_ab\"], function(rollup){\n    for(var p in rollup){\n        var id = p + \"/ab\",\n        cache[id] = rollup[p];\n        define(id, rollup[p]);\n    }\n});</code></pre> <p>Similarly, if \"ab-cd\" is requested, the algorithm can determine that \"ab\" is the best available and load accordingly. </p> <p>The builder will write such rollups for every layer if a non-empty localeList profile property is provided. Further, the builder will include the following cache entry in the cache associated with any layer. </p> <pre><code>\"*now\":function(r){r(['dojo/i18n!*preload*&lt;path&gt;/nls/&lt;module&gt;*&lt;JSON array of available locales&gt;']);}</code></pre> <p>The *now special cache module instructs the loader to apply the provided function to context-require with respect to the particular layer being defined. This causes the plugin to hold all normal service requests until all preloading is complete. </p> <p>Notice that this algorithm is rarely better than the standard AMD load algorithm. Consider the normal case where the target locale has a single segment and a layer depends on a single bundle: </p> <p>Without Preloads: </p> <ol> <li>Layer loads root bundle.</li> <li>bundle is demanded; plugin loads single localized bundle.</li> </ol> <p>With Preloads: </p> <ol> <li>Layer causes preloading of target bundle.</li> <li>bundle is demanded; service is delayed until preloading complete; bundle is returned.</li> </ol> <p>In each case a single transaction is required to load the target bundle. In cases where multiple bundles are required and/or the locale has multiple segments, preloads still requires a single transaction whereas the normal path requires an additional transaction for each additional bundle/locale-segment. However all of these additional transactions can be done concurrently. Owing to this analysis, the entire preloading algorithm can be discard during a build by setting the has feature dojo-preload-i18n-Api to false.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">id</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">require</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">load</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_i18n_normalize\">\n<span class=\"functionIcon\">normalize</span><span class=\"parameters\">(id,toAbsMid)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"i18n\" class=\"jsdoc-link\">dojo/i18n</a> </p> <p>id may be relative. preload has form <code>*preload*&lt;path&gt;/nls/&lt;module&gt;*&lt;flattened locales&gt;</code> and therefore never looks like a relative</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">id</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">toAbsMid</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_i18n_normalizeLocale\">\n<span class=\"functionIcon\">normalizeLocale</span><span class=\"parameters\">(locale)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"i18n\" class=\"jsdoc-link\">dojo/i18n</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">locale</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/main.i18n.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/main.i18n.html</a>\n  </p>\n</div>\n","dojo/main.io":"<h1>dojo/main.io</h1>           <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_io_iframe\">\n<span class=\"objectIcon\">iframe</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"io/iframe\" class=\"jsdoc-link\">dojo/io/iframe</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_io_script\">\n<span class=\"objectIcon\">script</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"io/script\" class=\"jsdoc-link\">dojo/io/script</a> </p> <div class=\"jsdoc-summary\">\n<p>TODOC</p> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/main.io.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/main.io.html</a>\n  </p>\n</div>\n","dojo/main.mousebuttons":"<h1>dojo/main.mouseButtons</h1>             <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_mouseButtons_LEFT\">\n<span class=\"numberIcon\">LEFT</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"mouse\" class=\"jsdoc-link\">dojo/mouse</a> </p> <div class=\"jsdoc-summary\">\n<p>Numeric value of the left mouse button for the platform.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_mouseButtons_MIDDLE\">\n<span class=\"numberIcon\">MIDDLE</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"mouse\" class=\"jsdoc-link\">dojo/mouse</a> </p> <div class=\"jsdoc-summary\">\n<p>Numeric value of the middle mouse button for the platform.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_mouseButtons_RIGHT\">\n<span class=\"numberIcon\">RIGHT</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"mouse\" class=\"jsdoc-link\">dojo/mouse</a> </p> <div class=\"jsdoc-summary\">\n<p>Numeric value of the right mouse button for the platform.</p> </div>    <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_mouseButtons_isButton\">\n<span class=\"functionIcon\">isButton</span><span class=\"parameters\">(e,button)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"mouse\" class=\"jsdoc-link\">dojo/mouse</a> </p> <p>Checks an event object for a pressed button</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">e</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\">\n<p>Event object to examine</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">button</td> <td class=\"jsdoc-param-type\">Number</td> <td class=\"jsdoc-param-description\">\n<p>The button value (example: dojo.mouseButton.LEFT)</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">boolean</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_mouseButtons_isLeft\">\n<span class=\"functionIcon\">isLeft</span><span class=\"parameters\">(e)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"mouse\" class=\"jsdoc-link\">dojo/mouse</a> </p> <p>Checks an event object for the pressed left button</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">e</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\">\n<p>Event object to examine</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">boolean</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_mouseButtons_isMiddle\">\n<span class=\"functionIcon\">isMiddle</span><span class=\"parameters\">(e)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"mouse\" class=\"jsdoc-link\">dojo/mouse</a> </p> <p>Checks an event object for the pressed middle button</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">e</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\">\n<p>Event object to examine</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">boolean</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_mouseButtons_isRight\">\n<span class=\"functionIcon\">isRight</span><span class=\"parameters\">(e)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"mouse\" class=\"jsdoc-link\">dojo/mouse</a> </p> <p>Checks an event object for the pressed right button</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">e</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\">\n<p>Event object to examine</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">boolean</span></p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/main.mouseButtons.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/main.mouseButtons.html</a>\n  </p>\n</div>\n","dojo/main.regexp":"<h1>dojo/main.regexp</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>Regular expressions and Builder resources</p>           <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_regexp_buildGroupRE\">\n<span class=\"functionIcon\">buildGroupRE</span><span class=\"parameters\">(arr,re,nonCapture)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"regexp\" class=\"jsdoc-link\">dojo/regexp</a> </p> <p>Builds a regular expression that groups subexpressions</p>  <p>A utility function used by some of the RE generators. The subexpressions are constructed by the function, re, in the second parameter. re builds one subexpression for each elem in the array a, in the first parameter. Returns a string for a regular expression that groups all the subexpressions.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">arr</td> <td class=\"jsdoc-param-type\">Object | Array</td> <td class=\"jsdoc-param-description\">\n<p>A single value or an array of values.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">re</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\">\n<p>A function. Takes one parameter and converts it to a regular expression.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">nonCapture</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>If true, uses non-capturing match, otherwise matches are retained by regular expression. Defaults to false</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_regexp_escapeString\">\n<span class=\"functionIcon\">escapeString</span><span class=\"parameters\">(str,except)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"regexp\" class=\"jsdoc-link\">dojo/regexp</a> </p> <p>Adds escape sequences for special characters in regular expressions</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">str</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">except</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>a String with special characters to be left unescaped</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_regexp_group\">\n<span class=\"functionIcon\">group</span><span class=\"parameters\">(expression,nonCapture)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"regexp\" class=\"jsdoc-link\">dojo/regexp</a> </p> <p>adds group match to expression</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">expression</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">nonCapture</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>If true, uses non-capturing match, otherwise matches are retained by regular expression.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">string</span></p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/main.regexp.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/main.regexp.html</a>\n  </p>\n</div>\n","dojo/main.rpc":"<h1>dojo/main.rpc</h1>           <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_rpc_JsonpService\">\n<span class=\"functionIcon\">JsonpService</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"rpc/jsonpservice\" class=\"jsdoc-link\">dojo/rpc/JsonpService</a> </p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_rpc_JsonService\">\n<span class=\"functionIcon\">JsonService</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"rpc/jsonservice\" class=\"jsdoc-link\">dojo/rpc/JsonService</a> </p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_rpc_RpcService\">\n<span class=\"functionIcon\">RpcService</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"rpc/rpcservice\" class=\"jsdoc-link\">dojo/rpc/RpcService</a> </p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/main.rpc.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/main.rpc.html</a>\n  </p>\n</div>\n","dojo/main.scopemap":"<h1>dojo/main.scopeMap</h1>           <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_scopeMap_dijit\">\n<span class=\"arrayIcon\">dijit</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/kernel\" class=\"jsdoc-link\">dojo/_base/kernel</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_scopeMap_dojo\">\n<span class=\"arrayIcon\">dojo</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/kernel\" class=\"jsdoc-link\">dojo/_base/kernel</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_scopeMap_dojox\">\n<span class=\"arrayIcon\">dojox</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/kernel\" class=\"jsdoc-link\">dojo/_base/kernel</a> </p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/main.scopeMap.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/main.scopeMap.html</a>\n  </p>\n</div>\n","dojo/main.store":"<h1>dojo/main.store</h1>             <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_store_util\">\n<span class=\"objectIcon\">util</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"store/util/queryresults\" class=\"jsdoc-link\">dojo/store/util/QueryResults</a> </p>    <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_store_Cache\">\n<span class=\"functionIcon\">Cache</span><span class=\"parameters\">(masterStore,cachingStore,options)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"store/cache\" class=\"jsdoc-link\">dojo/store/Cache</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">masterStore</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">cachingStore</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">options</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_store_DataStore\">\n<span class=\"functionIcon\">DataStore</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"store/datastore\" class=\"jsdoc-link\">dojo/store/DataStore</a> </p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_store_JsonRest\">\n<span class=\"functionIcon\">JsonRest</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"store/jsonrest\" class=\"jsdoc-link\">dojo/store/JsonRest</a> </p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_store_Memory\">\n<span class=\"functionIcon\">Memory</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"store/memory\" class=\"jsdoc-link\">dojo/store/Memory</a> </p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_store_Observable\">\n<span class=\"functionIcon\">Observable</span><span class=\"parameters\">(store)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"store/observable\" class=\"jsdoc-link\">dojo/store/Observable</a> </p> <p>The Observable store wrapper takes a store and sets an observe method on query() results that can be used to monitor results for changes. </p>  <p>Observable wraps an existing store so that notifications can be made when a query is performed. </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">store</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"store/api/store\">dojo/store/api/Store</a></td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Create a Memory store that returns an observable query, and then log some information about that query. </p> <pre><code>var store = Observable(new Memory({\n    data: [\n        {id: 1, name: \"one\", prime: false},\n        {id: 2, name: \"two\", even: true, prime: true},\n        {id: 3, name: \"three\", prime: true},\n        {id: 4, name: \"four\", even: true, prime: false},\n        {id: 5, name: \"five\", prime: true}\n    ]\n}));\nvar changes = [], results = store.query({ prime: true });\nvar observer = results.observe(function(object, previousIndex, newIndex){\n    changes.push({previousIndex:previousIndex, newIndex:newIndex, object:object});\n});</code></pre> <p>See the Observable tests for more information.</p> </div> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/main.store.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/main.store.html</a>\n  </p>\n</div>\n","dojo/main.number":"<h1>dojo/main.number</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>localized formatting and parsing routines for Number</p>             <h2 id=\"properties\">Properties</h2>    <h2 id=\"methods\">Methods</h2>               <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_number_format\">\n<span class=\"functionIcon\">format</span><span class=\"parameters\">(value,options)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"number\" class=\"jsdoc-link\">dojo/number</a> </p> <p>Format a Number as a String, using locale-specific settings</p>  <p>Create a string from a Number using a known localized pattern. Formatting patterns appropriate to the locale are chosen from the <a href=\"http://unicode.org/cldr\">Common Locale Data Repository</a> as well as the appropriate symbols and delimiters. If value is Infinity, -Infinity, or is not a valid JavaScript number, return null.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">value</td> <td class=\"jsdoc-param-type\">Number</td> <td class=\"jsdoc-param-description\">\n<p>the number to be formatted</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">options</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>An object with the following properties:</p>\n<ul>\n<li>pattern (String, optional): <p>override <a href=\"http://www.unicode.org/reports/tr35/#Number_Format_Patterns\">formatting pattern</a> with this string. Default value is based on locale. Overriding this property will defeat localization. Literal characters in patterns are not supported.</p> </li>\n<li>type (String, optional): <p>choose a format type based on the locale from the following: decimal, scientific (not yet supported), percent, currency. decimal by default.</p> </li>\n<li>places (Number, optional): <p>fixed number of decimal places to show. This overrides any information in the provided pattern.</p> </li>\n<li>round (Number, optional): <p>5 rounds to nearest .5; 0 rounds to nearest whole (default). -1 means do not round.</p> </li>\n<li>locale (String, optional): <p>override the locale used to determine formatting rules</p> </li>\n<li>fractional (Boolean, optional): <p>If false, show no decimal places, overriding places and pattern settings.</p> </li>\n</ul> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">null | undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_number_parse\">\n<span class=\"functionIcon\">parse</span><span class=\"parameters\">(expression,options)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"number\" class=\"jsdoc-link\">dojo/number</a> </p> <p>Convert a properly formatted string to a primitive Number, using locale-specific settings.</p>  <p>Create a Number from a string using a known localized pattern. Formatting patterns are chosen appropriate to the locale and follow the syntax described by <a href=\"http://www.unicode.org/reports/tr35/#Number_Format_Patterns\">unicode.org TR35</a> Note that literal characters in patterns are not supported.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">expression</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>A string representation of a Number</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">options</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>An object with the following properties:</p>\n<ul>\n<li>pattern (String, optional): <p>override <a href=\"http://www.unicode.org/reports/tr35/#Number_Format_Patterns\">formatting pattern</a> with this string. Default value is based on locale. Overriding this property will defeat localization. Literal characters in patterns are not supported.</p> </li>\n<li>type (String, optional): <p>choose a format type based on the locale from the following: decimal, scientific (not yet supported), percent, currency. decimal by default.</p> </li>\n<li>locale (String, optional): <p>override the locale used to determine formatting rules</p> </li>\n<li>strict (Boolean, optional): <p>strict parsing, false by default. Strict parsing requires input as produced by the format() method. Non-strict is more permissive, e.g. flexible on white space, omitting thousands separators</p> </li>\n<li>fractional (Boolean|Array, optional): <p>Whether to include the fractional portion, where the number of decimal places are implied by pattern or explicit 'places' parameter. The value [true,false] makes the fractional portion optional.</p> </li>\n</ul> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">number</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_number_regexp\">\n<span class=\"functionIcon\">regexp</span><span class=\"parameters\">(options)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"number\" class=\"jsdoc-link\">dojo/number</a> </p> <p>Builds the regular needed to parse a number</p>  <p>Returns regular expression with positive and negative match, group and decimal separators</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">options</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>An object with the following properties:</p>\n<ul>\n<li>pattern (String, optional): <p>override <a href=\"http://www.unicode.org/reports/tr35/#Number_Format_Patterns\">formatting pattern</a> with this string. Default value is based on locale. Overriding this property will defeat localization.</p> </li>\n<li>type (String, optional): <p>choose a format type based on the locale from the following: decimal, scientific (not yet supported), percent, currency. decimal by default.</p> </li>\n<li>locale (String, optional): <p>override the locale used to determine formatting rules</p> </li>\n<li>strict (Boolean, optional): <p>strict parsing, false by default. Strict parsing requires input as produced by the format() method. Non-strict is more permissive, e.g. flexible on white space, omitting thousands separators</p> </li>\n<li>places (Number|String, optional): <p>number of decimal places to accept: Infinity, a positive number, or a range \"n,m\". Defined by pattern or Infinity if pattern not provided.</p> </li>\n</ul> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_number_round\">\n<span class=\"functionIcon\">round</span><span class=\"parameters\">(value,places,increment)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"number\" class=\"jsdoc-link\">dojo/number</a> </p> <p>Rounds to the nearest value with the given number of decimal places, away from zero</p>  <p>Rounds to the nearest value with the given number of decimal places, away from zero if equal. Similar to Number.toFixed(), but compensates for browser quirks. Rounding can be done by fractional increments also, such as the nearest quarter. NOTE: Subject to floating point errors. See <a class=\"jsdoc-link\" href=\"http://dojotoolkit.org/api/1.10/dojox/math/round\">dojox/math/round</a> for experimental workaround.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">value</td> <td class=\"jsdoc-param-type\">Number</td> <td class=\"jsdoc-param-description\">\n<p>The number to round</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">places</td> <td class=\"jsdoc-param-type\">Number</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>The number of decimal places where rounding takes place. Defaults to 0 for whole rounding. Must be non-negative.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">increment</td> <td class=\"jsdoc-param-type\">Number</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Rounds next place to nearest value of increment/10. 10 by default.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">number</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>&gt;&gt;&gt; number.round(-0.5)\n-1\n&gt;&gt;&gt; number.round(162.295, 2)\n162.29  // note floating point error.  Should be 162.3\n&gt;&gt;&gt; number.round(10.71, 0, 2.5)\n10.75</code></pre> </div> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/main.number.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/main.number.html</a>\n  </p>\n</div>\n","dojo/main.stateful":"<h1>dojo/main.Stateful</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>Base class for objects that provide named properties with optional getter/setter control and the ability to watch for property changes </p> <p>The class also provides the functionality to auto-magically manage getters and setters for object attributes/properties. </p> <p>Getters and Setters should follow the format of _xxxGetter or _xxxSetter where the xxx is a name of the attribute to handle. So an attribute of \"foo\" would have a custom getter of _fooGetter and a custom setter of _fooSetter. </p>     <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>require([\"dojo/Stateful\", function(Stateful) {\n    var obj = new Stateful();\n    obj.watch(\"foo\", function(){\n        console.log(\"foo changed to \" + this.get(\"foo\"));\n    });\n    obj.set(\"foo\",\"bar\");\n});</code></pre> </div> </div>         <h2 id=\"properties\">Properties</h2>    <h2 id=\"methods\">Methods</h2>       <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_Stateful_get\">\n<span class=\"functionIcon\">get</span><span class=\"parameters\">(name)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"stateful\" class=\"jsdoc-link\">dojo/Stateful</a> </p> <p>Get a property on a Stateful instance.</p>  <p>Get a named property on a Stateful object. The property may potentially be retrieved via a getter method in subclasses. In the base class this just retrieves the object's property.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">name</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>The property to get.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | undefined</span></p> <p>The property value on this Stateful instance.</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>require([\"dojo/Stateful\", function(Stateful) {\n    var stateful = new Stateful({foo: 3});\n    stateful.get(\"foo\") // returns 3\n    stateful.foo // returns 3\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_Stateful_postscript\">\n<span class=\"functionIcon\">postscript</span><span class=\"parameters\">(params)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"stateful\" class=\"jsdoc-link\">dojo/Stateful</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">params</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_Stateful_set\">\n<span class=\"functionIcon\">set</span><span class=\"parameters\">(name,value)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"stateful\" class=\"jsdoc-link\">dojo/Stateful</a> </p> <p>Set a property on a Stateful instance</p>  <p>Sets named properties on a stateful object and notifies any watchers of the property. A programmatic setter may be defined in subclasses.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">name</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>The property to set.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">value</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>The value to set in the property.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | function</span></p> <p>The function returns this dojo.Stateful instance.</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>require([\"dojo/Stateful\", function(Stateful) {\n    var stateful = new Stateful();\n    stateful.watch(function(name, oldValue, value){\n        // this will be called on the set below\n    }\n    stateful.set(foo, 5);</code></pre> <p>set() may also be called with a hash of name/value pairs, ex: </p> <pre><code>stateful.set({\n    foo: \"Howdy\",\n    bar: 3\n});\n});</code></pre> <p>This is equivalent to calling set(foo, \"Howdy\") and set(bar, 3) </p> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_Stateful_watch\">\n<span class=\"functionIcon\">watch</span><span class=\"parameters\">(name,callback)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"stateful\" class=\"jsdoc-link\">dojo/Stateful</a> </p> <p>Watches a property for changes</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">name</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Indicates the property to watch. This is optional (the callback may be the only parameter), and if omitted, all the properties will be watched</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">callback</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\">\n<p>The function to execute when the property changes. This will be called after the property has been changed. The callback will be called with the |this| set to the instance, the first argument as the name of the property, the second argument as the old value and the third argument as the new value.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | object</span></p> <p>An object handle for the watch. The unwatch method of this object can be used to discontinue watching this property: </p> <pre><code>var watchHandle = obj.watch(\"foo\", callback);\nwatchHandle.unwatch(); // callback won't be called now</code></pre><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/main.Stateful.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/main.Stateful.html</a>\n  </p>\n</div>\n","dojo/main.string":"<h1>dojo/main.string</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>String utilities for Dojo</p>           <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_string_escape\">\n<span class=\"functionIcon\">escape</span><span class=\"parameters\">(str)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"string\" class=\"jsdoc-link\">dojo/string</a> </p> <p>Efficiently escape a string for insertion into HTML (innerHTML or attributes), replacing &amp;, &lt;, &gt;, \", ', and / characters.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">str</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>the string to escape</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_string_pad\">\n<span class=\"functionIcon\">pad</span><span class=\"parameters\">(text,size,ch,end)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"string\" class=\"jsdoc-link\">dojo/string</a> </p> <p>Pad a string to guarantee that it is at least <code>size</code> length by filling with the character <code>ch</code> at either the start or end of the string. Pads at the start, by default.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">text</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>the string to pad</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">size</td> <td class=\"jsdoc-param-type\">Integer</td> <td class=\"jsdoc-param-description\">\n<p>length to provide padding</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">ch</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>character to pad, defaults to '0'</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">end</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>adds padding at the end if true, otherwise pads at start</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">number</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>// Fill the string to length 10 with \"+\" characters on the right.  Yields \"Dojo++++++\".\nstring.pad(\"Dojo\", 10, \"+\", true);</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_string_rep\">\n<span class=\"functionIcon\">rep</span><span class=\"parameters\">(str,num)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"string\" class=\"jsdoc-link\">dojo/string</a> </p> <p>Efficiently replicate a string <code>n</code> times.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">str</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>the string to replicate</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">num</td> <td class=\"jsdoc-param-type\">Integer</td> <td class=\"jsdoc-param-description\">\n<p>number of times to replicate the string</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">string | undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_string_substitute\">\n<span class=\"functionIcon\">substitute</span><span class=\"parameters\">(template,map,transform,thisObject)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"string\" class=\"jsdoc-link\">dojo/string</a> </p> <p>Performs parameterized substitutions on a string. Throws an exception if any parameter is unmatched.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">template</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>a string with expressions in the form <code>${key}</code> to be replaced or <code>${key:format}</code> which specifies a format function. keys are case-sensitive.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">map</td> <td class=\"jsdoc-param-type\">Object | Array</td> <td class=\"jsdoc-param-description\">\n<p>hash to search for substitutions</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">transform</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>a function to process all parameters before substitution takes place, e.g. mylib.encodeXML</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">thisObject</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>where to look for optional format function; default to the global namespace</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Substitutes two expressions in a string from an Array or Object </p> <pre><code>// returns \"File 'foo.html' is not found in directory '/temp'.\"\n// by providing substitution data in an Array\nstring.substitute(\n    \"File '${0}' is not found in directory '${1}'.\",\n    [\"foo.html\",\"/temp\"]\n);\n\n// also returns \"File 'foo.html' is not found in directory '/temp'.\"\n// but provides substitution data in an Object structure.  Dotted\n// notation may be used to traverse the structure.\nstring.substitute(\n    \"File '${name}' is not found in directory '${info.dir}'.\",\n    { name: \"foo.html\", info: { dir: \"/temp\" } }\n);</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>Use a transform function to modify the values: </p> <pre><code>// returns \"file 'foo.html' is not found in directory '/temp'.\"\nstring.substitute(\n    \"${0} is not found in ${1}.\",\n    [\"foo.html\",\"/temp\"],\n    function(str){\n        // try to figure out the type\n        var prefix = (str.charAt(0) == \"/\") ? \"directory\": \"file\";\n        return prefix + \" '\" + str + \"'\";\n    }\n);</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<p>Use a formatter </p> <pre><code>// returns \"thinger -- howdy\"\nstring.substitute(\n    \"${0:postfix}\", [\"thinger\"], null, {\n        postfix: function(value, key){\n            return value + \" -- howdy\";\n        }\n    }\n);</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_string_trim\">\n<span class=\"functionIcon\">trim</span><span class=\"parameters\">(str)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"string\" class=\"jsdoc-link\">dojo/string</a> </p> <p>Trims whitespace from both sides of the string</p>  <p>This version of trim() was taken from <a href=\"http://blog.stevenlevithan.com/archives/faster-trim-javascript\">Steven Levithan's blog</a>. The short yet performant version of this function is <a class=\"jsdoc-link\" href=\"_base/lang#trim\">dojo/_base/lang.trim()</a>, which is part of Dojo base. Uses String.prototype.trim instead, if available.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">str</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>String to be trimmed</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">String | string</span></p> <p>Returns the trimmed string</p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/main.string.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/main.string.html</a>\n  </p>\n</div>\n","dojo/main.tests":"<h1>dojo/main.tests</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>D.O.H. Test files for Dojo unit testing.</p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/main.tests.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/main.tests.html</a>\n  </p>\n</div>\n","dojo/main.version":"<h1>dojo/main.version</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>Version number of the Dojo Toolkit</p>  <p>Hash about the version, including </p> <ul> <li>major: Integer: Major version. If total version is \"1.2.0beta1\", will be 1</li> <li>minor: Integer: Minor version. If total version is \"1.2.0beta1\", will be 2</li> <li>patch: Integer: Patch version. If total version is \"1.2.0beta1\", will be 0</li> <li>flag: String: Descriptor flag. If total version is \"1.2.0beta1\", will be \"beta1\"</li> <li>revision: Number: The Git rev from which dojo was pulled</li> </ul>             <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_version_flag\">\n<span class=\"stringIcon\">flag</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/kernel\" class=\"jsdoc-link\">dojo/_base/kernel</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_version_major\">\n<span class=\"numberIcon\">major</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/kernel\" class=\"jsdoc-link\">dojo/_base/kernel</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_version_minor\">\n<span class=\"numberIcon\">minor</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/kernel\" class=\"jsdoc-link\">dojo/_base/kernel</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_version_patch\">\n<span class=\"numberIcon\">patch</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/kernel\" class=\"jsdoc-link\">dojo/_base/kernel</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_version_revision\">\n<span class=\"numberIcon\">revision</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/kernel\" class=\"jsdoc-link\">dojo/_base/kernel</a> </p>    <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_version_toString\">\n<span class=\"functionIcon\">toString</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/kernel\" class=\"jsdoc-link\">dojo/_base/kernel</a> </p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">string</span></p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/main.version.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/main.version.html</a>\n  </p>\n</div>\n","dojo/main.window":"<h1>dojo/main.window</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>TODOC</p>           <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_window_get\">\n<span class=\"functionIcon\">get</span><span class=\"parameters\">(doc)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"window\" class=\"jsdoc-link\">dojo/window</a> </p> <p>Get window object associated with document doc.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">doc</td> <td class=\"jsdoc-param-type\">Document</td> <td class=\"jsdoc-param-description\">\n<p>The document to get the associated window for.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_window_getBox\">\n<span class=\"functionIcon\">getBox</span><span class=\"parameters\">(doc)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"window\" class=\"jsdoc-link\">dojo/window</a> </p> <p>Returns the dimensions and scroll position of the viewable area of a browser window</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">doc</td> <td class=\"jsdoc-param-type\">Document</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">object</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_window_scrollIntoView\">\n<span class=\"functionIcon\">scrollIntoView</span><span class=\"parameters\">(node,pos)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"window\" class=\"jsdoc-link\">dojo/window</a> </p> <p>Scroll the passed node into view using minimal movement, if it is not already.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DomNode</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">pos</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/main.window.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/main.window.html</a>\n  </p>\n</div>\n","dojo/mouse":"<h1>dojo/mouse</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>This module provide mouse event handling utility functions and exports mouseenter and mouseleave event emulation.</p>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/mouse.html\" target=\"_blank\">dojo/mouse reference documentation</a> for more information.</p>    <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>To use these events, you register a mouseenter like this: </p> <pre><code>define([\"dojo/on\", dojo/mouse\"], function(on, mouse){\n    on(targetNode, mouse.enter, function(event){\n        dojo.addClass(targetNode, \"highlighted\");\n    });\n    on(targetNode, mouse.leave, function(event){\n        dojo.removeClass(targetNode, \"highlighted\");\n    });</code></pre> </div> </div>         <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_mouse_enter\">\n<span class=\"objectIcon\">enter</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"mouse\" class=\"jsdoc-link\">dojo/mouse</a> </p> <div class=\"jsdoc-summary\">\n<p>This is an extension event for the mouseenter that IE provides, emulating the behavior on other browsers.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_mouse_leave\">\n<span class=\"objectIcon\">leave</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"mouse\" class=\"jsdoc-link\">dojo/mouse</a> </p> <div class=\"jsdoc-summary\">\n<p>This is an extension event for the mouseleave that IE provides, emulating the behavior on other browsers.</p> </div>    <h2 id=\"methods\">Methods</h2>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_mouse_isLeft\">\n<span class=\"functionIcon\">isLeft</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"mouse\" class=\"jsdoc-link\">dojo/mouse</a> </p> <p>Test an event object (from a mousedown event) to see if the left button was pressed.</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_mouse_isMiddle\">\n<span class=\"functionIcon\">isMiddle</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"mouse\" class=\"jsdoc-link\">dojo/mouse</a> </p> <p>Test an event object (from a mousedown event) to see if the middle button was pressed.</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_mouse_isRight\">\n<span class=\"functionIcon\">isRight</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"mouse\" class=\"jsdoc-link\">dojo/mouse</a> </p> <p>Test an event object (from a mousedown event) to see if the right button was pressed.</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_mouse_wheel\">\n<span class=\"functionIcon\">wheel</span><span class=\"parameters\">(node,listener)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"mouse\" class=\"jsdoc-link\">dojo/mouse</a> </p> <p>This is an extension event for the mousewheel that non-Mozilla browsers provide, emulating the behavior on Mozilla based browsers.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">listener</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/mouse.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/mouse.html</a>\n  </p>\n</div>\n","dojo/node":"<h1>dojo/node</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>This AMD plugin module allows native Node.js modules to be loaded by AMD modules using the Dojo loader. Note that this plugin will not work with AMD loaders other than the Dojo loader.</p>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/node.html\" target=\"_blank\">dojo/node reference documentation</a> for more information.</p>    <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>require([\"dojo/node!fs\"], function(fs){\n    var fileData = fs.readFileSync(\"foo.txt\", \"utf-8\");\n});</code></pre> </div> </div>       <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_node_load\">\n<span class=\"functionIcon\">load</span><span class=\"parameters\">(id,require,load)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"node\" class=\"jsdoc-link\">dojo/node</a> </p> <p>Standard AMD plugin interface. See <a href=\"https://github.com/amdjs/amdjs-api/wiki/Loader-Plugins\">https://github.com/amdjs/amdjs-api/wiki/Loader-Plugins</a> for information.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">id</td> <td class=\"jsdoc-param-type\">string</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">require</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">load</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_node_normalize\">\n<span class=\"functionIcon\">normalize</span><span class=\"parameters\">(id,normalize)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"node\" class=\"jsdoc-link\">dojo/node</a> </p> <p>Produces a normalized id to be used by node. Relative ids are resolved relative to the requesting module's location in the file system and will return an id with path separators appropriate for the local file system.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">id</td> <td class=\"jsdoc-param-type\">string</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">normalize</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/node.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/node.html</a>\n  </p>\n</div>\n","dojo/main.keys":"<h1>dojo/main.keys</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>Definitions for common key values. Client code should test keyCode against these named constants, as the actual codes can vary by browser.</p>           <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_keys_ALT\">\n<span class=\"numberIcon\">ALT</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_keys_BACKSPACE\">\n<span class=\"numberIcon\">BACKSPACE</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_keys_CAPS_LOCK\">\n<span class=\"numberIcon\">CAPS_LOCK</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_keys_CLEAR\">\n<span class=\"numberIcon\">CLEAR</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_keys_copyKey\">\n<span class=\"numberIcon\">copyKey</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_keys_CTRL\">\n<span class=\"numberIcon\">CTRL</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_keys_DELETE\">\n<span class=\"numberIcon\">DELETE</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_keys_DOWN_ARROW\">\n<span class=\"numberIcon\">DOWN_ARROW</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_keys_DOWN_DPAD\">\n<span class=\"numberIcon\">DOWN_DPAD</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_keys_END\">\n<span class=\"numberIcon\">END</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_keys_ENTER\">\n<span class=\"numberIcon\">ENTER</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_keys_ESCAPE\">\n<span class=\"numberIcon\">ESCAPE</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_keys_F1\">\n<span class=\"numberIcon\">F1</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_keys_F10\">\n<span class=\"numberIcon\">F10</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_keys_F11\">\n<span class=\"numberIcon\">F11</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_keys_F12\">\n<span class=\"numberIcon\">F12</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_keys_F13\">\n<span class=\"numberIcon\">F13</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_keys_F14\">\n<span class=\"numberIcon\">F14</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_keys_F15\">\n<span class=\"numberIcon\">F15</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_keys_F2\">\n<span class=\"numberIcon\">F2</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_keys_F3\">\n<span class=\"numberIcon\">F3</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_keys_F4\">\n<span class=\"numberIcon\">F4</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_keys_F5\">\n<span class=\"numberIcon\">F5</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_keys_F6\">\n<span class=\"numberIcon\">F6</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_keys_F7\">\n<span class=\"numberIcon\">F7</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_keys_F8\">\n<span class=\"numberIcon\">F8</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_keys_F9\">\n<span class=\"numberIcon\">F9</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_keys_HELP\">\n<span class=\"numberIcon\">HELP</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_keys_HOME\">\n<span class=\"numberIcon\">HOME</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_keys_INSERT\">\n<span class=\"numberIcon\">INSERT</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_keys_LEFT_ARROW\">\n<span class=\"numberIcon\">LEFT_ARROW</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_keys_LEFT_DPAD\">\n<span class=\"numberIcon\">LEFT_DPAD</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_keys_LEFT_WINDOW\">\n<span class=\"numberIcon\">LEFT_WINDOW</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_keys_META\">\n<span class=\"numberIcon\">META</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_keys_NUM_LOCK\">\n<span class=\"numberIcon\">NUM_LOCK</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_keys_NUMPAD_0\">\n<span class=\"numberIcon\">NUMPAD_0</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_keys_NUMPAD_1\">\n<span class=\"numberIcon\">NUMPAD_1</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_keys_NUMPAD_2\">\n<span class=\"numberIcon\">NUMPAD_2</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_keys_NUMPAD_3\">\n<span class=\"numberIcon\">NUMPAD_3</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_keys_NUMPAD_4\">\n<span class=\"numberIcon\">NUMPAD_4</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_keys_NUMPAD_5\">\n<span class=\"numberIcon\">NUMPAD_5</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_keys_NUMPAD_6\">\n<span class=\"numberIcon\">NUMPAD_6</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_keys_NUMPAD_7\">\n<span class=\"numberIcon\">NUMPAD_7</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_keys_NUMPAD_8\">\n<span class=\"numberIcon\">NUMPAD_8</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_keys_NUMPAD_9\">\n<span class=\"numberIcon\">NUMPAD_9</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_keys_NUMPAD_DIVIDE\">\n<span class=\"numberIcon\">NUMPAD_DIVIDE</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_keys_NUMPAD_ENTER\">\n<span class=\"numberIcon\">NUMPAD_ENTER</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_keys_NUMPAD_MINUS\">\n<span class=\"numberIcon\">NUMPAD_MINUS</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_keys_NUMPAD_MULTIPLY\">\n<span class=\"numberIcon\">NUMPAD_MULTIPLY</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_keys_NUMPAD_PERIOD\">\n<span class=\"numberIcon\">NUMPAD_PERIOD</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_keys_NUMPAD_PLUS\">\n<span class=\"numberIcon\">NUMPAD_PLUS</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_keys_PAGE_DOWN\">\n<span class=\"numberIcon\">PAGE_DOWN</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_keys_PAGE_UP\">\n<span class=\"numberIcon\">PAGE_UP</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_keys_PAUSE\">\n<span class=\"numberIcon\">PAUSE</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_keys_RIGHT_ARROW\">\n<span class=\"numberIcon\">RIGHT_ARROW</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_keys_RIGHT_DPAD\">\n<span class=\"numberIcon\">RIGHT_DPAD</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_keys_RIGHT_WINDOW\">\n<span class=\"numberIcon\">RIGHT_WINDOW</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_keys_SCROLL_LOCK\">\n<span class=\"numberIcon\">SCROLL_LOCK</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_keys_SELECT\">\n<span class=\"numberIcon\">SELECT</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_keys_SHIFT\">\n<span class=\"numberIcon\">SHIFT</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_keys_SPACE\">\n<span class=\"numberIcon\">SPACE</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_keys_TAB\">\n<span class=\"numberIcon\">TAB</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_keys_UP_ARROW\">\n<span class=\"numberIcon\">UP_ARROW</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_keys_UP_DPAD\">\n<span class=\"numberIcon\">UP_DPAD</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/main.keys.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/main.keys.html</a>\n  </p>\n</div>\n","dojo/main.touch":"<h1>dojo/main.touch</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>This module provides unified touch event handlers by exporting press, move, release and cancel which can also run well on desktop. Based on <a href=\"http://dvcs.w3.org/hg/webevents/raw-file/tip/touchevents.html\">http://dvcs.w3.org/hg/webevents/raw-file/tip/touchevents.html</a> Also, if the dojoClick property is set to truthy on a DOM node, <a class=\"jsdoc-link\" href=\"touch\">dojo/touch</a> generates click events immediately for this node and its descendants (except for descendants that have a dojoClick property set to falsy), to avoid the delay before native browser click events, and regardless of whether evt.preventDefault() was called in a touch.press event listener. </p>     <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Used with dojo/on </p> <pre><code>define([\"dojo/on\", \"dojo/touch\"], function(on, touch){\n    on(node, touch.press, function(e){});\n    on(node, touch.move, function(e){});\n    on(node, touch.release, function(e){});\n    on(node, touch.cancel, function(e){});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>Used with touch.* directly </p> <pre><code>touch.press(node, function(e){});\ntouch.move(node, function(e){});\ntouch.release(node, function(e){});\ntouch.cancel(node, function(e){});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<p>Have dojo/touch generate clicks without delay, with a default move threshold of 4 pixels </p> <pre><code>node.dojoClick = true;</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 4</h3>\n<p>Have dojo/touch generate clicks without delay, with a move threshold of 10 pixels horizontally and vertically </p> <pre><code>node.dojoClick = 10;</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 5</h3>\n<p>Have dojo/touch generate clicks without delay, with a move threshold of 50 pixels horizontally and 10 pixels vertically </p> <pre><code>node.dojoClick = {x:50, y:5};</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 6</h3>\n<p>Disable clicks without delay generated by dojo/touch on a node that has an ancestor with property dojoClick set to truthy </p> <pre><code>node.dojoClick = false;</code></pre> </div> </div>       <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_touch_cancel\">\n<span class=\"functionIcon\">cancel</span><span class=\"parameters\">(node,listener)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"touch\" class=\"jsdoc-link\">dojo/touch</a> </p> <p>Register a listener to 'touchcancel'|'mouseleave' for the given node</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">Dom</td> <td class=\"jsdoc-param-description\">\n<p>Target node to listen to</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">listener</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\">\n<p>Callback function</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any</span></p> <p>A handle which will be used to remove the listener by handle.remove()</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_touch_enter\">\n<span class=\"functionIcon\">enter</span><span class=\"parameters\">(node,listener)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"touch\" class=\"jsdoc-link\">dojo/touch</a> </p> <p>Register a listener to mouse.enter or touch equivalent for the given node</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">Dom</td> <td class=\"jsdoc-param-description\">\n<p>Target node to listen to</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">listener</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\">\n<p>Callback function</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any</span></p> <p>A handle which will be used to remove the listener by handle.remove()</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_touch_leave\">\n<span class=\"functionIcon\">leave</span><span class=\"parameters\">(node,listener)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"touch\" class=\"jsdoc-link\">dojo/touch</a> </p> <p>Register a listener to mouse.leave or touch equivalent for the given node</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">Dom</td> <td class=\"jsdoc-param-description\">\n<p>Target node to listen to</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">listener</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\">\n<p>Callback function</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any</span></p> <p>A handle which will be used to remove the listener by handle.remove()</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_touch_move\">\n<span class=\"functionIcon\">move</span><span class=\"parameters\">(node,listener)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"touch\" class=\"jsdoc-link\">dojo/touch</a> </p> <p>Register a listener that fires when the mouse cursor or a finger is dragged over the given node.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">Dom</td> <td class=\"jsdoc-param-description\">\n<p>Target node to listen to</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">listener</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\">\n<p>Callback function</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any</span></p> <p>A handle which will be used to remove the listener by handle.remove()</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_touch_out\">\n<span class=\"functionIcon\">out</span><span class=\"parameters\">(node,listener)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"touch\" class=\"jsdoc-link\">dojo/touch</a> </p> <p>Register a listener to 'mouseout' or touch equivalent for the given node</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">Dom</td> <td class=\"jsdoc-param-description\">\n<p>Target node to listen to</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">listener</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\">\n<p>Callback function</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any</span></p> <p>A handle which will be used to remove the listener by handle.remove()</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_touch_over\">\n<span class=\"functionIcon\">over</span><span class=\"parameters\">(node,listener)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"touch\" class=\"jsdoc-link\">dojo/touch</a> </p> <p>Register a listener to 'mouseover' or touch equivalent for the given node</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">Dom</td> <td class=\"jsdoc-param-description\">\n<p>Target node to listen to</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">listener</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\">\n<p>Callback function</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any</span></p> <p>A handle which will be used to remove the listener by handle.remove()</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_touch_press\">\n<span class=\"functionIcon\">press</span><span class=\"parameters\">(node,listener)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"touch\" class=\"jsdoc-link\">dojo/touch</a> </p> <p>Register a listener to 'touchstart'|'mousedown' for the given node</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">Dom</td> <td class=\"jsdoc-param-description\">\n<p>Target node to listen to</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">listener</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\">\n<p>Callback function</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any</span></p> <p>A handle which will be used to remove the listener by handle.remove()</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_touch_release\">\n<span class=\"functionIcon\">release</span><span class=\"parameters\">(node,listener)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"touch\" class=\"jsdoc-link\">dojo/touch</a> </p> <p>Register a listener to releasing the mouse button while the cursor is over the given node (i.e. \"mouseup\") or for removing the finger from the screen while touching the given node.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">Dom</td> <td class=\"jsdoc-param-description\">\n<p>Target node to listen to</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">listener</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\">\n<p>Callback function</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any</span></p> <p>A handle which will be used to remove the listener by handle.remove()</p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/main.touch.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/main.touch.html</a>\n  </p>\n</div>\n","dojo/nodelist._nodedatacache":"<h1>dojo/NodeList._nodeDataCache</h1><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/NodeList._nodeDataCache.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/NodeList._nodeDataCache.html</a>\n  </p>\n</div>\n","dojo/nodelist-data":"<h1>dojo/NodeList-data</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>Adds data() and removeData() methods to NodeList, and returns NodeList constructor.</p>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">NodeList-data<span class=\"parameters\"><span class=\"paren\">(</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/NodeList-data.html\" target=\"_blank\">dojo/NodeList-data reference documentation</a> for more information.</p>          <h2 id=\"methods\">Methods</h2><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/NodeList-data.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/NodeList-data.html</a>\n  </p>\n</div>\n","dojo/nodelist-dom":"<h1>dojo/NodeList-dom</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>Adds DOM related methods to NodeList, and returns NodeList constructor.</p>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">NodeList-dom<span class=\"parameters\"><span class=\"paren\">(</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/NodeList-dom.html\" target=\"_blank\">dojo/NodeList-dom reference documentation</a> for more information.</p>          <h2 id=\"methods\">Methods</h2><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/NodeList-dom.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/NodeList-dom.html</a>\n  </p>\n</div>\n","dojo/nodelist-fx":"<h1>dojo/NodeList-fx</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>Adds dojo.fx animation support to dojo.query() by extending the NodeList class with additional FX functions. NodeList is the array-like object used to hold query results.</p>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">NodeList-fx<span class=\"parameters\"><span class=\"paren\">(</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/NodeList-fx.html\" target=\"_blank\">dojo/NodeList-fx reference documentation</a> for more information.</p>          <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList-fx_fadeTo\">\n<span class=\"functionIcon\">fadeTo</span><span class=\"parameters\">(args)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"http://dojotoolkit.org/api/1.10/dojox/fx/ext-dojo/NodeList\" class=\"jsdoc-link\">dojox/fx/ext-dojo/NodeList</a> </p> <p>fade all elements of the node list to a specified opacity</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">args</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>// fade all elements with class \"bar\" to to 50% opacity\ndojo.query(\".bar\").fadeTo({ end: 0.5 }).play();</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList-fx_highlight\">\n<span class=\"functionIcon\">highlight</span><span class=\"parameters\">(args)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"http://dojotoolkit.org/api/1.10/dojox/fx/ext-dojo/NodeList\" class=\"jsdoc-link\">dojox/fx/ext-dojo/NodeList</a> </p> <p>highlight all elements of the node list. Returns an instance of dojo.Animation</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">args</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>// highlight all links with class \"foo\"\ndojo.query(\"a.foo\").hightlight().play();</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList-fx_sizeTo\">\n<span class=\"functionIcon\">sizeTo</span><span class=\"parameters\">(args)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"http://dojotoolkit.org/api/1.10/dojox/fx/ext-dojo/NodeList\" class=\"jsdoc-link\">dojox/fx/ext-dojo/NodeList</a> </p> <p>size all elements of this NodeList. Returns an instance of dojo.Animation</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">args</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>// size all divs with class \"blah\"\ndojo.query(\"div.blah\").sizeTo({\n    width:50,\n    height:50\n}).play();</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList-fx_slideBy\">\n<span class=\"functionIcon\">slideBy</span><span class=\"parameters\">(args)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"http://dojotoolkit.org/api/1.10/dojox/fx/ext-dojo/NodeList\" class=\"jsdoc-link\">dojox/fx/ext-dojo/NodeList</a> </p> <p>slide all elements of this NodeList. Returns an instance of dojo.Animation</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">args</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>// slide all tables with class \"blah\" 10 px\ndojo.query(\"table.blah\").slideBy({ top:10, left:10 }).play();</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList-fx_wipeTo\">\n<span class=\"functionIcon\">wipeTo</span><span class=\"parameters\">(args)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"http://dojotoolkit.org/api/1.10/dojox/fx/ext-dojo/NodeList\" class=\"jsdoc-link\">dojox/fx/ext-dojo/NodeList</a> </p> <p>Wipe all elements of the NodeList to a specified width: or height:</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">args</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>dojo.query(\".box\").wipeTo({ width: 300px }).play();</code></pre> </div> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/NodeList-fx.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/NodeList-fx.html</a>\n  </p>\n</div>\n","dojo/nodelist-html":"<h1>dojo/NodeList-html</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>Adds a chainable html method to <a class=\"jsdoc-link\" href=\"query\">dojo/query()</a> / NodeList instances for setting/replacing node content</p>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">NodeList-html<span class=\"parameters\"><span class=\"paren\">(</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/NodeList-html.html\" target=\"_blank\">dojo/NodeList-html reference documentation</a> for more information.</p>          <h2 id=\"methods\">Methods</h2><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/NodeList-html.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/NodeList-html.html</a>\n  </p>\n</div>\n","dojo/nodelist-manipulate":"<h1>dojo/NodeList-manipulate</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>Adds chainable methods to dojo.query() / NodeList instances for manipulating HTML and DOM nodes and their properties.</p>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">NodeList-manipulate<span class=\"parameters\"><span class=\"paren\">(</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/NodeList-manipulate.html\" target=\"_blank\">dojo/NodeList-manipulate reference documentation</a> for more information.</p>          <h2 id=\"methods\">Methods</h2><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/NodeList-manipulate.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/NodeList-manipulate.html</a>\n  </p>\n</div>\n","dojo/nodelist-traverse":"<h1>dojo/NodeList-traverse</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>Adds chainable methods to <a class=\"jsdoc-link\" href=\"query\">dojo/query()</a> / NodeList instances for traversing the DOM</p>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">NodeList-traverse<span class=\"parameters\"><span class=\"paren\">(</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/NodeList-traverse.html\" target=\"_blank\">dojo/NodeList-traverse reference documentation</a> for more information.</p>          <h2 id=\"methods\">Methods</h2><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/NodeList-traverse.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/NodeList-traverse.html</a>\n  </p>\n</div>\n","dojo/number.__formatabsoluteoptions":"<h1>dojo/number.__FormatAbsoluteOptions</h1>  <p> <strong>Note:</strong> This is not a real constructor, but just a description of the type of object that should be passed as a parameter to some method(s), and/or the return value from some method(s). In other words, the type exists only for documentation purposes, and you <strong>cannot</strong> call <code>new number.__FormatAbsoluteOptions()</code> </p>          <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_number___FormatAbsoluteOptions_decimal\">\n<span class=\"stringIcon\">decimal</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"number\" class=\"jsdoc-link\">dojo/number</a> </p> <div class=\"jsdoc-summary\">\n<p>the decimal separator</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_number___FormatAbsoluteOptions_group\">\n<span class=\"stringIcon\">group</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"number\" class=\"jsdoc-link\">dojo/number</a> </p> <div class=\"jsdoc-summary\">\n<p>the group separator</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_number___FormatAbsoluteOptions_places\">\n<span class=\"numberIcon\">places</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"number\" class=\"jsdoc-link\">dojo/number</a> </p> <div class=\"jsdoc-summary\">\n<p>number of decimal places. the range \"n,m\" will format to m places.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_number___FormatAbsoluteOptions_round\">\n<span class=\"numberIcon\">round</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"number\" class=\"jsdoc-link\">dojo/number</a> </p> <div class=\"jsdoc-summary\">\n<p>5 rounds to nearest .5; 0 rounds to nearest whole (default). -1 means don't round.</p> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/number.__FormatAbsoluteOptions.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/number.__FormatAbsoluteOptions.html</a>\n  </p>\n</div>\n","dojo/number.__formatoptions":"<h1>dojo/number.__FormatOptions</h1>  <p> <strong>Note:</strong> This is not a real constructor, but just a description of the type of object that should be passed as a parameter to some method(s), and/or the return value from some method(s). In other words, the type exists only for documentation purposes, and you <strong>cannot</strong> call <code>new number.__FormatOptions()</code> </p>          <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_number___FormatOptions_fractional\">\n<span class=\"booleanIcon\">fractional</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"number\" class=\"jsdoc-link\">dojo/number</a> </p> <div class=\"jsdoc-summary\">\n<p>If false, show no decimal places, overriding places and pattern settings.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_number___FormatOptions_locale\">\n<span class=\"stringIcon\">locale</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"number\" class=\"jsdoc-link\">dojo/number</a> </p> <div class=\"jsdoc-summary\">\n<p>override the locale used to determine formatting rules</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_number___FormatOptions_pattern\">\n<span class=\"stringIcon\">pattern</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"number\" class=\"jsdoc-link\">dojo/number</a> </p> <div class=\"jsdoc-summary\">\n<p>override <a href=\"http://www.unicode.org/reports/tr35/#Number_Format_Patterns\">formatting pattern</a> with this string. Default value is based on locale. Overriding this property will defeat localization. Literal characters in patterns are not supported.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_number___FormatOptions_places\">\n<span class=\"numberIcon\">places</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"number\" class=\"jsdoc-link\">dojo/number</a> </p> <div class=\"jsdoc-summary\">\n<p>fixed number of decimal places to show. This overrides any information in the provided pattern.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_number___FormatOptions_round\">\n<span class=\"numberIcon\">round</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"number\" class=\"jsdoc-link\">dojo/number</a> </p> <div class=\"jsdoc-summary\">\n<p>5 rounds to nearest .5; 0 rounds to nearest whole (default). -1 means do not round.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_number___FormatOptions_type\">\n<span class=\"stringIcon\">type</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"number\" class=\"jsdoc-link\">dojo/number</a> </p> <div class=\"jsdoc-summary\">\n<p>choose a format type based on the locale from the following: decimal, scientific (not yet supported), percent, currency. decimal by default.</p> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/number.__FormatOptions.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/number.__FormatOptions.html</a>\n  </p>\n</div>\n","dojo/number.__integerregexpflags":"<h1>dojo/number.__IntegerRegexpFlags</h1>  <p> <strong>Note:</strong> This is not a real constructor, but just a description of the type of object that should be passed as a parameter to some method(s), and/or the return value from some method(s). In other words, the type exists only for documentation purposes, and you <strong>cannot</strong> call <code>new number.__IntegerRegexpFlags()</code> </p>          <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_number___IntegerRegexpFlags_groupSize\">\n<span class=\"numberIcon\">groupSize</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"number\" class=\"jsdoc-link\">dojo/number</a> </p> <div class=\"jsdoc-summary\">\n<p>group size between separators</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_number___IntegerRegexpFlags_groupSize2\">\n<span class=\"numberIcon\">groupSize2</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"number\" class=\"jsdoc-link\">dojo/number</a> </p> <div class=\"jsdoc-summary\">\n<p>second grouping, where separators 2..n have a different interval than the first separator (for India)</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_number___IntegerRegexpFlags_separator\">\n<span class=\"stringIcon\">separator</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"number\" class=\"jsdoc-link\">dojo/number</a> </p> <div class=\"jsdoc-summary\">\n<p>The character used as the thousands separator. Default is no separator. For more than one symbol use an array, e.g. <code>[\",\", \"\"]</code>, makes ',' optional.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_number___IntegerRegexpFlags_signed\">\n<span class=\"booleanIcon\">signed</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"number\" class=\"jsdoc-link\">dojo/number</a> </p> <div class=\"jsdoc-summary\">\n<p>The leading plus-or-minus sign. Can be true, false, or <code>[true,false]</code>. Default is <code>[true, false]</code>, (i.e. will match if it is signed or unsigned).</p> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/number.__IntegerRegexpFlags.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/number.__IntegerRegexpFlags.html</a>\n  </p>\n</div>\n","dojo/number.__parseoptions":"<h1>dojo/number.__ParseOptions</h1>  <p> <strong>Note:</strong> This is not a real constructor, but just a description of the type of object that should be passed as a parameter to some method(s), and/or the return value from some method(s). In other words, the type exists only for documentation purposes, and you <strong>cannot</strong> call <code>new number.__ParseOptions()</code> </p>          <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_number___ParseOptions_fractional\">\n<span class=\"booleanIcon\">fractional</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"number\" class=\"jsdoc-link\">dojo/number</a> </p> <div class=\"jsdoc-summary\">\n<p>Whether to include the fractional portion, where the number of decimal places are implied by pattern or explicit 'places' parameter. The value [true,false] makes the fractional portion optional.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_number___ParseOptions_locale\">\n<span class=\"stringIcon\">locale</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"number\" class=\"jsdoc-link\">dojo/number</a> </p> <div class=\"jsdoc-summary\">\n<p>override the locale used to determine formatting rules</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_number___ParseOptions_pattern\">\n<span class=\"stringIcon\">pattern</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"number\" class=\"jsdoc-link\">dojo/number</a> </p> <div class=\"jsdoc-summary\">\n<p>override <a href=\"http://www.unicode.org/reports/tr35/#Number_Format_Patterns\">formatting pattern</a> with this string. Default value is based on locale. Overriding this property will defeat localization. Literal characters in patterns are not supported.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_number___ParseOptions_strict\">\n<span class=\"booleanIcon\">strict</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"number\" class=\"jsdoc-link\">dojo/number</a> </p> <div class=\"jsdoc-summary\">\n<p>strict parsing, false by default. Strict parsing requires input as produced by the format() method. Non-strict is more permissive, e.g. flexible on white space, omitting thousands separators</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_number___ParseOptions_type\">\n<span class=\"stringIcon\">type</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"number\" class=\"jsdoc-link\">dojo/number</a> </p> <div class=\"jsdoc-summary\">\n<p>choose a format type based on the locale from the following: decimal, scientific (not yet supported), percent, currency. decimal by default.</p> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/number.__ParseOptions.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/number.__ParseOptions.html</a>\n  </p>\n</div>\n","dojo/number.__realnumberregexpflags":"<h1>dojo/number.__RealNumberRegexpFlags</h1>  <p> <strong>Note:</strong> This is not a real constructor, but just a description of the type of object that should be passed as a parameter to some method(s), and/or the return value from some method(s). In other words, the type exists only for documentation purposes, and you <strong>cannot</strong> call <code>new number.__RealNumberRegexpFlags()</code> </p>          <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_number___RealNumberRegexpFlags_decimal\">\n<span class=\"stringIcon\">decimal</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"number\" class=\"jsdoc-link\">dojo/number</a> </p> <div class=\"jsdoc-summary\">\n<p>A string for the character used as the decimal point. Default is \".\".</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_number___RealNumberRegexpFlags_eSigned\">\n<span class=\"booleanIcon\">eSigned</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"number\" class=\"jsdoc-link\">dojo/number</a> </p> <div class=\"jsdoc-summary\">\n<p>The leading plus-or-minus sign on the exponent. Can be true, false, or [true, false]. Default is [true, false], (i.e. will match if it is signed or unsigned). flags in regexp.integer can be applied.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_number___RealNumberRegexpFlags_exponent\">\n<span class=\"booleanIcon\">exponent</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"number\" class=\"jsdoc-link\">dojo/number</a> </p> <div class=\"jsdoc-summary\">\n<p>Express in exponential notation. Can be true, false, or [true, false]. Default is [true, false], (i.e. will match if the exponential part is present are not).</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_number___RealNumberRegexpFlags_fractional\">\n<span class=\"booleanIcon\">fractional</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"number\" class=\"jsdoc-link\">dojo/number</a> </p> <div class=\"jsdoc-summary\">\n<p>Whether decimal places are used. Can be true, false, or [true, false]. Default is [true, false] which means optional.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_number___RealNumberRegexpFlags_places\">\n<span class=\"numberIcon\">places</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"number\" class=\"jsdoc-link\">dojo/number</a> </p> <div class=\"jsdoc-summary\">\n<p>The integer number of decimal places or a range given as \"n,m\". If not given, the decimal part is optional and the number of places is unlimited.</p> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/number.__RealNumberRegexpFlags.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/number.__RealNumberRegexpFlags.html</a>\n  </p>\n</div>\n","dojo/number.__regexpoptions":"<h1>dojo/number.__RegexpOptions</h1>  <p> <strong>Note:</strong> This is not a real constructor, but just a description of the type of object that should be passed as a parameter to some method(s), and/or the return value from some method(s). In other words, the type exists only for documentation purposes, and you <strong>cannot</strong> call <code>new number.__RegexpOptions()</code> </p>          <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_number___RegexpOptions_locale\">\n<span class=\"stringIcon\">locale</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"number\" class=\"jsdoc-link\">dojo/number</a> </p> <div class=\"jsdoc-summary\">\n<p>override the locale used to determine formatting rules</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_number___RegexpOptions_pattern\">\n<span class=\"stringIcon\">pattern</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"number\" class=\"jsdoc-link\">dojo/number</a> </p> <div class=\"jsdoc-summary\">\n<p>override <a href=\"http://www.unicode.org/reports/tr35/#Number_Format_Patterns\">formatting pattern</a> with this string. Default value is based on locale. Overriding this property will defeat localization.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_number___RegexpOptions_places\">\n<span class=\"numberIcon\">places</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"number\" class=\"jsdoc-link\">dojo/number</a> </p> <div class=\"jsdoc-summary\">\n<p>number of decimal places to accept: Infinity, a positive number, or a range \"n,m\". Defined by pattern or Infinity if pattern not provided.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_number___RegexpOptions_strict\">\n<span class=\"booleanIcon\">strict</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"number\" class=\"jsdoc-link\">dojo/number</a> </p> <div class=\"jsdoc-summary\">\n<p>strict parsing, false by default. Strict parsing requires input as produced by the format() method. Non-strict is more permissive, e.g. flexible on white space, omitting thousands separators</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_number___RegexpOptions_type\">\n<span class=\"stringIcon\">type</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"number\" class=\"jsdoc-link\">dojo/number</a> </p> <div class=\"jsdoc-summary\">\n<p>choose a format type based on the locale from the following: decimal, scientific (not yet supported), percent, currency. decimal by default.</p> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/number.__RegexpOptions.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/number.__RegexpOptions.html</a>\n  </p>\n</div>\n","dojo/number":"<h1>dojo/number</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>localized formatting and parsing routines for Number</p>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/number.html\" target=\"_blank\">dojo/number reference documentation</a> for more information.</p>            <h2 id=\"properties\">Properties</h2>    <h2 id=\"methods\">Methods</h2>               <h3 class=\"jsdoc-title\" id=\"1_10dojo_number_format\">\n<span class=\"functionIcon\">format</span><span class=\"parameters\">(value,options)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"number\" class=\"jsdoc-link\">dojo/number</a> </p> <p>Format a Number as a String, using locale-specific settings</p>  <p>Create a string from a Number using a known localized pattern. Formatting patterns appropriate to the locale are chosen from the <a href=\"http://unicode.org/cldr\">Common Locale Data Repository</a> as well as the appropriate symbols and delimiters. If value is Infinity, -Infinity, or is not a valid JavaScript number, return null.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">value</td> <td class=\"jsdoc-param-type\">Number</td> <td class=\"jsdoc-param-description\">\n<p>the number to be formatted</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">options</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>An object with the following properties:</p>\n<ul>\n<li>pattern (String, optional): <p>override <a href=\"http://www.unicode.org/reports/tr35/#Number_Format_Patterns\">formatting pattern</a> with this string. Default value is based on locale. Overriding this property will defeat localization. Literal characters in patterns are not supported.</p> </li>\n<li>type (String, optional): <p>choose a format type based on the locale from the following: decimal, scientific (not yet supported), percent, currency. decimal by default.</p> </li>\n<li>places (Number, optional): <p>fixed number of decimal places to show. This overrides any information in the provided pattern.</p> </li>\n<li>round (Number, optional): <p>5 rounds to nearest .5; 0 rounds to nearest whole (default). -1 means do not round.</p> </li>\n<li>locale (String, optional): <p>override the locale used to determine formatting rules</p> </li>\n<li>fractional (Boolean, optional): <p>If false, show no decimal places, overriding places and pattern settings.</p> </li>\n</ul> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">null | undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_number_parse\">\n<span class=\"functionIcon\">parse</span><span class=\"parameters\">(expression,options)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"number\" class=\"jsdoc-link\">dojo/number</a> </p> <p>Convert a properly formatted string to a primitive Number, using locale-specific settings.</p>  <p>Create a Number from a string using a known localized pattern. Formatting patterns are chosen appropriate to the locale and follow the syntax described by <a href=\"http://www.unicode.org/reports/tr35/#Number_Format_Patterns\">unicode.org TR35</a> Note that literal characters in patterns are not supported.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">expression</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>A string representation of a Number</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">options</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>An object with the following properties:</p>\n<ul>\n<li>pattern (String, optional): <p>override <a href=\"http://www.unicode.org/reports/tr35/#Number_Format_Patterns\">formatting pattern</a> with this string. Default value is based on locale. Overriding this property will defeat localization. Literal characters in patterns are not supported.</p> </li>\n<li>type (String, optional): <p>choose a format type based on the locale from the following: decimal, scientific (not yet supported), percent, currency. decimal by default.</p> </li>\n<li>locale (String, optional): <p>override the locale used to determine formatting rules</p> </li>\n<li>strict (Boolean, optional): <p>strict parsing, false by default. Strict parsing requires input as produced by the format() method. Non-strict is more permissive, e.g. flexible on white space, omitting thousands separators</p> </li>\n<li>fractional (Boolean|Array, optional): <p>Whether to include the fractional portion, where the number of decimal places are implied by pattern or explicit 'places' parameter. The value [true,false] makes the fractional portion optional.</p> </li>\n</ul> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">number</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_number_regexp\">\n<span class=\"functionIcon\">regexp</span><span class=\"parameters\">(options)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"number\" class=\"jsdoc-link\">dojo/number</a> </p> <p>Builds the regular needed to parse a number</p>  <p>Returns regular expression with positive and negative match, group and decimal separators</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">options</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>An object with the following properties:</p>\n<ul>\n<li>pattern (String, optional): <p>override <a href=\"http://www.unicode.org/reports/tr35/#Number_Format_Patterns\">formatting pattern</a> with this string. Default value is based on locale. Overriding this property will defeat localization.</p> </li>\n<li>type (String, optional): <p>choose a format type based on the locale from the following: decimal, scientific (not yet supported), percent, currency. decimal by default.</p> </li>\n<li>locale (String, optional): <p>override the locale used to determine formatting rules</p> </li>\n<li>strict (Boolean, optional): <p>strict parsing, false by default. Strict parsing requires input as produced by the format() method. Non-strict is more permissive, e.g. flexible on white space, omitting thousands separators</p> </li>\n<li>places (Number|String, optional): <p>number of decimal places to accept: Infinity, a positive number, or a range \"n,m\". Defined by pattern or Infinity if pattern not provided.</p> </li>\n</ul> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_number_round\">\n<span class=\"functionIcon\">round</span><span class=\"parameters\">(value,places,increment)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"number\" class=\"jsdoc-link\">dojo/number</a> </p> <p>Rounds to the nearest value with the given number of decimal places, away from zero</p>  <p>Rounds to the nearest value with the given number of decimal places, away from zero if equal. Similar to Number.toFixed(), but compensates for browser quirks. Rounding can be done by fractional increments also, such as the nearest quarter. NOTE: Subject to floating point errors. See <a class=\"jsdoc-link\" href=\"http://dojotoolkit.org/api/1.10/dojox/math/round\">dojox/math/round</a> for experimental workaround.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">value</td> <td class=\"jsdoc-param-type\">Number</td> <td class=\"jsdoc-param-description\">\n<p>The number to round</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">places</td> <td class=\"jsdoc-param-type\">Number</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>The number of decimal places where rounding takes place. Defaults to 0 for whole rounding. Must be non-negative.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">increment</td> <td class=\"jsdoc-param-type\">Number</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Rounds next place to nearest value of increment/10. 10 by default.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">number</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>&gt;&gt;&gt; number.round(-0.5)\n-1\n&gt;&gt;&gt; number.round(162.295, 2)\n162.29  // note floating point error.  Should be 162.3\n&gt;&gt;&gt; number.round(10.71, 0, 2.5)\n10.75</code></pre> </div> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/number.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/number.html</a>\n  </p>\n</div>\n","dojo/on":"<h1>dojo/on</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>A function that provides core event listening functionality. With this function you can provide a target, event type, and listener to be notified of future matching events that are fired.</p>  <p>To listen for \"click\" events on a button node, we can do: </p> <pre><code>define([\"dojo/on\"], function(listen){\n    on(button, \"click\", clickHandler);\n    ...</code></pre> <p>Evented JavaScript objects can also have their own events. </p> <pre><code>var obj = new Evented;\non(obj, \"foo\", fooHandler);</code></pre> <p>And then we could publish a \"foo\" event: </p> <pre><code>on.emit(obj, \"foo\", {key: \"value\"});</code></pre> <p>We can use extension events as well. For example, you could listen for a tap gesture: </p> <pre><code>define([\"dojo/on\", \"dojo/gesture/tap\", function(listen, tap){\n    on(button, tap, tapHandler);\n    ...</code></pre> <p>which would trigger fooHandler. Note that for a simple object this is equivalent to calling: </p> <pre><code>obj.onfoo({key:\"value\"});</code></pre> <p>If you use on.emit on a DOM node, it will use native event dispatching when possible. </p>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">on<span class=\"parameters\"><span class=\"paren\">(</span><span class=\"args\">target,type,listener,dontFix</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">target</td> <td class=\"jsdoc-param-type\">Element | Object</td> <td class=\"jsdoc-param-description\">\n<p>This is the target object or DOM element that to receive events from</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">type</td> <td class=\"jsdoc-param-type\">String | Function</td> <td class=\"jsdoc-param-description\">\n<p>This is the name of the event to listen for or an extension event type.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">listener</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\">\n<p>This is the function that should be called when the event fires.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">dontFix</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Object | undefined</span></p> <p>An object with a remove() method that can be used to stop listening for this event.</p>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/on.html\" target=\"_blank\">dojo/on reference documentation</a> for more information.</p>          <h2 id=\"methods\">Methods</h2>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_on_emit\">\n<span class=\"functionIcon\">emit</span><span class=\"parameters\">(target,type,event)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"on\" class=\"jsdoc-link\">dojo/on</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">target</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">type</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">event</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_on_matches\">\n<span class=\"functionIcon\">matches</span><span class=\"parameters\">(node,selector,context,children,matchesTarget)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"on\" class=\"jsdoc-link\">dojo/on</a> </p> <p>Check if a node match the current selector within the constraint of a context</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode</td> <td class=\"jsdoc-param-description\">\n<p>The node that originate the event</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">selector</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>The selector to check against</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">context</td> <td class=\"jsdoc-param-type\">DOMNode</td> <td class=\"jsdoc-param-description\">\n<p>The context to search in.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">children</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\">\n<p>Indicates if children elements of the selector should be allowed. This defaults to true</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">matchesTarget</td> <td class=\"jsdoc-param-type\">Object | <a class=\"jsdoc-link\" href=\"query\">dojo/query</a>\n</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>An object with a property \"matches\" as a function. Default is dojo/query. Matching DOMNodes will be done against this function The function must return a Boolean. It will have 3 arguments: \"node\", \"selector\" and \"context\" True is expected if \"node\" is matching the current \"selector\" in the passed \"context\"</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">DOMNode</span></p> <p>The matching node, if any. Else you get false</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_on_once\">\n<span class=\"functionIcon\">once</span><span class=\"parameters\">(target,type,listener,dontFix)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"on\" class=\"jsdoc-link\">dojo/on</a> </p> <p>This function acts the same as on(), but will only call the listener once. The listener will be called for the first event that takes place and then listener will automatically be removed.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">target</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">type</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">listener</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">dontFix</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_on_parse\">\n<span class=\"functionIcon\">parse</span><span class=\"parameters\">(target,type,listener,addListener,dontFix,matchesTarget)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"on\" class=\"jsdoc-link\">dojo/on</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">target</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">type</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">listener</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">addListener</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">dontFix</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">matchesTarget</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_on_pausable\">\n<span class=\"functionIcon\">pausable</span><span class=\"parameters\">(target,type,listener,dontFix)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"on\" class=\"jsdoc-link\">dojo/on</a> </p> <p>This function acts the same as on(), but with pausable functionality. The returned signal object has pause() and resume() functions. Calling the pause() method will cause the listener to not be called for future events. Calling the resume() method will cause the listener to again be called for future events.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">target</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">type</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">listener</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">dontFix</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_on_selector\">\n<span class=\"functionIcon\">selector</span><span class=\"parameters\">(selector,eventType,children)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"on\" class=\"jsdoc-link\">dojo/on</a> </p> <p>Creates a new extension event with event delegation. This is based on the provided event type (can be extension event) that only calls the listener when the CSS selector matches the target of the event. </p> <p>The application must require() an appropriate level of dojo/query to handle the selector.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">selector</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\">\n<p>The CSS selector to use for filter events and determine the |this| of the event listener.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">eventType</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\">\n<p>The event to listen for</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">children</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\">\n<p>Indicates if children elements of the selector should be allowed. This defaults to true</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">it, or programatically by arrow key handling code.</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>require([\"dojo/on\", \"dojo/mouse\", \"dojo/query!css2\"], function(listen, mouse){\n    on(node, on.selector(\".my-class\", mouse.enter), handlerForMyHover);</code></pre> </div> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/on.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/on.html</a>\n  </p>\n</div>\n","dojo/on/asynceventlistener":"<h1>dojo/on/asyncEventListener</h1>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">asyncEventListener<span class=\"parameters\"><span class=\"paren\">(</span><span class=\"args\">listener</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">listener</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/on.html\" target=\"_blank\">dojo/on/asyncEventListener reference documentation</a> for more information.</p>          <h2 id=\"methods\">Methods</h2><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/on/asyncEventListener.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/on/asyncEventListener.html</a>\n  </p>\n</div>\n","dojo/on/debounce":"<h1>dojo/on/debounce</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>event parser for custom events</p>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">debounce<span class=\"parameters\"><span class=\"paren\">(</span><span class=\"args\">selector,delay</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">selector</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>The selector to check against</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">delay</td> <td class=\"jsdoc-param-type\">Interger</td> <td class=\"jsdoc-param-description\">\n<p>The amount of ms before testing the selector</p> </td> </tr> </table> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/on.html\" target=\"_blank\">dojo/on/debounce reference documentation</a> for more information.</p>          <h2 id=\"methods\">Methods</h2><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/on/debounce.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/on/debounce.html</a>\n  </p>\n</div>\n","dojo/on/throttle":"<h1>dojo/on/throttle</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>event parser for custom events</p>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">throttle<span class=\"parameters\"><span class=\"paren\">(</span><span class=\"args\">selector,delay</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">selector</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>The selector to check against</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">delay</td> <td class=\"jsdoc-param-type\">Interger</td> <td class=\"jsdoc-param-description\">\n<p>The amount of ms before testing the selector</p> </td> </tr> </table> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/on.html\" target=\"_blank\">dojo/on/throttle reference documentation</a> for more information.</p>          <h2 id=\"methods\">Methods</h2><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/on/throttle.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/on/throttle.html</a>\n  </p>\n</div>\n","dojo/promise/all":"<h1>dojo/promise/all</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>Takes multiple promises and returns a new promise that is fulfilled when all promises have been resolved or one has been rejected.</p>  <p>Takes multiple promises and returns a new promise that is fulfilled when all promises have been resolved or one has been rejected. If one of the promises is rejected, the returned promise is also rejected. Canceling the returned promise will <em>not</em> cancel any passed promises.</p>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">all<span class=\"parameters\"><span class=\"paren\">(</span><span class=\"args\">objectOrArray</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">objectOrArray</td> <td class=\"jsdoc-param-type\">Object | Array</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>The promise will be fulfilled with a list of results if invoked with an array, or an object of results when passed an object (using the same keys). If passed neither an object or array it is resolved with an undefined value.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\"><a class=\"jsdoc-link\" href=\"promise\">dojo/promise/Promise</a> | undefined</span></p> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/promise/all.html\" target=\"_blank\">dojo/promise/all reference documentation</a> for more information.</p>          <h2 id=\"methods\">Methods</h2><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/promise/all.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/promise/all.html</a>\n  </p>\n</div>\n","dojo/promise/first":"<h1>dojo/promise/first</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>Takes multiple promises and returns a new promise that is fulfilled when the first of these promises is fulfilled.</p>  <p>Takes multiple promises and returns a new promise that is fulfilled when the first of these promises is fulfilled. Canceling the returned promise will <em>not</em> cancel any passed promises. The promise will be fulfilled with the value of the first fulfilled promise.</p>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">first<span class=\"parameters\"><span class=\"paren\">(</span><span class=\"args\">objectOrArray</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">objectOrArray</td> <td class=\"jsdoc-param-type\">Object | Array</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>The promises are taken from the array or object values. If no value is passed, the returned promise is resolved with an undefined value.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\"><a class=\"jsdoc-link\" href=\"promise\">dojo/promise/Promise</a></span></p> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/promise/first.html\" target=\"_blank\">dojo/promise/first reference documentation</a> for more information.</p>          <h2 id=\"methods\">Methods</h2><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/promise/first.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/promise/first.html</a>\n  </p>\n</div>\n","dojo/promise/instrumentation":"<h1>dojo/promise/instrumentation</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>Initialize instrumentation for the Deferred class.</p>  <p>Initialize instrumentation for the Deferred class. Done automatically by <a class=\"jsdoc-link\" href=\"../deferred\">dojo/Deferred</a> if the <code>deferredInstrumentation</code> and <code>useDeferredInstrumentation</code> config options are set. </p> <p>Sets up <a class=\"jsdoc-link\" href=\"tracer\">dojo/promise/tracer</a> to log to the console. </p> <p>Sets up instrumentation of rejected deferreds so unhandled errors are logged to the console.</p>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">instrumentation<span class=\"parameters\"><span class=\"paren\">(</span><span class=\"args\">Deferred</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">Deferred</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/promise.html\" target=\"_blank\">dojo/promise/instrumentation reference documentation</a> for more information.</p>          <h2 id=\"methods\">Methods</h2><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/promise/instrumentation.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/promise/instrumentation.html</a>\n  </p>\n</div>\n","dojo/parser":"<h1>dojo/parser</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>The Dom/Widget parsing package</p>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/parser.html\" target=\"_blank\">dojo/parser reference documentation</a> for more information.</p>            <h2 id=\"properties\">Properties</h2>     <h2 id=\"methods\">Methods</h2>         <h3 class=\"jsdoc-title\" id=\"1_10dojo_parser_construct\">\n<span class=\"functionIcon\">construct</span><span class=\"parameters\">(ctor,node,mixin,options,scripts,inherited)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"parser\" class=\"jsdoc-link\">dojo/parser</a> </p> <p>Calls new ctor(params, node), where params is the hash of parameters specified on the node, excluding data-dojo-type and data-dojo-mixins. Does not call startup().</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">ctor</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\">\n<p>Widget constructor.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode</td> <td class=\"jsdoc-param-description\">\n<p>This node will be replaced/attached to by the widget. It also specifies the arguments to pass to ctor.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">mixin</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Attributes in this object will be passed as parameters to ctor, overriding attributes specified on the node.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">options</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>An options object used to hold kwArgs for instantiation. See parse.options argument for details.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">scripts</td> <td class=\"jsdoc-param-type\">DomNode[]</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Array of <code>&lt;script type=\"dojo/*\"&gt;</code> DOMNodes. If not specified, will search for <code>&lt;script&gt;</code> tags inside node.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">inherited</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Settings from dir=rtl or lang=... on a node above this node. Overrides options.inherited.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | undefined</span></p> <p>Instance or Promise for the instance, if markupFactory() itself returned a promise</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_parser_instantiate\">\n<span class=\"functionIcon\">instantiate</span><span class=\"parameters\">(nodes,mixin,options)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"parser\" class=\"jsdoc-link\">dojo/parser</a> </p> <p>Takes array of nodes, and turns them into class instances and potentially calls a startup method to allow them to connect with any children.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">nodes</td> <td class=\"jsdoc-param-type\">Array</td> <td class=\"jsdoc-param-description\">\n<p>Array of DOM nodes</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">mixin</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>An object that will be mixed in with each node in the array. Values in the mixin will override values in the node, if they exist.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">options</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>An object used to hold kwArgs for instantiation. See parse.options argument for details.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | undefined</span></p> <p>Array of instances.</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_parser_parse\">\n<span class=\"functionIcon\">parse</span><span class=\"parameters\">(rootNode,options)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"parser\" class=\"jsdoc-link\">dojo/parser</a> </p> <p>Scan the DOM for class instances, and instantiate them.</p>  <p>Search specified node (or root node) recursively for class instances, and instantiate them. Searches for either data-dojo-type=\"Class\" or dojoType=\"Class\" where \"Class\" is a a fully qualified class name, like <a class=\"jsdoc-link\" href=\"http://dojotoolkit.org/api/1.10/dijit/form/Button\">dijit/form/Button</a> </p> <p>Using <code>data-dojo-type</code>: Attributes using can be mixed into the parameters used to instantiate the Class by using a <code>data-dojo-props</code> attribute on the node being converted. <code>data-dojo-props</code> should be a string attribute to be converted from JSON. </p> <p>Using <code>dojoType</code>: Attributes are read from the original domNode and converted to appropriate types by looking up the Class prototype values. This is the default behavior from Dojo 1.0 to Dojo 1.5. <code>dojoType</code> support is deprecated, and will go away in Dojo 2.0.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">rootNode</td> <td class=\"jsdoc-param-type\">DomNode</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>A default starting root node from which to start the parsing. Can be omitted, defaulting to the entire document. If omitted, the <code>options</code> object can be passed in this place. If the <code>options</code> object has a <code>rootNode</code> member, that is used.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">options</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>A hash of options. </p> <ul> <li>noStart: Boolean?: when set will prevent the parser from calling .startup() when locating the nodes.</li> <li>rootNode: DomNode?: identical to the function's <code>rootNode</code> argument, though allowed to be passed in via this `options object.</li> <li>template: Boolean: If true, ignores ContentPane's stopParser flag and parses contents inside of a ContentPane inside of a template. This allows dojoAttachPoint on widgets/nodes nested inside the ContentPane to work.</li> <li>inherited: Object: Hash possibly containing dir and lang settings to be applied to parsed widgets, unless there's another setting on a sub-node that overrides</li> <li>scope: String: Root for attribute names to search for. If scopeName is dojo, will search for data-dojo-type (or dojoType). For backwards compatibility reasons defaults to dojo._scopeName (which is \"dojo\" except when multi-version support is used, when it will be something like dojo16, dojo20, etc.)</li> <li>propsThis: Object: If specified, \"this\" referenced from data-dojo-props will refer to propsThis. Intended for use from the widgets-in-template feature of <code>dijit._WidgetsInTemplateMixin</code>\n</li> <li>contextRequire: Function: If specified, this require is utilised for looking resolving modules instead of the <code>dojo/parser</code> context <code>require()</code>. Intended for use from the widgets-in-template feature of <code>dijit._WidgetsInTemplateMixin</code>.</li> </ul> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Mixed | Array</span></p> <p>Returns a blended object that is an array of the instantiated objects, but also can include a promise that is resolved with the instantiated objects. This is done for backwards compatibility. If the parser auto-requires modules, it will always behave in a promise fashion and <code>parser.parse().then(function(instances){...})</code> should be used.</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Parse all widgets on a page: </p> <pre><code>parser.parse();</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>Parse all classes within the node with id=\"foo\" </p> <pre><code>parser.parse(dojo.byId('foo'));</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<p>Parse all classes in a page, but do not call .startup() on any child </p> <pre><code>parser.parse({ noStart: true })</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 4</h3>\n<p>Parse all classes in a node, but do not call .startup() </p> <pre><code>parser.parse(someNode, { noStart:true });\n// or\nparser.parse({ noStart:true, rootNode: someNode });</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_parser_scan\">\n<span class=\"functionIcon\">scan</span><span class=\"parameters\">(root,options)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"parser\" class=\"jsdoc-link\">dojo/parser</a> </p> <p>Scan a DOM tree and return an array of objects representing the DOMNodes that need to be turned into widgets.</p>  <p>Search specified node (or document root node) recursively for class instances and return an array of objects that represent potential widgets to be instantiated. Searches for either data-dojo-type=\"MID\" or dojoType=\"MID\" where \"MID\" is a module ID like \"<a class=\"jsdoc-link\" href=\"http://dojotoolkit.org/api/1.10/dijit/form/Button\">dijit/form/Button</a>\" or a fully qualified Class name like \"<a class=\"jsdoc-link\" href=\"http://dojotoolkit.org/api/1.10/dijit/form/Button\">dijit/form/Button</a>\". If the MID is not currently available, scan will attempt to require() in the module. </p> <p>See parser.parse() for details of markup.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">root</td> <td class=\"jsdoc-param-type\">DomNode</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>A default starting root node from which to start the parsing. Can be omitted, defaulting to the entire document. If omitted, the <code>options</code> object can be passed in this place. If the <code>options</code> object has a <code>rootNode</code> member, that is used.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">options</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>a kwArgs options object, see parse() for details </p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Promise | undefined</span></p> <p>A promise that is resolved with the nodes that have been parsed.</p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/parser.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/parser.html</a>\n  </p>\n</div>\n","dojo/promise/tracer":"<h1>dojo/promise/tracer</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>Trace promise fulfillment.</p>  <p>Trace promise fulfillment. Calling <code>.trace()</code> or <code>.traceError()</code> on a promise enables tracing. Will emit <code>resolved</code>, <code>rejected</code> or <code>progress</code> events.</p>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/promise.html\" target=\"_blank\">dojo/promise/tracer reference documentation</a> for more information.</p>          <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_promise_tracer_on\">\n<span class=\"functionIcon\">on</span><span class=\"parameters\">(type,listener)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"tracer\" class=\"jsdoc-link\">dojo/promise/tracer</a> </p> <p>Subscribe to traces.</p>  <p>See <a class=\"jsdoc-link\" href=\"../evented\">dojo/Evented</a>#on().</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">type</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p><code>resolved</code>, <code>rejected</code>, or <code>progress</code></p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">listener</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\">\n<p>The listener is passed the traced value and any arguments that were used with the <code>.trace()</code> call.</p> </td> </tr> </table><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/promise/tracer.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/promise/tracer.html</a>\n  </p>\n</div>\n","dojo/query":"<h1>dojo/query</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>This modules provides DOM querying functionality. The module export is a function that can be used to query for DOM nodes by CSS selector and returns a NodeList representing the matching nodes.</p>  <p><a class=\"jsdoc-link\" href=\"query\">dojo/query</a> is responsible for loading the appropriate query engine and wrapping its results with a <code>NodeList</code>. You can use <a class=\"jsdoc-link\" href=\"query\">dojo/query</a> with a specific selector engine by using it as a plugin. For example, if you installed the sizzle package, you could use it as the selector engine with: </p> <pre><code>require([\"dojo/query!sizzle\"], function(query){\n    query(\"div\")...</code></pre> <p>The id after the ! can be a module id of the selector engine or one of the following values: </p> <ul> <li>\n<p>acme: This is the default engine used by Dojo base, and will ensure that the full Acme engine is always loaded.</p> </li> <li>\n<p>css2: If the browser has a native selector engine, this will be used, otherwise a very minimal lightweight selector engine will be loaded that can do simple CSS2 selectors (by #id, .class, tag, and [name=value] attributes, with standard child or descendant (&gt;) operators) and nothing more.</p> </li> <li>\n<p>css2.1: If the browser has a native selector engine, this will be used, otherwise the full Acme engine will be loaded.</p> </li> <li>\n<p>css3: If the browser has a native selector engine with support for CSS3 pseudo selectors (most modern browsers except IE8), this will be used, otherwise the full Acme engine will be loaded.</p> </li> <li>\n<p>Or the module id of a selector engine can be used to explicitly choose the selector engine</p> </li> </ul> <p>For example, if you are using CSS3 pseudo selectors in module, you can specify that you will need support them with: </p> <pre><code>require([\"dojo/query!css3\"], function(query){\n    query('#t &gt; h3:nth-child(odd)')...</code></pre> <p>You can also choose the selector engine/load configuration by setting the query-selector: For example: </p> <pre><code>&lt;script data-dojo-config=\"query-selector:'css3'\" src=\"dojo.js\"&gt;&lt;/script&gt;</code></pre>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">query<span class=\"parameters\"><span class=\"paren\">(</span><span class=\"args\">selector,context</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">selector</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>A CSS selector to search for.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">context</td> <td class=\"jsdoc-param-type\">String | DomNode</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>An optional context to limit the searching scope. Only nodes under <code>context</code> will be scanned.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">instance</span></p> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/query.html\" target=\"_blank\">dojo/query reference documentation</a> for more information.</p>    <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>add an onclick handler to every submit button in the document which causes the form to be sent via Ajax instead: </p> <pre><code>require([\"dojo/query\", \"dojo/request\", \"dojo/dom-form\", \"dojo/dom-construct\", \"dojo/dom-style\"\n], function(query, request, domForm, domConstruct, domStyle){\n    query(\"input[type='submit']\").on(\"click\", function(e){\n        e.preventDefault(); // prevent sending the form\n        var btn = e.target;\n        request.post(\"http://example.com/\", {\n            data: domForm.toObject(btn.form)\n        }).then(function(response){\n            // replace the form with the response\n            domConstruct.create(div, {innerHTML: response}, btn.form, \"after\");\n            domStyle.set(btn.form, \"display\", \"none\");\n        });\n    });\n});</code></pre> </div> </div>       <h2 id=\"methods\">Methods</h2>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_query_load\">\n<span class=\"functionIcon\">load</span><span class=\"parameters\">(id,parentRequire,loaded)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"query\" class=\"jsdoc-link\">dojo/query</a> </p> <p>can be used as AMD plugin to conditionally load new query engine</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">id</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">parentRequire</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">loaded</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>require([\"dojo/query!custom\"], function(qsa){\n    // loaded selector/custom.js as engine\n    qsa(\"#foobar\").forEach(...);\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_query_NodeList\">\n<span class=\"functionIcon\">NodeList</span><span class=\"parameters\">(array)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"query\" class=\"jsdoc-link\">dojo/query</a> </p> <p>Array-like object which adds syntactic sugar for chaining, common iteration operations, animation, and node manipulation. NodeLists are most often returned as the result of dojo/query() calls.</p>  <p>NodeList instances provide many utilities that reflect core Dojo APIs for Array iteration and manipulation, DOM manipulation, and event handling. Instead of needing to dig up functions in the dojo package, NodeLists generally make the full power of Dojo available for DOM manipulation tasks in a simple, chainable way.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">array</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Array</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>create a node list from a node </p> <pre><code>require([\"dojo/query\", \"dojo/dom\"\n], function(query, dom){\n    query.NodeList(dom.byId(\"foo\"));\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>get a NodeList from a CSS query and iterate on it </p> <pre><code>require([\"dojo/on\", \"dojo/dom\"\n], function(on, dom){\n    var l = query(\".thinger\");\n    l.forEach(function(node, index, nodeList){\n        console.log(index, node.innerHTML);\n    });\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<p>use native and Dojo-provided array methods to manipulate a NodeList without needing to use dojo.* functions explicitly: </p> <pre><code>require([\"dojo/query\", \"dojo/dom-construct\", \"dojo/dom\"\n], function(query, domConstruct, dom){\n    var l = query(\".thinger\");\n    // since NodeLists are real arrays, they have a length\n    // property that is both readable and writable and\n    // push/pop/shift/unshift methods\n    console.log(l.length);\n    l.push(domConstruct.create(\"span\"));\n\n    // dojo's normalized array methods work too:\n    console.log( l.indexOf(dom.byId(\"foo\")) );\n    // ...including the special \"function as string\" shorthand\n    console.log( l.every(\"item.nodeType == 1\") );\n\n    // NodeLists can be [..] indexed, or you can use the at()\n    // function to get specific items wrapped in a new NodeList:\n    var node = l[3]; // the 4th element\n    var newList = l.at(1, 3); // the 2nd and 4th elements\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 4</h3>\n<p>chainability is a key advantage of NodeLists: </p> <pre><code>require([\"dojo/query\", \"dojo/NodeList-dom\"\n], function(query){\n    query(\".thinger\")\n        .onclick(function(e){ /* ... */ })\n        .at(1, 3, 8) // get a subset\n            .style(\"padding\", \"5px\")\n            .forEach(console.log);\n});</code></pre> </div> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/query.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/query.html</a>\n  </p>\n</div>\n","dojo/ready":"<h1>dojo/ready</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>Add a function to execute on DOM content loaded and all requested modules have arrived and been evaluated. In most cases, the <code>domReady</code> plug-in should suffice and this method should not be needed. </p> <p>When called in a non-browser environment, just checks that all requested modules have arrived and been evaluated.</p>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">ready<span class=\"parameters\"><span class=\"paren\">(</span><span class=\"args\">priority,context,callback</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">priority</td> <td class=\"jsdoc-param-type\">Integer</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>The order in which to exec this callback relative to other callbacks, defaults to 1000</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">context</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\">\n<p>The context in which to run execute callback, or a callback if not using context</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">callback</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>The function to execute. </p> </td> </tr> </table> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/ready.html\" target=\"_blank\">dojo/ready reference documentation</a> for more information.</p>    <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Simple DOM and Modules ready syntax </p> <pre><code>require([\"dojo/ready\"], function(ready){\n    ready(function(){ alert(\"Dom ready!\"); });\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>Using a priority </p> <pre><code>require([\"dojo/ready\"], function(ready){\n    ready(2, function(){ alert(\"low priority ready!\"); })\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<p>Using context </p> <pre><code>require([\"dojo/ready\"], function(ready){\n    ready(foo, function(){\n        // in here, this == foo\n    });\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 4</h3>\n<p>Using dojo/hitch style args: </p> <pre><code>require([\"dojo/ready\"], function(ready){\n    var foo = { dojoReady: function(){ console.warn(this, \"dojo dom and modules ready.\"); } };\n    ready(foo, \"dojoReady\");\n});</code></pre> </div> </div>       <h2 id=\"methods\">Methods</h2><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/ready.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/ready.html</a>\n  </p>\n</div>\n","dojo/regexp":"<h1>dojo/regexp</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>Regular expressions and Builder resources</p>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/regexp.html\" target=\"_blank\">dojo/regexp reference documentation</a> for more information.</p>          <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_regexp_buildGroupRE\">\n<span class=\"functionIcon\">buildGroupRE</span><span class=\"parameters\">(arr,re,nonCapture)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"regexp\" class=\"jsdoc-link\">dojo/regexp</a> </p> <p>Builds a regular expression that groups subexpressions</p>  <p>A utility function used by some of the RE generators. The subexpressions are constructed by the function, re, in the second parameter. re builds one subexpression for each elem in the array a, in the first parameter. Returns a string for a regular expression that groups all the subexpressions.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">arr</td> <td class=\"jsdoc-param-type\">Object | Array</td> <td class=\"jsdoc-param-description\">\n<p>A single value or an array of values.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">re</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\">\n<p>A function. Takes one parameter and converts it to a regular expression.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">nonCapture</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>If true, uses non-capturing match, otherwise matches are retained by regular expression. Defaults to false</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_regexp_escapeString\">\n<span class=\"functionIcon\">escapeString</span><span class=\"parameters\">(str,except)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"regexp\" class=\"jsdoc-link\">dojo/regexp</a> </p> <p>Adds escape sequences for special characters in regular expressions</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">str</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">except</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>a String with special characters to be left unescaped</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_regexp_group\">\n<span class=\"functionIcon\">group</span><span class=\"parameters\">(expression,nonCapture)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"regexp\" class=\"jsdoc-link\">dojo/regexp</a> </p> <p>adds group match to expression</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">expression</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">nonCapture</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>If true, uses non-capturing match, otherwise matches are retained by regular expression.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">string</span></p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/regexp.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/regexp.html</a>\n  </p>\n</div>\n","dojo/request":"<h1>dojo/request</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>Send a request using the default transport for the current platform.</p>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">request<span class=\"parameters\"><span class=\"paren\">(</span><span class=\"args\">url,options</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">url</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>The URL to request.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">options</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"request.__options\">dojo/request.__Options</a></td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Options for the request.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\"><a class=\"jsdoc-link\" href=\"request.__promise\">dojo/request.__Promise</a></span></p> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/request.html\" target=\"_blank\">dojo/request reference documentation</a> for more information.</p>          <h2 id=\"methods\">Methods</h2>        <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_del\">\n<span class=\"functionIcon\">del</span><span class=\"parameters\">(url,options)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"request\" class=\"jsdoc-link\">dojo/request</a> </p> <p>Send an HTTP DELETE request using the default transport for the current platform.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">url</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>URL to request</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">options</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"request.__baseoptions\">dojo/request.__BaseOptions</a></td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Options for the request.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\"><a class=\"jsdoc-link\" href=\"request.__promise\">dojo/request.__Promise</a></span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_get\">\n<span class=\"functionIcon\">get</span><span class=\"parameters\">(url,options)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"request\" class=\"jsdoc-link\">dojo/request</a> </p> <p>Send an HTTP GET request using the default transport for the current platform.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">url</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>URL to request</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">options</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"request.__baseoptions\">dojo/request.__BaseOptions</a></td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Options for the request.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\"><a class=\"jsdoc-link\" href=\"request.__promise\">dojo/request.__Promise</a></span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_post\">\n<span class=\"functionIcon\">post</span><span class=\"parameters\">(url,options)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"request\" class=\"jsdoc-link\">dojo/request</a> </p> <p>Send an HTTP POST request using the default transport for the current platform.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">url</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>URL to request</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">options</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"request.__baseoptions\">dojo/request.__BaseOptions</a></td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Options for the request.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\"><a class=\"jsdoc-link\" href=\"request.__promise\">dojo/request.__Promise</a> | undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_put\">\n<span class=\"functionIcon\">put</span><span class=\"parameters\">(url,options)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"request\" class=\"jsdoc-link\">dojo/request</a> </p> <p>Send an HTTP POST request using the default transport for the current platform.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">url</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>URL to request</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">options</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"request.__baseoptions\">dojo/request.__BaseOptions</a></td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Options for the request.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\"><a class=\"jsdoc-link\" href=\"request.__promise\">dojo/request.__Promise</a></span></p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/request.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/request.html</a>\n  </p>\n</div>\n","dojo/request.__baseoptions":"<h1>dojo/request.__BaseOptions</h1>  <p> <strong>Note:</strong> This is not a real constructor, but just a description of the type of object that should be passed as a parameter to some method(s), and/or the return value from some method(s). In other words, the type exists only for documentation purposes, and you <strong>cannot</strong> call <code>new request.__BaseOptions()</code> </p>          <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_request___BaseOptions_data\">\n<span class=\"stringIcon\">data</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"request\" class=\"jsdoc-link\">dojo/request</a> </p> <div class=\"jsdoc-summary\">\n<p>Data to transfer. This is ignored for GET and DELETE requests.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request___BaseOptions_handleAs\">\n<span class=\"stringIcon\">handleAs</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"request\" class=\"jsdoc-link\">dojo/request</a> </p> <div class=\"jsdoc-summary\">\n<p>How to handle the response from the server. Default is 'text'. Other values are 'json', 'javascript', and 'xml'.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request___BaseOptions_preventCache\">\n<span class=\"booleanIcon\">preventCache</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"request\" class=\"jsdoc-link\">dojo/request</a> </p> <div class=\"jsdoc-summary\">\n<p>Whether to append a cache-busting parameter to the URL.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request___BaseOptions_query\">\n<span class=\"stringIcon\">query</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"request\" class=\"jsdoc-link\">dojo/request</a> </p> <div class=\"jsdoc-summary\">\n<p>Query parameters to append to the URL.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request___BaseOptions_timeout\">\n<span class=\"numberIcon\">timeout</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"request\" class=\"jsdoc-link\">dojo/request</a> </p> <div class=\"jsdoc-summary\">\n<p>Milliseconds to wait for the response. If this time passes, the then the promise is rejected.</p> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/request.__BaseOptions.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/request.__BaseOptions.html</a>\n  </p>\n</div>\n","dojo/_base/kernel":"<h1>dojo/_base/kernel</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>This module is the foundational module of the dojo boot sequence; it defines the dojo object.</p>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/_base/kernel.html\" target=\"_blank\">dojo/_base/kernel reference documentation</a> for more information.</p>            <h2 id=\"properties\">Properties</h2>              <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_back\">\n<span class=\"objectIcon\">back</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../back\" class=\"jsdoc-link\">dojo/back</a> </p> <div class=\"jsdoc-summary\">\n<p>Browser history management resources</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_baseUrl\">\n<span class=\"stringIcon\">baseUrl</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"configspidermonkey\" class=\"jsdoc-link\">dojo/_base/configSpidermonkey</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_behavior\">\n<span class=\"objectIcon\">behavior</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../behavior\" class=\"jsdoc-link\">dojo/behavior</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_cldr\">\n<span class=\"objectIcon\">cldr</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../cldr/monetary\" class=\"jsdoc-link\">dojo/cldr/monetary</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_colors\">\n<span class=\"objectIcon\">colors</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_config\">\n<span class=\"objectIcon\">config</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"kernel\" class=\"jsdoc-link\">dojo/_base/kernel</a> </p> <div class=\"jsdoc-summary\">\n<p>This module defines the user configuration during bootstrap.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_connectPublisher\">\n<span class=\"objectIcon\">connectPublisher</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../robotx\" class=\"jsdoc-link\">dojo/robotx</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_contentHandlers\">\n<span class=\"objectIcon\">contentHandlers</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>A map of available XHR transport handle types. Name matches the <code>handleAs</code> attribute passed to XHR calls.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_currency\">\n<span class=\"objectIcon\">currency</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../currency\" class=\"jsdoc-link\">dojo/currency</a> </p> <div class=\"jsdoc-summary\">\n<p>localized formatting and parsing routines for currencies</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_data\">\n<span class=\"objectIcon\">data</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../data/util/filter\" class=\"jsdoc-link\">dojo/data/util/filter</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_date\">\n<span class=\"objectIcon\">date</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../date/stamp\" class=\"jsdoc-link\">dojo/date/stamp</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_dijit\">\n<span class=\"objectIcon\">dijit</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"kernel\" class=\"jsdoc-link\">dojo/_base/kernel</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_dnd\">\n<span class=\"objectIcon\">dnd</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../dnd/common\" class=\"jsdoc-link\">dojo/dnd/common</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_doc\">\n<span class=\"objectIcon\">doc</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"window\" class=\"jsdoc-link\">dojo/_base/window</a> </p> <div class=\"jsdoc-summary\">\n<p>Alias for the current document. 'doc' can be modified for temporary context shifting. See also withDoc().</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_dojox\">\n<span class=\"objectIcon\">dojox</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"kernel\" class=\"jsdoc-link\">dojo/_base/kernel</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_fx\">\n<span class=\"objectIcon\">fx</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../fx\" class=\"jsdoc-link\">dojo/fx</a> </p> <div class=\"jsdoc-summary\">\n<p>Effects library on top of Base animations</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_gears\">\n<span class=\"objectIcon\">gears</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../gears\" class=\"jsdoc-link\">dojo/gears</a> </p> <div class=\"jsdoc-summary\">\n<p>TODOC</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_global\">\n<span class=\"objectIcon\">global</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"window\" class=\"jsdoc-link\">dojo/_base/window</a> </p> <div class=\"jsdoc-summary\">\n<p>Alias for the current window. 'global' can be modified for temporary context shifting. See also withGlobal().</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_html\">\n<span class=\"objectIcon\">html</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../html\" class=\"jsdoc-link\">dojo/html</a> </p> <div class=\"jsdoc-summary\">\n<p>TODOC</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_i18n\">\n<span class=\"objectIcon\">i18n</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../i18n\" class=\"jsdoc-link\">dojo/i18n</a> </p> <div class=\"jsdoc-summary\">\n<p>This module implements the <a class=\"jsdoc-link\" href=\"../i18n\">dojo/i18n</a>! plugin and the v1.6- i18n API</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_io\">\n<span class=\"objectIcon\">io</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../io/iframe\" class=\"jsdoc-link\">dojo/io/iframe</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_isAir\">\n<span class=\"booleanIcon\">isAir</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"sniff\" class=\"jsdoc-link\">dojo/_base/sniff</a> </p> <div class=\"jsdoc-summary\">\n<p>True if client is Adobe Air</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_isAndroid\">\n<span class=\"numberIcon\">isAndroid</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"sniff\" class=\"jsdoc-link\">dojo/_base/sniff</a> </p> <div class=\"jsdoc-summary\">\n<p>Version as a Number if client is android browser. undefined otherwise.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_isAsync\">\n<span class=\"booleanIcon\">isAsync</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"kernel\" class=\"jsdoc-link\">dojo/_base/kernel</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_isBrowser\">\n<span class=\"booleanIcon\">isBrowser</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"configfirefoxextension\" class=\"jsdoc-link\">dojo/_base/configFirefoxExtension</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_isChrome\">\n<span class=\"numberIcon\">isChrome</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"sniff\" class=\"jsdoc-link\">dojo/_base/sniff</a> </p> <div class=\"jsdoc-summary\">\n<p>Version as a Number if client is Chrome browser. undefined otherwise.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_isCopyKey\">\n<span class=\"objectIcon\">isCopyKey</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"http://dojotoolkit.org/api/1.10/dojox/grid/_Grid\" class=\"jsdoc-link\">dojox/grid/_Grid</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_isFF\">\n<span class=\"objectIcon\">isFF</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"configfirefoxextension\" class=\"jsdoc-link\">dojo/_base/configFirefoxExtension</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_isIE\">\n<span class=\"numberIcon\">isIE</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"sniff\" class=\"jsdoc-link\">dojo/_base/sniff</a> </p> <div class=\"jsdoc-summary\">\n<p>Version as a Number if client is MSIE(PC). undefined otherwise. Corresponds to major detected IE version (6, 7, 8, etc.)</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_isIos\">\n<span class=\"numberIcon\">isIos</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"sniff\" class=\"jsdoc-link\">dojo/_base/sniff</a> </p> <div class=\"jsdoc-summary\">\n<p>Version as a Number if client is iPhone, iPod, or iPad. undefined otherwise.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_isKhtml\">\n<span class=\"numberIcon\">isKhtml</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"sniff\" class=\"jsdoc-link\">dojo/_base/sniff</a> </p> <div class=\"jsdoc-summary\">\n<p>Version as a Number if client is a KHTML browser. undefined otherwise. Corresponds to major detected version.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_isMac\">\n<span class=\"booleanIcon\">isMac</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"sniff\" class=\"jsdoc-link\">dojo/_base/sniff</a> </p> <div class=\"jsdoc-summary\">\n<p>True if the client runs on Mac</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_isMoz\">\n<span class=\"objectIcon\">isMoz</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"configfirefoxextension\" class=\"jsdoc-link\">dojo/_base/configFirefoxExtension</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_isMozilla\">\n<span class=\"objectIcon\">isMozilla</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"configfirefoxextension\" class=\"jsdoc-link\">dojo/_base/configFirefoxExtension</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_isOpera\">\n<span class=\"numberIcon\">isOpera</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"sniff\" class=\"jsdoc-link\">dojo/_base/sniff</a> </p> <div class=\"jsdoc-summary\">\n<p>Version as a Number if client is Opera. undefined otherwise. Corresponds to major detected version.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_isQuirks\">\n<span class=\"booleanIcon\">isQuirks</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"configfirefoxextension\" class=\"jsdoc-link\">dojo/_base/configFirefoxExtension</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_isSafari\">\n<span class=\"numberIcon\">isSafari</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"sniff\" class=\"jsdoc-link\">dojo/_base/sniff</a> </p> <div class=\"jsdoc-summary\">\n<p>Version as a Number if client is Safari or iPhone. undefined otherwise.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_isSpidermonkey\">\n<span class=\"booleanIcon\">isSpidermonkey</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"configspidermonkey\" class=\"jsdoc-link\">dojo/_base/configSpidermonkey</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_isWebKit\">\n<span class=\"numberIcon\">isWebKit</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"sniff\" class=\"jsdoc-link\">dojo/_base/sniff</a> </p> <div class=\"jsdoc-summary\">\n<p>Version as a Number if client is a WebKit-derived browser (Konqueror, Safari, Chrome, etc.). undefined otherwise.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_isWii\">\n<span class=\"booleanIcon\">isWii</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"sniff\" class=\"jsdoc-link\">dojo/_base/sniff</a> </p> <div class=\"jsdoc-summary\">\n<p>True if client is Wii</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_keys\">\n<span class=\"objectIcon\">keys</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../keys\" class=\"jsdoc-link\">dojo/keys</a> </p> <div class=\"jsdoc-summary\">\n<p>Definitions for common key values. Client code should test keyCode against these named constants, as the actual codes can vary by browser.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_locale\">\n<span class=\"objectIcon\">locale</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"configfirefoxextension\" class=\"jsdoc-link\">dojo/_base/configFirefoxExtension</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_mouseButtons\">\n<span class=\"objectIcon\">mouseButtons</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../mouse\" class=\"jsdoc-link\">dojo/mouse</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_number\">\n<span class=\"objectIcon\">number</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../number\" class=\"jsdoc-link\">dojo/number</a> </p> <div class=\"jsdoc-summary\">\n<p>localized formatting and parsing routines for Number</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_parser\">\n<span class=\"stringIcon\">parser</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"http://dojotoolkit.org/api/1.10/dojox/mobile/parser\" class=\"jsdoc-link\">dojox/mobile/parser</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_publish\">\n<span class=\"objectIcon\">publish</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../robotx\" class=\"jsdoc-link\">dojo/robotx</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_query\">\n<span class=\"objectIcon\">query</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../query\" class=\"jsdoc-link\">dojo/query</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_regexp\">\n<span class=\"objectIcon\">regexp</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../regexp\" class=\"jsdoc-link\">dojo/regexp</a> </p> <div class=\"jsdoc-summary\">\n<p>Regular expressions and Builder resources</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_rpc\">\n<span class=\"objectIcon\">rpc</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../rpc/rpcservice\" class=\"jsdoc-link\">dojo/rpc/RpcService</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_scopeMap\">\n<span class=\"objectIcon\">scopeMap</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"kernel\" class=\"jsdoc-link\">dojo/_base/kernel</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_store\">\n<span class=\"objectIcon\">store</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../store/cache\" class=\"jsdoc-link\">dojo/store/Cache</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_string\">\n<span class=\"objectIcon\">string</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../string\" class=\"jsdoc-link\">dojo/string</a> </p> <div class=\"jsdoc-summary\">\n<p>String utilities for Dojo</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_subscribe\">\n<span class=\"objectIcon\">subscribe</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../robotx\" class=\"jsdoc-link\">dojo/robotx</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_tests\">\n<span class=\"objectIcon\">tests</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../tests\" class=\"jsdoc-link\">dojo/tests</a> </p> <div class=\"jsdoc-summary\">\n<p>D.O.H. Test files for Dojo unit testing.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_toJsonIndentStr\">\n<span class=\"stringIcon\">toJsonIndentStr</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"json\" class=\"jsdoc-link\">dojo/_base/json</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_touch\">\n<span class=\"objectIcon\">touch</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../touch\" class=\"jsdoc-link\">dojo/touch</a> </p> <div class=\"jsdoc-summary\">\n<p>This module provides unified touch event handlers by exporting press, move, release and cancel which can also run well on desktop. Based on <a href=\"http://dvcs.w3.org/hg/webevents/raw-file/tip/touchevents.html\">http://dvcs.w3.org/hg/webevents/raw-file/tip/touchevents.html</a> Also, if the dojoClick property is set to truthy on a DOM node, <a class=\"jsdoc-link\" href=\"../touch\">dojo/touch</a> generates click events immediately for this node and its descendants (except for descendants that have a dojoClick property set to falsy), to avoid the delay before native browser click events, and regardless of whether evt.preventDefault() was called in a touch.press event listener. </p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_version\">\n<span class=\"objectIcon\">version</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"kernel\" class=\"jsdoc-link\">dojo/_base/kernel</a> </p> <div class=\"jsdoc-summary\">\n<p>Version number of the Dojo Toolkit</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_window\">\n<span class=\"objectIcon\">window</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../window\" class=\"jsdoc-link\">dojo/window</a> </p> <div class=\"jsdoc-summary\">\n<p>TODOC</p> </div>    <h2 id=\"methods\">Methods</h2>                                              <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_AdapterRegistry\">\n<span class=\"functionIcon\">AdapterRegistry</span><span class=\"parameters\">(returnWrappers)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../adapterregistry\" class=\"jsdoc-link\">dojo/AdapterRegistry</a> </p> <p>A registry to make contextual calling/searching easier.</p>  <p>Objects of this class keep list of arrays in the form [name, check, wrap, directReturn] that are used to determine what the contextual result of a set of checked arguments is. All check/wrap functions in this registry should be of the same arity.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">returnWrappers</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>// create a new registry\nrequire([\"dojo/AdapterRegistry\"],\nfunction(AdapterRegistry){\n    var reg = new AdapterRegistry();\n    reg.register(\"handleString\",\n        function(str){\n            return typeof val == \"string\"\n        },\n        function(str){\n            // do something with the string here\n        }\n    );\n    reg.register(\"handleArr\",\n        dojo.isArray,\n        function(arr){\n            // do something with the array here\n        }\n    );\n\n    // now we can pass reg.match() *either* an array or a string and\n    // the value we pass will get handled by the right function\n    reg.match(\"someValue\"); // will call the first function\n    reg.match([\"someValue\"]); // will call the second\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_addClass\">\n<span class=\"functionIcon\">addClass</span><span class=\"parameters\">(node,classStr)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../dom-class\" class=\"jsdoc-link\">dojo/dom-class</a> </p> <p>Adds the specified classes to the end of the class list on the passed node. Will not re-apply duplicate classes. </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">String | DOMNode</td> <td class=\"jsdoc-param-description\">\n<p>String ID or DomNode reference to add a class string too </p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">classStr</td> <td class=\"jsdoc-param-type\">String | Array</td> <td class=\"jsdoc-param-description\">\n<p>A String class name to add, or several space-separated class names, or an array of class names. </p> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Add a class to some node: </p> <pre><code>require([\"dojo/dom-class\"], function(domClass){\n    domClass.add(\"someNode\", \"anewClass\");\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>Add two classes at once: </p> <pre><code>require([\"dojo/dom-class\"], function(domClass){\n    domClass.add(\"someNode\", \"firstClass secondClass\");\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<p>Add two classes at once (using array): </p> <pre><code>require([\"dojo/dom-class\"], function(domClass){\n    domClass.add(\"someNode\", [\"firstClass\", \"secondClass\"]);\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 4</h3>\n<p>Available in <code>dojo/NodeList</code> for multiple additions </p> <pre><code>require([\"dojo/query\"], function(query){\n    query(\"ul &gt; li\").addClass(\"firstLevel\");\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_addOnLoad\">\n<span class=\"functionIcon\">addOnLoad</span><span class=\"parameters\">(priority,context,callback)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../ready\" class=\"jsdoc-link\">dojo/ready</a> </p> <p>Add a function to execute on DOM content loaded and all requested modules have arrived and been evaluated. In most cases, the <code>domReady</code> plug-in should suffice and this method should not be needed. </p> <p>When called in a non-browser environment, just checks that all requested modules have arrived and been evaluated.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">priority</td> <td class=\"jsdoc-param-type\">Integer</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>The order in which to exec this callback relative to other callbacks, defaults to 1000</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">context</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\">\n<p>The context in which to run execute callback, or a callback if not using context</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">callback</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>The function to execute. </p> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Simple DOM and Modules ready syntax </p> <pre><code>require([\"dojo/ready\"], function(ready){\n    ready(function(){ alert(\"Dom ready!\"); });\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>Using a priority </p> <pre><code>require([\"dojo/ready\"], function(ready){\n    ready(2, function(){ alert(\"low priority ready!\"); })\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<p>Using context </p> <pre><code>require([\"dojo/ready\"], function(ready){\n    ready(foo, function(){\n        // in here, this == foo\n    });\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 4</h3>\n<p>Using dojo/hitch style args: </p> <pre><code>require([\"dojo/ready\"], function(ready){\n    var foo = { dojoReady: function(){ console.warn(this, \"dojo dom and modules ready.\"); } };\n    ready(foo, \"dojoReady\");\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_addOnUnload\">\n<span class=\"functionIcon\">addOnUnload</span><span class=\"parameters\">(obj,functionName)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"unload\" class=\"jsdoc-link\">dojo/_base/unload</a> </p> <p>Registers a function to be triggered when the page unloads. Deprecated, use on(window, \"beforeunload\", lang.hitch(obj, functionName)) instead.</p>  <p>The first time that addOnUnload is called Dojo will register a page listener to trigger your unload handler with. </p> <p>In a browser environment, the functions will be triggered during the window.onbeforeunload event. Be careful of doing too much work in an unload handler. onbeforeunload can be triggered if a link to download a file is clicked, or if the link is a javascript: link. In these cases, the onbeforeunload event fires, but the document is not actually destroyed. So be careful about doing destructive operations in a dojo.addOnUnload callback. </p> <p>Further note that calling dojo.addOnUnload will prevent browsers from using a \"fast back\" cache to make page loading via back button instantaneous.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">obj</td> <td class=\"jsdoc-param-type\">Object? | Function</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> <tr> <td class=\"jsdoc-param-name\">functionName</td> <td class=\"jsdoc-param-type\">String | Function</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>var afunc = function() {console.log(\"global function\");};\nrequire([\"dojo/_base/unload\"], function(unload) {\n    var foo = {bar: function(){ console.log(\"bar unloading...\");}, \n               data: \"mydata\"};\n    unload.addOnUnload(afunc);\n    unload.addOnUnload(foo, \"bar\");\n    unload.addOnUnload(foo, function(){console.log(\"\", this.data);});\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_addOnWindowUnload\">\n<span class=\"functionIcon\">addOnWindowUnload</span><span class=\"parameters\">(obj,functionName)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"configfirefoxextension\" class=\"jsdoc-link\">dojo/_base/configFirefoxExtension</a> </p> <p>registers a function to be triggered when window.onunload fires. Be careful trying to modify the DOM or access JavaScript properties during this phase of page unloading: they may not always be available. Consider dojo.addOnUnload() if you need to modify the DOM or do heavy JavaScript work.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">obj</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> <tr> <td class=\"jsdoc-param-name\">functionName</td> <td class=\"jsdoc-param-type\">String | Function</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>dojo.addOnWindowUnload(functionPointer)\ndojo.addOnWindowUnload(object, \"functionName\")\ndojo.addOnWindowUnload(object, function(){ /* ... */});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_anim\">\n<span class=\"functionIcon\">anim</span><span class=\"parameters\">(node,properties,duration,easing,onEnd,delay)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"fx\" class=\"jsdoc-link\">dojo/_base/fx</a> </p> <p>A simpler interface to <code>animateProperty()</code>, also returns an instance of <code>Animation</code> but begins the animation immediately, unlike nearly every other Dojo animation API.</p>  <p>Simpler (but somewhat less powerful) version of <code>animateProperty</code>. It uses defaults for many basic properties and allows for positional parameters to be used in place of the packed \"property bag\" which is used for other Dojo animation methods. </p> <p>The <code>Animation</code> object returned will be already playing, so calling play() on it again is (usually) a no-op.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode | String</td> <td class=\"jsdoc-param-description\">\n<p>a DOM node or the id of a node to animate CSS properties on</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">properties</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">duration</td> <td class=\"jsdoc-param-type\">Integer</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>The number of milliseconds over which the animation should run. Defaults to the global animation default duration (350ms).</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">easing</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>An easing function over which to calculate acceleration and deceleration of the animation through its duration. A default easing algorithm is provided, but you may plug in any you wish. A large selection of easing algorithms are available in <code>dojo/fx/easing</code>.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">onEnd</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>A function to be called when the animation finishes running.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">delay</td> <td class=\"jsdoc-param-type\">Integer</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>The number of milliseconds to delay beginning the animation by. The default is 0.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Fade out a node </p> <pre><code>basefx.anim(\"id\", { opacity: 0 });</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>Fade out a node over a full second </p> <pre><code>basefx.anim(\"id\", { opacity: 0 }, 1000);</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_animateProperty\">\n<span class=\"functionIcon\">animateProperty</span><span class=\"parameters\">(args)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"fx\" class=\"jsdoc-link\">dojo/_base/fx</a> </p> <p>Returns an animation that will transition the properties of node defined in <code>args</code> depending how they are defined in <code>args.properties</code> </p>  <p>Foundation of most <a class=\"jsdoc-link\" href=\"fx\">dojo/_base/fx</a> animations. It takes an object of \"properties\" corresponding to style properties, and animates them in parallel over a set duration. </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">args</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>An object with the following properties:</p>\n<ul>\n<li>properties (Object, optional): <p>A hash map of style properties to Objects describing the transition, such as the properties of _Line with an additional 'units' property</p> </li>\n<li>node (DOMNode|String): <p>The node referenced in the animation</p> </li>\n<li>duration (Integer, optional): <p>Duration of the animation in milliseconds.</p> </li>\n<li>easing (Function, optional): <p>An easing function.</p> </li>\n</ul> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">instance</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>A simple animation that changes the width of the specified node. </p> <pre><code>basefx.animateProperty({\n    node: \"nodeId\",\n    properties: { width: 400 },\n}).play();</code></pre> <p>Dojo figures out the start value for the width and converts the </p> <p>integer specified for the width to the more expressive but verbose form <code>{ width: { end: '400', units: 'px' } }</code> which you can also specify directly. Defaults to 'px' if omitted. </p> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>Animate width, height, and padding over 2 seconds... the pedantic way: </p> <pre><code>basefx.animateProperty({ node: node, duration:2000,\n    properties: {\n        width: { start: '200', end: '400', units:\"px\" },\n        height: { start:'200', end: '400', units:\"px\" },\n        paddingTop: { start:'5', end:'50', units:\"px\" }\n    }\n}).play();</code></pre> <p>Note 'paddingTop' is used over 'padding-top'. Multi-name CSS properties </p> <p>are written using \"mixed case\", as the hyphen is illegal as an object key. </p> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<p>Plug in a different easing function and register a callback for when the animation ends. Easing functions accept values between zero and one and return a value on that basis. In this case, an exponential-in curve. </p> <pre><code>basefx.animateProperty({\n    node: \"nodeId\",\n    // dojo figures out the start value\n    properties: { width: { end: 400 } },\n    easing: function(n){\n        return (n==0) ? 0 : Math.pow(2, 10 * (n - 1));\n    },\n    onEnd: function(node){\n        // called when the animation finishes. The animation\n        // target is passed to this function\n    }\n}).play(500); // delay playing half a second</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 4</h3>\n<p>Like all <code>Animation</code>s, animateProperty returns a handle to the Animation instance, which fires the events common to Dojo FX. Use <code>aspect.after</code> to access these events outside of the Animation definition: </p> <pre><code>var anim = basefx.animateProperty({\n    node:\"someId\",\n    properties:{\n        width:400, height:500\n    }\n});\naspect.after(anim, \"onEnd\", function(){\n    console.log(\"animation ended\");\n}, true);\n// play the animation now:\nanim.play();</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 5</h3>\n<p>Each property can be a function whose return value is substituted along. Additionally, each measurement (eg: start, end) can be a function. The node reference is passed directly to callbacks. </p> <pre><code>basefx.animateProperty({\n    node:\"mine\",\n    properties:{\n        height:function(node){\n            // shrink this node by 50%\n            return domGeom.position(node).h / 2\n        },\n        width:{\n            start:function(node){ return 100; },\n            end:function(node){ return 200; }\n        }\n    }\n}).play();</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_Animation\">\n<span class=\"functionIcon\">Animation</span><span class=\"parameters\">(args)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"fx\" class=\"jsdoc-link\">dojo/_base/fx</a> </p> <p>A generic animation class that fires callbacks into its handlers object at various states.</p>  <p>A generic animation class that fires callbacks into its handlers object at various states. Nearly all dojo animation functions return an instance of this method, usually without calling the .play() method beforehand. Therefore, you will likely need to call .play() on instances of <code>Animation</code> when one is returned.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">args</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>The 'magic argument', mixing all the properties into this animation instance.</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_attr\">\n<span class=\"functionIcon\">attr</span><span class=\"parameters\">(node,name,value)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"html\" class=\"jsdoc-link\">dojo/_base/html</a> </p> <p>Gets or sets an attribute on an HTML element.</p>  <p>Handles normalized getting and setting of attributes on DOM Nodes. If 2 arguments are passed, and a the second argument is a string, acts as a getter. </p> <p>If a third argument is passed, or if the second argument is a map of attributes, acts as a setter. </p> <p>When passing functions as values, note that they will not be directly assigned to slots on the node, but rather the default behavior will be removed and the new behavior will be added using <code>dojo.connect()</code>, meaning that event handler properties will be normalized and that some caveats with regards to non-standard behaviors for onsubmit apply. Namely that you should cancel form submission using <code>dojo.stopEvent()</code> on the passed event object instead of returning a boolean value from the handler itself.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode | String</td> <td class=\"jsdoc-param-description\">\n<p>id or reference to the element to get or set the attribute on</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">name</td> <td class=\"jsdoc-param-type\">String | Object</td> <td class=\"jsdoc-param-description\">\n<p>the name of the attribute to get or set.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">value</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>The value to set for the attribute</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | undefined</span></p> <p>when used as a getter, the value of the requested attribute or null if that attribute does not have a specified or default value; </p> <p>when used as a setter, the DOM node </p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>// get the current value of the \"foo\" attribute on a node\ndojo.attr(dojo.byId(\"nodeId\"), \"foo\");\n// or we can just pass the id:\ndojo.attr(\"nodeId\", \"foo\");</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<pre><code>// use attr() to set the tab index\ndojo.attr(\"nodeId\", \"tabIndex\", 3);</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<p>Set multiple values at once, including event handlers: </p> <pre><code>dojo.attr(\"formId\", {\n    \"foo\": \"bar\",\n    \"tabIndex\": -1,\n    \"method\": \"POST\",\n    \"onsubmit\": function(e){\n        // stop submitting the form. Note that the IE behavior\n        // of returning true or false will have no effect here\n        // since our handler is connect()ed to the built-in\n        // onsubmit behavior and so we need to use\n        // dojo.stopEvent() to ensure that the submission\n        // doesn't proceed.\n        dojo.stopEvent(e);\n\n        // submit the form with Ajax\n        dojo.xhrPost({ form: \"formId\" });\n    }\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 4</h3>\n<p>Style is s special case: Only set with an object hash of styles </p> <pre><code>dojo.attr(\"someNode\",{\n    id:\"bar\",\n    style:{\n        width:\"200px\", height:\"100px\", color:\"#000\"\n    }\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 5</h3>\n<p>Again, only set style as an object hash of styles: </p> <pre><code>var obj = { color:\"#fff\", backgroundColor:\"#000\" };\ndojo.attr(\"someNode\", \"style\", obj);\n\n// though shorter to use `dojo.style()` in this case:\ndojo.style(\"someNode\", obj);</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_blendColors\">\n<span class=\"functionIcon\">blendColors</span><span class=\"parameters\">(start,end,weight,obj)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"color\" class=\"jsdoc-link\">dojo/_base/Color</a> </p> <p>Blend colors end and start with weight from 0 to 1, 0.5 being a 50/50 blend, can reuse a previously allocated Color object for the result</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">start</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"color\">dojo/_base/Color</a></td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">end</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"color\">dojo/_base/Color</a></td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">weight</td> <td class=\"jsdoc-param-type\">Number</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">obj</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"color\">dojo/_base/Color</a></td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_body\">\n<span class=\"functionIcon\">body</span><span class=\"parameters\">(doc)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"window\" class=\"jsdoc-link\">dojo/_base/window</a> </p> <p>Return the body element of the specified document or of dojo/_base/window::doc.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">doc</td> <td class=\"jsdoc-param-type\">Document</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>win.body().appendChild(dojo.doc.createElement('div'));</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_byId\">\n<span class=\"functionIcon\">byId</span><span class=\"parameters\">(id,doc)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../dom\" class=\"jsdoc-link\">dojo/dom</a> </p> <p>Returns DOM node with matching <code>id</code> attribute or falsy value (ex: null or undefined) if not found. If <code>id</code> is a DomNode, this function is a no-op. </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">id</td> <td class=\"jsdoc-param-type\">String | DOMNode</td> <td class=\"jsdoc-param-description\">\n<p>A string to match an HTML id attribute or a reference to a DOM Node </p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">doc</td> <td class=\"jsdoc-param-type\">Document</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Document to work in. Defaults to the current value of dojo/_base/window.doc. Can be used to retrieve node references from other documents. </p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">instance</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Look up a node by ID: </p> <pre><code>require([\"dojo/dom\"], function(dom){\n    var n = dom.byId(\"foo\");\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>Check if a node exists, and use it. </p> <pre><code>require([\"dojo/dom\"], function(dom){\n    var n = dom.byId(\"bar\");\n    if(n){ doStuff() ... }\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<p>Allow string or DomNode references to be passed to a custom function: </p> <pre><code>require([\"dojo/dom\"], function(dom){\n    var foo = function(nodeOrId){\n        nodeOrId = dom.byId(nodeOrId);\n        // ... more stuff\n    }\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_cache\">\n<span class=\"functionIcon\">cache</span><span class=\"parameters\">(module,url,value)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../text\" class=\"jsdoc-link\">dojo/text</a> </p> <p>A getter and setter for storing the string content associated with the module and url arguments.</p>  <p>If module is a string that contains slashes, then it is interpretted as a fully resolved path (typically a result returned by require.toUrl), and url should not be provided. This is the preferred signature. If module is a string that does not contain slashes, then url must also be provided and module and url are used to call <code>dojo.moduleUrl()</code> to generate a module URL. This signature is deprecated. If value is specified, the cache value for the moduleUrl will be set to that value. Otherwise, dojo.cache will fetch the moduleUrl and store it in its internal cache and return that cached value for the URL. To clear a cache value pass null for value. Since XMLHttpRequest (XHR) is used to fetch the the URL contents, only modules on the same domain of the page can use this capability. The build system can inline the cache values though, to allow for xdomain hosting.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">module</td> <td class=\"jsdoc-param-type\">String | Object</td> <td class=\"jsdoc-param-description\">\n<p>dojo/cldr/supplemental</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">url</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>The rest of the path to append to the path derived from the module argument. If module is an object, then this second argument should be the \"value\" argument instead.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">value</td> <td class=\"jsdoc-param-type\">String | Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>If a String, the value to use in the cache for the module/url combination. If an Object, it can have two properties: value and sanitize. The value property should be the value to use in the cache, and sanitize can be set to true or false, to indicate if XML declarations should be removed from the value and if the HTML inside a body tag in the value should be extracted as the real value. The value argument or the value property on the value argument are usually only used by the build system as it inlines cache content.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined | null</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>To ask dojo.cache to fetch content and store it in the cache (the dojo[\"cache\"] style of call is used to avoid an issue with the build system erroneously trying to intern this example. To get the build system to intern your dojo.cache calls, use the \"dojo.cache\" style of call): </p> <pre><code>//If template.html contains \"&lt;h1&gt;Hello&lt;/h1&gt;\" that will be\n//the value for the text variable.\n//Note: This is pre-AMD, deprecated syntax\nvar text = dojo[\"cache\"](\"my.module\", \"template.html\");</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>To ask dojo.cache to fetch content and store it in the cache, and sanitize the input (the dojo[\"cache\"] style of call is used to avoid an issue with the build system erroneously trying to intern this example. To get the build system to intern your dojo.cache calls, use the \"dojo.cache\" style of call): </p> <pre><code>//If template.html contains \"&lt;html&gt;&lt;body&gt;&lt;h1&gt;Hello&lt;/h1&gt;&lt;/body&gt;&lt;/html&gt;\", the\n//text variable will contain just \"&lt;h1&gt;Hello&lt;/h1&gt;\".\n//Note: This is pre-AMD, deprecated syntax\nvar text = dojo[\"cache\"](\"my.module\", \"template.html\", {sanitize: true});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<p>Same example as previous, but demonstrates how an object can be passed in as the first argument, then the value argument can then be the second argument. </p> <pre><code>//If template.html contains \"&lt;html&gt;&lt;body&gt;&lt;h1&gt;Hello&lt;/h1&gt;&lt;/body&gt;&lt;/html&gt;\", the\n//text variable will contain just \"&lt;h1&gt;Hello&lt;/h1&gt;\".\n//Note: This is pre-AMD, deprecated syntax\nvar text = dojo[\"cache\"](new dojo._Url(\"my/module/template.html\"), {sanitize: true});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_clearCache\">\n<span class=\"functionIcon\">clearCache</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"array\" class=\"jsdoc-link\">dojo/_base/array</a> </p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_Color\">\n<span class=\"functionIcon\">Color</span><span class=\"parameters\">(color)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"color\" class=\"jsdoc-link\">dojo/_base/Color</a> </p> <p>Takes a named string, hex string, array of rgb or rgba values, an object with r, g, b, and a properties, or another <code>Color</code> object and creates a new Color instance to work from. </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">color</td> <td class=\"jsdoc-param-type\">Array | String | Object</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Work with a Color instance: </p> <pre><code>require([\"dojo/_base/color\"], function(Color){\n    var c = new Color();\n    c.setColor([0,0,0]); // black\n    var hex = c.toHex(); // #000000\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>Work with a node's color: </p> <pre><code>  require([\"dojo/_base/color\", \"dojo/dom-style\"], function(Color, domStyle){\n      var color = domStyle(\"someNode\", \"backgroundColor\");\n      var n = new Color(color);\n      // adjust the color some\n      n.r *= .5;\n      console.log(n.toString()); // rgb(128, 255, 255);\n  });</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_colorFromArray\">\n<span class=\"functionIcon\">colorFromArray</span><span class=\"parameters\">(a,obj)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"color\" class=\"jsdoc-link\">dojo/_base/Color</a> </p> <p>Builds a <code>Color</code> from a 3 or 4 element array, mapping each element in sequence to the rgb(a) values of the color.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">a</td> <td class=\"jsdoc-param-type\">Array</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">obj</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"color\">dojo/_base/Color</a></td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | undefined</span></p> <p>A Color object. If obj is passed, it will be the return value.</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>require([\"dojo/_base/color\"], function(Color){\n    var myColor = new Color().fromArray([237,237,237,0.5]); // grey, 50% alpha\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_colorFromHex\">\n<span class=\"functionIcon\">colorFromHex</span><span class=\"parameters\">(color,obj)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"color\" class=\"jsdoc-link\">dojo/_base/Color</a> </p> <p>Converts a hex string with a '#' prefix to a color object. Supports 12-bit #rgb shorthand. Optionally accepts a <code>Color</code> object to update with the parsed value. </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">color</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">obj</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"color\">dojo/_base/Color</a></td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any</span></p> <p>A Color object. If obj is passed, it will be the return value. </p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>require([\"dojo/_base/color\"], function(Color){\n    var thing = new Color().fromHex(\"#ededed\"); // grey, longhand\n    var thing2 = new Color().fromHex(\"#000\"); // black, shorthand\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_colorFromRgb\">\n<span class=\"functionIcon\">colorFromRgb</span><span class=\"parameters\">(color,obj)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../colors\" class=\"jsdoc-link\">dojo/colors</a> </p> <p>get rgb(a) array from css-style color declarations</p>  <p>this function can handle all 4 CSS3 Color Module formats: rgb, rgba, hsl, hsla, including rgb(a) with percentage values.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">color</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">obj</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"color\">dojo/_base/Color</a></td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">null</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_colorFromString\">\n<span class=\"functionIcon\">colorFromString</span><span class=\"parameters\">(str,obj)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"color\" class=\"jsdoc-link\">dojo/_base/Color</a> </p> <p>Parses <code>str</code> for a color value. Accepts hex, rgb, and rgba style color values.</p>  <p>Acceptable input values for str may include arrays of any form accepted by dojo.colorFromArray, hex strings such as \"#aaaaaa\", or rgb or rgba strings such as \"rgb(133, 200, 16)\" or \"rgba(10, 10, 10, 50)\"</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">str</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">obj</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"color\">dojo/_base/Color</a></td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any</span></p> <p>A Color object. If obj is passed, it will be the return value.</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_connect\">\n<span class=\"functionIcon\">connect</span><span class=\"parameters\">(obj,event,context,method,dontFix)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"connect\" class=\"jsdoc-link\">dojo/_base/connect</a> </p> <p><code>dojo.connect</code> is a deprecated event handling and delegation method in Dojo. It allows one function to \"listen in\" on the execution of any other, triggering the second whenever the first is called. Many listeners may be attached to a function, and source functions may be either regular function calls or DOM events. </p>  <p>Connects listeners to actions, so that after event fires, a listener is called with the same arguments passed to the original function. </p> <p>Since <code>dojo.connect</code> allows the source of events to be either a \"regular\" JavaScript function or a DOM event, it provides a uniform interface for listening to all the types of events that an application is likely to deal with though a single, unified interface. DOM programmers may want to think of it as \"addEventListener for everything and anything\". </p> <p>When setting up a connection, the <code>event</code> parameter must be a string that is the name of the method/event to be listened for. If <code>obj</code> is null, <code>kernel.global</code> is assumed, meaning that connections to global methods are supported but also that you may inadvertently connect to a global by passing an incorrect object name or invalid reference. </p> <p><code>dojo.connect</code> generally is forgiving. If you pass the name of a function or method that does not yet exist on <code>obj</code>, connect will not fail, but will instead set up a stub method. Similarly, null arguments may simply be omitted such that fewer than 4 arguments may be required to set up a connection See the examples for details. </p> <p>The return value is a handle that is needed to remove this connection with <code>dojo.disconnect</code>. </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">obj</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>The source object for the event function. Defaults to <code>kernel.global</code> if null. If obj is a DOM node, the connection is delegated to the DOM event manager (unless dontFix is true). </p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">event</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>String name of the event function in obj. I.e. identifies a property <code>obj[event]</code>. </p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">context</td> <td class=\"jsdoc-param-type\">Object | null</td> <td class=\"jsdoc-param-description\">\n<p>The object that method will receive as \"this\". </p> <p>If context is null and method is a function, then method inherits the context of event. </p> <p>If method is a string then context must be the source object object for method (context[method]). If context is null, kernel.global is used. </p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">method</td> <td class=\"jsdoc-param-type\">String | Function</td> <td class=\"jsdoc-param-description\">\n<p>A function reference, or name of a function in context. The function identified by method fires after event does. method receives the same arguments as the event. See context argument comments for information on method's scope. </p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">dontFix</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>If obj is a DOM node, set dontFix to true to prevent delegation of this connection to the DOM event manager. </p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>When obj.onchange(), do ui.update(): </p> <pre><code>dojo.connect(obj, \"onchange\", ui, \"update\");\ndojo.connect(obj, \"onchange\", ui, ui.update); // same</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>Using return value for disconnect: </p> <pre><code>var link = dojo.connect(obj, \"onchange\", ui, \"update\");\n...\ndojo.disconnect(link);</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<p>When onglobalevent executes, watcher.handler is invoked: </p> <pre><code>dojo.connect(null, \"onglobalevent\", watcher, \"handler\");</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 4</h3>\n<p>When ob.onCustomEvent executes, customEventHandler is invoked: </p> <pre><code>dojo.connect(ob, \"onCustomEvent\", null, \"customEventHandler\");\ndojo.connect(ob, \"onCustomEvent\", \"customEventHandler\"); // same</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 5</h3>\n<p>When ob.onCustomEvent executes, customEventHandler is invoked with the same scope (this): </p> <pre><code>dojo.connect(ob, \"onCustomEvent\", null, customEventHandler);\ndojo.connect(ob, \"onCustomEvent\", customEventHandler); // same</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 6</h3>\n<p>When globalEvent executes, globalHandler is invoked with the same scope (this): </p> <pre><code>dojo.connect(null, \"globalEvent\", null, globalHandler);\ndojo.connect(\"globalEvent\", globalHandler); // same</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_contentBox\">\n<span class=\"functionIcon\">contentBox</span><span class=\"parameters\">(node,box)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"html\" class=\"jsdoc-link\">dojo/_base/html</a> </p> <p>Getter/setter for the content-box of node.</p>  <p>Returns an object in the expected format of box (regardless if box is passed). The object might look like: <code>{ l: 50, t: 200, w: 300: h: 150 }</code> for a node offset from its parent 50px to the left, 200px from the top with a content width of 300px and a content-height of 150px. Note that the content box may have a much larger border or margin box, depending on the box model currently in use and CSS values set/inherited for node. While the getter will return top and left values, the setter only accepts setting the width and height.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DomNode | String</td> <td class=\"jsdoc-param-description\">\n<p>id or reference to DOM Node to get/set box for</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">box</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>If passed, denotes that dojo.contentBox() should update/set the content box for node. Box is an object in the above format, but only w (width) and h (height) are supported. All properties are optional if passed.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_cookie\">\n<span class=\"functionIcon\">cookie</span><span class=\"parameters\">(name,value,props)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../cookie\" class=\"jsdoc-link\">dojo/cookie</a> </p> <p>Get or set a cookie.</p>  <p>If one argument is passed, returns the value of the cookie For two or more arguments, acts as a setter.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">name</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>Name of the cookie</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">value</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Value for the cookie</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">props</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Properties for the cookie</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>set a cookie with the JSON-serialized contents of an object which will expire 5 days from now: </p> <pre><code>require([\"dojo/cookie\", \"dojo/json\"], function(cookie, json){\n    cookie(\"configObj\", json.stringify(config, {expires: 5 }));\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>de-serialize a cookie back into a JavaScript object: </p> <pre><code>require([\"dojo/cookie\", \"dojo/json\"], function(cookie, json){\n    config = json.parse(cookie(\"configObj\"));\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<p>delete a cookie: </p> <pre><code>require([\"dojo/cookie\"], function(cookie){\n    cookie(\"configObj\", null, {expires: -1});\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_coords\">\n<span class=\"functionIcon\">coords</span><span class=\"parameters\">(node,includeScroll)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"html\" class=\"jsdoc-link\">dojo/_base/html</a> </p> <p>Deprecated: Use position() for border-box x/y/w/h or marginBox() for margin-box w/h/l/t. </p> <p>Returns an object that measures margin-box (w)idth/(h)eight and absolute position x/y of the border-box. Also returned is computed (l)eft and (t)op values in pixels from the node's offsetParent as returned from marginBox(). Return value will be in the form: </p> <pre><code>{ l: 50, t: 200, w: 300: h: 150, x: 100, y: 300 }</code></pre> <p>Does not act as a setter. If includeScroll is passed, the x and </p> <p>y params are affected as one would expect in dojo.position().</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DomNode | String</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">includeScroll</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_create\">\n<span class=\"functionIcon\">create</span><span class=\"parameters\">(tag,attrs,refNode,pos)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../dom-construct\" class=\"jsdoc-link\">dojo/dom-construct</a> </p> <p>Create an element, allowing for optional attribute decoration and placement.</p>  <p>A DOM Element creation function. A shorthand method for creating a node or a fragment, and allowing for a convenient optional attribute setting step, as well as an optional DOM placement reference. </p> <p>Attributes are set by passing the optional object through <code>dojo.setAttr</code>. See <code>dojo.setAttr</code> for noted caveats and nuances, and API if applicable. </p> <p>Placement is done via <code>dojo.place</code>, assuming the new node to be the action node, passing along the optional reference node and position.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">tag</td> <td class=\"jsdoc-param-type\">DOMNode | String</td> <td class=\"jsdoc-param-description\">\n<p>A string of the element to create (eg: \"div\", \"a\", \"p\", \"li\", \"script\", \"br\"), or an existing DOM node to process.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">attrs</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>An object-hash of attributes to set on the newly created node. Can be null, if you don't want to set any attributes/styles. See: <code>dojo.setAttr</code> for a description of available attributes.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">refNode</td> <td class=\"jsdoc-param-type\">DOMNode | String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Optional reference node. Used by <code>dojo.place</code> to place the newly created node somewhere in the dom relative to refNode. Can be a DomNode reference or String ID of a node.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">pos</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Optional positional reference. Defaults to \"last\" by way of <code>dojo.place</code>, though can be set to \"first\",\"after\",\"before\",\"last\", \"replace\" or \"only\" to further control the placement of the new node relative to the refNode. 'refNode' is required if a 'pos' is specified.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Create a DIV: </p> <pre><code>require([\"dojo/dom-construct\"], function(domConstruct){\n    var n = domConstruct.create(\"div\");\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>Create a DIV with content: </p> <pre><code>require([\"dojo/dom-construct\"], function(domConstruct){\n    var n = domConstruct.create(\"div\", { innerHTML:\"&lt;p&gt;hi&lt;/p&gt;\" });\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<p>Place a new DIV in the BODY, with no attributes set </p> <pre><code>require([\"dojo/dom-construct\"], function(domConstruct){\n    var n = domConstruct.create(\"div\", null, dojo.body());\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 4</h3>\n<p>Create an UL, and populate it with LI's. Place the list as the first-child of a node with id=\"someId\": </p> <pre><code>require([\"dojo/dom-construct\", \"dojo/_base/array\"],\nfunction(domConstruct, arrayUtil){\n    var ul = domConstruct.create(\"ul\", null, \"someId\", \"first\");\n    var items = [\"one\", \"two\", \"three\", \"four\"];\n    arrayUtil.forEach(items, function(data){\n        domConstruct.create(\"li\", { innerHTML: data }, ul);\n    });\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 5</h3>\n<p>Create an anchor, with an href. Place in BODY: </p> <pre><code>require([\"dojo/dom-construct\"], function(domConstruct){\n    domConstruct.create(\"a\", { href:\"foo.html\", title:\"Goto FOO!\" }, dojo.body());\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_declare\">\n<span class=\"functionIcon\">declare</span><span class=\"parameters\">(className,superclass,props)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"declare\" class=\"jsdoc-link\">dojo/_base/declare</a> </p> <p>Create a feature-rich constructor from compact notation.</p>  <p>Create a constructor using a compact notation for inheritance and prototype extension. </p> <p>Mixin ancestors provide a type of multiple inheritance. Prototypes of mixin ancestors are copied to the new class: changes to mixin prototypes will not affect classes to which they have been mixed in. </p> <p>Ancestors can be compound classes created by this version of declare(). In complex cases all base classes are going to be linearized according to C3 MRO algorithm (see <a href=\"http://www.python.org/download/releases/2.3/mro/\">http://www.python.org/download/releases/2.3/mro/</a> for more details). </p> <p>\"className\" is cached in \"declaredClass\" property of the new class, if it was supplied. The immediate super class will be cached in \"superclass\" property of the new class. </p> <p>Methods in \"props\" will be copied and modified: \"nom\" property (the declared name of the method) will be added to all copied functions to help identify them for the internal machinery. Be very careful, while reusing methods: if you use the same function under different names, it can produce errors in some cases. </p> <p>It is possible to use constructors created \"manually\" (without declare()) as bases. They will be called as usual during the creation of an instance, their methods will be chained, and even called by \"this.inherited()\". </p> <p>Special property \"-chains-\" governs how to chain methods. It is a dictionary, which uses method names as keys, and hint strings as values. If a hint string is \"after\", this method will be called after methods of its base classes. If a hint string is \"before\", this method will be called before methods of its base classes. </p> <p>If \"constructor\" is not mentioned in \"-chains-\" property, it will be chained using the legacy mode: using \"after\" chaining, calling preamble() method before each constructor, if available, and calling postscript() after all constructors were executed. If the hint is \"after\", it is chained as a regular method, but postscript() will be called after the chain of constructors. \"constructor\" cannot be chained \"before\", but it allows a special hint string: \"manual\", which means that constructors are not going to be chained in any way, and programmer will call them manually using this.inherited(). In the latter case postscript() will be called after the construction. </p> <p>All chaining hints are \"inherited\" from base classes and potentially can be overridden. Be very careful when overriding hints! Make sure that all chained methods can work in a proposed manner of chaining. </p> <p>Once a method was chained, it is impossible to unchain it. The only exception is \"constructor\". You don't need to define a method in order to supply a chaining hint. </p> <p>If a method is chained, it cannot use this.inherited() because all other methods in the hierarchy will be called automatically. </p> <p>Usually constructors and initializers of any kind are chained using \"after\" and destructors of any kind are chained as \"before\". Note that chaining assumes that chained methods do not return any value: any returned value will be discarded. </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">className</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>The optional name of the constructor (loosely, a \"class\") stored in the \"declaredClass\" property in the created prototype. It will be used as a global name for a created constructor.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">superclass</td> <td class=\"jsdoc-param-type\">Function | Function[]</td> <td class=\"jsdoc-param-description\">\n<p>May be null, a Function, or an Array of Functions. This argument specifies a list of bases (the left-most one is the most deepest base).</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">props</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>An object whose properties are copied to the created prototype. Add an instance-initialization function by making it a property named \"constructor\".</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\"><a class=\"jsdoc-link\" href=\"declare.__declarecreatedobject\">dojo/_base/declare.__DeclareCreatedObject</a> | undefined</span></p> <p>New constructor function.</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>declare(\"my.classes.bar\", my.classes.foo, {\n    // properties to be added to the class prototype\n    someValue: 2,\n    // initialization function\n    constructor: function(){\n        this.myComplicatedObject = new ReallyComplicatedObject();\n    },\n    // other functions\n    someMethod: function(){\n        doStuff();\n    }\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<pre><code>var MyBase = declare(null, {\n    // constructor, properties, and methods go here\n    // ...\n});\nvar MyClass1 = declare(MyBase, {\n    // constructor, properties, and methods go here\n    // ...\n});\nvar MyClass2 = declare(MyBase, {\n    // constructor, properties, and methods go here\n    // ...\n});\nvar MyDiamond = declare([MyClass1, MyClass2], {\n    // constructor, properties, and methods go here\n    // ...\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<pre><code>var F = function(){ console.log(\"raw constructor\"); };\nF.prototype.method = function(){\n    console.log(\"raw method\");\n};\nvar A = declare(F, {\n    constructor: function(){\n        console.log(\"A.constructor\");\n    },\n    method: function(){\n        console.log(\"before calling F.method...\");\n        this.inherited(arguments);\n        console.log(\"...back in A\");\n    }\n});\nnew A().method();\n// will print:\n// raw constructor\n// A.constructor\n// before calling F.method...\n// raw method\n// ...back in A</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 4</h3>\n<pre><code>var A = declare(null, {\n    \"-chains-\": {\n        destroy: \"before\"\n    }\n});\nvar B = declare(A, {\n    constructor: function(){\n        console.log(\"B.constructor\");\n    },\n    destroy: function(){\n        console.log(\"B.destroy\");\n    }\n});\nvar C = declare(B, {\n    constructor: function(){\n        console.log(\"C.constructor\");\n    },\n    destroy: function(){\n        console.log(\"C.destroy\");\n    }\n});\nnew C().destroy();\n// prints:\n// B.constructor\n// C.constructor\n// C.destroy\n// B.destroy</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 5</h3>\n<pre><code>var A = declare(null, {\n    \"-chains-\": {\n        constructor: \"manual\"\n    }\n});\nvar B = declare(A, {\n    constructor: function(){\n        // ...\n        // call the base constructor with new parameters\n        this.inherited(arguments, [1, 2, 3]);\n        // ...\n    }\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 6</h3>\n<pre><code>var A = declare(null, {\n    \"-chains-\": {\n        m1: \"before\"\n    },\n    m1: function(){\n        console.log(\"A.m1\");\n    },\n    m2: function(){\n        console.log(\"A.m2\");\n    }\n});\nvar B = declare(A, {\n    \"-chains-\": {\n        m2: \"after\"\n    },\n    m1: function(){\n        console.log(\"B.m1\");\n    },\n    m2: function(){\n        console.log(\"B.m2\");\n    }\n});\nvar x = new B();\nx.m1();\n// prints:\n// B.m1\n// A.m1\nx.m2();\n// prints:\n// A.m2\n// B.m2</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_Deferred\">\n<span class=\"functionIcon\">Deferred</span><span class=\"parameters\">(canceller)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"deferred\" class=\"jsdoc-link\">dojo/_base/Deferred</a> </p> <p>Deprecated. This module defines the legacy dojo/_base/Deferred API. New code should use dojo/Deferred instead.</p>  <p>The Deferred API is based on the concept of promises that provide a generic interface into the eventual completion of an asynchronous action. The motivation for promises fundamentally is about creating a separation of concerns that allows one to achieve the same type of call patterns and logical data flow in asynchronous code as can be achieved in synchronous code. Promises allows one to be able to call a function purely with arguments needed for execution, without conflating the call with concerns of whether it is sync or async. One shouldn't need to alter a call's arguments if the implementation switches from sync to async (or vice versa). By having async functions return promises, the concerns of making the call are separated from the concerns of asynchronous interaction (which are handled by the promise). </p> <p>The Deferred is a type of promise that provides methods for fulfilling the promise with a successful result or an error. The most important method for working with Dojo's promises is the then() method, which follows the CommonJS proposed promise API. An example of using a Dojo promise: </p> <pre><code>var resultingPromise = someAsyncOperation.then(function(result){\n    ... handle result ...\n},\nfunction(error){\n    ... handle error ...\n});</code></pre> <p>The .then() call returns a new promise that represents the result of the execution of the callback. The callbacks will never affect the original promises value. </p> <p>The Deferred instances also provide the following functions for backwards compatibility: </p> <ul> <li>addCallback(handler)</li> <li>addErrback(handler)</li> <li>callback(result)</li> <li>errback(result)</li> </ul> <p>Callbacks are allowed to return promises themselves, so you can build complicated sequences of events with ease. </p> <p>The creator of the Deferred may specify a canceller. The canceller is a function that will be called if Deferred.cancel is called before the Deferred fires. You can use this to implement clean aborting of an XMLHttpRequest, etc. Note that cancel will fire the deferred with a CancelledError (unless your canceller returns another kind of error), so the errbacks should be prepared to handle that error for cancellable Deferreds.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">canceller</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>var deferred = new Deferred();\nsetTimeout(function(){ deferred.callback({success: true}); }, 1000);\nreturn deferred;</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>Deferred objects are often used when making code asynchronous. It may be easiest to write functions in a synchronous manner and then split code using a deferred to trigger a response to a long-lived operation. For example, instead of register a callback function to denote when a rendering operation completes, the function can simply return a deferred: </p> <pre><code>// callback style:\nfunction renderLotsOfData(data, callback){\n    var success = false\n    try{\n        for(var x in data){\n            renderDataitem(data[x]);\n        }\n        success = true;\n    }catch(e){ }\n    if(callback){\n        callback(success);\n    }\n}\n\n\n// using callback style\nrenderLotsOfData(someDataObj, function(success){\n    // handles success or failure\n    if(!success){\n        promptUserToRecover();\n    }\n});\n// NOTE: no way to add another callback here!!</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<p>Using a Deferred doesn't simplify the sending code any, but it provides a standard interface for callers and senders alike, providing both with a simple way to service multiple callbacks for an operation and freeing both sides from worrying about details such as \"did this get called already?\". With Deferreds, new callbacks can be added at any time. </p> <pre><code>// Deferred style:\nfunction renderLotsOfData(data){\n    var d = new Deferred();\n    try{\n        for(var x in data){\n            renderDataitem(data[x]);\n        }\n        d.callback(true);\n    }catch(e){\n        d.errback(new Error(\"rendering failed\"));\n    }\n    return d;\n}\n\n\n// using Deferred style\nrenderLotsOfData(someDataObj).then(null, function(){\n    promptUserToRecover();\n});\n// NOTE: addErrback and addCallback both return the Deferred\n// again, so we could chain adding callbacks or save the\n// deferred for later should we need to be notified again.</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 4</h3>\n<p>In this example, renderLotsOfData is synchronous and so both versions are pretty artificial. Putting the data display on a timeout helps show why Deferreds rock: </p> <pre><code>// Deferred style and async func\nfunction renderLotsOfData(data){\n    var d = new Deferred();\n    setTimeout(function(){\n        try{\n            for(var x in data){\n                renderDataitem(data[x]);\n            }\n            d.callback(true);\n        }catch(e){\n            d.errback(new Error(\"rendering failed\"));\n        }\n    }, 100);\n    return d;\n}\n\n\n// using Deferred style\nrenderLotsOfData(someDataObj).then(null, function(){\n    promptUserToRecover();\n});</code></pre> <p>Note that the caller doesn't have to change his code at all to handle the asynchronous case.</p> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_DeferredList\">\n<span class=\"functionIcon\">DeferredList</span><span class=\"parameters\">(list,fireOnOneCallback,fireOnOneErrback,consumeErrors,canceller)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../deferredlist\" class=\"jsdoc-link\">dojo/DeferredList</a> </p> <p>Deprecated, use dojo/promise/all instead. Provides event handling for a group of Deferred objects.</p>  <p>DeferredList takes an array of existing deferreds and returns a new deferred of its own this new deferred will typically have its callback fired when all of the deferreds in the given list have fired their own deferreds. The parameters <code>fireOnOneCallback</code> and fireOnOneErrback, will fire before all the deferreds as appropriate</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">list</td> <td class=\"jsdoc-param-type\">Array</td> <td class=\"jsdoc-param-description\">\n<p>The list of deferreds to be synchronizied with this DeferredList</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">fireOnOneCallback</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Will cause the DeferredLists callback to be fired as soon as any of the deferreds in its list have been fired instead of waiting until the entire list has finished</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">fireOnOneErrback</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> <tr> <td class=\"jsdoc-param-name\">consumeErrors</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> <tr> <td class=\"jsdoc-param-name\">canceller</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>A deferred canceller function, see dojo.Deferred</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_deprecated\">\n<span class=\"functionIcon\">deprecated</span><span class=\"parameters\">(behaviour,extra,removal)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"kernel\" class=\"jsdoc-link\">dojo/_base/kernel</a> </p> <p>Log a debug message to indicate that a behavior has been deprecated.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">behaviour</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>The API or behavior being deprecated. Usually in the form of \"myApp.someFunction()\".</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">extra</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Text to append to the message. Often provides advice on a new function or facility to achieve the same goal during the deprecation period.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">removal</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Text to indicate when in the future the behavior will be removed. Usually a version number.</p> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>dojo.deprecated(\"myApp.getTemp()\", \"use myApp.getLocaleTemp() instead\", \"1.0\");</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_destroy\">\n<span class=\"functionIcon\">destroy</span><span class=\"parameters\">(node)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"html\" class=\"jsdoc-link\">dojo/_base/html</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_disconnect\">\n<span class=\"functionIcon\">disconnect</span><span class=\"parameters\">(handle)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"connect\" class=\"jsdoc-link\">dojo/_base/connect</a> </p> <p>Remove a link created by dojo.connect.</p>  <p>Removes the connection between event and the method referenced by handle.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">handle</td> <td class=\"jsdoc-param-type\">Handle</td> <td class=\"jsdoc-param-description\">\n<p>the return value of the dojo.connect call that created the connection.</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_docScroll\">\n<span class=\"functionIcon\">docScroll</span><span class=\"parameters\">(doc)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../dom-geometry\" class=\"jsdoc-link\">dojo/dom-geometry</a> </p> <p>Returns an object with {node, x, y} with corresponding offsets.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">doc</td> <td class=\"jsdoc-param-type\">Document</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Optional document to query. If unspecified, use win.doc.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Object | undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_empty\">\n<span class=\"functionIcon\">empty</span><span class=\"parameters\">(node)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"html\" class=\"jsdoc-link\">dojo/_base/html</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_eval\">\n<span class=\"functionIcon\">eval</span><span class=\"parameters\">(scriptText)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"kernel\" class=\"jsdoc-link\">dojo/_base/kernel</a> </p> <p>A legacy method created for use exclusively by internal Dojo methods. Do not use this method directly unless you understand its possibly-different implications on the platforms your are targeting.</p>  <p>Makes an attempt to evaluate scriptText in the global scope. The function works correctly for browsers that support indirect eval. </p> <p>As usual, IE does not. On IE, the only way to implement global eval is to use execScript. Unfortunately, execScript does not return a value and breaks some current usages of dojo.eval. This implementation uses the technique of executing eval in the scope of a function that is a single scope frame below the global scope; thereby coming close to the global scope. Note carefully that </p> <p>dojo.eval(\"var pi = 3.14;\"); </p> <p>will define global pi in non-IE environments, but define pi only in a temporary local scope for IE. If you want to define a global variable using dojo.eval, write something like </p> <p>dojo.eval(\"window.pi = 3.14;\")</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">scriptText</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\">\n<p>The text to evaluation.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any</span></p> <p>The result of the evaluation. Often <code>undefined</code></p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_every\">\n<span class=\"functionIcon\">every</span><span class=\"parameters\">(arr,callback,thisObject)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"array\" class=\"jsdoc-link\">dojo/_base/array</a> </p> <p>Determines whether or not every item in arr satisfies the condition implemented by callback.</p>  <p>This function corresponds to the JavaScript 1.6 Array.every() method, with one difference: when run over sparse arrays, this implementation passes the \"holes\" in the sparse array to the callback function with a value of undefined. JavaScript 1.6's every skips the holes in the sparse array. For more details, see: <a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/every\">https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/every</a></p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">arr</td> <td class=\"jsdoc-param-type\">Array | String</td> <td class=\"jsdoc-param-description\">\n<p>the array to iterate on. If a string, operates on individual characters.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">callback</td> <td class=\"jsdoc-param-type\">Function | String</td> <td class=\"jsdoc-param-description\">\n<p>a function is invoked with three arguments: item, index, and array and returns true if the condition is met.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">thisObject</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>may be used to scope the call to callback</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Boolean</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>// returns false\narray.every([1, 2, 3, 4], function(item){ return item&gt;1; });</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<pre><code>// returns true\narray.every([1, 2, 3, 4], function(item){ return item&gt;0; });</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_exit\">\n<span class=\"functionIcon\">exit</span><span class=\"parameters\">(exitcode)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"configspidermonkey\" class=\"jsdoc-link\">dojo/_base/configSpidermonkey</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">exitcode</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_experimental\">\n<span class=\"functionIcon\">experimental</span><span class=\"parameters\">(moduleName,extra)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"kernel\" class=\"jsdoc-link\">dojo/_base/kernel</a> </p> <p>Marks code as experimental.</p>  <p>This can be used to mark a function, file, or module as experimental. Experimental code is not ready to be used, and the APIs are subject to change without notice. Experimental code may be completed deleted without going through the normal deprecation process.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">moduleName</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>The name of a module, or the name of a module file or a specific function</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">extra</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>some additional message for the user</p> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>dojo.experimental(\"dojo.data.Result\");</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<pre><code>dojo.experimental(\"dojo.weather.toKelvin()\", \"PENDING approval from NOAA\");</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_fadeIn\">\n<span class=\"functionIcon\">fadeIn</span><span class=\"parameters\">(args)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"fx\" class=\"jsdoc-link\">dojo/_base/fx</a> </p> <p>Returns an animation that will fade node defined in 'args' from its current opacity to fully opaque.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">args</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>An object with the following properties:</p>\n<ul>\n<li>node (DOMNode|String): <p>The node referenced in the animation</p> </li>\n<li>duration (Integer, optional): <p>Duration of the animation in milliseconds.</p> </li>\n<li>easing (Function, optional): <p>An easing function.</p> </li>\n</ul> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_fadeOut\">\n<span class=\"functionIcon\">fadeOut</span><span class=\"parameters\">(args)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"fx\" class=\"jsdoc-link\">dojo/_base/fx</a> </p> <p>Returns an animation that will fade node defined in 'args' from its current opacity to fully transparent.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">args</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>An object with the following properties:</p>\n<ul>\n<li>node (DOMNode|String): <p>The node referenced in the animation</p> </li>\n<li>duration (Integer, optional): <p>Duration of the animation in milliseconds.</p> </li>\n<li>easing (Function, optional): <p>An easing function.</p> </li>\n</ul> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_fieldToObject\">\n<span class=\"functionIcon\">fieldToObject</span><span class=\"parameters\">(inputNode)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../dom-form\" class=\"jsdoc-link\">dojo/dom-form</a> </p> <p>Serialize a form field to a JavaScript object.</p>  <p>Returns the value encoded in a form field as as a string or an array of strings. Disabled form elements and unchecked radio and checkboxes are skipped. Multi-select elements are returned as an array of string values.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">inputNode</td> <td class=\"jsdoc-param-type\">DOMNode | String</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Object | undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_filter\">\n<span class=\"functionIcon\">filter</span><span class=\"parameters\">(arr,callback,thisObject)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"array\" class=\"jsdoc-link\">dojo/_base/array</a> </p> <p>Returns a new Array with those items from arr that match the condition implemented by callback.</p>  <p>This function corresponds to the JavaScript 1.6 Array.filter() method, with one difference: when run over sparse arrays, this implementation passes the \"holes\" in the sparse array to the callback function with a value of undefined. JavaScript 1.6's filter skips the holes in the sparse array. For more details, see: <a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/filter\">https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/filter</a></p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">arr</td> <td class=\"jsdoc-param-type\">Array</td> <td class=\"jsdoc-param-description\">\n<p>the array to iterate over.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">callback</td> <td class=\"jsdoc-param-type\">Function | String</td> <td class=\"jsdoc-param-description\">\n<p>a function that is invoked with three arguments (item, index, array). The return of this function is expected to be a boolean which determines whether the passed-in item will be included in the returned array.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">thisObject</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>may be used to scope the call to callback</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Array</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>// returns [2, 3, 4]\narray.filter([1, 2, 3, 4], function(item){ return item&gt;1; });</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_fixEvent\">\n<span class=\"functionIcon\">fixEvent</span><span class=\"parameters\">(evt,sender)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"event\" class=\"jsdoc-link\">dojo/_base/event</a> </p> <p>normalizes properties on the event object including event bubbling methods, keystroke normalization, and x/y positions</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">evt</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\">\n<p>native event object</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">sender</td> <td class=\"jsdoc-param-type\">DOMNode</td> <td class=\"jsdoc-param-description\">\n<p>node to treat as \"currentTarget\"</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Event</span></p> <p>native event object</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_fixIeBiDiScrollLeft\">\n<span class=\"functionIcon\">fixIeBiDiScrollLeft</span><span class=\"parameters\">(scrollLeft,doc)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../dom-geometry\" class=\"jsdoc-link\">dojo/dom-geometry</a> </p> <p>In RTL direction, scrollLeft should be a negative value, but IE returns a positive one. All codes using documentElement.scrollLeft must call this function to fix this error, otherwise the position will offset to right when there is a horizontal scrollbar.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">scrollLeft</td> <td class=\"jsdoc-param-type\">Number</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">doc</td> <td class=\"jsdoc-param-type\">Document</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Optional document to query. If unspecified, use win.doc.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Number | number</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_forEach\">\n<span class=\"functionIcon\">forEach</span><span class=\"parameters\">(arr,callback,thisObject)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"array\" class=\"jsdoc-link\">dojo/_base/array</a> </p> <p>for every item in arr, callback is invoked. Return values are ignored. If you want to break out of the loop, consider using array.every() or array.some(). forEach does not allow breaking out of the loop over the items in arr.</p>  <p>This function corresponds to the JavaScript 1.6 Array.forEach() method, with one difference: when run over sparse arrays, this implementation passes the \"holes\" in the sparse array to the callback function with a value of undefined. JavaScript 1.6's forEach skips the holes in the sparse array. For more details, see: <a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/forEach\">https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/forEach</a></p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">arr</td> <td class=\"jsdoc-param-type\">Array | String</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">callback</td> <td class=\"jsdoc-param-type\">Function | String</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">thisObject</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>// log out all members of the array:\narray.forEach(\n      [ \"thinger\", \"blah\", \"howdy\", 10 ],\n      function(item){\n          console.log(item);\n      }\n);</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<pre><code>// log out the members and their indexes\narray.forEach(\n      [ \"thinger\", \"blah\", \"howdy\", 10 ],\n      function(item, idx, arr){\n          console.log(item, \"at index:\", idx);\n      }\n);</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<pre><code>// use a scoped object member as the callback\n\nvar obj = {\n      prefix: \"logged via obj.callback:\",\n      callback: function(item){\n          console.log(this.prefix, item);\n      }\n};\n\n// specifying the scope function executes the callback in that scope\narray.forEach(\n      [ \"thinger\", \"blah\", \"howdy\", 10 ],\n      obj.callback,\n      obj\n);\n\n// alternately, we can accomplish the same thing with lang.hitch()\narray.forEach(\n      [ \"thinger\", \"blah\", \"howdy\", 10 ],\n      lang.hitch(obj, \"callback\")\n);</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_formToJson\">\n<span class=\"functionIcon\">formToJson</span><span class=\"parameters\">(formNode,prettyPrint)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../dom-form\" class=\"jsdoc-link\">dojo/dom-form</a> </p> <p>Create a serialized JSON string from a form node or string ID identifying the form to serialize</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">formNode</td> <td class=\"jsdoc-param-type\">DOMNode | String</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">prettyPrint</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">String | undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_formToObject\">\n<span class=\"functionIcon\">formToObject</span><span class=\"parameters\">(formNode)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../dom-form\" class=\"jsdoc-link\">dojo/dom-form</a> </p> <p>Serialize a form node to a JavaScript object.</p>  <p>Returns the values encoded in an HTML form as string properties in an object which it then returns. Disabled form elements, buttons, and other non-value form elements are skipped. Multi-select elements are returned as an array of string values.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">formNode</td> <td class=\"jsdoc-param-type\">DOMNode | String</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">object</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>This form: </p> <pre><code>&lt;form id=\"test_form\"&gt;\n    &lt;input type=\"text\" name=\"blah\" value=\"blah\"&gt;\n    &lt;input type=\"text\" name=\"no_value\" value=\"blah\" disabled&gt;\n    &lt;input type=\"button\" name=\"no_value2\" value=\"blah\"&gt;\n    &lt;select type=\"select\" multiple name=\"multi\" size=\"5\"&gt;\n        &lt;option value=\"blah\"&gt;blah&lt;/option&gt;\n        &lt;option value=\"thud\" selected&gt;thud&lt;/option&gt;\n        &lt;option value=\"thonk\" selected&gt;thonk&lt;/option&gt;\n    &lt;/select&gt;\n&lt;/form&gt;</code></pre> <p>yields this object structure as the result of a call to formToObject(): </p> <pre><code>{\n    blah: \"blah\",\n    multi: [\n        \"thud\",\n        \"thonk\"\n    ]\n};</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_formToQuery\">\n<span class=\"functionIcon\">formToQuery</span><span class=\"parameters\">(formNode)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../dom-form\" class=\"jsdoc-link\">dojo/dom-form</a> </p> <p>Returns a URL-encoded string representing the form passed as either a node or string ID identifying the form to serialize</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">formNode</td> <td class=\"jsdoc-param-type\">DOMNode | String</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">String | undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_fromJson\">\n<span class=\"functionIcon\">fromJson</span><span class=\"parameters\">(js)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"json\" class=\"jsdoc-link\">dojo/_base/json</a> </p> <p>Parses a JavaScript expression and returns a JavaScript value.</p>  <p>Throws for invalid JavaScript expressions. It does not use a strict JSON parser. It always delegates to eval(). The content passed to this method must therefore come from a trusted source. It is recommend that you use <a class=\"jsdoc-link\" href=\"../json\">dojo/json</a>'s parse function for an implementation uses the (faster) native JSON parse when available.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">js</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>a string literal of a JavaScript expression, for instance: <code>'{ \"foo\": [ \"bar\", 1, { \"baz\": \"thud\" } ] }'</code></p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_getAttr\">\n<span class=\"functionIcon\">getAttr</span><span class=\"parameters\">(node,name)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../dom-attr\" class=\"jsdoc-link\">dojo/dom-attr</a> </p> <p>Gets an attribute on an HTML element.</p>  <p>Handles normalized getting of attributes on DOM Nodes.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode | String</td> <td class=\"jsdoc-param-description\">\n<p>id or reference to the element to get the attribute on</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">name</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>the name of the attribute to get.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | undefined | null</span></p> <p>the value of the requested attribute or null if that attribute does not have a specified or default value; </p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>// get the current value of the \"foo\" attribute on a node\nrequire([\"dojo/dom-attr\", \"dojo/dom\"], function(domAttr, dom){\n    domAttr.get(dom.byId(\"nodeId\"), \"foo\");\n    // or we can just pass the id:\n    domAttr.get(\"nodeId\", \"foo\");\n}); </code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_getBorderExtents\">\n<span class=\"functionIcon\">getBorderExtents</span><span class=\"parameters\">(node,computedStyle)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../dom-geometry\" class=\"jsdoc-link\">dojo/dom-geometry</a> </p> <p>returns an object with properties useful for noting the border dimensions.</p>  <ul> <li>l/t/r/b = the sum of left/top/right/bottom border (respectively)</li> <li>w = the sum of the left and right border</li> <li>h = the sum of the top and bottom border</li> </ul> <p>The w/h are used for calculating boxes. Normally application code will not need to invoke this directly, and will use the ...box... functions instead.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">computedStyle</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>This parameter accepts computed styles object. If this parameter is omitted, the functions will call dojo/dom-style.getComputedStyle to get one. It is a better way, calling dojo/dom-style.getComputedStyle once, and then pass the reference to this computedStyle parameter. Wherever possible, reuse the returned object of dojo/dom-style.getComputedStyle().</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">object</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_getComputedStyle\">\n<span class=\"functionIcon\">getComputedStyle</span><span class=\"parameters\">(node)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../dom-style\" class=\"jsdoc-link\">dojo/dom-style</a> </p> <p>Returns a \"computed style\" object. </p>  <p>Gets a \"computed style\" object which can be used to gather information about the current state of the rendered node. </p> <p>Note that this may behave differently on different browsers. Values may have different formats and value encodings across browsers. </p> <p>Note also that this method is expensive. Wherever possible, reuse the returned object. </p> <p>Use the <a class=\"jsdoc-link\" href=\"../dom-style#get\">dojo/dom-style.get()</a> method for more consistent (pixelized) return values. </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode</td> <td class=\"jsdoc-param-description\">\n<p>A reference to a DOM node. Does NOT support taking an ID string for speed reasons.</p> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>require([\"dojo/dom-style\", \"dojo/dom\"], function(domStyle, dom){\n    domStyle.getComputedStyle(dom.byId('foo')).borderWidth;\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>Reusing the returned object, avoiding multiple lookups: </p> <pre><code>require([\"dojo/dom-style\", \"dojo/dom\"], function(domStyle, dom){\n    var cs = domStyle.getComputedStyle(dom.byId(\"someNode\"));\n    var w = cs.width, h = cs.height;\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_getContentBox\">\n<span class=\"functionIcon\">getContentBox</span><span class=\"parameters\">(node,computedStyle)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../dom-geometry\" class=\"jsdoc-link\">dojo/dom-geometry</a> </p> <p>Returns an object that encodes the width, height, left and top positions of the node's content box, irrespective of the current box model.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">computedStyle</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>This parameter accepts computed styles object. If this parameter is omitted, the functions will call dojo/dom-style.getComputedStyle to get one. It is a better way, calling dojo/dom-style.getComputedStyle once, and then pass the reference to this computedStyle parameter. Wherever possible, reuse the returned object of dojo/dom-style.getComputedStyle().</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">object</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_getIeDocumentElementOffset\">\n<span class=\"functionIcon\">getIeDocumentElementOffset</span><span class=\"parameters\">(doc)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../dom-geometry\" class=\"jsdoc-link\">dojo/dom-geometry</a> </p> <p>returns the offset in x and y from the document body to the visual edge of the page for IE</p>  <p>The following values in IE contain an offset: </p> <pre><code>event.clientX\nevent.clientY\nnode.getBoundingClientRect().left\nnode.getBoundingClientRect().top</code></pre> <p>But other position related values do not contain this offset, </p> <p>such as node.offsetLeft, node.offsetTop, node.style.left and node.style.top. The offset is always (2, 2) in LTR direction. When the body is in RTL direction, the offset counts the width of left scroll bar's width. This function computes the actual offset.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">doc</td> <td class=\"jsdoc-param-type\">Document</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Optional document to query. If unspecified, use win.doc.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">object</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_getL10nName\">\n<span class=\"functionIcon\">getL10nName</span><span class=\"parameters\">(moduleName,bundleName,locale)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../i18n\" class=\"jsdoc-link\">dojo/i18n</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">moduleName</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">bundleName</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">locale</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">string</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_getMarginBox\">\n<span class=\"functionIcon\">getMarginBox</span><span class=\"parameters\">(node,computedStyle)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../dom-geometry\" class=\"jsdoc-link\">dojo/dom-geometry</a> </p> <p>returns an object that encodes the width, height, left and top positions of the node's margin box.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">computedStyle</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>This parameter accepts computed styles object. If this parameter is omitted, the functions will call dojo/dom-style.getComputedStyle to get one. It is a better way, calling dojo/dom-style.getComputedStyle once, and then pass the reference to this computedStyle parameter. Wherever possible, reuse the returned object of dojo/dom-style.getComputedStyle().</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">object</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_getMarginExtents\">\n<span class=\"functionIcon\">getMarginExtents</span><span class=\"parameters\">(node,computedStyle)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../dom-geometry\" class=\"jsdoc-link\">dojo/dom-geometry</a> </p> <p>returns object with properties useful for box fitting with regards to box margins (i.e., the outer-box). </p> <ul> <li>l/t = marginLeft, marginTop, respectively</li> <li>w = total width, margin inclusive</li> <li>h = total height, margin inclusive</li> </ul> <p>The w/h are used for calculating boxes. Normally application code will not need to invoke this directly, and will use the ...box... functions instead.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">computedStyle</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>This parameter accepts computed styles object. If this parameter is omitted, the functions will call dojo/dom-style.getComputedStyle to get one. It is a better way, calling dojo/dom-style.getComputedStyle once, and then pass the reference to this computedStyle parameter. Wherever possible, reuse the returned object of dojo/dom-style.getComputedStyle().</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">object</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_getMarginSize\">\n<span class=\"functionIcon\">getMarginSize</span><span class=\"parameters\">(node,computedStyle)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../dom-geometry\" class=\"jsdoc-link\">dojo/dom-geometry</a> </p> <p>returns an object that encodes the width and height of the node's margin box</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode | String</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">computedStyle</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>This parameter accepts computed styles object. If this parameter is omitted, the functions will call dojo/dom-style.getComputedStyle to get one. It is a better way, calling dojo/dom-style.getComputedStyle once, and then pass the reference to this computedStyle parameter. Wherever possible, reuse the returned object of dojo/dom-style.getComputedStyle().</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">object</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_getNodeProp\">\n<span class=\"functionIcon\">getNodeProp</span><span class=\"parameters\">(node,name)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../dom-attr\" class=\"jsdoc-link\">dojo/dom-attr</a> </p> <p>Returns an effective value of a property or an attribute.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode | String</td> <td class=\"jsdoc-param-description\">\n<p>id or reference to the element to remove the attribute from</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">name</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>the name of the attribute</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any</span></p> <p>the value of the attribute</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_getPadBorderExtents\">\n<span class=\"functionIcon\">getPadBorderExtents</span><span class=\"parameters\">(node,computedStyle)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../dom-geometry\" class=\"jsdoc-link\">dojo/dom-geometry</a> </p> <p>Returns object with properties useful for box fitting with regards to padding.</p>  <ul> <li>l/t/r/b = the sum of left/top/right/bottom padding and left/top/right/bottom border (respectively)</li> <li>w = the sum of the left and right padding and border</li> <li>h = the sum of the top and bottom padding and border</li> </ul> <p>The w/h are used for calculating boxes. Normally application code will not need to invoke this directly, and will use the ...box... functions instead.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">computedStyle</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>This parameter accepts computed styles object. If this parameter is omitted, the functions will call dojo/dom-style.getComputedStyle to get one. It is a better way, calling dojo/dom-style.getComputedStyle once, and then pass the reference to this computedStyle parameter. Wherever possible, reuse the returned object of dojo/dom-style.getComputedStyle().</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">object</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_getPadExtents\">\n<span class=\"functionIcon\">getPadExtents</span><span class=\"parameters\">(node,computedStyle)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../dom-geometry\" class=\"jsdoc-link\">dojo/dom-geometry</a> </p> <p>Returns object with special values specifically useful for node fitting.</p>  <p>Returns an object with <code>w</code>, <code>h</code>, <code>l</code>, <code>t</code> properties: </p> <pre><code>l/t/r/b = left/top/right/bottom padding (respectively)\nw = the total of the left and right padding\nh = the total of the top and bottom padding</code></pre> <p>If 'node' has position, l/t forms the origin for child nodes. </p> <p>The w/h are used for calculating boxes. Normally application code will not need to invoke this directly, and will use the ...box... functions instead.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">computedStyle</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>This parameter accepts computed styles object. If this parameter is omitted, the functions will call dojo/dom-style.getComputedStyle to get one. It is a better way, calling dojo/dom-style.getComputedStyle once, and then pass the reference to this computedStyle parameter. Wherever possible, reuse the returned object of dojo/dom-style.getComputedStyle().</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">object</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_getProp\">\n<span class=\"functionIcon\">getProp</span><span class=\"parameters\">(node,name)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../dom-prop\" class=\"jsdoc-link\">dojo/dom-prop</a> </p> <p>Gets a property on an HTML element.</p>  <p>Handles normalized getting of properties on DOM nodes. </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode | String</td> <td class=\"jsdoc-param-description\">\n<p>id or reference to the element to get the property on</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">name</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>the name of the property to get.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | undefined</span></p> <p>the value of the requested property or its default value </p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>// get the current value of the \"foo\" property on a node\nrequire([\"dojo/dom-prop\", \"dojo/dom\"], function(domProp, dom){\n    domProp.get(dom.byId(\"nodeId\"), \"foo\");\n    // or we can just pass the id:\n    domProp.get(\"nodeId\", \"foo\");\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_getStyle\">\n<span class=\"functionIcon\">getStyle</span><span class=\"parameters\">(node,name)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../dom-style\" class=\"jsdoc-link\">dojo/dom-style</a> </p> <p>Accesses styles on a node.</p>  <p>Getting the style value uses the computed style for the node, so the value will be a calculated value, not just the immediate node.style value. Also when getting values, use specific style names, like \"borderBottomWidth\" instead of \"border\" since compound values like \"border\" are not necessarily reflected as expected. If you want to get node dimensions, use <a class=\"jsdoc-link\" href=\"../dom-geometry#getMarginBox\">dojo/dom-geometry.getMarginBox()</a>, <a class=\"jsdoc-link\" href=\"../dom-geometry#getContentBox\">dojo/dom-geometry.getContentBox()</a> or <a class=\"jsdoc-link\" href=\"../dom-geometry#getPosition\">dojo/dom-geometry.getPosition()</a>.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode | String</td> <td class=\"jsdoc-param-description\">\n<p>id or reference to node to get style for</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">name</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>the style property to get</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Passing only an ID or node returns the computed style object of the node: </p> <pre><code>require([\"dojo/dom-style\", \"dojo/dom\"], function(domStyle, dom){\n    domStyle.get(\"thinger\");\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>Passing a node and a style property returns the current normalized, computed value for that property: </p> <pre><code>require([\"dojo/dom-style\", \"dojo/dom\"], function(domStyle, dom){\n    domStyle.get(\"thinger\", \"opacity\"); // 1 by default\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_hasAttr\">\n<span class=\"functionIcon\">hasAttr</span><span class=\"parameters\">(node,name)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../dom-attr\" class=\"jsdoc-link\">dojo/dom-attr</a> </p> <p>Returns true if the requested attribute is specified on the given element, and false otherwise.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode | String</td> <td class=\"jsdoc-param-description\">\n<p>id or reference to the element to check</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">name</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>the name of the attribute</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Boolean | contentWindow.document isn't accessible within IE7/8</span></p> <p>true if the requested attribute is specified on the given element, and false otherwise</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_hasClass\">\n<span class=\"functionIcon\">hasClass</span><span class=\"parameters\">(node,classStr)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../dom-class\" class=\"jsdoc-link\">dojo/dom-class</a> </p> <p>Returns whether or not the specified classes are a portion of the class list currently applied to the node.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">String | DOMNode</td> <td class=\"jsdoc-param-description\">\n<p>String ID or DomNode reference to check the class for.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">classStr</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>A string class name to look for.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">boolean</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Do something if a node with id=\"someNode\" has class=\"aSillyClassName\" present </p> <pre><code>if(dojo.hasClass(\"someNode\",\"aSillyClassName\")){ ... }</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_hash\">\n<span class=\"functionIcon\">hash</span><span class=\"parameters\">(hash,replace)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../hash\" class=\"jsdoc-link\">dojo/hash</a> </p> <p>Gets or sets the hash string in the browser URL.</p>  <p>Handles getting and setting of location.hash. </p> <ul> <li>If no arguments are passed, acts as a getter.</li> <li>If a string is passed, acts as a setter.</li> </ul>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">hash</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>the hash is set - #string.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">replace</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>If true, updates the hash value in the current history state instead of creating a new history state.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | undefined</span></p> <p>when used as a getter, returns the current hash string. when used as a setter, returns the new hash string.</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>topic.subscribe(\"/dojo/hashchange\", context, callback);\n\nfunction callback (hashValue){\n    // do something based on the hash value.\n}</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_indexOf\">\n<span class=\"functionIcon\">indexOf</span><span class=\"parameters\">(arr,value,fromIndex,findLast)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"array\" class=\"jsdoc-link\">dojo/_base/array</a> </p> <p>locates the first index of the provided value in the passed array. If the value is not found, -1 is returned.</p>  <p>This method corresponds to the JavaScript 1.6 Array.indexOf method, with two differences: </p> <ol> <li>when run over sparse arrays, the Dojo function invokes the callback for every index whereas JavaScript 1.6's indexOf skips the holes in the sparse array.</li> <li>uses equality (==) rather than strict equality (===)</li> </ol> <p>For details on this method, see: <a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/indexOf\">https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/indexOf</a></p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">arr</td> <td class=\"jsdoc-param-type\">Array</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">value</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">fromIndex</td> <td class=\"jsdoc-param-type\">Integer</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> <tr> <td class=\"jsdoc-param-name\">findLast</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Makes indexOf() work like lastIndexOf(). Used internally; not meant for external usage.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Number</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_isBodyLtr\">\n<span class=\"functionIcon\">isBodyLtr</span><span class=\"parameters\">(doc)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../dom-geometry\" class=\"jsdoc-link\">dojo/dom-geometry</a> </p> <p>Returns true if the current language is left-to-right, and false otherwise.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">doc</td> <td class=\"jsdoc-param-type\">Document</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Optional document to query. If unspecified, use win.doc.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Boolean | boolean</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_isDescendant\">\n<span class=\"functionIcon\">isDescendant</span><span class=\"parameters\">(node,ancestor)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../dom\" class=\"jsdoc-link\">dojo/dom</a> </p> <p>Returns true if node is a descendant of ancestor</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode | String</td> <td class=\"jsdoc-param-description\">\n<p>string id or node reference to test</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">ancestor</td> <td class=\"jsdoc-param-type\">DOMNode | String</td> <td class=\"jsdoc-param-description\">\n<p>string id or node reference of potential parent to test against </p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">boolean</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Test is node id=\"bar\" is a descendant of node id=\"foo\" </p> <pre><code>require([\"dojo/dom\"], function(dom){\n    if(dom.isDescendant(\"bar\", \"foo\")){ ... }\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_lastIndexOf\">\n<span class=\"functionIcon\">lastIndexOf</span><span class=\"parameters\">(arr,value,fromIndex)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"array\" class=\"jsdoc-link\">dojo/_base/array</a> </p> <p>locates the last index of the provided value in the passed array. If the value is not found, -1 is returned.</p>  <p>This method corresponds to the JavaScript 1.6 Array.lastIndexOf method, with two differences: </p> <ol> <li>when run over sparse arrays, the Dojo function invokes the callback for every index whereas JavaScript 1.6's lasIndexOf skips the holes in the sparse array.</li> <li>uses equality (==) rather than strict equality (===)</li> </ol> <p>For details on this method, see: <a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/lastIndexOf\">https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/lastIndexOf</a></p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">arr</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">value</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">fromIndex</td> <td class=\"jsdoc-param-type\">Integer</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Number</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_loadInit\">\n<span class=\"functionIcon\">loadInit</span><span class=\"parameters\">(f)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"loader\" class=\"jsdoc-link\">dojo/_base/loader</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">f</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_map\">\n<span class=\"functionIcon\">map</span><span class=\"parameters\">(arr,callback,thisObject,Ctr)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"array\" class=\"jsdoc-link\">dojo/_base/array</a> </p> <p>applies callback to each element of arr and returns an Array with the results</p>  <p>This function corresponds to the JavaScript 1.6 Array.map() method, with one difference: when run over sparse arrays, this implementation passes the \"holes\" in the sparse array to the callback function with a value of undefined. JavaScript 1.6's map skips the holes in the sparse array. For more details, see: <a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/map\">https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/map</a></p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">arr</td> <td class=\"jsdoc-param-type\">Array | String</td> <td class=\"jsdoc-param-description\">\n<p>the array to iterate on. If a string, operates on individual characters.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">callback</td> <td class=\"jsdoc-param-type\">Function | String</td> <td class=\"jsdoc-param-description\">\n<p>a function is invoked with three arguments, (item, index, array), and returns a value</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">thisObject</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>may be used to scope the call to callback</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">Ctr</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Array | instance</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>// returns [2, 3, 4, 5]\narray.map([1, 2, 3, 4], function(item){ return item+1 });</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_marginBox\">\n<span class=\"functionIcon\">marginBox</span><span class=\"parameters\">(node,box)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"html\" class=\"jsdoc-link\">dojo/_base/html</a> </p> <p>Getter/setter for the margin-box of node.</p>  <p>Getter/setter for the margin-box of node. Returns an object in the expected format of box (regardless if box is passed). The object might look like: <code>{ l: 50, t: 200, w: 300: h: 150 }</code> for a node offset from its parent 50px to the left, 200px from the top with a margin width of 300px and a margin-height of 150px.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DomNode | String</td> <td class=\"jsdoc-param-description\">\n<p>id or reference to DOM Node to get/set box for</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">box</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>If passed, denotes that dojo.marginBox() should update/set the margin box for node. Box is an object in the above format. All properties are optional if passed.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Retrieve the margin box of a passed node </p> <pre><code>var box = dojo.marginBox(\"someNodeId\");\nconsole.dir(box);</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>Set a node's margin box to the size of another node </p> <pre><code>var box = dojo.marginBox(\"someNodeId\");\ndojo.marginBox(\"someOtherNode\", box);</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_moduleUrl\">\n<span class=\"functionIcon\">moduleUrl</span><span class=\"parameters\">(module,url)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"kernel\" class=\"jsdoc-link\">dojo/_base/kernel</a> </p> <p>Returns a URL relative to a module.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">module</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>dojo/dom-class</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">url</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">string</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>var pngPath = dojo.moduleUrl(\"acme\",\"images/small.png\");\nconsole.dir(pngPath); // list the object properties\n// create an image and set it's source to pngPath's value:\nvar img = document.createElement(\"img\");\nimg.src = pngPath;\n// add our image to the document\ndojo.body().appendChild(img);</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>you may de-reference as far as you like down the package hierarchy. This is sometimes handy to avoid lengthy relative urls or for building portable sub-packages. In this example, the <code>acme.widget</code> and <code>acme.util</code> directories may be located under different roots (see <code>dojo.registerModulePath</code>) but the the modules which reference them can be unaware of their relative locations on the filesystem: </p> <pre><code>// somewhere in a configuration block\ndojo.registerModulePath(\"acme.widget\", \"../../acme/widget\");\ndojo.registerModulePath(\"acme.util\", \"../../util\");\n\n// ...\n\n// code in a module using acme resources\nvar tmpltPath = dojo.moduleUrl(\"acme.widget\",\"templates/template.html\");\nvar dataPath = dojo.moduleUrl(\"acme.util\",\"resources/data.json\");</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_NodeList\">\n<span class=\"functionIcon\">NodeList</span><span class=\"parameters\">(array)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../query\" class=\"jsdoc-link\">dojo/query</a> </p> <p>Array-like object which adds syntactic sugar for chaining, common iteration operations, animation, and node manipulation. NodeLists are most often returned as the result of dojo/query() calls.</p>  <p>NodeList instances provide many utilities that reflect core Dojo APIs for Array iteration and manipulation, DOM manipulation, and event handling. Instead of needing to dig up functions in the dojo package, NodeLists generally make the full power of Dojo available for DOM manipulation tasks in a simple, chainable way.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">array</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Array</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>create a node list from a node </p> <pre><code>require([\"dojo/query\", \"dojo/dom\"\n], function(query, dom){\n    query.NodeList(dom.byId(\"foo\"));\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>get a NodeList from a CSS query and iterate on it </p> <pre><code>require([\"dojo/on\", \"dojo/dom\"\n], function(on, dom){\n    var l = query(\".thinger\");\n    l.forEach(function(node, index, nodeList){\n        console.log(index, node.innerHTML);\n    });\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<p>use native and Dojo-provided array methods to manipulate a NodeList without needing to use dojo.* functions explicitly: </p> <pre><code>require([\"dojo/query\", \"dojo/dom-construct\", \"dojo/dom\"\n], function(query, domConstruct, dom){\n    var l = query(\".thinger\");\n    // since NodeLists are real arrays, they have a length\n    // property that is both readable and writable and\n    // push/pop/shift/unshift methods\n    console.log(l.length);\n    l.push(domConstruct.create(\"span\"));\n\n    // dojo's normalized array methods work too:\n    console.log( l.indexOf(dom.byId(\"foo\")) );\n    // ...including the special \"function as string\" shorthand\n    console.log( l.every(\"item.nodeType == 1\") );\n\n    // NodeLists can be [..] indexed, or you can use the at()\n    // function to get specific items wrapped in a new NodeList:\n    var node = l[3]; // the 4th element\n    var newList = l.at(1, 3); // the 2nd and 4th elements\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 4</h3>\n<p>chainability is a key advantage of NodeLists: </p> <pre><code>require([\"dojo/query\", \"dojo/NodeList-dom\"\n], function(query){\n    query(\".thinger\")\n        .onclick(function(e){ /* ... */ })\n        .at(1, 3, 8) // get a subset\n            .style(\"padding\", \"5px\")\n            .forEach(console.log);\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_objectToQuery\">\n<span class=\"functionIcon\">objectToQuery</span><span class=\"parameters\">(map)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../io-query\" class=\"jsdoc-link\">dojo/io-query</a> </p> <p>takes a name/value mapping object and returns a string representing a URL-encoded version of that object.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">map</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>this object: </p> <pre><code>{\n    blah: \"blah\",\n    multi: [\n        \"thud\",\n        \"thonk\"\n    ]\n};</code></pre> <p>yields the following query string: </p> <pre><code>\"blah=blah&amp;multi=thud&amp;multi=thonk\"</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_place\">\n<span class=\"functionIcon\">place</span><span class=\"parameters\">(node,refNode,position)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../dom-construct\" class=\"jsdoc-link\">dojo/dom-construct</a> </p> <p>Attempt to insert node into the DOM, choosing from various positioning options. Returns the first argument resolved to a DOM node.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode | DocumentFragment | String</td> <td class=\"jsdoc-param-description\">\n<p>id or node reference, or HTML fragment starting with \"&lt;\" to place relative to refNode</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">refNode</td> <td class=\"jsdoc-param-type\">DOMNode | String</td> <td class=\"jsdoc-param-description\">\n<p>id or node reference to use as basis for placement</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">position</td> <td class=\"jsdoc-param-type\">String | Number</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>string noting the position of node relative to refNode or a number indicating the location in the childNodes collection of refNode. Accepted string values are: </p> <ul> <li>before</li> <li>after</li> <li>replace</li> <li>only</li> <li>first</li> <li>last</li> </ul> <p>\"first\" and \"last\" indicate positions as children of refNode, \"replace\" replaces refNode, \"only\" replaces all children. position defaults to \"last\" if not specified</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">DOMNode | undefined</span></p> <p>Returned values is the first argument resolved to a DOM node. </p> <p>.place() is also a method of <code>dojo/NodeList</code>, allowing <code>dojo/query</code> node lookups.</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Place a node by string id as the last child of another node by string id: </p> <pre><code>require([\"dojo/dom-construct\"], function(domConstruct){\n    domConstruct.place(\"someNode\", \"anotherNode\");\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>Place a node by string id before another node by string id </p> <pre><code>require([\"dojo/dom-construct\"], function(domConstruct){\n    domConstruct.place(\"someNode\", \"anotherNode\", \"before\");\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<p>Create a Node, and place it in the body element (last child): </p> <pre><code>require([\"dojo/dom-construct\", \"dojo/_base/window\"\n], function(domConstruct, win){\n    domConstruct.place(\"&lt;div&gt;&lt;/div&gt;\", win.body());\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 4</h3>\n<p>Put a new LI as the first child of a list by id: </p> <pre><code>require([\"dojo/dom-construct\"], function(domConstruct){\n    domConstruct.place(\"&lt;li&gt;&lt;/li&gt;\", \"someUl\", \"first\");\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_platformRequire\">\n<span class=\"functionIcon\">platformRequire</span><span class=\"parameters\">(modMap)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"loader\" class=\"jsdoc-link\">dojo/_base/loader</a> </p> <p>require one or more modules based on which host environment Dojo is currently operating in</p>  <p>This method takes a \"map\" of arrays which one can use to optionally load dojo modules. The map is indexed by the possible dojo.name<em> values, with two additional values: \"default\" and \"common\". The items in the \"default\" array will be loaded if none of the other items have been chosen based on dojo.name</em>, set by your host environment. The items in the \"common\" array will <em>always</em> be loaded, regardless of which list is chosen.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">modMap</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>dojo.platformRequire({\n    browser: [\n        \"foo.sample\", // simple module\n        \"foo.test\",\n        [\"foo.bar.baz\", true] // skip object check in _loadModule (dojo.require)\n    ],\n    default: [ \"foo.sample._base\" ],\n    common: [ \"important.module.common\" ]\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_popContext\">\n<span class=\"functionIcon\">popContext</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"configfirefoxextension\" class=\"jsdoc-link\">dojo/_base/configFirefoxExtension</a> </p> <p>If the context stack contains elements, ensure that subsequent code executes in the <em>previous</em> context to the current context. The current context set ([global, document]) is returned.</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_position\">\n<span class=\"functionIcon\">position</span><span class=\"parameters\">(node,includeScroll)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../dom-geometry\" class=\"jsdoc-link\">dojo/dom-geometry</a> </p> <p>Gets the position and size of the passed element relative to the viewport (if includeScroll==false), or relative to the document root (if includeScroll==true). </p>  <p>Returns an object of the form: <code>{ x: 100, y: 300, w: 20, h: 15 }</code>. If includeScroll==true, the x and y values will include any document offsets that may affect the position relative to the viewport. Uses the border-box model (inclusive of border and padding but not margin). Does not act as a setter.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode | String</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">includeScroll</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Object | object</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_prop\">\n<span class=\"functionIcon\">prop</span><span class=\"parameters\">(node,name,value)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"html\" class=\"jsdoc-link\">dojo/_base/html</a> </p> <p>Gets or sets a property on an HTML element.</p>  <p>Handles normalized getting and setting of properties on DOM Nodes. If 2 arguments are passed, and a the second argument is a string, acts as a getter. </p> <p>If a third argument is passed, or if the second argument is a map of attributes, acts as a setter. </p> <p>When passing functions as values, note that they will not be directly assigned to slots on the node, but rather the default behavior will be removed and the new behavior will be added using <code>dojo.connect()</code>, meaning that event handler properties will be normalized and that some caveats with regards to non-standard behaviors for onsubmit apply. Namely that you should cancel form submission using <code>dojo.stopEvent()</code> on the passed event object instead of returning a boolean value from the handler itself.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DomNode | String</td> <td class=\"jsdoc-param-description\">\n<p>id or reference to the element to get or set the property on</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">name</td> <td class=\"jsdoc-param-type\">String | Object</td> <td class=\"jsdoc-param-description\">\n<p>the name of the property to get or set.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">value</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>The value to set for the property</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any</span></p> <p>when used as a getter, the value of the requested property or null if that attribute does not have a specified or default value; </p> <p>when used as a setter, the DOM node </p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>// get the current value of the \"foo\" property on a node\ndojo.prop(dojo.byId(\"nodeId\"), \"foo\");\n// or we can just pass the id:\ndojo.prop(\"nodeId\", \"foo\");</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<pre><code>// use prop() to set the tab index\ndojo.prop(\"nodeId\", \"tabIndex\", 3);</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<p>Set multiple values at once, including event handlers: </p> <pre><code>dojo.prop(\"formId\", {\n    \"foo\": \"bar\",\n    \"tabIndex\": -1,\n    \"method\": \"POST\",\n    \"onsubmit\": function(e){\n        // stop submitting the form. Note that the IE behavior\n        // of returning true or false will have no effect here\n        // since our handler is connect()ed to the built-in\n        // onsubmit behavior and so we need to use\n        // dojo.stopEvent() to ensure that the submission\n        // doesn't proceed.\n        dojo.stopEvent(e);\n\n        // submit the form with Ajax\n        dojo.xhrPost({ form: \"formId\" });\n    }\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 4</h3>\n<p>Style is s special case: Only set with an object hash of styles </p> <pre><code>dojo.prop(\"someNode\",{\n    id:\"bar\",\n    style:{\n        width:\"200px\", height:\"100px\", color:\"#000\"\n    }\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 5</h3>\n<p>Again, only set style as an object hash of styles: </p> <pre><code>var obj = { color:\"#fff\", backgroundColor:\"#000\" };\ndojo.prop(\"someNode\", \"style\", obj);\n\n// though shorter to use `dojo.style()` in this case:\ndojo.style(\"someNode\", obj);</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_provide\">\n<span class=\"functionIcon\">provide</span><span class=\"parameters\">(mid)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"loader\" class=\"jsdoc-link\">dojo/_base/loader</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">mid</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_pushContext\">\n<span class=\"functionIcon\">pushContext</span><span class=\"parameters\">(g,d)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"configfirefoxextension\" class=\"jsdoc-link\">dojo/_base/configFirefoxExtension</a> </p> <p>causes subsequent calls to Dojo methods to assume the passed object and, optionally, document as the default scopes to use. A 2-element array of the previous global and document are returned.</p>  <p>dojo.pushContext treats contexts as a stack. The auto-detected contexts which are initially provided using dojo.setContext() require authors to keep state in order to \"return\" to a previous context, whereas the dojo.pushContext and dojo.popContext methods provide a more natural way to augment blocks of code to ensure that they execute in a different window or frame without issue. If called without any arguments, the default context (the context when Dojo is first loaded) is instead pushed into the stack. If only a single string is passed, a node in the intitial context's document is looked up and its contextWindow and contextDocument properties are used as the context to push. This means that iframes can be given an ID and code can be executed in the scope of the iframe's document in subsequent calls easily.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">g</td> <td class=\"jsdoc-param-type\">Object | String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>The global context. If a string, the id of the frame to search for a context and document.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">d</td> <td class=\"jsdoc-param-type\">MDocumentElement</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>The document element to execute subsequent code with.</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_queryToObject\">\n<span class=\"functionIcon\">queryToObject</span><span class=\"parameters\">(str)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../io-query\" class=\"jsdoc-link\">dojo/io-query</a> </p> <p>Create an object representing a de-serialized query section of a URL. Query keys with multiple values are returned in an array. </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">str</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">object</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>This string: </p> <pre><code>\"foo=bar&amp;foo=baz&amp;thinger=%20spaces%20=blah&amp;zonk=blarg&amp;\"</code></pre> <p>results in this object structure: </p> <pre><code>{\n    foo: [ \"bar\", \"baz\" ],\n    thinger: \" spaces =blah\",\n    zonk: \"blarg\"\n}</code></pre> <p>Note that spaces and other urlencoded entities are correctly handled.</p> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_rawXhrPost\">\n<span class=\"functionIcon\">rawXhrPost</span><span class=\"parameters\">(args)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <p>Sends an HTTP POST request to the server. In addition to the properties listed for the dojo.__XhrArgs type, the following property is allowed:</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">args</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>An object with the following properties:</p>\n<ul>\n<li>handleAs (String, optional): <p>Acceptable values are: text (default), json, json-comment-optional, json-comment-filtered, javascript, xml. See <code>dojo/_base/xhr.contentHandlers</code></p> </li>\n<li>sync (Boolean, optional): <p>false is default. Indicates whether the request should be a synchronous (blocking) request.</p> </li>\n<li>headers (Object, optional): <p>Additional HTTP headers to send in the request.</p> </li>\n<li>failOk (Boolean, optional): <p>false is default. Indicates whether a request should be allowed to fail (and therefore no console error message in the event of a failure)</p> </li>\n<li>contentType (String|Boolean): <p>\"application/x-www-form-urlencoded\" is default. Set to false to prevent a Content-Type header from being sent, or to a string to send a different Content-Type.</p> </li>\n<li>load: <p>This function will be called on a successful HTTP response code.</p> </li>\n<li>error: <p>This function will be called when the request fails due to a network or server error, the url is invalid, etc. It will also be called if the load or handle callback throws an exception, unless djConfig.debugAtAllCosts is true. This allows deployed applications to continue to run even when a logic error happens in the callback, while making it easier to troubleshoot while in debug mode.</p> </li>\n<li>handle: <p>This function will be called at the end of every request, whether or not an error occurs.</p> </li>\n<li>url (String): <p>URL to server endpoint.</p> </li>\n<li>content (Object, optional): <p>Contains properties with string values. These properties will be serialized as name1=value2 and passed in the request.</p> </li>\n<li>timeout (Integer, optional): <p>Milliseconds to wait for the response. If this time passes, the then error callbacks are called.</p> </li>\n<li>form (DOMNode, optional): <p>DOM node for a form. Used to extract the form values and send to the server.</p> </li>\n<li>preventCache (Boolean, optional): <p>Default is false. If true, then a \"dojo.preventCache\" parameter is sent in the request with a value that changes with each request (timestamp). Useful only with GET-type requests.</p> </li>\n<li>rawBody (String, optional): <p>Sets the raw body for an HTTP request. If this is used, then the content property is ignored. This is mostly useful for HTTP methods that have a body to their requests, like PUT or POST. This property can be used instead of postData and putData for dojo/_base/xhr.rawXhrPost and dojo/_base/xhr.rawXhrPut respectively.</p> </li>\n<li>ioPublish (Boolean, optional): <p>Set this explicitly to false to prevent publishing of topics related to IO operations. Otherwise, if djConfig.ioPublish is set to true, topics will be published via dojo/topic.publish() for different phases of an IO operation. See dojo/main.__IoPublish for a list of topics that are published.</p> </li>\n</ul> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_rawXhrPut\">\n<span class=\"functionIcon\">rawXhrPut</span><span class=\"parameters\">(args)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <p>Sends an HTTP PUT request to the server. In addition to the properties listed for the dojo.__XhrArgs type, the following property is allowed:</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">args</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>An object with the following properties:</p>\n<ul>\n<li>handleAs (String, optional): <p>Acceptable values are: text (default), json, json-comment-optional, json-comment-filtered, javascript, xml. See <code>dojo/_base/xhr.contentHandlers</code></p> </li>\n<li>sync (Boolean, optional): <p>false is default. Indicates whether the request should be a synchronous (blocking) request.</p> </li>\n<li>headers (Object, optional): <p>Additional HTTP headers to send in the request.</p> </li>\n<li>failOk (Boolean, optional): <p>false is default. Indicates whether a request should be allowed to fail (and therefore no console error message in the event of a failure)</p> </li>\n<li>contentType (String|Boolean): <p>\"application/x-www-form-urlencoded\" is default. Set to false to prevent a Content-Type header from being sent, or to a string to send a different Content-Type.</p> </li>\n<li>load: <p>This function will be called on a successful HTTP response code.</p> </li>\n<li>error: <p>This function will be called when the request fails due to a network or server error, the url is invalid, etc. It will also be called if the load or handle callback throws an exception, unless djConfig.debugAtAllCosts is true. This allows deployed applications to continue to run even when a logic error happens in the callback, while making it easier to troubleshoot while in debug mode.</p> </li>\n<li>handle: <p>This function will be called at the end of every request, whether or not an error occurs.</p> </li>\n<li>url (String): <p>URL to server endpoint.</p> </li>\n<li>content (Object, optional): <p>Contains properties with string values. These properties will be serialized as name1=value2 and passed in the request.</p> </li>\n<li>timeout (Integer, optional): <p>Milliseconds to wait for the response. If this time passes, the then error callbacks are called.</p> </li>\n<li>form (DOMNode, optional): <p>DOM node for a form. Used to extract the form values and send to the server.</p> </li>\n<li>preventCache (Boolean, optional): <p>Default is false. If true, then a \"dojo.preventCache\" parameter is sent in the request with a value that changes with each request (timestamp). Useful only with GET-type requests.</p> </li>\n<li>rawBody (String, optional): <p>Sets the raw body for an HTTP request. If this is used, then the content property is ignored. This is mostly useful for HTTP methods that have a body to their requests, like PUT or POST. This property can be used instead of postData and putData for dojo/_base/xhr.rawXhrPost and dojo/_base/xhr.rawXhrPut respectively.</p> </li>\n<li>ioPublish (Boolean, optional): <p>Set this explicitly to false to prevent publishing of topics related to IO operations. Otherwise, if djConfig.ioPublish is set to true, topics will be published via dojo/topic.publish() for different phases of an IO operation. See dojo/main.__IoPublish for a list of topics that are published.</p> </li>\n</ul> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_ready\">\n<span class=\"functionIcon\">ready</span><span class=\"parameters\">(priority,context,callback)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../ready\" class=\"jsdoc-link\">dojo/ready</a> </p> <p>Add a function to execute on DOM content loaded and all requested modules have arrived and been evaluated. In most cases, the <code>domReady</code> plug-in should suffice and this method should not be needed. </p> <p>When called in a non-browser environment, just checks that all requested modules have arrived and been evaluated.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">priority</td> <td class=\"jsdoc-param-type\">Integer</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>The order in which to exec this callback relative to other callbacks, defaults to 1000</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">context</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\">\n<p>The context in which to run execute callback, or a callback if not using context</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">callback</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>The function to execute. </p> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Simple DOM and Modules ready syntax </p> <pre><code>require([\"dojo/ready\"], function(ready){\n    ready(function(){ alert(\"Dom ready!\"); });\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>Using a priority </p> <pre><code>require([\"dojo/ready\"], function(ready){\n    ready(2, function(){ alert(\"low priority ready!\"); })\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<p>Using context </p> <pre><code>require([\"dojo/ready\"], function(ready){\n    ready(foo, function(){\n        // in here, this == foo\n    });\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 4</h3>\n<p>Using dojo/hitch style args: </p> <pre><code>require([\"dojo/ready\"], function(ready){\n    var foo = { dojoReady: function(){ console.warn(this, \"dojo dom and modules ready.\"); } };\n    ready(foo, \"dojoReady\");\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_registerModulePath\">\n<span class=\"functionIcon\">registerModulePath</span><span class=\"parameters\">(moduleName,prefix)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"loader\" class=\"jsdoc-link\">dojo/_base/loader</a> </p> <p>Maps a module name to a path</p>  <p>An unregistered module is given the default path of ../[module], relative to Dojo root. For example, module acme is mapped to ../acme. If you want to use a different module name, use dojo.registerModulePath.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">moduleName</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">prefix</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>If your dojo.js is located at this location in the web root: </p> <pre><code>/myapp/js/dojo/dojo/dojo.js</code></pre> <p>and your modules are located at: </p> <pre><code>/myapp/js/foo/bar.js\n/myapp/js/foo/baz.js\n/myapp/js/foo/thud/xyzzy.js</code></pre> <p>Your application can tell Dojo to locate the \"foo\" namespace by calling: </p> <pre><code>dojo.registerModulePath(\"foo\", \"../../foo\");</code></pre> <p>At which point you can then use dojo.require() to load the </p> <p>modules (assuming they provide() the same things which are required). The full code might be: </p> <pre><code>&lt;script type=\"text/javascript\"\n    src=\"/myapp/js/dojo/dojo/dojo.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;\n    dojo.registerModulePath(\"foo\", \"../../foo\");\n    dojo.require(\"foo.bar\");\n    dojo.require(\"foo.baz\");\n    dojo.require(\"foo.thud.xyzzy\");\n&lt;/script&gt;</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_removeAttr\">\n<span class=\"functionIcon\">removeAttr</span><span class=\"parameters\">(node,name)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../dom-attr\" class=\"jsdoc-link\">dojo/dom-attr</a> </p> <p>Removes an attribute from an HTML element.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode | String</td> <td class=\"jsdoc-param-description\">\n<p>id or reference to the element to remove the attribute from</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">name</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>the name of the attribute to remove</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_removeClass\">\n<span class=\"functionIcon\">removeClass</span><span class=\"parameters\">(node,classStr)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../dom-class\" class=\"jsdoc-link\">dojo/dom-class</a> </p> <p>Removes the specified classes from node. No <code>contains()</code> check is required. </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">String | DOMNode</td> <td class=\"jsdoc-param-description\">\n<p>String ID or DomNode reference to remove the class from. </p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">classStr</td> <td class=\"jsdoc-param-type\">String | Array</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>An optional String class name to remove, or several space-separated class names, or an array of class names. If omitted, all class names will be deleted. </p> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Remove a class from some node: </p> <pre><code>require([\"dojo/dom-class\"], function(domClass){\n    domClass.remove(\"someNode\", \"firstClass\");\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>Remove two classes from some node: </p> <pre><code>require([\"dojo/dom-class\"], function(domClass){\n    domClass.remove(\"someNode\", \"firstClass secondClass\");\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<p>Remove two classes from some node (using array): </p> <pre><code>require([\"dojo/dom-class\"], function(domClass){\n    domClass.remove(\"someNode\", [\"firstClass\", \"secondClass\"]);\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 4</h3>\n<p>Remove all classes from some node: </p> <pre><code>require([\"dojo/dom-class\"], function(domClass){\n    domClass.remove(\"someNode\");\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 5</h3>\n<p>Available in <code>dojo/NodeList</code> for multiple removal </p> <pre><code>require([\"dojo/query\"], function(query){\n    query(\"ul &gt; li\").removeClass(\"foo\");\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_replaceClass\">\n<span class=\"functionIcon\">replaceClass</span><span class=\"parameters\">(node,addClassStr,removeClassStr)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../dom-class\" class=\"jsdoc-link\">dojo/dom-class</a> </p> <p>Replaces one or more classes on a node if not present. Operates more quickly than calling dojo.removeClass and dojo.addClass </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">String | DOMNode</td> <td class=\"jsdoc-param-description\">\n<p>String ID or DomNode reference to remove the class from. </p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">addClassStr</td> <td class=\"jsdoc-param-type\">String | Array</td> <td class=\"jsdoc-param-description\">\n<p>A String class name to add, or several space-separated class names, or an array of class names. </p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">removeClassStr</td> <td class=\"jsdoc-param-type\">String | Array</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>A String class name to remove, or several space-separated class names, or an array of class names. </p> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>require([\"dojo/dom-class\"], function(domClass){\n    domClass.replace(\"someNode\", \"add1 add2\", \"remove1 remove2\");\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>Replace all classes with addMe </p> <pre><code>require([\"dojo/dom-class\"], function(domClass){\n    domClass.replace(\"someNode\", \"addMe\");\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<p>Available in <code>dojo/NodeList</code> for multiple toggles </p> <pre><code>require([\"dojo/query\"], function(query){\n    query(\".findMe\").replaceClass(\"addMe\", \"removeMe\");\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_require\">\n<span class=\"functionIcon\">require</span><span class=\"parameters\">(moduleName,omitModuleCheck)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"loader\" class=\"jsdoc-link\">dojo/_base/loader</a> </p> <p>loads a Javascript module from the appropriate URI </p>  <p>Modules are loaded via dojo.require by using one of two loaders: the normal loader and the xdomain loader. The xdomain loader is used when dojo was built with a custom build that specified loader=xdomain and the module lives on a modulePath that is a whole URL, with protocol and a domain. The versions of Dojo that are on the Google and AOL CDNs use the xdomain loader. </p> <p>If the module is loaded via the xdomain loader, it is an asynchronous load, since the module is added via a dynamically created script tag. This means that dojo.require() can return before the module has loaded. However, this should only happen in the case where you do dojo.require calls in the top-level HTML page, or if you purposely avoid the loader checking for dojo.require dependencies in your module by using a syntax like dojo[\"require\"] to load the module. </p> <p>Sometimes it is useful to not have the loader detect the dojo.require calls in the module so that you can dynamically load the modules as a result of an action on the page, instead of right at module load time. </p> <p>Also, for script blocks in an HTML page, the loader does not pre-process them, so it does not know to download the modules before the dojo.require calls occur. </p> <p>So, in those two cases, when you want on-the-fly module loading or for script blocks in the HTML page, special care must be taken if the dojo.required code is loaded asynchronously. To make sure you can execute code that depends on the dojo.required modules, be sure to add the code that depends on the modules in a dojo.addOnLoad() callback. dojo.addOnLoad waits for all outstanding modules to finish loading before executing. </p> <p>This type of syntax works with both xdomain and normal loaders, so it is good practice to always use this idiom for on-the-fly code loading and in HTML script blocks. If at some point you change loaders and where the code is loaded from, it will all still work. </p> <p>More on how dojo.require <code>dojo.require(\"A.B\")</code> first checks to see if symbol A.B is defined. If it is, it is simply returned (nothing to do). </p> <p>If it is not defined, it will look for <code>A/B.js</code> in the script root directory. </p> <p><code>dojo.require</code> throws an exception if it cannot find a file to load, or if the symbol <code>A.B</code> is not defined after loading. </p> <p>It returns the object <code>A.B</code>, but note the caveats above about on-the-fly loading and HTML script blocks when the xdomain loader is loading a module. </p> <p><code>dojo.require()</code> does nothing about importing symbols into the current namespace. It is presumed that the caller will take care of that. </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">moduleName</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>module name to load, using periods for separators, e.g. \"dojo.date.locale\". Module paths are de-referenced by dojo's internal mapping of locations to names and are disambiguated by longest prefix. See <code>dojo.registerModulePath()</code> for details on registering new modules. </p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">omitModuleCheck</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>if <code>true</code>, omitModuleCheck skips the step of ensuring that the loaded file actually defines the symbol it is referenced by. For example if it called as <code>dojo.require(\"a.b.c\")</code> and the file located at <code>a/b/c.js</code> does not define an object <code>a.b.c</code>, and exception will be throws whereas no exception is raised when called as <code>dojo.require(\"a.b.c\", true)</code> </p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any</span></p> <p>the required namespace object</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>To use dojo.require in conjunction with dojo.ready: </p> <pre><code>dojo.require(\"foo\");\ndojo.require(\"bar\");\ndojo.addOnLoad(function(){\n    //you can now safely do something with foo and bar\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>For example, to import all symbols into a local block, you might write: </p> <pre><code>with (dojo.require(\"A.B\")) {\n    ...\n}</code></pre> <p>And to import just the leaf symbol to a local variable: </p> <pre><code>var B = dojo.require(\"A.B\");\n...</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_requireAfterIf\">\n<span class=\"functionIcon\">requireAfterIf</span><span class=\"parameters\">(condition,moduleName,omitModuleCheck)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"loader\" class=\"jsdoc-link\">dojo/_base/loader</a> </p> <p>If the condition is true then call <code>dojo.require()</code> for the specified resource </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">condition</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">moduleName</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">omitModuleCheck</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>dojo.requireIf(dojo.isBrowser, \"my.special.Module\");</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_requireIf\">\n<span class=\"functionIcon\">requireIf</span><span class=\"parameters\">(condition,moduleName,omitModuleCheck)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"loader\" class=\"jsdoc-link\">dojo/_base/loader</a> </p> <p>If the condition is true then call <code>dojo.require()</code> for the specified resource </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">condition</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">moduleName</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">omitModuleCheck</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>dojo.requireIf(dojo.isBrowser, \"my.special.Module\");</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_requireLocalization\">\n<span class=\"functionIcon\">requireLocalization</span><span class=\"parameters\">(moduleName,bundleName,locale)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"loader\" class=\"jsdoc-link\">dojo/_base/loader</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">moduleName</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">bundleName</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">locale</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_safeMixin\">\n<span class=\"functionIcon\">safeMixin</span><span class=\"parameters\">(target,source)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"declare\" class=\"jsdoc-link\">dojo/_base/declare</a> </p> <p>Mix in properties skipping a constructor and decorating functions like it is done by declare().</p>  <p>This function is used to mix in properties like lang.mixin does, but it skips a constructor property and decorates functions like declare() does. </p> <p>It is meant to be used with classes and objects produced with declare. Functions mixed in with dojo.safeMixin can use this.inherited() like normal methods. </p> <p>This function is used to implement extend() method of a constructor produced with declare(). </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">target</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>Target object to accept new properties.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">source</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>Source object for new properties.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Object</span></p> <p>Target object to accept new properties.</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>var A = declare(null, {\n    m1: function(){\n        console.log(\"A.m1\");\n    },\n    m2: function(){\n        console.log(\"A.m2\");\n    }\n});\nvar B = declare(A, {\n    m1: function(){\n        this.inherited(arguments);\n        console.log(\"B.m1\");\n    }\n});\nB.extend({\n    m2: function(){\n        this.inherited(arguments);\n        console.log(\"B.m2\");\n    }\n});\nvar x = new B();\ndojo.safeMixin(x, {\n    m1: function(){\n        this.inherited(arguments);\n        console.log(\"X.m1\");\n    },\n    m2: function(){\n        this.inherited(arguments);\n        console.log(\"X.m2\");\n    }\n});\nx.m2();\n// prints:\n// A.m1\n// B.m1\n// X.m1</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_setAttr\">\n<span class=\"functionIcon\">setAttr</span><span class=\"parameters\">(node,name,value)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../dom-attr\" class=\"jsdoc-link\">dojo/dom-attr</a> </p> <p>Sets an attribute on an HTML element.</p>  <p>Handles normalized setting of attributes on DOM Nodes. </p> <p>When passing functions as values, note that they will not be directly assigned to slots on the node, but rather the default behavior will be removed and the new behavior will be added using <code>dojo.connect()</code>, meaning that event handler properties will be normalized and that some caveats with regards to non-standard behaviors for onsubmit apply. Namely that you should cancel form submission using <code>dojo.stopEvent()</code> on the passed event object instead of returning a boolean value from the handler itself.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode | String</td> <td class=\"jsdoc-param-description\">\n<p>id or reference to the element to set the attribute on</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">name</td> <td class=\"jsdoc-param-type\">String | Object</td> <td class=\"jsdoc-param-description\">\n<p>the name of the attribute to set, or a hash of key-value pairs to set.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">value</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>the value to set for the attribute, if the name is a string.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | undefined</span></p> <p>the DOM node </p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>// use attr() to set the tab index\nrequire([\"dojo/dom-attr\"], function(domAttr){\n    domAttr.set(\"nodeId\", \"tabIndex\", 3);\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>Set multiple values at once, including event handlers: </p> <pre><code>require([\"dojo/dom-attr\"],\nfunction(domAttr){\n    domAttr.set(\"formId\", {\n        \"foo\": \"bar\",\n        \"tabIndex\": -1,\n        \"method\": \"POST\"\n    }\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_setContentSize\">\n<span class=\"functionIcon\">setContentSize</span><span class=\"parameters\">(node,box,computedStyle)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../dom-geometry\" class=\"jsdoc-link\">dojo/dom-geometry</a> </p> <p>Sets the size of the node's contents, irrespective of margins, padding, or borders.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">box</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>hash with optional \"w\", and \"h\" properties for \"width\", and \"height\" respectively. All specified properties should have numeric values in whole pixels.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">computedStyle</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>This parameter accepts computed styles object. If this parameter is omitted, the functions will call dojo/dom-style.getComputedStyle to get one. It is a better way, calling dojo/dom-style.getComputedStyle once, and then pass the reference to this computedStyle parameter. Wherever possible, reuse the returned object of dojo/dom-style.getComputedStyle().</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_setContext\">\n<span class=\"functionIcon\">setContext</span><span class=\"parameters\">(globalObject,globalDocument)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"window\" class=\"jsdoc-link\">dojo/_base/window</a> </p> <p>changes the behavior of many core Dojo functions that deal with namespace and DOM lookup, changing them to work in a new global context (e.g., an iframe). The varibles dojo.global and dojo.doc are modified as a result of calling this function and the result of <code>dojo.body()</code> likewise differs.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">globalObject</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">globalDocument</td> <td class=\"jsdoc-param-type\">DocumentElement</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_setMarginBox\">\n<span class=\"functionIcon\">setMarginBox</span><span class=\"parameters\">(node,box,computedStyle)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../dom-geometry\" class=\"jsdoc-link\">dojo/dom-geometry</a> </p> <p>sets the size of the node's margin box and placement (left/top), irrespective of box model. Think of it as a passthrough to setBox that handles box-model vagaries for you.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">box</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>hash with optional \"l\", \"t\", \"w\", and \"h\" properties for \"left\", \"right\", \"width\", and \"height\" respectively. All specified properties should have numeric values in whole pixels.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">computedStyle</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>This parameter accepts computed styles object. If this parameter is omitted, the functions will call dojo/dom-style.getComputedStyle to get one. It is a better way, calling dojo/dom-style.getComputedStyle once, and then pass the reference to this computedStyle parameter. Wherever possible, reuse the returned object of dojo/dom-style.getComputedStyle().</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_setProp\">\n<span class=\"functionIcon\">setProp</span><span class=\"parameters\">(node,name,value)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../dom-prop\" class=\"jsdoc-link\">dojo/dom-prop</a> </p> <p>Sets a property on an HTML element.</p>  <p>Handles normalized setting of properties on DOM nodes. </p> <p>When passing functions as values, note that they will not be directly assigned to slots on the node, but rather the default behavior will be removed and the new behavior will be added using <code>dojo.connect()</code>, meaning that event handler properties will be normalized and that some caveats with regards to non-standard behaviors for onsubmit apply. Namely that you should cancel form submission using <code>dojo.stopEvent()</code> on the passed event object instead of returning a boolean value from the handler itself.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode | String</td> <td class=\"jsdoc-param-description\">\n<p>id or reference to the element to set the property on</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">name</td> <td class=\"jsdoc-param-type\">String | Object</td> <td class=\"jsdoc-param-description\">\n<p>the name of the property to set, or a hash object to set multiple properties at once.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">value</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>The value to set for the property</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | undefined</span></p> <p>the DOM node </p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>// use prop() to set the tab index\nrequire([\"dojo/dom-prop\"], function(domProp){\n    domProp.set(\"nodeId\", \"tabIndex\", 3);\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>Set multiple values at once, including event handlers: </p> <pre><code>require([\"dojo/dom-prop\"], function(domProp){\n    domProp.set(\"formId\", {\n        \"foo\": \"bar\",\n        \"tabIndex\": -1,\n        \"method\": \"POST\",\n    });\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_setSelectable\">\n<span class=\"functionIcon\">setSelectable</span><span class=\"parameters\">(node,selectable)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../dom\" class=\"jsdoc-link\">dojo/dom</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">selectable</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_setStyle\">\n<span class=\"functionIcon\">setStyle</span><span class=\"parameters\">(node,name,value)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../dom-style\" class=\"jsdoc-link\">dojo/dom-style</a> </p> <p>Sets styles on a node.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode | String</td> <td class=\"jsdoc-param-description\">\n<p>id or reference to node to set style for</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">name</td> <td class=\"jsdoc-param-type\">String | Object</td> <td class=\"jsdoc-param-description\">\n<p>the style property to set in DOM-accessor format (\"borderWidth\", not \"border-width\") or an object with key/value pairs suitable for setting each property.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">value</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>If passed, sets value on the node for style, handling cross-browser concerns. When setting a pixel value, be sure to include \"px\" in the value. For instance, top: \"200px\". Otherwise, in some cases, some browsers will not apply the style. </p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">String | undefined</span></p> <p>If passed, sets value on the node for style, handling cross-browser concerns. When setting a pixel value, be sure to include \"px\" in the value. For instance, top: \"200px\". Otherwise, in some cases, some browsers will not apply the style. </p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Passing a node, a style property, and a value changes the current display of the node and returns the new computed value </p> <pre><code>require([\"dojo/dom-style\"], function(domStyle){\n    domStyle.set(\"thinger\", \"opacity\", 0.5); // == 0.5\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>Passing a node, an object-style style property sets each of the values in turn and returns the computed style object of the node: </p> <pre><code>require([\"dojo/dom-style\"], function(domStyle){\n    domStyle.set(\"thinger\", {\n        \"opacity\": 0.5,\n        \"border\": \"3px solid black\",\n        \"height\": \"300px\"\n    });\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<p>When the CSS style property is hyphenated, the JavaScript property is camelCased. font-size becomes fontSize, and so on. </p> <pre><code>require([\"dojo/dom-style\", \"dojo/dom\"], function(domStyle, dom){\n    domStyle.set(\"thinger\",{\n        fontSize:\"14pt\",\n        letterSpacing:\"1.2em\"\n    });\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 4</h3>\n<p>dojo/NodeList implements .style() using the same syntax, omitting the \"node\" parameter, calling dojo/dom-style.get() on every element of the list. See: <code>dojo/query</code> and <code>dojo/NodeList</code> </p> <pre><code>require([\"dojo/dom-style\", \"dojo/query\", \"dojo/NodeList-dom\"],\nfunction(domStyle, query){\n    query(\".someClassName\").style(\"visibility\",\"hidden\");\n    // or\n    query(\"#baz &gt; div\").style({\n        opacity:0.75,\n        fontSize:\"13pt\"\n    });\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_some\">\n<span class=\"functionIcon\">some</span><span class=\"parameters\">(arr,callback,thisObject)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"array\" class=\"jsdoc-link\">dojo/_base/array</a> </p> <p>Determines whether or not any item in arr satisfies the condition implemented by callback.</p>  <p>This function corresponds to the JavaScript 1.6 Array.some() method, with one difference: when run over sparse arrays, this implementation passes the \"holes\" in the sparse array to the callback function with a value of undefined. JavaScript 1.6's some skips the holes in the sparse array. For more details, see: <a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/some\">https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/some</a></p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">arr</td> <td class=\"jsdoc-param-type\">Array | String</td> <td class=\"jsdoc-param-description\">\n<p>the array to iterate over. If a string, operates on individual characters.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">callback</td> <td class=\"jsdoc-param-type\">Function | String</td> <td class=\"jsdoc-param-description\">\n<p>a function is invoked with three arguments: item, index, and array and returns true if the condition is met.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">thisObject</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>may be used to scope the call to callback</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Boolean</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>// is true\narray.some([1, 2, 3, 4], function(item){ return item&gt;1; });</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<pre><code>// is false\narray.some([1, 2, 3, 4], function(item){ return item&lt;1; });</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_Stateful\">\n<span class=\"functionIcon\">Stateful</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../stateful\" class=\"jsdoc-link\">dojo/Stateful</a> </p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_stopEvent\">\n<span class=\"functionIcon\">stopEvent</span><span class=\"parameters\">(evt)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"event\" class=\"jsdoc-link\">dojo/_base/event</a> </p> <p>prevents propagation and clobbers the default action of the passed event</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">evt</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\">\n<p>The event object. If omitted, window.event is used on IE.</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_style\">\n<span class=\"functionIcon\">style</span><span class=\"parameters\">(node,name,value)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"html\" class=\"jsdoc-link\">dojo/_base/html</a> </p> <p>Accesses styles on a node. If 2 arguments are passed, acts as a getter. If 3 arguments are passed, acts as a setter.</p>  <p>Getting the style value uses the computed style for the node, so the value will be a calculated value, not just the immediate node.style value. Also when getting values, use specific style names, like \"borderBottomWidth\" instead of \"border\" since compound values like \"border\" are not necessarily reflected as expected. If you want to get node dimensions, use <code>dojo.marginBox()</code>, <code>dojo.contentBox()</code> or <code>dojo.position()</code>.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode | String</td> <td class=\"jsdoc-param-description\">\n<p>id or reference to node to get/set style for</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">name</td> <td class=\"jsdoc-param-type\">String | Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>the style property to set in DOM-accessor format (\"borderWidth\", not \"border-width\") or an object with key/value pairs suitable for setting each property.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">value</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>If passed, sets value on the node for style, handling cross-browser concerns. When setting a pixel value, be sure to include \"px\" in the value. For instance, top: \"200px\". Otherwise, in some cases, some browsers will not apply the style.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | undefined</span></p> <p>when used as a getter, return the computed style of the node if passing in an ID or node, or return the normalized, computed value for the property when passing in a node and a style property</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Passing only an ID or node returns the computed style object of the node: </p> <pre><code>dojo.style(\"thinger\");</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>Passing a node and a style property returns the current normalized, computed value for that property: </p> <pre><code>dojo.style(\"thinger\", \"opacity\"); // 1 by default</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<p>Passing a node, a style property, and a value changes the current display of the node and returns the new computed value </p> <pre><code>dojo.style(\"thinger\", \"opacity\", 0.5); // == 0.5</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 4</h3>\n<p>Passing a node, an object-style style property sets each of the values in turn and returns the computed style object of the node: </p> <pre><code>dojo.style(\"thinger\", {\n    \"opacity\": 0.5,\n    \"border\": \"3px solid black\",\n    \"height\": \"300px\"\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 5</h3>\n<p>When the CSS style property is hyphenated, the JavaScript property is camelCased. font-size becomes fontSize, and so on. </p> <pre><code>dojo.style(\"thinger\",{\n    fontSize:\"14pt\",\n    letterSpacing:\"1.2em\"\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 6</h3>\n<p>dojo/NodeList implements .style() using the same syntax, omitting the \"node\" parameter, calling dojo.style() on every element of the list. See: <code>dojo/query</code> and <code>dojo/NodeList</code> </p> <pre><code>dojo.query(\".someClassName\").style(\"visibility\",\"hidden\");\n// or\ndojo.query(\"#baz &gt; div\").style({\n    opacity:0.75,\n    fontSize:\"13pt\"\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_toDom\">\n<span class=\"functionIcon\">toDom</span><span class=\"parameters\">(frag,doc)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../dom-construct\" class=\"jsdoc-link\">dojo/dom-construct</a> </p> <p>instantiates an HTML fragment returning the corresponding DOM.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">frag</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>the HTML fragment</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">doc</td> <td class=\"jsdoc-param-type\">DocumentNode</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>optional document to use when creating DOM nodes, defaults to dojo/_base/window.doc if not specified.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | undefined</span></p> <p>Document fragment, unless it's a single node in which case it returns the node itself</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Create a table row: </p> <pre><code>require([\"dojo/dom-construct\"], function(domConstruct){\n    var tr = domConstruct.toDom(\"&lt;tr&gt;&lt;td&gt;First!&lt;/td&gt;&lt;/tr&gt;\");\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_toggleClass\">\n<span class=\"functionIcon\">toggleClass</span><span class=\"parameters\">(node,classStr,condition)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../dom-class\" class=\"jsdoc-link\">dojo/dom-class</a> </p> <p>Adds a class to node if not present, or removes if present. Pass a boolean condition if you want to explicitly add or remove. Returns the condition that was specified directly or indirectly. </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">String | DOMNode</td> <td class=\"jsdoc-param-description\">\n<p>String ID or DomNode reference to toggle a class string </p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">classStr</td> <td class=\"jsdoc-param-type\">String | Array</td> <td class=\"jsdoc-param-description\">\n<p>A String class name to toggle, or several space-separated class names, or an array of class names. </p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">condition</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>If passed, true means to add the class, false means to remove. Otherwise dojo.hasClass(node, classStr) is used to detect the class presence. </p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Boolean</span></p> <p>If passed, true means to add the class, false means to remove. Otherwise dojo.hasClass(node, classStr) is used to detect the class presence. </p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>require([\"dojo/dom-class\"], function(domClass){\n    domClass.toggle(\"someNode\", \"hovered\");\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>Forcefully add a class </p> <pre><code>require([\"dojo/dom-class\"], function(domClass){\n    domClass.toggle(\"someNode\", \"hovered\", true);\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<p>Available in <code>dojo/NodeList</code> for multiple toggles </p> <pre><code>require([\"dojo/query\"], function(query){\n    query(\".toggleMe\").toggleClass(\"toggleMe\");\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_toJson\">\n<span class=\"functionIcon\">toJson</span><span class=\"parameters\">(it,prettyPrint)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"json\" class=\"jsdoc-link\">dojo/_base/json</a> </p> <p>Returns a <a href=\"http://json.org\">JSON</a> serialization of an object.</p>  <p>Returns a <a href=\"http://json.org\">JSON</a> serialization of an object. Note that this doesn't check for infinite recursion, so don't do that! It is recommend that you use <a class=\"jsdoc-link\" href=\"../json\">dojo/json</a>'s stringify function for an lighter and faster implementation that matches the native JSON API and uses the native JSON serializer when available.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">it</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>an object to be serialized. Objects may define their own serialization via a special \"<strong>json</strong>\" or \"json\" function property. If a specialized serializer has been defined, it will be used as a fallback. Note that in 1.6, toJson would serialize undefined, but this no longer supported since it is not supported by native JSON serializer.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">prettyPrint</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>if true, we indent objects and arrays to make the output prettier. The variable <code>dojo.toJsonIndentStr</code> is used as the indent string -- to use something other than the default (tab), change that variable before calling dojo.toJson(). Note that if native JSON support is available, it will be used for serialization, and native implementations vary on the exact spacing used in pretty printing.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | undefined</span></p> <p>A JSON string serialization of the passed-in object.</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>simple serialization of a trivial object </p> <pre><code>var jsonStr = dojo.toJson({ howdy: \"stranger!\", isStrange: true });\ndoh.is('{\"howdy\":\"stranger!\",\"isStrange\":true}', jsonStr);</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>a custom serializer for an objects of a particular class: </p> <pre><code>dojo.declare(\"Furby\", null, {\n    furbies: \"are strange\",\n    furbyCount: 10,\n    __json__: function(){\n    },\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_toPixelValue\">\n<span class=\"functionIcon\">toPixelValue</span><span class=\"parameters\">(node,value)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../dom-style\" class=\"jsdoc-link\">dojo/dom-style</a> </p> <p>converts style value to pixels on IE or return a numeric value.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">value</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Number</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_unsubscribe\">\n<span class=\"functionIcon\">unsubscribe</span><span class=\"parameters\">(handle)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"connect\" class=\"jsdoc-link\">dojo/_base/connect</a> </p> <p>Remove a topic listener.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">handle</td> <td class=\"jsdoc-param-type\">Handle</td> <td class=\"jsdoc-param-description\">\n<p>The handle returned from a call to subscribe.</p> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>var alerter = dojo.subscribe(\"alerts\", null, function(caption, message){ alert(caption + \"\\n\" + message); };\n...\ndojo.unsubscribe(alerter);</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_when\">\n<span class=\"functionIcon\">when</span><span class=\"parameters\">(valueOrPromise,callback,errback,progback)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"../when\" class=\"jsdoc-link\">dojo/when</a> </p> <p>Transparently applies callbacks to values and/or promises.</p>  <p>Accepts promises but also transparently handles non-promises. If no callbacks are provided returns a promise, regardless of the initial value. Foreign promises are converted. </p> <p>If callbacks are provided and the initial value is not a promise, the callback is executed immediately with no error handling. Returns a promise if the initial value is a promise, or the result of the callback otherwise.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">valueOrPromise</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\">\n<p>Either a regular value or an object with a <code>then()</code> method that follows the Promises/A specification.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">callback</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Callback to be invoked when the promise is resolved, or a non-promise is received.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">errback</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Callback to be invoked when the promise is rejected.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">progback</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Callback to be invoked when the promise emits a progress update.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\"><a class=\"jsdoc-link\" href=\"../promise/promise\">dojo/promise/Promise</a> | summary: | name:</span></p> <p>Promise, or if a callback is provided, the result of the callback.</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_windowUnloaded\">\n<span class=\"functionIcon\">windowUnloaded</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"configfirefoxextension\" class=\"jsdoc-link\">dojo/_base/configFirefoxExtension</a> </p> <p>signal fired by impending window destruction. You may use dojo.addOnWIndowUnload() or dojo.connect() to this method to perform page/application cleanup methods. See dojo.addOnWindowUnload for more info.</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_withDoc\">\n<span class=\"functionIcon\">withDoc</span><span class=\"parameters\">(documentObject,callback,thisObject,cbArguments)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"window\" class=\"jsdoc-link\">dojo/_base/window</a> </p> <p>Invoke callback with documentObject as dojo/_base/window::doc.</p>  <p>Invoke callback with documentObject as <a class=\"jsdoc-link\" href=\"window\">dojo/_base/window</a>::doc. If provided, callback will be executed in the context of object thisObject When callback() returns or throws an error, the <a class=\"jsdoc-link\" href=\"window\">dojo/_base/window</a>::doc will be restored to its previous state.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">documentObject</td> <td class=\"jsdoc-param-type\">DocumentElement</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">callback</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">thisObject</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> <tr> <td class=\"jsdoc-param-name\">cbArguments</td> <td class=\"jsdoc-param-type\">Array</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_withGlobal\">\n<span class=\"functionIcon\">withGlobal</span><span class=\"parameters\">(globalObject,callback,thisObject,cbArguments)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"window\" class=\"jsdoc-link\">dojo/_base/window</a> </p> <p>Invoke callback with globalObject as dojo.global and globalObject.document as dojo.doc.</p>  <p>Invoke callback with globalObject as dojo.global and globalObject.document as dojo.doc. If provided, globalObject will be executed in the context of object thisObject When callback() returns or throws an error, the dojo.global and dojo.doc will be restored to its previous state.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">globalObject</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">callback</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">thisObject</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> <tr> <td class=\"jsdoc-param-name\">cbArguments</td> <td class=\"jsdoc-param-type\">Array</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_xhr\">\n<span class=\"functionIcon\">xhr</span><span class=\"parameters\">(method,args)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"http://dojotoolkit.org/api/1.10/dojox/rpc/Client\" class=\"jsdoc-link\">dojox/rpc/Client</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">method</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">args</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_xhrDelete\">\n<span class=\"functionIcon\">xhrDelete</span><span class=\"parameters\">(args)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <p>Sends an HTTP DELETE request to the server.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">args</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>An object with the following properties:</p>\n<ul>\n<li>handleAs (String, optional): <p>Acceptable values are: text (default), json, json-comment-optional, json-comment-filtered, javascript, xml. See <code>dojo/_base/xhr.contentHandlers</code></p> </li>\n<li>sync (Boolean, optional): <p>false is default. Indicates whether the request should be a synchronous (blocking) request.</p> </li>\n<li>headers (Object, optional): <p>Additional HTTP headers to send in the request.</p> </li>\n<li>failOk (Boolean, optional): <p>false is default. Indicates whether a request should be allowed to fail (and therefore no console error message in the event of a failure)</p> </li>\n<li>contentType (String|Boolean): <p>\"application/x-www-form-urlencoded\" is default. Set to false to prevent a Content-Type header from being sent, or to a string to send a different Content-Type.</p> </li>\n<li>load: <p>This function will be called on a successful HTTP response code.</p> </li>\n<li>error: <p>This function will be called when the request fails due to a network or server error, the url is invalid, etc. It will also be called if the load or handle callback throws an exception, unless djConfig.debugAtAllCosts is true. This allows deployed applications to continue to run even when a logic error happens in the callback, while making it easier to troubleshoot while in debug mode.</p> </li>\n<li>handle: <p>This function will be called at the end of every request, whether or not an error occurs.</p> </li>\n<li>url (String): <p>URL to server endpoint.</p> </li>\n<li>content (Object, optional): <p>Contains properties with string values. These properties will be serialized as name1=value2 and passed in the request.</p> </li>\n<li>timeout (Integer, optional): <p>Milliseconds to wait for the response. If this time passes, the then error callbacks are called.</p> </li>\n<li>form (DOMNode, optional): <p>DOM node for a form. Used to extract the form values and send to the server.</p> </li>\n<li>preventCache (Boolean, optional): <p>Default is false. If true, then a \"dojo.preventCache\" parameter is sent in the request with a value that changes with each request (timestamp). Useful only with GET-type requests.</p> </li>\n<li>rawBody (String, optional): <p>Sets the raw body for an HTTP request. If this is used, then the content property is ignored. This is mostly useful for HTTP methods that have a body to their requests, like PUT or POST. This property can be used instead of postData and putData for dojo/_base/xhr.rawXhrPost and dojo/_base/xhr.rawXhrPut respectively.</p> </li>\n<li>ioPublish (Boolean, optional): <p>Set this explicitly to false to prevent publishing of topics related to IO operations. Otherwise, if djConfig.ioPublish is set to true, topics will be published via dojo/topic.publish() for different phases of an IO operation. See dojo/main.__IoPublish for a list of topics that are published.</p> </li>\n</ul> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_xhrGet\">\n<span class=\"functionIcon\">xhrGet</span><span class=\"parameters\">(args)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <p>Sends an HTTP GET request to the server.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">args</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>An object with the following properties:</p>\n<ul>\n<li>handleAs (String, optional): <p>Acceptable values are: text (default), json, json-comment-optional, json-comment-filtered, javascript, xml. See <code>dojo/_base/xhr.contentHandlers</code></p> </li>\n<li>sync (Boolean, optional): <p>false is default. Indicates whether the request should be a synchronous (blocking) request.</p> </li>\n<li>headers (Object, optional): <p>Additional HTTP headers to send in the request.</p> </li>\n<li>failOk (Boolean, optional): <p>false is default. Indicates whether a request should be allowed to fail (and therefore no console error message in the event of a failure)</p> </li>\n<li>contentType (String|Boolean): <p>\"application/x-www-form-urlencoded\" is default. Set to false to prevent a Content-Type header from being sent, or to a string to send a different Content-Type.</p> </li>\n<li>load: <p>This function will be called on a successful HTTP response code.</p> </li>\n<li>error: <p>This function will be called when the request fails due to a network or server error, the url is invalid, etc. It will also be called if the load or handle callback throws an exception, unless djConfig.debugAtAllCosts is true. This allows deployed applications to continue to run even when a logic error happens in the callback, while making it easier to troubleshoot while in debug mode.</p> </li>\n<li>handle: <p>This function will be called at the end of every request, whether or not an error occurs.</p> </li>\n<li>url (String): <p>URL to server endpoint.</p> </li>\n<li>content (Object, optional): <p>Contains properties with string values. These properties will be serialized as name1=value2 and passed in the request.</p> </li>\n<li>timeout (Integer, optional): <p>Milliseconds to wait for the response. If this time passes, the then error callbacks are called.</p> </li>\n<li>form (DOMNode, optional): <p>DOM node for a form. Used to extract the form values and send to the server.</p> </li>\n<li>preventCache (Boolean, optional): <p>Default is false. If true, then a \"dojo.preventCache\" parameter is sent in the request with a value that changes with each request (timestamp). Useful only with GET-type requests.</p> </li>\n<li>rawBody (String, optional): <p>Sets the raw body for an HTTP request. If this is used, then the content property is ignored. This is mostly useful for HTTP methods that have a body to their requests, like PUT or POST. This property can be used instead of postData and putData for dojo/_base/xhr.rawXhrPost and dojo/_base/xhr.rawXhrPut respectively.</p> </li>\n<li>ioPublish (Boolean, optional): <p>Set this explicitly to false to prevent publishing of topics related to IO operations. Otherwise, if djConfig.ioPublish is set to true, topics will be published via dojo/topic.publish() for different phases of an IO operation. See dojo/main.__IoPublish for a list of topics that are published.</p> </li>\n</ul> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_xhrPost\">\n<span class=\"functionIcon\">xhrPost</span><span class=\"parameters\">(args)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <p>Sends an HTTP POST request to the server. In addition to the properties listed for the dojo.__XhrArgs type, the following property is allowed:</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">args</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>An object with the following properties:</p>\n<ul>\n<li>handleAs (String, optional): <p>Acceptable values are: text (default), json, json-comment-optional, json-comment-filtered, javascript, xml. See <code>dojo/_base/xhr.contentHandlers</code></p> </li>\n<li>sync (Boolean, optional): <p>false is default. Indicates whether the request should be a synchronous (blocking) request.</p> </li>\n<li>headers (Object, optional): <p>Additional HTTP headers to send in the request.</p> </li>\n<li>failOk (Boolean, optional): <p>false is default. Indicates whether a request should be allowed to fail (and therefore no console error message in the event of a failure)</p> </li>\n<li>contentType (String|Boolean): <p>\"application/x-www-form-urlencoded\" is default. Set to false to prevent a Content-Type header from being sent, or to a string to send a different Content-Type.</p> </li>\n<li>load: <p>This function will be called on a successful HTTP response code.</p> </li>\n<li>error: <p>This function will be called when the request fails due to a network or server error, the url is invalid, etc. It will also be called if the load or handle callback throws an exception, unless djConfig.debugAtAllCosts is true. This allows deployed applications to continue to run even when a logic error happens in the callback, while making it easier to troubleshoot while in debug mode.</p> </li>\n<li>handle: <p>This function will be called at the end of every request, whether or not an error occurs.</p> </li>\n<li>url (String): <p>URL to server endpoint.</p> </li>\n<li>content (Object, optional): <p>Contains properties with string values. These properties will be serialized as name1=value2 and passed in the request.</p> </li>\n<li>timeout (Integer, optional): <p>Milliseconds to wait for the response. If this time passes, the then error callbacks are called.</p> </li>\n<li>form (DOMNode, optional): <p>DOM node for a form. Used to extract the form values and send to the server.</p> </li>\n<li>preventCache (Boolean, optional): <p>Default is false. If true, then a \"dojo.preventCache\" parameter is sent in the request with a value that changes with each request (timestamp). Useful only with GET-type requests.</p> </li>\n<li>rawBody (String, optional): <p>Sets the raw body for an HTTP request. If this is used, then the content property is ignored. This is mostly useful for HTTP methods that have a body to their requests, like PUT or POST. This property can be used instead of postData and putData for dojo/_base/xhr.rawXhrPost and dojo/_base/xhr.rawXhrPut respectively.</p> </li>\n<li>ioPublish (Boolean, optional): <p>Set this explicitly to false to prevent publishing of topics related to IO operations. Otherwise, if djConfig.ioPublish is set to true, topics will be published via dojo/topic.publish() for different phases of an IO operation. See dojo/main.__IoPublish for a list of topics that are published.</p> </li>\n</ul> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo__base_kernel_xhrPut\">\n<span class=\"functionIcon\">xhrPut</span><span class=\"parameters\">(args)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <p>Sends an HTTP PUT request to the server. In addition to the properties listed for the dojo.__XhrArgs type, the following property is allowed:</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">args</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>An object with the following properties:</p>\n<ul>\n<li>handleAs (String, optional): <p>Acceptable values are: text (default), json, json-comment-optional, json-comment-filtered, javascript, xml. See <code>dojo/_base/xhr.contentHandlers</code></p> </li>\n<li>sync (Boolean, optional): <p>false is default. Indicates whether the request should be a synchronous (blocking) request.</p> </li>\n<li>headers (Object, optional): <p>Additional HTTP headers to send in the request.</p> </li>\n<li>failOk (Boolean, optional): <p>false is default. Indicates whether a request should be allowed to fail (and therefore no console error message in the event of a failure)</p> </li>\n<li>contentType (String|Boolean): <p>\"application/x-www-form-urlencoded\" is default. Set to false to prevent a Content-Type header from being sent, or to a string to send a different Content-Type.</p> </li>\n<li>load: <p>This function will be called on a successful HTTP response code.</p> </li>\n<li>error: <p>This function will be called when the request fails due to a network or server error, the url is invalid, etc. It will also be called if the load or handle callback throws an exception, unless djConfig.debugAtAllCosts is true. This allows deployed applications to continue to run even when a logic error happens in the callback, while making it easier to troubleshoot while in debug mode.</p> </li>\n<li>handle: <p>This function will be called at the end of every request, whether or not an error occurs.</p> </li>\n<li>url (String): <p>URL to server endpoint.</p> </li>\n<li>content (Object, optional): <p>Contains properties with string values. These properties will be serialized as name1=value2 and passed in the request.</p> </li>\n<li>timeout (Integer, optional): <p>Milliseconds to wait for the response. If this time passes, the then error callbacks are called.</p> </li>\n<li>form (DOMNode, optional): <p>DOM node for a form. Used to extract the form values and send to the server.</p> </li>\n<li>preventCache (Boolean, optional): <p>Default is false. If true, then a \"dojo.preventCache\" parameter is sent in the request with a value that changes with each request (timestamp). Useful only with GET-type requests.</p> </li>\n<li>rawBody (String, optional): <p>Sets the raw body for an HTTP request. If this is used, then the content property is ignored. This is mostly useful for HTTP methods that have a body to their requests, like PUT or POST. This property can be used instead of postData and putData for dojo/_base/xhr.rawXhrPost and dojo/_base/xhr.rawXhrPut respectively.</p> </li>\n<li>ioPublish (Boolean, optional): <p>Set this explicitly to false to prevent publishing of topics related to IO operations. Otherwise, if djConfig.ioPublish is set to true, topics will be published via dojo/topic.publish() for different phases of an IO operation. See dojo/main.__IoPublish for a list of topics that are published.</p> </li>\n</ul> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/_base/kernel.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/_base/kernel.html</a>\n  </p>\n</div>\n","dojo/promise/promise":"<h1>dojo/promise/Promise</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>The public interface to a deferred.</p>  <p>The public interface to a deferred. All promises in Dojo are instances of this class.</p>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">Promise<span class=\"parameters\"><span class=\"paren\">(</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/promise/Promise.html\" target=\"_blank\">dojo/promise/Promise reference documentation</a> for more information.</p>          <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_promise_Promise_always\">\n<span class=\"functionIcon\">always</span><span class=\"parameters\">(callbackOrErrback)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"promise\" class=\"jsdoc-link\">dojo/promise/Promise</a> </p> <p>Add a callback to be invoked when the promise is resolved or rejected.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">callbackOrErrback</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>A function that is used both as a callback and errback.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\"><a class=\"jsdoc-link\" href=\"promise\">dojo/promise/Promise</a> | undefined</span></p> <p>Returns a new promise for the result of the callback/errback.</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_promise_Promise_cancel\">\n<span class=\"functionIcon\">cancel</span><span class=\"parameters\">(reason,strict)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"promise\" class=\"jsdoc-link\">dojo/promise/Promise</a> </p> <p>Inform the deferred it may cancel its asynchronous operation.</p>  <p>Inform the deferred it may cancel its asynchronous operation. The deferred's (optional) canceler is invoked and the deferred will be left in a rejected state. Can affect other promises that originate with the same deferred.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">reason</td> <td class=\"jsdoc-param-type\">any</td> <td class=\"jsdoc-param-description\">\n<p>A message that may be sent to the deferred's canceler, explaining why it's being canceled.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">strict</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>If strict, will throw an error if the deferred has already been fulfilled and consequently cannot be canceled.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any</span></p> <p>Returns the rejection reason if the deferred was canceled normally.</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_promise_Promise_isCanceled\">\n<span class=\"functionIcon\">isCanceled</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"promise\" class=\"jsdoc-link\">dojo/promise/Promise</a> </p> <p>Checks whether the promise has been canceled.</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Boolean</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_promise_Promise_isFulfilled\">\n<span class=\"functionIcon\">isFulfilled</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"promise\" class=\"jsdoc-link\">dojo/promise/Promise</a> </p> <p>Checks whether the promise has been resolved or rejected.</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Boolean</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_promise_Promise_isRejected\">\n<span class=\"functionIcon\">isRejected</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"promise\" class=\"jsdoc-link\">dojo/promise/Promise</a> </p> <p>Checks whether the promise has been rejected.</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Boolean</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_promise_Promise_isResolved\">\n<span class=\"functionIcon\">isResolved</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"promise\" class=\"jsdoc-link\">dojo/promise/Promise</a> </p> <p>Checks whether the promise has been resolved.</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Boolean</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_promise_Promise_otherwise\">\n<span class=\"functionIcon\">otherwise</span><span class=\"parameters\">(errback)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"promise\" class=\"jsdoc-link\">dojo/promise/Promise</a> </p> <p>Add new errbacks to the promise.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">errback</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Callback to be invoked when the promise is rejected.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\"><a class=\"jsdoc-link\" href=\"promise\">dojo/promise/Promise</a> | undefined</span></p> <p>Returns a new promise for the result of the errback.</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_promise_Promise_then\">\n<span class=\"functionIcon\">then</span><span class=\"parameters\">(callback,errback,progback)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"promise\" class=\"jsdoc-link\">dojo/promise/Promise</a> </p> <p>Add new callbacks to the promise.</p>  <p>Add new callbacks to the deferred. Callbacks can be added before or after the deferred is fulfilled.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">callback</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Callback to be invoked when the promise is resolved. Receives the resolution value.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">errback</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Callback to be invoked when the promise is rejected. Receives the rejection error.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">progback</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Callback to be invoked when the promise emits a progress update. Receives the progress update.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\"><a class=\"jsdoc-link\" href=\"promise\">dojo/promise/Promise</a></span></p> <p>Returns a new promise for the result of the callback(s). This can be used for chaining many asynchronous operations.</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_promise_Promise_toString\">\n<span class=\"functionIcon\">toString</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"promise\" class=\"jsdoc-link\">dojo/promise/Promise</a> </p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">string</span></p> <p>Returns <code>[object Promise]</code>.</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_promise_Promise_trace\">\n<span class=\"functionIcon\">trace</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"tracer\" class=\"jsdoc-link\">dojo/promise/tracer</a> </p> <p>Trace the promise.</p>  <p>Tracing allows you to transparently log progress, resolution and rejection of promises, without affecting the promise itself. Any arguments passed to <code>trace()</code> are emitted in trace events. See <a class=\"jsdoc-link\" href=\"tracer\">dojo/promise/tracer</a> on how to handle traces.</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\"><a class=\"jsdoc-link\" href=\"promise\">dojo/promise/Promise</a></span></p> <p>The promise instance <code>trace()</code> is called on.</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_promise_Promise_traceRejected\">\n<span class=\"functionIcon\">traceRejected</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"tracer\" class=\"jsdoc-link\">dojo/promise/tracer</a> </p> <p>Trace rejection of the promise.</p>  <p>Tracing allows you to transparently log progress, resolution and rejection of promises, without affecting the promise itself. Any arguments passed to <code>trace()</code> are emitted in trace events. See <a class=\"jsdoc-link\" href=\"tracer\">dojo/promise/tracer</a> on how to handle traces.</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\"><a class=\"jsdoc-link\" href=\"promise\">dojo/promise/Promise</a></span></p> <p>The promise instance <code>traceRejected()</code> is called on.</p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/promise/Promise.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/promise/Promise.html</a>\n  </p>\n</div>\n","dojo/request.__methodoptions":"<h1>dojo/request.__MethodOptions</h1>  <p> <strong>Note:</strong> This is not a real constructor, but just a description of the type of object that should be passed as a parameter to some method(s), and/or the return value from some method(s). In other words, the type exists only for documentation purposes, and you <strong>cannot</strong> call <code>new request.__MethodOptions()</code> </p>          <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_request___MethodOptions_method\">\n<span class=\"stringIcon\">method</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"request\" class=\"jsdoc-link\">dojo/request</a> </p> <div class=\"jsdoc-summary\">\n<p>The HTTP method to use to make the request. Must be uppercase.</p> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/request.__MethodOptions.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/request.__MethodOptions.html</a>\n  </p>\n</div>\n","dojo/request.__options":"<h1>dojo/request.__Options</h1>  <p> <strong>Note:</strong> This is not a real constructor, but just a description of the type of object that should be passed as a parameter to some method(s), and/or the return value from some method(s). In other words, the type exists only for documentation purposes, and you <strong>cannot</strong> call <code>new request.__Options()</code> </p>          <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_request___Options_data\">\n<span class=\"stringIcon\">data</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"request\" class=\"jsdoc-link\">dojo/request</a> </p> <div class=\"jsdoc-summary\">\n<p>Data to transfer. This is ignored for GET and DELETE requests.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request___Options_handleAs\">\n<span class=\"stringIcon\">handleAs</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"request\" class=\"jsdoc-link\">dojo/request</a> </p> <div class=\"jsdoc-summary\">\n<p>How to handle the response from the server. Default is 'text'. Other values are 'json', 'javascript', and 'xml'.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request___Options_method\">\n<span class=\"stringIcon\">method</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"request\" class=\"jsdoc-link\">dojo/request</a> </p> <div class=\"jsdoc-summary\">\n<p>The HTTP method to use to make the request. Must be uppercase.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request___Options_preventCache\">\n<span class=\"booleanIcon\">preventCache</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"request\" class=\"jsdoc-link\">dojo/request</a> </p> <div class=\"jsdoc-summary\">\n<p>Whether to append a cache-busting parameter to the URL.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request___Options_query\">\n<span class=\"stringIcon\">query</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"request\" class=\"jsdoc-link\">dojo/request</a> </p> <div class=\"jsdoc-summary\">\n<p>Query parameters to append to the URL.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request___Options_timeout\">\n<span class=\"numberIcon\">timeout</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"request\" class=\"jsdoc-link\">dojo/request</a> </p> <div class=\"jsdoc-summary\">\n<p>Milliseconds to wait for the response. If this time passes, the then the promise is rejected.</p> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/request.__Options.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/request.__Options.html</a>\n  </p>\n</div>\n","dojo/request/default":"<h1>dojo/request/default</h1>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/request/default.html\" target=\"_blank\">dojo/request/default reference documentation</a> for more information.</p>          <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_default_getPlatformDefaultId\">\n<span class=\"functionIcon\">getPlatformDefaultId</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"default\" class=\"jsdoc-link\">dojo/request/default</a> </p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_default_load\">\n<span class=\"functionIcon\">load</span><span class=\"parameters\">(id,parentRequire,loaded,config)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"default\" class=\"jsdoc-link\">dojo/request/default</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">id</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">parentRequire</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">loaded</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">config</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/request/default.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/request/default.html</a>\n  </p>\n</div>\n","dojo/request/handlers":"<h1>dojo/request/handlers</h1>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">handlers<span class=\"parameters\"><span class=\"paren\">(</span><span class=\"args\">response</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">response</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/request/handlers.html\" target=\"_blank\">dojo/request/handlers reference documentation</a> for more information.</p>          <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_handlers_register\">\n<span class=\"functionIcon\">register</span><span class=\"parameters\">(name,handler)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"handlers\" class=\"jsdoc-link\">dojo/request/handlers</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">name</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">handler</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/request/handlers.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/request/handlers.html</a>\n  </p>\n</div>\n","dojo/request/iframe.__baseoptions":"<h1>dojo/request/iframe.__BaseOptions</h1>  <p> <strong>Note:</strong> This is not a real constructor, but just a description of the type of object that should be passed as a parameter to some method(s), and/or the return value from some method(s). In other words, the type exists only for documentation purposes, and you <strong>cannot</strong> call <code>new iframe.__BaseOptions()</code> </p> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/request.html\" target=\"_blank\">dojo/request/iframe.__BaseOptions reference documentation</a> for more information.</p>          <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_iframe___BaseOptions_data\">\n<span class=\"stringIcon\">data</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"iframe\" class=\"jsdoc-link\">dojo/request/iframe</a> </p> <div class=\"jsdoc-summary\">\n<p>Data to transfer. When making a GET request, this will be converted to key=value parameters and appended to the URL.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_iframe___BaseOptions_form\">\n<span class=\"domnodeIcon\">form</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"iframe\" class=\"jsdoc-link\">dojo/request/iframe</a> </p> <div class=\"jsdoc-summary\">\n<p>A form node to use to submit data to the server.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_iframe___BaseOptions_handleAs\">\n<span class=\"stringIcon\">handleAs</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../request\" class=\"jsdoc-link\">dojo/request</a> </p> <div class=\"jsdoc-summary\">\n<p>How to handle the response from the server. Default is 'text'. Other values are 'json', 'javascript', and 'xml'.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_iframe___BaseOptions_preventCache\">\n<span class=\"booleanIcon\">preventCache</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../request\" class=\"jsdoc-link\">dojo/request</a> </p> <div class=\"jsdoc-summary\">\n<p>Whether to append a cache-busting parameter to the URL.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_iframe___BaseOptions_query\">\n<span class=\"stringIcon\">query</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../request\" class=\"jsdoc-link\">dojo/request</a> </p> <div class=\"jsdoc-summary\">\n<p>Query parameters to append to the URL.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_iframe___BaseOptions_timeout\">\n<span class=\"numberIcon\">timeout</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../request\" class=\"jsdoc-link\">dojo/request</a> </p> <div class=\"jsdoc-summary\">\n<p>Milliseconds to wait for the response. If this time passes, the then the promise is rejected.</p> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/request/iframe.__BaseOptions.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/request/iframe.__BaseOptions.html</a>\n  </p>\n</div>\n","dojo/request/iframe.__methodoptions":"<h1>dojo/request/iframe.__MethodOptions</h1>  <p> <strong>Note:</strong> This is not a real constructor, but just a description of the type of object that should be passed as a parameter to some method(s), and/or the return value from some method(s). In other words, the type exists only for documentation purposes, and you <strong>cannot</strong> call <code>new iframe.__MethodOptions()</code> </p> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/request.html\" target=\"_blank\">dojo/request/iframe.__MethodOptions reference documentation</a> for more information.</p>          <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_iframe___MethodOptions_method\">\n<span class=\"stringIcon\">method</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"iframe\" class=\"jsdoc-link\">dojo/request/iframe</a> </p> <div class=\"jsdoc-summary\">\n<p>The HTTP method to use to make the request. Must be uppercase. Only <code>\"GET\"</code> and <code>\"POST\"</code> are accepted. Default is <code>\"POST\"</code>.</p> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/request/iframe.__MethodOptions.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/request/iframe.__MethodOptions.html</a>\n  </p>\n</div>\n","dojo/request/iframe.__options":"<h1>dojo/request/iframe.__Options</h1>  <p> <strong>Note:</strong> This is not a real constructor, but just a description of the type of object that should be passed as a parameter to some method(s), and/or the return value from some method(s). In other words, the type exists only for documentation purposes, and you <strong>cannot</strong> call <code>new iframe.__Options()</code> </p> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/request.html\" target=\"_blank\">dojo/request/iframe.__Options reference documentation</a> for more information.</p>          <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_iframe___Options_data\">\n<span class=\"stringIcon\">data</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"iframe\" class=\"jsdoc-link\">dojo/request/iframe</a> </p> <div class=\"jsdoc-summary\">\n<p>Data to transfer. When making a GET request, this will be converted to key=value parameters and appended to the URL.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_iframe___Options_form\">\n<span class=\"domnodeIcon\">form</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"iframe\" class=\"jsdoc-link\">dojo/request/iframe</a> </p> <div class=\"jsdoc-summary\">\n<p>A form node to use to submit data to the server.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_iframe___Options_handleAs\">\n<span class=\"stringIcon\">handleAs</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../request\" class=\"jsdoc-link\">dojo/request</a> </p> <div class=\"jsdoc-summary\">\n<p>How to handle the response from the server. Default is 'text'. Other values are 'json', 'javascript', and 'xml'.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_iframe___Options_method\">\n<span class=\"stringIcon\">method</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"iframe\" class=\"jsdoc-link\">dojo/request/iframe</a> </p> <div class=\"jsdoc-summary\">\n<p>The HTTP method to use to make the request. Must be uppercase. Only <code>\"GET\"</code> and <code>\"POST\"</code> are accepted. Default is <code>\"POST\"</code>.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_iframe___Options_preventCache\">\n<span class=\"booleanIcon\">preventCache</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../request\" class=\"jsdoc-link\">dojo/request</a> </p> <div class=\"jsdoc-summary\">\n<p>Whether to append a cache-busting parameter to the URL.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_iframe___Options_query\">\n<span class=\"stringIcon\">query</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../request\" class=\"jsdoc-link\">dojo/request</a> </p> <div class=\"jsdoc-summary\">\n<p>Query parameters to append to the URL.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_iframe___Options_timeout\">\n<span class=\"numberIcon\">timeout</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../request\" class=\"jsdoc-link\">dojo/request</a> </p> <div class=\"jsdoc-summary\">\n<p>Milliseconds to wait for the response. If this time passes, the then the promise is rejected.</p> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/request/iframe.__Options.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/request/iframe.__Options.html</a>\n  </p>\n</div>\n","dojo/request.__promise":"<h1>dojo/request.__Promise</h1> <div class=\"jsdoc-mixins\"> <label>Extends</label><a href=\"promise/promise\" class=\"jsdoc-link\">dojo/promise/Promise</a> </div>  <p> <strong>Note:</strong> This is not a real constructor, but just a description of the type of object that should be passed as a parameter to some method(s), and/or the return value from some method(s). In other words, the type exists only for documentation purposes, and you <strong>cannot</strong> call <code>new request.__Promise()</code> </p> <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">\n<span class=\"sig\"><span class=\"keyword\">var </span><span class=\"var\">foo </span><span class=\"eq\">= </span><span class=\"new\">new </span><span class=\"args\">request.__Promise</span></span><span class=\"parameters\"><span class=\"paren\">(</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <p class=\"jsdoc-inheritance\"> <label>Defined by </label><span><a class=\"jsdoc-link\" href=\"promise/promise\">dojo/promise/Promise</a></span> </p> <div class=\"jsdoc-summary\"> The public interface to a deferred. All promises in Dojo are instances of this class. &gt;<p>The public interface to a deferred. All promises in Dojo are instances of this class.</p> &gt; </div>            <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_request___Promise_response\">\n<span class=\"objectIcon\">response</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"request\" class=\"jsdoc-link\">dojo/request</a> </p> <div class=\"jsdoc-summary\">\n<p>A promise resolving to an object representing the response from the server.</p> </div>    <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_request___Promise_always\">\n<span class=\"functionIcon\">always</span><span class=\"parameters\">(callbackOrErrback)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"promise/promise\" class=\"jsdoc-link\">dojo/promise/Promise</a> </p> <p>Add a callback to be invoked when the promise is resolved or rejected.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">callbackOrErrback</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>A function that is used both as a callback and errback.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\"><a class=\"jsdoc-link\" href=\"promise/promise\">dojo/promise/Promise</a> | undefined</span></p> <p>Returns a new promise for the result of the callback/errback.</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_request___Promise_cancel\">\n<span class=\"functionIcon\">cancel</span><span class=\"parameters\">(reason,strict)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"promise/promise\" class=\"jsdoc-link\">dojo/promise/Promise</a> </p> <p>Inform the deferred it may cancel its asynchronous operation.</p>  <p>Inform the deferred it may cancel its asynchronous operation. The deferred's (optional) canceler is invoked and the deferred will be left in a rejected state. Can affect other promises that originate with the same deferred.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">reason</td> <td class=\"jsdoc-param-type\">any</td> <td class=\"jsdoc-param-description\">\n<p>A message that may be sent to the deferred's canceler, explaining why it's being canceled.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">strict</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>If strict, will throw an error if the deferred has already been fulfilled and consequently cannot be canceled.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any</span></p> <p>Returns the rejection reason if the deferred was canceled normally.</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_request___Promise_isCanceled\">\n<span class=\"functionIcon\">isCanceled</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"promise/promise\" class=\"jsdoc-link\">dojo/promise/Promise</a> </p> <p>Checks whether the promise has been canceled.</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Boolean</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request___Promise_isFulfilled\">\n<span class=\"functionIcon\">isFulfilled</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"promise/promise\" class=\"jsdoc-link\">dojo/promise/Promise</a> </p> <p>Checks whether the promise has been resolved or rejected.</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Boolean</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request___Promise_isRejected\">\n<span class=\"functionIcon\">isRejected</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"promise/promise\" class=\"jsdoc-link\">dojo/promise/Promise</a> </p> <p>Checks whether the promise has been rejected.</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Boolean</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request___Promise_isResolved\">\n<span class=\"functionIcon\">isResolved</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"promise/promise\" class=\"jsdoc-link\">dojo/promise/Promise</a> </p> <p>Checks whether the promise has been resolved.</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Boolean</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request___Promise_otherwise\">\n<span class=\"functionIcon\">otherwise</span><span class=\"parameters\">(errback)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"promise/promise\" class=\"jsdoc-link\">dojo/promise/Promise</a> </p> <p>Add new errbacks to the promise.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">errback</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Callback to be invoked when the promise is rejected.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\"><a class=\"jsdoc-link\" href=\"promise/promise\">dojo/promise/Promise</a> | undefined</span></p> <p>Returns a new promise for the result of the errback.</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_request___Promise_then\">\n<span class=\"functionIcon\">then</span><span class=\"parameters\">(callback,errback,progback)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"promise/promise\" class=\"jsdoc-link\">dojo/promise/Promise</a> </p> <p>Add new callbacks to the promise.</p>  <p>Add new callbacks to the deferred. Callbacks can be added before or after the deferred is fulfilled.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">callback</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Callback to be invoked when the promise is resolved. Receives the resolution value.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">errback</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Callback to be invoked when the promise is rejected. Receives the rejection error.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">progback</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Callback to be invoked when the promise emits a progress update. Receives the progress update.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\"><a class=\"jsdoc-link\" href=\"promise/promise\">dojo/promise/Promise</a></span></p> <p>Returns a new promise for the result of the callback(s). This can be used for chaining many asynchronous operations.</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_request___Promise_toString\">\n<span class=\"functionIcon\">toString</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"promise/promise\" class=\"jsdoc-link\">dojo/promise/Promise</a> </p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">string</span></p> <p>Returns <code>[object Promise]</code>.</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_request___Promise_trace\">\n<span class=\"functionIcon\">trace</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"promise/promise\" class=\"jsdoc-link\">dojo/promise/Promise</a> </p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">function</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request___Promise_traceRejected\">\n<span class=\"functionIcon\">traceRejected</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"promise/promise\" class=\"jsdoc-link\">dojo/promise/Promise</a> </p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">function</span></p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/request.__Promise.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/request.__Promise.html</a>\n  </p>\n</div>\n","dojo/request/iframe":"<h1>dojo/request/iframe</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>Sends a request using an iframe element with the given URL and options.</p>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">iframe<span class=\"parameters\"><span class=\"paren\">(</span><span class=\"args\">url,options</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">url</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>URL to request</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">options</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"iframe.__options\">dojo/request/iframe.__Options</a></td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Options for the request.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\"><a class=\"jsdoc-link\" href=\"../request.__promise\">dojo/request.__Promise</a></span></p> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/request/iframe.html\" target=\"_blank\">dojo/request/iframe reference documentation</a> for more information.</p>            <h2 id=\"properties\">Properties</h2>      <h2 id=\"methods\">Methods</h2>         <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_iframe_create\">\n<span class=\"functionIcon\">create</span><span class=\"parameters\">(name,onloadstr,uri)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"iframe\" class=\"jsdoc-link\">dojo/request/iframe</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">name</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">onloadstr</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">uri</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_iframe_doc\">\n<span class=\"functionIcon\">doc</span><span class=\"parameters\">(iframeNode)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"iframe\" class=\"jsdoc-link\">dojo/request/iframe</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">iframeNode</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined | null</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_iframe_get\">\n<span class=\"functionIcon\">get</span><span class=\"parameters\">(url,options)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"iframe\" class=\"jsdoc-link\">dojo/request/iframe</a> </p> <p>Send an HTTP GET request using an iframe element with the given URL and options.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">url</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>URL to request</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">options</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"iframe.__baseoptions\">dojo/request/iframe.__BaseOptions</a></td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Options for the request.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\"><a class=\"jsdoc-link\" href=\"../request.__promise\">dojo/request.__Promise</a></span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_iframe_post\">\n<span class=\"functionIcon\">post</span><span class=\"parameters\">(url,options)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"iframe\" class=\"jsdoc-link\">dojo/request/iframe</a> </p> <p>Send an HTTP POST request using an iframe element with the given URL and options.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">url</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>URL to request</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">options</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"iframe.__baseoptions\">dojo/request/iframe.__BaseOptions</a></td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Options for the request.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\"><a class=\"jsdoc-link\" href=\"../request.__promise\">dojo/request.__Promise</a></span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_iframe_setSrc\">\n<span class=\"functionIcon\">setSrc</span><span class=\"parameters\">(_iframe,src,replace)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"iframe\" class=\"jsdoc-link\">dojo/request/iframe</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">_iframe</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">src</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">replace</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/request/iframe.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/request/iframe.html</a>\n  </p>\n</div>\n","dojo/request/node":"<h1>dojo/request/node</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>Sends a request using the included http or https interface from node.js with the given URL and options.</p>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">node<span class=\"parameters\"><span class=\"paren\">(</span><span class=\"args\">url,options</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">url</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>URL to request</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">options</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"node.__options\">dojo/request/node.__Options</a></td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Options for the request.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\"><a class=\"jsdoc-link\" href=\"../request.__promise\">dojo/request.__Promise</a></span></p> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/request/node.html\" target=\"_blank\">dojo/request/node reference documentation</a> for more information.</p>          <h2 id=\"methods\">Methods</h2>       <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_node_del\">\n<span class=\"functionIcon\">del</span><span class=\"parameters\">(url,options)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"node\" class=\"jsdoc-link\">dojo/request/node</a> </p> <p>Send an HTTP DELETE request using XMLHttpRequest with the given URL and options.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">url</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>URL to request</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">options</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"node.__baseoptions\">dojo/request/node.__BaseOptions</a></td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Options for the request.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\"><a class=\"jsdoc-link\" href=\"../request.__promise\">dojo/request.__Promise</a></span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_node_get\">\n<span class=\"functionIcon\">get</span><span class=\"parameters\">(url,options)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"node\" class=\"jsdoc-link\">dojo/request/node</a> </p> <p>Send an HTTP GET request using XMLHttpRequest with the given URL and options.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">url</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>URL to request</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">options</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"node.__baseoptions\">dojo/request/node.__BaseOptions</a></td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Options for the request.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\"><a class=\"jsdoc-link\" href=\"../request.__promise\">dojo/request.__Promise</a></span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_node_post\">\n<span class=\"functionIcon\">post</span><span class=\"parameters\">(url,options)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"node\" class=\"jsdoc-link\">dojo/request/node</a> </p> <p>Send an HTTP POST request using XMLHttpRequest with the given URL and options.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">url</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>URL to request</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">options</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"node.__baseoptions\">dojo/request/node.__BaseOptions</a></td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Options for the request.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\"><a class=\"jsdoc-link\" href=\"../request.__promise\">dojo/request.__Promise</a></span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_node_put\">\n<span class=\"functionIcon\">put</span><span class=\"parameters\">(url,options)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"node\" class=\"jsdoc-link\">dojo/request/node</a> </p> <p>Send an HTTP PUT request using XMLHttpRequest with the given URL and options.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">url</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>URL to request</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">options</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"node.__baseoptions\">dojo/request/node.__BaseOptions</a></td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Options for the request.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\"><a class=\"jsdoc-link\" href=\"../request.__promise\">dojo/request.__Promise</a></span></p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/request/node.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/request/node.html</a>\n  </p>\n</div>\n","dojo/request/node.__baseoptions":"<h1>dojo/request/node.__BaseOptions</h1>  <p> <strong>Note:</strong> This is not a real constructor, but just a description of the type of object that should be passed as a parameter to some method(s), and/or the return value from some method(s). In other words, the type exists only for documentation purposes, and you <strong>cannot</strong> call <code>new node.__BaseOptions()</code> </p> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/request.html\" target=\"_blank\">dojo/request/node.__BaseOptions reference documentation</a> for more information.</p>          <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_node___BaseOptions_data\">\n<span class=\"stringIcon\">data</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"node\" class=\"jsdoc-link\">dojo/request/node</a> </p> <div class=\"jsdoc-summary\">\n<p>Data to transfer. This is ignored for GET and DELETE requests.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_node___BaseOptions_handleAs\">\n<span class=\"stringIcon\">handleAs</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../request\" class=\"jsdoc-link\">dojo/request</a> </p> <div class=\"jsdoc-summary\">\n<p>How to handle the response from the server. Default is 'text'. Other values are 'json', 'javascript', and 'xml'.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_node___BaseOptions_headers\">\n<span class=\"objectIcon\">headers</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"node\" class=\"jsdoc-link\">dojo/request/node</a> </p> <div class=\"jsdoc-summary\">\n<p>Headers to use for the request.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_node___BaseOptions_password\">\n<span class=\"stringIcon\">password</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"node\" class=\"jsdoc-link\">dojo/request/node</a> </p> <div class=\"jsdoc-summary\">\n<p>Password to use during the request.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_node___BaseOptions_preventCache\">\n<span class=\"booleanIcon\">preventCache</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../request\" class=\"jsdoc-link\">dojo/request</a> </p> <div class=\"jsdoc-summary\">\n<p>Whether to append a cache-busting parameter to the URL.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_node___BaseOptions_query\">\n<span class=\"stringIcon\">query</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../request\" class=\"jsdoc-link\">dojo/request</a> </p> <div class=\"jsdoc-summary\">\n<p>Query parameters to append to the URL.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_node___BaseOptions_timeout\">\n<span class=\"numberIcon\">timeout</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../request\" class=\"jsdoc-link\">dojo/request</a> </p> <div class=\"jsdoc-summary\">\n<p>Milliseconds to wait for the response. If this time passes, the then the promise is rejected.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_node___BaseOptions_user\">\n<span class=\"stringIcon\">user</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"node\" class=\"jsdoc-link\">dojo/request/node</a> </p> <div class=\"jsdoc-summary\">\n<p>Username to use during the request.</p> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/request/node.__BaseOptions.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/request/node.__BaseOptions.html</a>\n  </p>\n</div>\n","dojo/request/node.__methodoptions":"<h1>dojo/request/node.__MethodOptions</h1>  <p> <strong>Note:</strong> This is not a real constructor, but just a description of the type of object that should be passed as a parameter to some method(s), and/or the return value from some method(s). In other words, the type exists only for documentation purposes, and you <strong>cannot</strong> call <code>new node.__MethodOptions()</code> </p> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/request.html\" target=\"_blank\">dojo/request/node.__MethodOptions reference documentation</a> for more information.</p>          <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_node___MethodOptions_method\">\n<span class=\"stringIcon\">method</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"node\" class=\"jsdoc-link\">dojo/request/node</a> </p> <div class=\"jsdoc-summary\">\n<p>The HTTP method to use to make the request. Must be uppercase. Default is <code>\"GET\"</code>.</p> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/request/node.__MethodOptions.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/request/node.__MethodOptions.html</a>\n  </p>\n</div>\n","dojo/request/node.__options":"<h1>dojo/request/node.__Options</h1>  <p> <strong>Note:</strong> This is not a real constructor, but just a description of the type of object that should be passed as a parameter to some method(s), and/or the return value from some method(s). In other words, the type exists only for documentation purposes, and you <strong>cannot</strong> call <code>new node.__Options()</code> </p> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/request.html\" target=\"_blank\">dojo/request/node.__Options reference documentation</a> for more information.</p>          <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_node___Options_data\">\n<span class=\"stringIcon\">data</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"node\" class=\"jsdoc-link\">dojo/request/node</a> </p> <div class=\"jsdoc-summary\">\n<p>Data to transfer. This is ignored for GET and DELETE requests.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_node___Options_handleAs\">\n<span class=\"stringIcon\">handleAs</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../request\" class=\"jsdoc-link\">dojo/request</a> </p> <div class=\"jsdoc-summary\">\n<p>How to handle the response from the server. Default is 'text'. Other values are 'json', 'javascript', and 'xml'.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_node___Options_headers\">\n<span class=\"objectIcon\">headers</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"node\" class=\"jsdoc-link\">dojo/request/node</a> </p> <div class=\"jsdoc-summary\">\n<p>Headers to use for the request.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_node___Options_method\">\n<span class=\"stringIcon\">method</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"node\" class=\"jsdoc-link\">dojo/request/node</a> </p> <div class=\"jsdoc-summary\">\n<p>The HTTP method to use to make the request. Must be uppercase. Default is <code>\"GET\"</code>.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_node___Options_password\">\n<span class=\"stringIcon\">password</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"node\" class=\"jsdoc-link\">dojo/request/node</a> </p> <div class=\"jsdoc-summary\">\n<p>Password to use during the request.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_node___Options_preventCache\">\n<span class=\"booleanIcon\">preventCache</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../request\" class=\"jsdoc-link\">dojo/request</a> </p> <div class=\"jsdoc-summary\">\n<p>Whether to append a cache-busting parameter to the URL.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_node___Options_query\">\n<span class=\"stringIcon\">query</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../request\" class=\"jsdoc-link\">dojo/request</a> </p> <div class=\"jsdoc-summary\">\n<p>Query parameters to append to the URL.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_node___Options_timeout\">\n<span class=\"numberIcon\">timeout</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../request\" class=\"jsdoc-link\">dojo/request</a> </p> <div class=\"jsdoc-summary\">\n<p>Milliseconds to wait for the response. If this time passes, the then the promise is rejected.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_node___Options_user\">\n<span class=\"stringIcon\">user</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"node\" class=\"jsdoc-link\">dojo/request/node</a> </p> <div class=\"jsdoc-summary\">\n<p>Username to use during the request.</p> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/request/node.__Options.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/request/node.__Options.html</a>\n  </p>\n</div>\n","dojo/request/notify":"<h1>dojo/request/notify</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>Register a listener to be notified when an event in <a class=\"jsdoc-link\" href=\"../request\">dojo/request</a> happens.</p>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">notify<span class=\"parameters\"><span class=\"paren\">(</span><span class=\"args\">type,listener</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">type</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>The event to listen for. Events emitted: \"start\", \"send\", \"load\", \"error\", \"done\", \"stop\".</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">listener</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>A callback to be run when an event happens.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | undefined</span></p> <p>A signal object that can be used to cancel the listener. If remove() is called on this signal object, it will stop the listener from being executed.</p>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/request/notify.html\" target=\"_blank\">dojo/request/notify reference documentation</a> for more information.</p>          <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_notify_emit\">\n<span class=\"functionIcon\">emit</span><span class=\"parameters\">(type,event,cancel)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"notify\" class=\"jsdoc-link\">dojo/request/notify</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">type</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">event</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">cancel</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/request/notify.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/request/notify.html</a>\n  </p>\n</div>\n","dojo/request/registry":"<h1>dojo/request/registry</h1>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">registry<span class=\"parameters\"><span class=\"paren\">(</span><span class=\"args\">url,options</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">url</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">options</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/request/registry.html\" target=\"_blank\">dojo/request/registry reference documentation</a> for more information.</p>          <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_registry_load\">\n<span class=\"functionIcon\">load</span><span class=\"parameters\">(id,parentRequire,loaded,config)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"registry\" class=\"jsdoc-link\">dojo/request/registry</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">id</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">parentRequire</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">loaded</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">config</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_registry_register\">\n<span class=\"functionIcon\">register</span><span class=\"parameters\">(url,provider,first)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"registry\" class=\"jsdoc-link\">dojo/request/registry</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">url</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">provider</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">first</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/request/registry.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/request/registry.html</a>\n  </p>\n</div>\n","dojo/request/script":"<h1>dojo/request/script</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>Sends a request using a script element with the given URL and options.</p>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">script<span class=\"parameters\"><span class=\"paren\">(</span><span class=\"args\">url,options</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">url</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>URL to request</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">options</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"script.__options\">dojo/request/script.__Options</a></td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Options for the request.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\"><a class=\"jsdoc-link\" href=\"../request.__promise\">dojo/request.__Promise</a></span></p> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/request/script.html\" target=\"_blank\">dojo/request/script reference documentation</a> for more information.</p>            <h2 id=\"properties\">Properties</h2>    <h2 id=\"methods\">Methods</h2>         <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_script_get\">\n<span class=\"functionIcon\">get</span><span class=\"parameters\">(url,options)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"script\" class=\"jsdoc-link\">dojo/request/script</a> </p> <p>Send an HTTP GET request using a script element with the given URL and options.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">url</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>URL to request</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">options</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"script.__baseoptions\">dojo/request/script.__BaseOptions</a></td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Options for the request.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\"><a class=\"jsdoc-link\" href=\"../request.__promise\">dojo/request.__Promise</a></span></p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/request/script.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/request/script.html</a>\n  </p>\n</div>\n","dojo/request/script.__baseoptions":"<h1>dojo/request/script.__BaseOptions</h1>  <p> <strong>Note:</strong> This is not a real constructor, but just a description of the type of object that should be passed as a parameter to some method(s), and/or the return value from some method(s). In other words, the type exists only for documentation purposes, and you <strong>cannot</strong> call <code>new script.__BaseOptions()</code> </p> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/request.html\" target=\"_blank\">dojo/request/script.__BaseOptions reference documentation</a> for more information.</p>          <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_script___BaseOptions_checkString\">\n<span class=\"stringIcon\">checkString</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"script\" class=\"jsdoc-link\">dojo/request/script</a> </p> <div class=\"jsdoc-summary\">\n<p>A string of JavaScript that when evaluated like so: \"typeof(\" + checkString + \") != 'undefined'\" being true means that the script fetched has been loaded. Do not use this if doing a JSONP type of call (use <code>jsonp</code> instead).</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_script___BaseOptions_data\">\n<span class=\"stringIcon\">data</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../request\" class=\"jsdoc-link\">dojo/request</a> </p> <div class=\"jsdoc-summary\">\n<p>Data to transfer. This is ignored for GET and DELETE requests.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_script___BaseOptions_frameDoc\">\n<span class=\"objectIcon\">frameDoc</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"script\" class=\"jsdoc-link\">dojo/request/script</a> </p> <div class=\"jsdoc-summary\">\n<p>The Document object of a child iframe. If this is passed in, the script will be attached to that document. This can be helpful in some comet long-polling scenarios with Firefox and Opera.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_script___BaseOptions_handleAs\">\n<span class=\"stringIcon\">handleAs</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../request\" class=\"jsdoc-link\">dojo/request</a> </p> <div class=\"jsdoc-summary\">\n<p>How to handle the response from the server. Default is 'text'. Other values are 'json', 'javascript', and 'xml'.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_script___BaseOptions_jsonp\">\n<span class=\"stringIcon\">jsonp</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"script\" class=\"jsdoc-link\">dojo/request/script</a> </p> <div class=\"jsdoc-summary\">\n<p>The URL parameter name that indicates the JSONP callback string. For instance, when using Yahoo JSONP calls it is normally, jsonp: \"callback\". For AOL JSONP calls it is normally jsonp: \"c\".</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_script___BaseOptions_preventCache\">\n<span class=\"booleanIcon\">preventCache</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../request\" class=\"jsdoc-link\">dojo/request</a> </p> <div class=\"jsdoc-summary\">\n<p>Whether to append a cache-busting parameter to the URL.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_script___BaseOptions_query\">\n<span class=\"stringIcon\">query</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../request\" class=\"jsdoc-link\">dojo/request</a> </p> <div class=\"jsdoc-summary\">\n<p>Query parameters to append to the URL.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_script___BaseOptions_timeout\">\n<span class=\"numberIcon\">timeout</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../request\" class=\"jsdoc-link\">dojo/request</a> </p> <div class=\"jsdoc-summary\">\n<p>Milliseconds to wait for the response. If this time passes, the then the promise is rejected.</p> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/request/script.__BaseOptions.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/request/script.__BaseOptions.html</a>\n  </p>\n</div>\n","dojo/request/script.__methodoptions":"<h1>dojo/request/script.__MethodOptions</h1>  <p> <strong>Note:</strong> This is not a real constructor, but just a description of the type of object that should be passed as a parameter to some method(s), and/or the return value from some method(s). In other words, the type exists only for documentation purposes, and you <strong>cannot</strong> call <code>new script.__MethodOptions()</code> </p> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/request.html\" target=\"_blank\">dojo/request/script.__MethodOptions reference documentation</a> for more information.</p>          <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_script___MethodOptions_method\">\n<span class=\"stringIcon\">method</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"script\" class=\"jsdoc-link\">dojo/request/script</a> </p> <div class=\"jsdoc-summary\">\n<p>This option is ignored. All requests using this transport are GET requests.</p> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/request/script.__MethodOptions.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/request/script.__MethodOptions.html</a>\n  </p>\n</div>\n","dojo/request/script.__options":"<h1>dojo/request/script.__Options</h1>  <p> <strong>Note:</strong> This is not a real constructor, but just a description of the type of object that should be passed as a parameter to some method(s), and/or the return value from some method(s). In other words, the type exists only for documentation purposes, and you <strong>cannot</strong> call <code>new script.__Options()</code> </p> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/request.html\" target=\"_blank\">dojo/request/script.__Options reference documentation</a> for more information.</p>          <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_script___Options_checkString\">\n<span class=\"stringIcon\">checkString</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"script\" class=\"jsdoc-link\">dojo/request/script</a> </p> <div class=\"jsdoc-summary\">\n<p>A string of JavaScript that when evaluated like so: \"typeof(\" + checkString + \") != 'undefined'\" being true means that the script fetched has been loaded. Do not use this if doing a JSONP type of call (use <code>jsonp</code> instead).</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_script___Options_data\">\n<span class=\"stringIcon\">data</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../request\" class=\"jsdoc-link\">dojo/request</a> </p> <div class=\"jsdoc-summary\">\n<p>Data to transfer. This is ignored for GET and DELETE requests.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_script___Options_frameDoc\">\n<span class=\"objectIcon\">frameDoc</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"script\" class=\"jsdoc-link\">dojo/request/script</a> </p> <div class=\"jsdoc-summary\">\n<p>The Document object of a child iframe. If this is passed in, the script will be attached to that document. This can be helpful in some comet long-polling scenarios with Firefox and Opera.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_script___Options_handleAs\">\n<span class=\"stringIcon\">handleAs</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../request\" class=\"jsdoc-link\">dojo/request</a> </p> <div class=\"jsdoc-summary\">\n<p>How to handle the response from the server. Default is 'text'. Other values are 'json', 'javascript', and 'xml'.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_script___Options_jsonp\">\n<span class=\"stringIcon\">jsonp</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"script\" class=\"jsdoc-link\">dojo/request/script</a> </p> <div class=\"jsdoc-summary\">\n<p>The URL parameter name that indicates the JSONP callback string. For instance, when using Yahoo JSONP calls it is normally, jsonp: \"callback\". For AOL JSONP calls it is normally jsonp: \"c\".</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_script___Options_method\">\n<span class=\"stringIcon\">method</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"script\" class=\"jsdoc-link\">dojo/request/script</a> </p> <div class=\"jsdoc-summary\">\n<p>This option is ignored. All requests using this transport are GET requests.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_script___Options_preventCache\">\n<span class=\"booleanIcon\">preventCache</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../request\" class=\"jsdoc-link\">dojo/request</a> </p> <div class=\"jsdoc-summary\">\n<p>Whether to append a cache-busting parameter to the URL.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_script___Options_query\">\n<span class=\"stringIcon\">query</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../request\" class=\"jsdoc-link\">dojo/request</a> </p> <div class=\"jsdoc-summary\">\n<p>Query parameters to append to the URL.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_script___Options_timeout\">\n<span class=\"numberIcon\">timeout</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../request\" class=\"jsdoc-link\">dojo/request</a> </p> <div class=\"jsdoc-summary\">\n<p>Milliseconds to wait for the response. If this time passes, the then the promise is rejected.</p> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/request/script.__Options.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/request/script.__Options.html</a>\n  </p>\n</div>\n","dojo/request/util":"<h1>dojo/request/util</h1>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/request/util.html\" target=\"_blank\">dojo/request/util reference documentation</a> for more information.</p>          <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_util_addCommonMethods\">\n<span class=\"functionIcon\">addCommonMethods</span><span class=\"parameters\">(provider,methods)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"util\" class=\"jsdoc-link\">dojo/request/util</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">provider</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">methods</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_util_checkStatus\">\n<span class=\"functionIcon\">checkStatus</span><span class=\"parameters\">(stat)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"util\" class=\"jsdoc-link\">dojo/request/util</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">stat</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">boolean</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_util_deepCopy\">\n<span class=\"functionIcon\">deepCopy</span><span class=\"parameters\">(target,source)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"util\" class=\"jsdoc-link\">dojo/request/util</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">target</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">source</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_util_deepCreate\">\n<span class=\"functionIcon\">deepCreate</span><span class=\"parameters\">(source,properties)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"util\" class=\"jsdoc-link\">dojo/request/util</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">source</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">properties</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_util_deferred\">\n<span class=\"functionIcon\">deferred</span><span class=\"parameters\">(response,cancel,isValid,isReady,handleResponse,last)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"util\" class=\"jsdoc-link\">dojo/request/util</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">response</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>The object used as the value of the request promise.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">cancel</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">isValid</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">isReady</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">handleResponse</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">last</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">instance</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_util_notify\">\n<span class=\"functionIcon\">notify</span><span class=\"parameters\">(type,listener)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"notify\" class=\"jsdoc-link\">dojo/request/notify</a> </p> <p>Register a listener to be notified when an event in dojo/request happens.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">type</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>The event to listen for. Events emitted: \"start\", \"send\", \"load\", \"error\", \"done\", \"stop\".</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">listener</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>A callback to be run when an event happens.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | undefined</span></p> <p>A signal object that can be used to cancel the listener. If remove() is called on this signal object, it will stop the listener from being executed.</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_util_parseArgs\">\n<span class=\"functionIcon\">parseArgs</span><span class=\"parameters\">(url,options,skipData)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"util\" class=\"jsdoc-link\">dojo/request/util</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">url</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">options</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">skipData</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">object</span></p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/request/util.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/request/util.html</a>\n  </p>\n</div>\n","dojo/request/watch":"<h1>dojo/request/watch</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>Watches the io request represented by dfd to see if it completes.</p>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">watch<span class=\"parameters\"><span class=\"paren\">(</span><span class=\"args\">dfd</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">dfd</td> <td class=\"jsdoc-param-type\">Deferred</td> <td class=\"jsdoc-param-description\">\n<p>The Deferred object to watch.</p> </td> </tr> </table> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/request/watch.html\" target=\"_blank\">dojo/request/watch reference documentation</a> for more information.</p>            <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_watch_ioCheck\">\n<span class=\"functionIcon\">ioCheck</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"watch\" class=\"jsdoc-link\">dojo/request/watch</a> </p> <div class=\"jsdoc-summary\">\n<p>Function used to check if basic IO call worked. Gets the dfd object as its only argument.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_watch_resHandle\">\n<span class=\"functionIcon\">resHandle</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"watch\" class=\"jsdoc-link\">dojo/request/watch</a> </p> <div class=\"jsdoc-summary\">\n<p>Function used to process response. Gets the dfd object as its only argument.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_watch_validCheck\">\n<span class=\"functionIcon\">validCheck</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"watch\" class=\"jsdoc-link\">dojo/request/watch</a> </p> <div class=\"jsdoc-summary\">\n<p>Function used to check if the IO request is still valid. Gets the dfd object as its only argument.</p> </div>    <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_watch_cancelAll\">\n<span class=\"functionIcon\">cancelAll</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"watch\" class=\"jsdoc-link\">dojo/request/watch</a> </p> <p>Cancels all pending IO requests, regardless of IO type</p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/request/watch.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/request/watch.html</a>\n  </p>\n</div>\n","dojo/request/xhr":"<h1>dojo/request/xhr</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>Sends a request using XMLHttpRequest with the given URL and options.</p>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">xhr<span class=\"parameters\"><span class=\"paren\">(</span><span class=\"args\">url,options</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">url</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>URL to request</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">options</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"xhr.__options\">dojo/request/xhr.__Options</a></td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Options for the request.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\"><a class=\"jsdoc-link\" href=\"../request.__promise\">dojo/request.__Promise</a></span></p> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/request/xhr.html\" target=\"_blank\">dojo/request/xhr reference documentation</a> for more information.</p>          <h2 id=\"methods\">Methods</h2>        <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_xhr_del\">\n<span class=\"functionIcon\">del</span><span class=\"parameters\">(url,options)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"xhr\" class=\"jsdoc-link\">dojo/request/xhr</a> </p> <p>Send an HTTP DELETE request using XMLHttpRequest with the given URL and options.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">url</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>URL to request</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">options</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"xhr.__baseoptions\">dojo/request/xhr.__BaseOptions</a></td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Options for the request.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\"><a class=\"jsdoc-link\" href=\"../request.__promise\">dojo/request.__Promise</a></span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_xhr_get\">\n<span class=\"functionIcon\">get</span><span class=\"parameters\">(url,options)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"xhr\" class=\"jsdoc-link\">dojo/request/xhr</a> </p> <p>Send an HTTP GET request using XMLHttpRequest with the given URL and options.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">url</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>URL to request</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">options</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"xhr.__baseoptions\">dojo/request/xhr.__BaseOptions</a></td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Options for the request.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\"><a class=\"jsdoc-link\" href=\"../request.__promise\">dojo/request.__Promise</a></span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_xhr_post\">\n<span class=\"functionIcon\">post</span><span class=\"parameters\">(url,options)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"xhr\" class=\"jsdoc-link\">dojo/request/xhr</a> </p> <p>Send an HTTP POST request using XMLHttpRequest with the given URL and options.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">url</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>URL to request</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">options</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"xhr.__baseoptions\">dojo/request/xhr.__BaseOptions</a></td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Options for the request.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\"><a class=\"jsdoc-link\" href=\"../request.__promise\">dojo/request.__Promise</a></span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_xhr_put\">\n<span class=\"functionIcon\">put</span><span class=\"parameters\">(url,options)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"xhr\" class=\"jsdoc-link\">dojo/request/xhr</a> </p> <p>Send an HTTP PUT request using XMLHttpRequest with the given URL and options.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">url</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>URL to request</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">options</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"xhr.__baseoptions\">dojo/request/xhr.__BaseOptions</a></td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Options for the request.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\"><a class=\"jsdoc-link\" href=\"../request.__promise\">dojo/request.__Promise</a></span></p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/request/xhr.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/request/xhr.html</a>\n  </p>\n</div>\n","dojo/request/xhr.__baseoptions":"<h1>dojo/request/xhr.__BaseOptions</h1>  <p> <strong>Note:</strong> This is not a real constructor, but just a description of the type of object that should be passed as a parameter to some method(s), and/or the return value from some method(s). In other words, the type exists only for documentation purposes, and you <strong>cannot</strong> call <code>new xhr.__BaseOptions()</code> </p> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/request.html\" target=\"_blank\">dojo/request/xhr.__BaseOptions reference documentation</a> for more information.</p>          <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_xhr___BaseOptions_data\">\n<span class=\"stringIcon\">data</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"xhr\" class=\"jsdoc-link\">dojo/request/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>Data to transfer. This is ignored for GET and DELETE requests.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_xhr___BaseOptions_handleAs\">\n<span class=\"stringIcon\">handleAs</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../request\" class=\"jsdoc-link\">dojo/request</a> </p> <div class=\"jsdoc-summary\">\n<p>How to handle the response from the server. Default is 'text'. Other values are 'json', 'javascript', and 'xml'.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_xhr___BaseOptions_headers\">\n<span class=\"objectIcon\">headers</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"xhr\" class=\"jsdoc-link\">dojo/request/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>Headers to use for the request.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_xhr___BaseOptions_password\">\n<span class=\"stringIcon\">password</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"xhr\" class=\"jsdoc-link\">dojo/request/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>Password to use during the request.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_xhr___BaseOptions_preventCache\">\n<span class=\"booleanIcon\">preventCache</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../request\" class=\"jsdoc-link\">dojo/request</a> </p> <div class=\"jsdoc-summary\">\n<p>Whether to append a cache-busting parameter to the URL.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_xhr___BaseOptions_query\">\n<span class=\"stringIcon\">query</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../request\" class=\"jsdoc-link\">dojo/request</a> </p> <div class=\"jsdoc-summary\">\n<p>Query parameters to append to the URL.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_xhr___BaseOptions_sync\">\n<span class=\"booleanIcon\">sync</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"xhr\" class=\"jsdoc-link\">dojo/request/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>Whether to make a synchronous request or not. Default is <code>false</code> (asynchronous).</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_xhr___BaseOptions_timeout\">\n<span class=\"numberIcon\">timeout</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../request\" class=\"jsdoc-link\">dojo/request</a> </p> <div class=\"jsdoc-summary\">\n<p>Milliseconds to wait for the response. If this time passes, the then the promise is rejected.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_xhr___BaseOptions_user\">\n<span class=\"stringIcon\">user</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"xhr\" class=\"jsdoc-link\">dojo/request/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>Username to use during the request.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_xhr___BaseOptions_withCredentials\">\n<span class=\"booleanIcon\">withCredentials</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"xhr\" class=\"jsdoc-link\">dojo/request/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>For cross-site requests, whether to send credentials or not.</p> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/request/xhr.__BaseOptions.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/request/xhr.__BaseOptions.html</a>\n  </p>\n</div>\n","dojo/request/xhr.__methodoptions":"<h1>dojo/request/xhr.__MethodOptions</h1>  <p> <strong>Note:</strong> This is not a real constructor, but just a description of the type of object that should be passed as a parameter to some method(s), and/or the return value from some method(s). In other words, the type exists only for documentation purposes, and you <strong>cannot</strong> call <code>new xhr.__MethodOptions()</code> </p> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/request.html\" target=\"_blank\">dojo/request/xhr.__MethodOptions reference documentation</a> for more information.</p>          <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_xhr___MethodOptions_method\">\n<span class=\"stringIcon\">method</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"xhr\" class=\"jsdoc-link\">dojo/request/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>The HTTP method to use to make the request. Must be uppercase. Default is <code>\"GET\"</code>.</p> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/request/xhr.__MethodOptions.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/request/xhr.__MethodOptions.html</a>\n  </p>\n</div>\n","dojo/request/xhr.__options":"<h1>dojo/request/xhr.__Options</h1>  <p> <strong>Note:</strong> This is not a real constructor, but just a description of the type of object that should be passed as a parameter to some method(s), and/or the return value from some method(s). In other words, the type exists only for documentation purposes, and you <strong>cannot</strong> call <code>new xhr.__Options()</code> </p> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/request.html\" target=\"_blank\">dojo/request/xhr.__Options reference documentation</a> for more information.</p>          <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_xhr___Options_data\">\n<span class=\"stringIcon\">data</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"xhr\" class=\"jsdoc-link\">dojo/request/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>Data to transfer. This is ignored for GET and DELETE requests.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_xhr___Options_handleAs\">\n<span class=\"stringIcon\">handleAs</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../request\" class=\"jsdoc-link\">dojo/request</a> </p> <div class=\"jsdoc-summary\">\n<p>How to handle the response from the server. Default is 'text'. Other values are 'json', 'javascript', and 'xml'.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_xhr___Options_headers\">\n<span class=\"objectIcon\">headers</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"xhr\" class=\"jsdoc-link\">dojo/request/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>Headers to use for the request.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_xhr___Options_method\">\n<span class=\"stringIcon\">method</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"xhr\" class=\"jsdoc-link\">dojo/request/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>The HTTP method to use to make the request. Must be uppercase. Default is <code>\"GET\"</code>.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_xhr___Options_password\">\n<span class=\"stringIcon\">password</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"xhr\" class=\"jsdoc-link\">dojo/request/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>Password to use during the request.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_xhr___Options_preventCache\">\n<span class=\"booleanIcon\">preventCache</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../request\" class=\"jsdoc-link\">dojo/request</a> </p> <div class=\"jsdoc-summary\">\n<p>Whether to append a cache-busting parameter to the URL.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_xhr___Options_query\">\n<span class=\"stringIcon\">query</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../request\" class=\"jsdoc-link\">dojo/request</a> </p> <div class=\"jsdoc-summary\">\n<p>Query parameters to append to the URL.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_xhr___Options_sync\">\n<span class=\"booleanIcon\">sync</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"xhr\" class=\"jsdoc-link\">dojo/request/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>Whether to make a synchronous request or not. Default is <code>false</code> (asynchronous).</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_xhr___Options_timeout\">\n<span class=\"numberIcon\">timeout</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"../request\" class=\"jsdoc-link\">dojo/request</a> </p> <div class=\"jsdoc-summary\">\n<p>Milliseconds to wait for the response. If this time passes, the then the promise is rejected.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_xhr___Options_user\">\n<span class=\"stringIcon\">user</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"xhr\" class=\"jsdoc-link\">dojo/request/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>Username to use during the request.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_request_xhr___Options_withCredentials\">\n<span class=\"booleanIcon\">withCredentials</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"xhr\" class=\"jsdoc-link\">dojo/request/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>For cross-site requests, whether to send credentials or not.</p> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/request/xhr.__Options.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/request/xhr.__Options.html</a>\n  </p>\n</div>\n","dojo/require":"<h1>dojo/require</h1>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/require.html\" target=\"_blank\">dojo/require reference documentation</a> for more information.</p>            <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_require_dynamic\">\n<span class=\"numberIcon\">dynamic</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"require\" class=\"jsdoc-link\">dojo/require</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_require_load\">\n<span class=\"objectIcon\">load</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"require\" class=\"jsdoc-link\">dojo/require</a> </p>    <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_require_normalize\">\n<span class=\"functionIcon\">normalize</span><span class=\"parameters\">(id)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"require\" class=\"jsdoc-link\">dojo/require</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">id</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/require.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/require.html</a>\n  </p>\n</div>\n","dojo/robot._runsemaphore":"<h1>dojo/robot._runsemaphore</h1>             <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_robot__runsemaphore_lock\">\n<span class=\"arrayIcon\">lock</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"http://dojotoolkit.org/api/1.10/doh/robot\" class=\"jsdoc-link\">doh/robot</a> </p>    <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_robot__runsemaphore_unlock\">\n<span class=\"functionIcon\">unlock</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"http://dojotoolkit.org/api/1.10/doh/robot\" class=\"jsdoc-link\">doh/robot</a> </p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined | null</span></p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/robot._runsemaphore.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/robot._runsemaphore.html</a>\n  </p>\n</div>\n","dojo/robotx._runsemaphore":"<h1>dojo/robotx._runsemaphore</h1>             <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_robotx__runsemaphore_lock\">\n<span class=\"arrayIcon\">lock</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"http://dojotoolkit.org/api/1.10/doh/robot\" class=\"jsdoc-link\">doh/robot</a> </p>    <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_robotx__runsemaphore_unlock\">\n<span class=\"functionIcon\">unlock</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"http://dojotoolkit.org/api/1.10/doh/robot\" class=\"jsdoc-link\">doh/robot</a> </p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined | null</span></p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/robotx._runsemaphore.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/robotx._runsemaphore.html</a>\n  </p>\n</div>\n","dojo/router":"<h1>dojo/router</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>A singleton-style instance of <a class=\"jsdoc-link\" href=\"router/routerbase\">dojo/router/RouterBase</a>. See that module for specifics.</p>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/router.html\" target=\"_blank\">dojo/router reference documentation</a> for more information.</p>    <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>router.register(\"/widgets/:id\", function(evt){\n    // If \"/widgets/3\" was matched,\n    // evt.params.id === \"3\"\n    xhr.get({\n        url: \"/some/path/\" + evt.params.id,\n        load: function(data){\n            // ...\n        }\n    });\n});</code></pre> </div> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/router.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/router.html</a>\n  </p>\n</div>\n","dojo/router/routerbase":"<h1>dojo/router/RouterBase</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>A module that allows one to easily map hash-based structures into callbacks. The router module is a singleton, offering one central point for all registrations of this type.</p>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">\n<span class=\"sig\"><span class=\"keyword\">var </span><span class=\"var\">foo </span><span class=\"eq\">= </span><span class=\"new\">new </span><span class=\"args\">RouterBase</span></span><span class=\"parameters\"><span class=\"paren\">(</span><span class=\"args\">kwArgs</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <p class=\"jsdoc-inheritance\"> <label>Defined by </label><span><a class=\"jsdoc-link\" href=\"routerbase\">dojo/router/RouterBase</a></span> </p> <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">kwArgs</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/router.html\" target=\"_blank\">dojo/router/RouterBase reference documentation</a> for more information.</p>    <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>var router = new RouterBase({});\nrouter.register(\"/widgets/:id\", function(evt){\n    // If \"/widgets/3\" was matched,\n    // evt.params.id === \"3\"\n    xhr.get({\n        url: \"/some/path/\" + evt.params.id,\n        load: function(data){\n            // ...\n        }\n    });\n});</code></pre> </div> </div>         <h2 id=\"properties\">Properties</h2>        <h3 class=\"jsdoc-title\" id=\"1_10dojo_router_RouterBase_globMatch\">\n<span class=\"regexpIcon\">globMatch</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"routerbase\" class=\"jsdoc-link\">dojo/router/RouterBase</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_router_RouterBase_globReplacement\">\n<span class=\"stringIcon\">globReplacement</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"routerbase\" class=\"jsdoc-link\">dojo/router/RouterBase</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_router_RouterBase_idMatch\">\n<span class=\"regexpIcon\">idMatch</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"routerbase\" class=\"jsdoc-link\">dojo/router/RouterBase</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_router_RouterBase_idReplacement\">\n<span class=\"stringIcon\">idReplacement</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"routerbase\" class=\"jsdoc-link\">dojo/router/RouterBase</a> </p>    <h2 id=\"methods\">Methods</h2>         <h3 class=\"jsdoc-title\" id=\"1_10dojo_router_RouterBase_destroy\">\n<span class=\"functionIcon\">destroy</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"routerbase\" class=\"jsdoc-link\">dojo/router/RouterBase</a> </p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_router_RouterBase_go\">\n<span class=\"functionIcon\">go</span><span class=\"parameters\">(path,replace)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"routerbase\" class=\"jsdoc-link\">dojo/router/RouterBase</a> </p> <p>A simple pass-through to make changing the hash easy, without having to require dojo/hash directly. It also synchronously fires off any routes that match.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">path</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">replace</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">boolean | undefined</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>router.go(\"/foo/bar\");</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_router_RouterBase_register\">\n<span class=\"functionIcon\">register</span><span class=\"parameters\">(route,callback)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"routerbase\" class=\"jsdoc-link\">dojo/router/RouterBase</a> </p> <p>Registers a route to a handling callback</p>  <p>Given either a string or a regular expression, the router will monitor the page's hash and respond to changes that match the string or regex as provided. </p> <p>When provided a regex for the route: </p> <ul> <li>Matching is performed, and the resulting capture groups are passed through to the callback as an array.</li> </ul> <p>When provided a string for the route: </p> <ul> <li>The string is parsed as a URL-like structure, like \"/foo/bar\"</li> <li>If any portions of that URL are prefixed with a colon (:), they will be parsed out and provided to the callback as properties of an object.</li> <li>If the last piece of the URL-like structure is prefixed with a star (*) instead of a colon, it will be replaced in the resulting regex with a greedy (.+) match and anything remaining on the hash will be provided as a property on the object passed into the callback. Think of it like a basic means of globbing the end of a route.</li> </ul>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">route</td> <td class=\"jsdoc-param-type\">String | RegExp</td> <td class=\"jsdoc-param-description\">\n<p>A string or regular expression which will be used when monitoring hash changes.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">callback</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\">\n<p>When the hash matches a pattern as described in the route, this callback will be executed. It will receive an event object that will have several properties: </p> <ul> <li>params: Either an array or object of properties pulled from the new hash</li> <li>oldPath: The hash in its state before the change</li> <li>newPath: The new hash being shifted to</li> <li>preventDefault: A method that will stop hash changes from being actually applied to the active hash. This only works if the hash change was initiated using <code>router.go</code>, as changes initiated more directly to the location.hash property will already be in place</li> <li>stopImmediatePropagation: When called, will stop any further bound callbacks on this particular route from being executed. If two distinct routes are bound that are different, but both happen to match the current hash in some way, this will <em>not</em> keep other routes from receiving notice of the change.</li> </ul> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Object | undefined</span></p> <p>A plain JavaScript object to be used as a handle for either removing this specific callback's registration, as well as to add new callbacks with the same route initially used.</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>router.register(\"/foo/:bar/*baz\", function(object){\n    // If the hash was \"/foo/abc/def/ghi\",\n    // object.bar === \"abc\"\n    // object.baz === \"def/ghi\"\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_router_RouterBase_registerBefore\">\n<span class=\"functionIcon\">registerBefore</span><span class=\"parameters\">(route,callback)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"routerbase\" class=\"jsdoc-link\">dojo/router/RouterBase</a> </p> <p>Registers a route to a handling callback, except before any previously registered callbacks</p>  <p>Much like the <code>register</code> method, <code>registerBefore</code> allows us to register route callbacks to happen before any previously registered callbacks. See the documentation for <code>register</code> for more details and examples.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">route</td> <td class=\"jsdoc-param-type\">String | RegExp</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">callback</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_router_RouterBase_startup\">\n<span class=\"functionIcon\">startup</span><span class=\"parameters\">(defaultPath)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"routerbase\" class=\"jsdoc-link\">dojo/router/RouterBase</a> </p> <p>This method must be called to activate the router. Until startup is called, no hash changes will trigger route callbacks.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">defaultPath</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/router/RouterBase.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/router/RouterBase.html</a>\n  </p>\n</div>\n","dojo/rpc/jsonpservice":"<h1>dojo/rpc/JsonpService</h1> <div class=\"jsdoc-mixins\"> <label>Extends</label><a href=\"rpcservice\" class=\"jsdoc-link\">dojo/rpc/RpcService</a> </div>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>Generic JSONP service. Minimally extends RpcService to allow easy definition of nearly any JSONP style service. Example SMD files exist in dojox.data</p>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">\n<span class=\"sig\"><span class=\"keyword\">var </span><span class=\"var\">foo </span><span class=\"eq\">= </span><span class=\"new\">new </span><span class=\"args\">JsonpService</span></span><span class=\"parameters\"><span class=\"paren\">(</span><span class=\"args\">args,requiredArgs</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <p class=\"jsdoc-inheritance\"> <label>Defined by </label><span><a class=\"jsdoc-link\" href=\"jsonpservice\">dojo/rpc/JsonpService</a></span> </p> <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">args</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">requiredArgs</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/rpc/JsonpService.html\" target=\"_blank\">dojo/rpc/JsonpService reference documentation</a> for more information.</p>            <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_rpc_JsonpService_serviceUrl\">\n<span class=\"stringIcon\">serviceUrl</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"rpcservice\" class=\"jsdoc-link\">dojo/rpc/RpcService</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_rpc_JsonpService_strictArgChecks\">\n<span class=\"booleanIcon\">strictArgChecks</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"jsonpservice\" class=\"jsdoc-link\">dojo/rpc/JsonpService</a> </p>    <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_rpc_JsonpService_bind\">\n<span class=\"functionIcon\">bind</span><span class=\"parameters\">(method,parameters,deferredRequestHandler,url)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"jsonpservice\" class=\"jsdoc-link\">dojo/rpc/JsonpService</a> </p> <p>JSONP bind method. Takes remote method, parameters, deferred, and a url, calls createRequest to make a JSON-RPC envelope and passes that off with bind.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">method</td> <td class=\"jsdoc-param-type\">string</td> <td class=\"jsdoc-param-description\">\n<p>The name of the method we are calling</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">parameters</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"../_base/array\">dojo/_base/array</a></td> <td class=\"jsdoc-param-description\">\n<p>The parameters we are passing off to the method</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">deferredRequestHandler</td> <td class=\"jsdoc-param-type\">deferred</td> <td class=\"jsdoc-param-description\">\n<p>The Deferred object for this particular request</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">url</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_rpc_JsonpService_createRequest\">\n<span class=\"functionIcon\">createRequest</span><span class=\"parameters\">(parameters)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"jsonpservice\" class=\"jsdoc-link\">dojo/rpc/JsonpService</a> </p> <p>create a JSONP req</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">parameters</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">object</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_rpc_JsonpService_errorCallback\">\n<span class=\"functionIcon\">errorCallback</span><span class=\"parameters\">(deferredRequestHandler)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"rpcservice\" class=\"jsdoc-link\">dojo/rpc/RpcService</a> </p> <p>create callback that calls the Deferred errback method</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">deferredRequestHandler</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"../_base/deferred\">dojo/_base/Deferred</a></td> <td class=\"jsdoc-param-description\">\n<p>The deferred object handling a request.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">function</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_rpc_JsonpService_generateMethod\">\n<span class=\"functionIcon\">generateMethod</span><span class=\"parameters\">(method,parameters,url)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"rpcservice\" class=\"jsdoc-link\">dojo/rpc/RpcService</a> </p> <p>generate the local bind methods for the remote object</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">method</td> <td class=\"jsdoc-param-type\">string</td> <td class=\"jsdoc-param-description\">\n<p>The name of the method we are generating</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">parameters</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"../_base/array\">dojo/_base/array</a></td> <td class=\"jsdoc-param-description\">\n<p>the array of parameters for this call.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">url</td> <td class=\"jsdoc-param-type\">string</td> <td class=\"jsdoc-param-description\">\n<p>the service url for this call</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_rpc_JsonpService_parseResults\">\n<span class=\"functionIcon\">parseResults</span><span class=\"parameters\">(obj)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"rpcservice\" class=\"jsdoc-link\">dojo/rpc/RpcService</a> </p> <p>parse the results coming back from an rpc request. this base implementation, just returns the full object subclasses should parse and only return the actual results</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">obj</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>Object that is the return results from an rpc request</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Object</span></p> <p>Object that is the return results from an rpc request</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_rpc_JsonpService_processSmd\">\n<span class=\"functionIcon\">processSmd</span><span class=\"parameters\">(object)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"rpcservice\" class=\"jsdoc-link\">dojo/rpc/RpcService</a> </p> <p>callback method for receipt of a smd object. Parse the smd and generate functions based on the description</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">object</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\">\n<p>smd object defining this service.</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_rpc_JsonpService_resultCallback\">\n<span class=\"functionIcon\">resultCallback</span><span class=\"parameters\">(deferredRequestHandler)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"rpcservice\" class=\"jsdoc-link\">dojo/rpc/RpcService</a> </p> <p>create callback that calls the Deferred's callback method</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">deferredRequestHandler</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"../_base/deferred\">dojo/_base/Deferred</a></td> <td class=\"jsdoc-param-description\">\n<p>The deferred object handling a request.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/rpc/JsonpService.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/rpc/JsonpService.html</a>\n  </p>\n</div>\n","dojo/selector/_loader":"<h1>dojo/selector/_loader</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>This module handles loading the appropriate selector engine for the given browser</p>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/selector/_loader.html\" target=\"_blank\">dojo/selector/_loader reference documentation</a> for more information.</p>          <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_selector__loader_load\">\n<span class=\"functionIcon\">load</span><span class=\"parameters\">(id,parentRequire,loaded,config)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_loader\" class=\"jsdoc-link\">dojo/selector/_loader</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">id</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">parentRequire</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">loaded</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">config</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/selector/_loader.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/selector/_loader.html</a>\n  </p>\n</div>\n","dojo/rpc/rpcservice":"<h1>dojo/rpc/RpcService</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>TODOC</p>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">\n<span class=\"sig\"><span class=\"keyword\">var </span><span class=\"var\">foo </span><span class=\"eq\">= </span><span class=\"new\">new </span><span class=\"args\">RpcService</span></span><span class=\"parameters\"><span class=\"paren\">(</span><span class=\"args\">args</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <p class=\"jsdoc-inheritance\"> <label>Defined by </label><span><a class=\"jsdoc-link\" href=\"rpcservice\">dojo/rpc/RpcService</a></span> </p> <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">args</td> <td class=\"jsdoc-param-type\">object</td> <td class=\"jsdoc-param-description\">\n<p>Takes a number of properties as kwArgs for defining the service. It also accepts a string. When passed a string, it is treated as a url from which it should synchronously retrieve an smd file. Otherwise it is a kwArgs object. It accepts serviceUrl, to manually define a url for the rpc service allowing the rpc system to be used without an smd definition. strictArgChecks forces the system to verify that the # of arguments provided in a call matches those defined in the smd. smdString allows a developer to pass a jsonString directly, which will be converted into an object or alternatively smdObject is accepts an smdObject directly. </p> </td> </tr> </table> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/rpc/RpcService.html\" target=\"_blank\">dojo/rpc/RpcService reference documentation</a> for more information.</p>            <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_rpc_RpcService_serviceUrl\">\n<span class=\"stringIcon\">serviceUrl</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"rpcservice\" class=\"jsdoc-link\">dojo/rpc/RpcService</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_rpc_RpcService_strictArgChecks\">\n<span class=\"booleanIcon\">strictArgChecks</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"rpcservice\" class=\"jsdoc-link\">dojo/rpc/RpcService</a> </p>    <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_rpc_RpcService_errorCallback\">\n<span class=\"functionIcon\">errorCallback</span><span class=\"parameters\">(deferredRequestHandler)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"rpcservice\" class=\"jsdoc-link\">dojo/rpc/RpcService</a> </p> <p>create callback that calls the Deferred errback method</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">deferredRequestHandler</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"../_base/deferred\">dojo/_base/Deferred</a></td> <td class=\"jsdoc-param-description\">\n<p>The deferred object handling a request.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">function</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_rpc_RpcService_generateMethod\">\n<span class=\"functionIcon\">generateMethod</span><span class=\"parameters\">(method,parameters,url)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"rpcservice\" class=\"jsdoc-link\">dojo/rpc/RpcService</a> </p> <p>generate the local bind methods for the remote object</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">method</td> <td class=\"jsdoc-param-type\">string</td> <td class=\"jsdoc-param-description\">\n<p>The name of the method we are generating</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">parameters</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"../_base/array\">dojo/_base/array</a></td> <td class=\"jsdoc-param-description\">\n<p>the array of parameters for this call.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">url</td> <td class=\"jsdoc-param-type\">string</td> <td class=\"jsdoc-param-description\">\n<p>the service url for this call</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_rpc_RpcService_parseResults\">\n<span class=\"functionIcon\">parseResults</span><span class=\"parameters\">(obj)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"rpcservice\" class=\"jsdoc-link\">dojo/rpc/RpcService</a> </p> <p>parse the results coming back from an rpc request. this base implementation, just returns the full object subclasses should parse and only return the actual results</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">obj</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>Object that is the return results from an rpc request</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Object</span></p> <p>Object that is the return results from an rpc request</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_rpc_RpcService_processSmd\">\n<span class=\"functionIcon\">processSmd</span><span class=\"parameters\">(object)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"rpcservice\" class=\"jsdoc-link\">dojo/rpc/RpcService</a> </p> <p>callback method for receipt of a smd object. Parse the smd and generate functions based on the description</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">object</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\">\n<p>smd object defining this service.</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_rpc_RpcService_resultCallback\">\n<span class=\"functionIcon\">resultCallback</span><span class=\"parameters\">(deferredRequestHandler)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"rpcservice\" class=\"jsdoc-link\">dojo/rpc/RpcService</a> </p> <p>create callback that calls the Deferred's callback method</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">deferredRequestHandler</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"../_base/deferred\">dojo/_base/Deferred</a></td> <td class=\"jsdoc-param-description\">\n<p>The deferred object handling a request.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/rpc/RpcService.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/rpc/RpcService.html</a>\n  </p>\n</div>\n","dojo/selector/acme":"<h1>dojo/selector/acme</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>Returns nodes which match the given CSS3 selector, searching the entire document by default but optionally taking a node to scope the search by. Returns an array.</p>  <p>dojo.query() is the swiss army knife of DOM node manipulation in Dojo. Much like Prototype's \"$$\" (bling-bling) function or JQuery's \"$\" function, dojo.query provides robust, high-performance CSS-based node selector support with the option of scoping searches to a particular sub-tree of a document. </p> <h2>Supported Selectors:</h2> <p>acme supports a rich set of CSS3 selectors, including: </p> <ul> <li>class selectors (e.g., <code>.foo</code>)</li> <li>node type selectors like <code>span</code>\n</li> <li>\n descendant selectors</li> <li>\n<code>&gt;</code> child element selectors</li> <li>\n<code>#foo</code> style ID selectors</li> <li>\n<code>*</code> universal selector</li> <li>\n<code>~</code>, the preceded-by sibling selector</li> <li>\n<code>+</code>, the immediately preceded-by sibling selector</li> <li>attribute queries:<ul> <li>\n<code>[foo]</code> attribute presence selector</li> <li>\n<code>[foo='bar']</code> attribute value exact match</li> <li>\n<code>[foo~='bar']</code> attribute value list item match</li> <li>\n<code>[foo^='bar']</code> attribute start match</li> <li>\n<code>[foo$='bar']</code> attribute end match</li> <li>\n<code>[foo*='bar']</code> attribute substring match</li> </ul> </li> <li>\n<code>:first-child</code>, <code>:last-child</code>, and <code>:only-child</code> positional selectors</li> <li>\n<code>:empty</code> content emtpy selector</li> <li>\n<code>:checked</code> pseudo selector</li> <li>\n<code>:nth-child(n)</code>, <code>:nth-child(2n+1)</code> style positional calculations</li> <li>\n<code>:nth-child(even)</code>, <code>:nth-child(odd)</code> positional selectors</li> <li>\n<code>:not(...)</code> negation pseudo selectors</li> </ul> <p>Any legal combination of these selectors will work with <code>dojo.query()</code>, including compound selectors (\",\" delimited). Very complex and useful searches can be constructed with this palette of selectors and when combined with functions for manipulation presented by <a class=\"jsdoc-link\" href=\"../nodelist\">dojo/NodeList</a>, many types of DOM manipulation operations become very straightforward. </p> <h2>Unsupported Selectors:</h2> <p>While dojo.query handles many CSS3 selectors, some fall outside of what's reasonable for a programmatic node querying engine to handle. Currently unsupported selectors include: </p> <ul> <li>namespace-differentiated selectors of any form</li> <li>all <code>::</code> pseduo-element selectors</li> <li>certain pseudo-selectors which don't get a lot of day-to-day use:<ul> <li>\n<code>:root</code>, <code>:lang()</code>, <code>:target</code>, <code>:focus</code>\n</li> </ul> </li> <li>all visual and state selectors:<ul> <li>\n<code>:root</code>, <code>:active</code>, <code>:hover</code>, <code>:visited</code>, <code>:link</code>,<pre><code>`:enabled`, `:disabled`</code></pre> </li> <li>\n<code>:*-of-type</code> pseudo selectors</li> </ul> </li> </ul> <h2>dojo.query and XML Documents:</h2> <p><code>dojo.query</code> (as of dojo 1.2) supports searching XML documents in a case-sensitive manner. If an HTML document is served with a doctype that forces case-sensitivity (e.g., XHTML 1.1 Strict), dojo.query() will detect this and \"do the right thing\". Case sensitivity is dependent upon the document being searched and not the query used. It is therefore possible to use case-sensitive queries on strict sub-documents (iframes, etc.) or XML documents while still assuming case-insensitivity for a host/root document. </p> <h2>Non-selector Queries:</h2> <p>If something other than a String is passed for the query, <code>dojo.query</code> will return a new <a class=\"jsdoc-link\" href=\"../nodelist\">dojo/NodeList</a> instance constructed from that parameter alone and all further processing will stop. This means that if you have a reference to a node or NodeList, you can quickly construct a new NodeList from the original by calling <code>dojo.query(node)</code> or <code>dojo.query(list)</code>. </p>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">acme<span class=\"parameters\"><span class=\"paren\">(</span><span class=\"args\">query,root</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">query</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>The CSS3 expression to match against. For details on the syntax of CSS3 selectors, see <a href=\"http://www.w3.org/TR/css3-selectors/#selectors\">http://www.w3.org/TR/css3-selectors/#selectors</a></p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">root</td> <td class=\"jsdoc-param-type\">String | DOMNode</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>A DOMNode (or node id) to scope the search from. Optional.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Array | undefined</span></p> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/selector/acme.html\" target=\"_blank\">dojo/selector/acme reference documentation</a> for more information.</p>    <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>search the entire document for elements with the class \"foo\": </p> <pre><code>require([\"dojo/query\"], function(query) {\n    query(\".foo\").forEach(function(q) { console.log(q); });\n});</code></pre> <p>these elements will match: </p> <pre><code>&lt;span class=\"foo\"&gt;&lt;/span&gt;\n&lt;span class=\"foo bar\"&gt;&lt;/span&gt;\n&lt;p class=\"thud foo\"&gt;&lt;/p&gt;</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>search the entire document for elements with the classes \"foo\" <em>and</em> \"bar\": </p> <pre><code>require([\"dojo/query\"], function(query) {\n    query(\".foo.bar\").forEach(function(q) { console.log(q); });\n});</code></pre> </div> </div>       <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_selector_acme_filter\">\n<span class=\"functionIcon\">filter</span><span class=\"parameters\">(nodeList,filter,root)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"acme\" class=\"jsdoc-link\">dojo/selector/acme</a> </p> <p>function for filtering a NodeList based on a selector, optimized for simple selectors</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">nodeList</td> <td class=\"jsdoc-param-type\">Node[]</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">filter</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">root</td> <td class=\"jsdoc-param-type\">String | DOMNode</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/selector/acme.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/selector/acme.html</a>\n  </p>\n</div>\n","dojo/selector/lite":"<h1>dojo/selector/lite</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>A small lightweight query selector engine that implements CSS2.1 selectors minus pseudo-classes and the sibling combinator, plus CSS3 attribute selectors</p>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">lite<span class=\"parameters\"><span class=\"paren\">(</span><span class=\"args\">selector,root</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">selector</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">root</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined | Array</span></p> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/selector/lite.html\" target=\"_blank\">dojo/selector/lite reference documentation</a> for more information.</p>            <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_selector_lite_match\">\n<span class=\"objectIcon\">match</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"lite\" class=\"jsdoc-link\">dojo/selector/lite</a> </p>    <h2 id=\"methods\">Methods</h2><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/selector/lite.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/selector/lite.html</a>\n  </p>\n</div>\n","dojo/sniff":"<h1>dojo/sniff</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>This module sets has() flags based on the current browser. It returns the has() function.</p>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">sniff<span class=\"parameters\"><span class=\"paren\">(</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/sniff.html\" target=\"_blank\">dojo/sniff reference documentation</a> for more information.</p>          <h2 id=\"methods\">Methods</h2><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/sniff.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/sniff.html</a>\n  </p>\n</div>\n","dojo/store/api/store.putdirectives":"<h1>dojo/store/api/Store.PutDirectives</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>Directives passed to put() and add() handlers for guiding the update and creation of stored objects.</p>           <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_api_Store_PutDirectives_before\">\n<span class=\"objectIcon\">before</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"store\" class=\"jsdoc-link\">dojo/store/api/Store</a> </p> <div class=\"jsdoc-summary\">\n<p>If the collection of objects in the store has a natural ordering, this indicates that the created or updated object should be placed before the object specified by the value of this property. A value of null indicates that the object should be last.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_api_Store_PutDirectives_id\">\n<span class=\"stringIcon\">id</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"store\" class=\"jsdoc-link\">dojo/store/api/Store</a> </p> <div class=\"jsdoc-summary\">\n<p>Indicates the identity of the object if a new object is created</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_api_Store_PutDirectives_overwrite\">\n<span class=\"booleanIcon\">overwrite</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"store\" class=\"jsdoc-link\">dojo/store/api/Store</a> </p> <div class=\"jsdoc-summary\">\n<p>If this is provided as a boolean it indicates that the object should or should not overwrite an existing object. A value of true indicates that a new object should not be created, the operation should update an existing object. A value of false indicates that an existing object should not be updated, a new object should be created (which is the same as an add() operation). When this property is not provided, either an update or creation is acceptable.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_api_Store_PutDirectives_parent\">\n<span class=\"objectIcon\">parent</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"store\" class=\"jsdoc-link\">dojo/store/api/Store</a> </p> <div class=\"jsdoc-summary\">\n<p>If the store is hierarchical (with single parenting) this property indicates the new parent of the created or updated object.</p> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/store/api/Store.PutDirectives.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/store/api/Store.PutDirectives.html</a>\n  </p>\n</div>\n","dojo/store/api/store.queryoptions":"<h1>dojo/store/api/Store.QueryOptions</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>Optional object with additional parameters for query results.</p>           <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_api_Store_QueryOptions_count\">\n<span class=\"numberIcon\">count</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"store\" class=\"jsdoc-link\">dojo/store/api/Store</a> </p> <div class=\"jsdoc-summary\">\n<p>The number of how many results should be returned.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_api_Store_QueryOptions_sort\">\n<span class=\"objectIcon\">sort</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"store\" class=\"jsdoc-link\">dojo/store/api/Store</a> </p> <div class=\"jsdoc-summary\">\n<p>A list of attributes to sort on, as well as direction For example: </p> <pre><code>[{attribute:\"price, descending: true}].</code></pre> <p>If the sort parameter is omitted, then the natural order of the store may be </p> <p>applied if there is a natural order.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_api_Store_QueryOptions_start\">\n<span class=\"numberIcon\">start</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"store\" class=\"jsdoc-link\">dojo/store/api/Store</a> </p> <div class=\"jsdoc-summary\">\n<p>The first result to begin iteration on</p> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/store/api/Store.QueryOptions.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/store/api/Store.QueryOptions.html</a>\n  </p>\n</div>\n","dojo/rpc/jsonservice":"<h1>dojo/rpc/JsonService</h1> <div class=\"jsdoc-mixins\"> <label>Extends</label><a href=\"rpcservice\" class=\"jsdoc-link\">dojo/rpc/RpcService</a> </div>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>TODOC</p>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">\n<span class=\"sig\"><span class=\"keyword\">var </span><span class=\"var\">foo </span><span class=\"eq\">= </span><span class=\"new\">new </span><span class=\"args\">JsonService</span></span><span class=\"parameters\"><span class=\"paren\">(</span><span class=\"args\">args</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <p class=\"jsdoc-inheritance\"> <label>Defined by </label><span><a class=\"jsdoc-link\" href=\"rpcservice\">dojo/rpc/RpcService</a></span> </p> <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">args</td> <td class=\"jsdoc-param-type\">object</td> <td class=\"jsdoc-param-description\">\n<p>Takes a number of properties as kwArgs for defining the service. It also accepts a string. When passed a string, it is treated as a url from which it should synchronously retrieve an smd file. Otherwise it is a kwArgs object. It accepts serviceUrl, to manually define a url for the rpc service allowing the rpc system to be used without an smd definition. strictArgChecks forces the system to verify that the # of arguments provided in a call matches those defined in the smd. smdString allows a developer to pass a jsonString directly, which will be converted into an object or alternatively smdObject is accepts an smdObject directly. </p> </td> </tr> </table> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/rpc/JsonService.html\" target=\"_blank\">dojo/rpc/JsonService reference documentation</a> for more information.</p>            <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_rpc_JsonService_bustCache\">\n<span class=\"booleanIcon\">bustCache</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"jsonservice\" class=\"jsdoc-link\">dojo/rpc/JsonService</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_rpc_JsonService_contentType\">\n<span class=\"stringIcon\">contentType</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"jsonservice\" class=\"jsdoc-link\">dojo/rpc/JsonService</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_rpc_JsonService_lastSubmissionId\">\n<span class=\"numberIcon\">lastSubmissionId</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"jsonservice\" class=\"jsdoc-link\">dojo/rpc/JsonService</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_rpc_JsonService_serviceUrl\">\n<span class=\"stringIcon\">serviceUrl</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"rpcservice\" class=\"jsdoc-link\">dojo/rpc/RpcService</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_rpc_JsonService_strictArgChecks\">\n<span class=\"booleanIcon\">strictArgChecks</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"rpcservice\" class=\"jsdoc-link\">dojo/rpc/RpcService</a> </p>    <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_rpc_JsonService_bind\">\n<span class=\"functionIcon\">bind</span><span class=\"parameters\">(method,parameters,deferredRequestHandler,url)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"jsonservice\" class=\"jsdoc-link\">dojo/rpc/JsonService</a> </p> <p>JSON-RPC bind method. Takes remote method, parameters, deferred, and a url, calls createRequest to make a JSON-RPC envelope and passes that off with bind.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">method</td> <td class=\"jsdoc-param-type\">string</td> <td class=\"jsdoc-param-description\">\n<p>The name of the method we are calling</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">parameters</td> <td class=\"jsdoc-param-type\">array</td> <td class=\"jsdoc-param-description\">\n<p>The parameters we are passing off to the method</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">deferredRequestHandler</td> <td class=\"jsdoc-param-type\">deferred</td> <td class=\"jsdoc-param-description\">\n<p>The Deferred object for this particular request</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">url</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_rpc_JsonService_callRemote\">\n<span class=\"functionIcon\">callRemote</span><span class=\"parameters\">(method,params)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"jsonservice\" class=\"jsdoc-link\">dojo/rpc/JsonService</a> </p> <p>call an arbitrary remote method without requiring it to be predefined with SMD</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">method</td> <td class=\"jsdoc-param-type\">string</td> <td class=\"jsdoc-param-description\">\n<p>the name of the remote method you want to call.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">params</td> <td class=\"jsdoc-param-type\">array</td> <td class=\"jsdoc-param-description\">\n<p>array of parameters to pass to method</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">instance</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_rpc_JsonService_createRequest\">\n<span class=\"functionIcon\">createRequest</span><span class=\"parameters\">(method,params)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"jsonservice\" class=\"jsdoc-link\">dojo/rpc/JsonService</a> </p> <p>create a JSON-RPC envelope for the request</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">method</td> <td class=\"jsdoc-param-type\">string</td> <td class=\"jsdoc-param-description\">\n<p>The name of the method we are creating the request for</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">params</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"../_base/array\">dojo/_base/array</a></td> <td class=\"jsdoc-param-description\">\n<p>The array of parameters for this request;</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_rpc_JsonService_errorCallback\">\n<span class=\"functionIcon\">errorCallback</span><span class=\"parameters\">(deferredRequestHandler)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"rpcservice\" class=\"jsdoc-link\">dojo/rpc/RpcService</a> </p> <p>create callback that calls the Deferred errback method</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">deferredRequestHandler</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"../_base/deferred\">dojo/_base/Deferred</a></td> <td class=\"jsdoc-param-description\">\n<p>The deferred object handling a request.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">function</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_rpc_JsonService_generateMethod\">\n<span class=\"functionIcon\">generateMethod</span><span class=\"parameters\">(method,parameters,url)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"rpcservice\" class=\"jsdoc-link\">dojo/rpc/RpcService</a> </p> <p>generate the local bind methods for the remote object</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">method</td> <td class=\"jsdoc-param-type\">string</td> <td class=\"jsdoc-param-description\">\n<p>The name of the method we are generating</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">parameters</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"../_base/array\">dojo/_base/array</a></td> <td class=\"jsdoc-param-description\">\n<p>the array of parameters for this call.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">url</td> <td class=\"jsdoc-param-type\">string</td> <td class=\"jsdoc-param-description\">\n<p>the service url for this call</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_rpc_JsonService_parseResults\">\n<span class=\"functionIcon\">parseResults</span><span class=\"parameters\">(obj)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"jsonservice\" class=\"jsdoc-link\">dojo/rpc/JsonService</a> </p> <p>parse the result envelope and pass the results back to the callback function</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">obj</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>Object containing envelope of data we receive from the server</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined | Object</span></p> <p>Object containing envelope of data we receive from the server</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_rpc_JsonService_processSmd\">\n<span class=\"functionIcon\">processSmd</span><span class=\"parameters\">(object)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"rpcservice\" class=\"jsdoc-link\">dojo/rpc/RpcService</a> </p> <p>callback method for receipt of a smd object. Parse the smd and generate functions based on the description</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">object</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\">\n<p>smd object defining this service.</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_rpc_JsonService_resultCallback\">\n<span class=\"functionIcon\">resultCallback</span><span class=\"parameters\">(deferredRequestHandler)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"rpcservice\" class=\"jsdoc-link\">dojo/rpc/RpcService</a> </p> <p>create callback that calls the Deferred's callback method</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">deferredRequestHandler</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"../_base/deferred\">dojo/_base/Deferred</a></td> <td class=\"jsdoc-param-description\">\n<p>The deferred object handling a request.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/rpc/JsonService.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/rpc/JsonService.html</a>\n  </p>\n</div>\n","dojo/stateful":"<h1>dojo/Stateful</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>Base class for objects that provide named properties with optional getter/setter control and the ability to watch for property changes </p> <p>The class also provides the functionality to auto-magically manage getters and setters for object attributes/properties. </p> <p>Getters and Setters should follow the format of _xxxGetter or _xxxSetter where the xxx is a name of the attribute to handle. So an attribute of \"foo\" would have a custom getter of _fooGetter and a custom setter of _fooSetter. </p>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/Stateful.html\" target=\"_blank\">dojo/Stateful reference documentation</a> for more information.</p>    <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>require([\"dojo/Stateful\", function(Stateful) {\n    var obj = new Stateful();\n    obj.watch(\"foo\", function(){\n        console.log(\"foo changed to \" + this.get(\"foo\"));\n    });\n    obj.set(\"foo\",\"bar\");\n});</code></pre> </div> </div>         <h2 id=\"properties\">Properties</h2>    <h2 id=\"methods\">Methods</h2>       <h3 class=\"jsdoc-title\" id=\"1_10dojo_Stateful_get\">\n<span class=\"functionIcon\">get</span><span class=\"parameters\">(name)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"stateful\" class=\"jsdoc-link\">dojo/Stateful</a> </p> <p>Get a property on a Stateful instance.</p>  <p>Get a named property on a Stateful object. The property may potentially be retrieved via a getter method in subclasses. In the base class this just retrieves the object's property.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">name</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>The property to get.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | undefined</span></p> <p>The property value on this Stateful instance.</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>require([\"dojo/Stateful\", function(Stateful) {\n    var stateful = new Stateful({foo: 3});\n    stateful.get(\"foo\") // returns 3\n    stateful.foo // returns 3\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_Stateful_postscript\">\n<span class=\"functionIcon\">postscript</span><span class=\"parameters\">(params)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"stateful\" class=\"jsdoc-link\">dojo/Stateful</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">params</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_Stateful_set\">\n<span class=\"functionIcon\">set</span><span class=\"parameters\">(name,value)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"stateful\" class=\"jsdoc-link\">dojo/Stateful</a> </p> <p>Set a property on a Stateful instance</p>  <p>Sets named properties on a stateful object and notifies any watchers of the property. A programmatic setter may be defined in subclasses.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">name</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>The property to set.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">value</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>The value to set in the property.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | function</span></p> <p>The function returns this dojo.Stateful instance.</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>require([\"dojo/Stateful\", function(Stateful) {\n    var stateful = new Stateful();\n    stateful.watch(function(name, oldValue, value){\n        // this will be called on the set below\n    }\n    stateful.set(foo, 5);</code></pre> <p>set() may also be called with a hash of name/value pairs, ex: </p> <pre><code>stateful.set({\n    foo: \"Howdy\",\n    bar: 3\n});\n});</code></pre> <p>This is equivalent to calling set(foo, \"Howdy\") and set(bar, 3) </p> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_Stateful_watch\">\n<span class=\"functionIcon\">watch</span><span class=\"parameters\">(name,callback)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"stateful\" class=\"jsdoc-link\">dojo/Stateful</a> </p> <p>Watches a property for changes</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">name</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Indicates the property to watch. This is optional (the callback may be the only parameter), and if omitted, all the properties will be watched</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">callback</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\">\n<p>The function to execute when the property changes. This will be called after the property has been changed. The callback will be called with the |this| set to the instance, the first argument as the name of the property, the second argument as the old value and the third argument as the new value.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | object</span></p> <p>An object handle for the watch. The unwatch method of this object can be used to discontinue watching this property: </p> <pre><code>var watchHandle = obj.watch(\"foo\", callback);\nwatchHandle.unwatch(); // callback won't be called now</code></pre><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/Stateful.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/Stateful.html</a>\n  </p>\n</div>\n","dojo/store/api/store":"<h1>dojo/store/api/Store</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>This is an abstract API that data provider implementations conform to. This file defines methods signatures and intentionally leaves all the methods unimplemented. For more information on the , please visit: <a href=\"http://dojotoolkit.org/reference-guide/dojo/store.html\">http://dojotoolkit.org/reference-guide/dojo/store.html</a> Every method and property is optional, and is only needed if the functionality it provides is required. Every method may return a promise for the specified return value if the execution of the operation is asynchronous (except for query() which already defines an async return value).</p>             <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_api_Store_idProperty\">\n<span class=\"stringIcon\">idProperty</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"store\" class=\"jsdoc-link\">dojo/store/api/Store</a> </p> <div class=\"jsdoc-summary\">\n<p>If the store has a single primary key, this indicates the property to use as the identity property. The values of this property should be unique.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_api_Store_queryEngine\">\n<span class=\"functionIcon\">queryEngine</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"store\" class=\"jsdoc-link\">dojo/store/api/Store</a> </p> <div class=\"jsdoc-summary\">\n<p>If the store can be queried locally (on the client side in JS), this defines the query engine to use for querying the data store. This takes a query and query options and returns a function that can execute the provided query on a JavaScript array. The queryEngine may be replace to provide more sophisticated querying capabilities. For example: </p> <pre><code>var query = store.queryEngine({foo:\"bar\"}, {count:10});\nquery(someArray) -&gt; filtered array</code></pre> <p>The returned query function may have a \"matches\" property that can be </p> <p>used to determine if an object matches the query. For example: </p> <pre><code>query.matches({id:\"some-object\", foo:\"bar\"}) -&gt; true\nquery.matches({id:\"some-object\", foo:\"something else\"}) -&gt; false</code></pre> </div>    <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_api_Store_add\">\n<span class=\"functionIcon\">add</span><span class=\"parameters\">(object,directives)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"store\" class=\"jsdoc-link\">dojo/store/api/Store</a> </p> <p>Creates an object, throws an error if the object already exists</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">object</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>The object to store.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">directives</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"store.putdirectives\">dojo/store/api/Store.PutDirectives</a></td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Additional directives for creating objects.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Number|String</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_api_Store_get\">\n<span class=\"functionIcon\">get</span><span class=\"parameters\">(id)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"store\" class=\"jsdoc-link\">dojo/store/api/Store</a> </p> <p>Retrieves an object by its identity</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">id</td> <td class=\"jsdoc-param-type\">Number</td> <td class=\"jsdoc-param-description\">\n<p>The identity to use to lookup the object</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Object</span></p> <p>The object in the store that matches the given id.</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_api_Store_getChildren\">\n<span class=\"functionIcon\">getChildren</span><span class=\"parameters\">(parent,options)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"store\" class=\"jsdoc-link\">dojo/store/api/Store</a> </p> <p>Retrieves the children of an object.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">parent</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>The object to find the children of.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">options</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"store.queryoptions\">dojo/store/api/Store.QueryOptions</a></td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Additional options to apply to the retrieval of the children.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\"><a class=\"jsdoc-link\" href=\"store.queryresults\">dojo/store/api/Store.QueryResults</a></span></p> <p>A result set of the children of the parent object.</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_api_Store_getIdentity\">\n<span class=\"functionIcon\">getIdentity</span><span class=\"parameters\">(object)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"store\" class=\"jsdoc-link\">dojo/store/api/Store</a> </p> <p>Returns an object's identity</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">object</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>The object to get the identity from</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">String|Number</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_api_Store_getMetadata\">\n<span class=\"functionIcon\">getMetadata</span><span class=\"parameters\">(object)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"store\" class=\"jsdoc-link\">dojo/store/api/Store</a> </p> <p>Returns any metadata about the object. This may include attribution, cache directives, history, or version information.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">object</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>The object to return metadata for.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Object</span></p> <p>An object containing metadata.</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_api_Store_put\">\n<span class=\"functionIcon\">put</span><span class=\"parameters\">(object,directives)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"store\" class=\"jsdoc-link\">dojo/store/api/Store</a> </p> <p>Stores an object</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">object</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>The object to store.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">directives</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"store.putdirectives\">dojo/store/api/Store.PutDirectives</a></td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Additional directives for storing objects.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Number|String</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_api_Store_PutDirectives\">\n<span class=\"functionIcon\">PutDirectives</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"store\" class=\"jsdoc-link\">dojo/store/api/Store</a> </p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_api_Store_query\">\n<span class=\"functionIcon\">query</span><span class=\"parameters\">(query,options)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"store\" class=\"jsdoc-link\">dojo/store/api/Store</a> </p> <p>Queries the store for objects. This does not alter the store, but returns a set of data from the store.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">query</td> <td class=\"jsdoc-param-type\">String | Object | Function</td> <td class=\"jsdoc-param-description\">\n<p>The query to use for retrieving objects from the store.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">options</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"store.queryoptions\">dojo/store/api/Store.QueryOptions</a></td> <td class=\"jsdoc-param-description\">\n<p>The optional arguments to apply to the resultset.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\"><a class=\"jsdoc-link\" href=\"store.queryresults\">dojo/store/api/Store.QueryResults</a></span></p> <p>The results of the query, extended with iterative methods. </p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Given the following store: </p> <p>...find all items where \"prime\" is true: </p> <pre><code>store.query({ prime: true }).forEach(function(object){\n    // handle each object\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_api_Store_QueryOptions\">\n<span class=\"functionIcon\">QueryOptions</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"store\" class=\"jsdoc-link\">dojo/store/api/Store</a> </p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_api_Store_QueryResults\">\n<span class=\"functionIcon\">QueryResults</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"store\" class=\"jsdoc-link\">dojo/store/api/Store</a> </p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_api_Store_remove\">\n<span class=\"functionIcon\">remove</span><span class=\"parameters\">(id)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"store\" class=\"jsdoc-link\">dojo/store/api/Store</a> </p> <p>Deletes an object by its identity</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">id</td> <td class=\"jsdoc-param-type\">Number</td> <td class=\"jsdoc-param-description\">\n<p>The identity to use to delete the object</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_api_Store_SortInformation\">\n<span class=\"functionIcon\">SortInformation</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"store\" class=\"jsdoc-link\">dojo/store/api/Store</a> </p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_api_Store_transaction\">\n<span class=\"functionIcon\">transaction</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"store\" class=\"jsdoc-link\">dojo/store/api/Store</a> </p> <p>Starts a new transaction. Note that a store user might not call transaction() prior to using put, delete, etc. in which case these operations effectively could be thought of as \"auto-commit\" style actions.</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\"><a class=\"jsdoc-link\" href=\"store.transaction\">dojo/store/api/Store.Transaction</a></span></p> <p>This represents the new current transaction.</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_api_Store_Transaction\">\n<span class=\"functionIcon\">Transaction</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"store\" class=\"jsdoc-link\">dojo/store/api/Store</a> </p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/store/api/Store.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/store/api/Store.html</a>\n  </p>\n</div>\n","dojo/store/api/store.queryresults":"<h1>dojo/store/api/Store.QueryResults</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>This is an object returned from query() calls that provides access to the results of a query. Queries may be executed asynchronously.</p>             <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_api_Store_QueryResults_total\">\n<span class=\"numberIcon\">total</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"store\" class=\"jsdoc-link\">dojo/store/api/Store</a> </p> <div class=\"jsdoc-summary\">\n<p>This property should be included in if the query options included the \"count\" property limiting the result set. This property indicates the total number of objects matching the query (as if \"start\" and \"count\" weren't present). This may be a promise if the query is asynchronous.</p> </div>    <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_api_Store_QueryResults_filter\">\n<span class=\"functionIcon\">filter</span><span class=\"parameters\">(callback,thisObject)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"store\" class=\"jsdoc-link\">dojo/store/api/Store</a> </p> <p>Filters the query results, based on <a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/filter\">https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/filter</a>. Note that this may executed asynchronously. The callback may be called after this function returns.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">callback</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\">\n<p>Function that is called for each object in the query results</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">thisObject</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\">\n<p>The object to use as |this| in the callback.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\"><a class=\"jsdoc-link\" href=\"store.queryresults\">dojo/store/api/Store.QueryResults</a></span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_api_Store_QueryResults_forEach\">\n<span class=\"functionIcon\">forEach</span><span class=\"parameters\">(callback,thisObject)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"store\" class=\"jsdoc-link\">dojo/store/api/Store</a> </p> <p>Iterates over the query results, based on <a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/forEach\">https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/forEach</a>. Note that this may executed asynchronously. The callback may be called after this function returns.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">callback</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\">\n<p>Function that is called for each object in the query results</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">thisObject</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\">\n<p>The object to use as |this| in the callback.</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_api_Store_QueryResults_map\">\n<span class=\"functionIcon\">map</span><span class=\"parameters\">(callback,thisObject)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"store\" class=\"jsdoc-link\">dojo/store/api/Store</a> </p> <p>Maps the query results, based on <a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/map\">https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/map</a>. Note that this may executed asynchronously. The callback may be called after this function returns.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">callback</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\">\n<p>Function that is called for each object in the query results</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">thisObject</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\">\n<p>The object to use as |this| in the callback.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\"><a class=\"jsdoc-link\" href=\"store.queryresults\">dojo/store/api/Store.QueryResults</a></span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_api_Store_QueryResults_observe\">\n<span class=\"functionIcon\">observe</span><span class=\"parameters\">(listener,includeAllUpdates)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"store\" class=\"jsdoc-link\">dojo/store/api/Store</a> </p> <p>This registers a callback for notification of when data is modified in the query results. This is an optional method, and is usually provided by dojo/store/Observable.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">listener</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\">\n<p>The listener function is called when objects in the query results are modified to affect the query result. The listener function is called with the following arguments: </p> <pre><code>listener(object, removedFrom, insertedInto);</code></pre> <ul> <li>The object parameter indicates the object that was create, modified, or deleted.</li> <li>The removedFrom parameter indicates the index in the result array where the object used to be. If the value is -1, then the object is an addition to this result set (due to a new object being created, or changed such that it is a part of the result set).</li> <li>The insertedInto parameter indicates the index in the result array where the object should be now. If the value is -1, then the object is a removal from this result set (due to an object being deleted, or changed such that it is not a part of the result set).</li> </ul> </td> </tr> <tr> <td class=\"jsdoc-param-name\">includeAllUpdates</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\">\n<p>This indicates whether or not to include object updates that do not affect the inclusion or order of the object in the query results. By default this is false, which means that if any object is updated in such a way that it remains in the result set and it's position in result sets is not affected, then the listener will not be fired.</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_api_Store_QueryResults_then\">\n<span class=\"functionIcon\">then</span><span class=\"parameters\">(callback,errorHandler)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"store\" class=\"jsdoc-link\">dojo/store/api/Store</a> </p> <p>This registers a callback for when the query is complete, if the query is asynchronous. This is an optional method, and may not be present for synchronous queries.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">callback</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\">\n<p>This is called when the query is completed successfully, and is passed a single argument that is an array representing the query results.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">errorHandler</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\">\n<p>This is called if the query failed, and is passed a single argument that is the error for the failure.</p> </td> </tr> </table><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/store/api/Store.QueryResults.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/store/api/Store.QueryResults.html</a>\n  </p>\n</div>\n","dojo/store/api/store.sortinformation":"<h1>dojo/store/api/Store.SortInformation</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>An object describing what attribute to sort on, and the direction of the sort.</p>           <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_api_Store_SortInformation_attribute\">\n<span class=\"stringIcon\">attribute</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"store\" class=\"jsdoc-link\">dojo/store/api/Store</a> </p> <div class=\"jsdoc-summary\">\n<p>The name of the attribute to sort on.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_api_Store_SortInformation_descending\">\n<span class=\"booleanIcon\">descending</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"store\" class=\"jsdoc-link\">dojo/store/api/Store</a> </p> <div class=\"jsdoc-summary\">\n<p>The direction of the sort. Default is false.</p> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/store/api/Store.SortInformation.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/store/api/Store.SortInformation.html</a>\n  </p>\n</div>\n","dojo/store/api/store.transaction":"<h1>dojo/store/api/Store.Transaction</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>This is an object returned from transaction() calls that represents the current transaction.</p>           <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_api_Store_Transaction_abort\">\n<span class=\"functionIcon\">abort</span><span class=\"parameters\">(callback,thisObject)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"store\" class=\"jsdoc-link\">dojo/store/api/Store</a> </p> <p>Aborts the transaction. This may throw an error if it fails. Of if the operation is asynchronous, it may return a promise that represents the eventual success or failure of the abort.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">callback</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">thisObject</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_api_Store_Transaction_commit\">\n<span class=\"functionIcon\">commit</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"store\" class=\"jsdoc-link\">dojo/store/api/Store</a> </p> <p>Commits the transaction. This may throw an error if it fails. Of if the operation is asynchronous, it may return a promise that represents the eventual success or failure of the commit.</p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/store/api/Store.Transaction.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/store/api/Store.Transaction.html</a>\n  </p>\n</div>\n","dojo/robot":"<h1>dojo/robot</h1>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/robot.html\" target=\"_blank\">dojo/robot reference documentation</a> for more information.</p>              <h2 id=\"properties\">Properties</h2>            <h3 class=\"jsdoc-title\" id=\"1_10dojo_robot_doc\">\n<span class=\"objectIcon\">doc</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"robotx\" class=\"jsdoc-link\">dojo/robotx</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_robot_mouseWheelSize\">\n<span class=\"numberIcon\">mouseWheelSize</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"http://dojotoolkit.org/api/1.10/doh/robot\" class=\"jsdoc-link\">doh/robot</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_robot_window\">\n<span class=\"objectIcon\">window</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"robotx\" class=\"jsdoc-link\">dojo/robotx</a> </p>    <h2 id=\"methods\">Methods</h2>                  <h3 class=\"jsdoc-title\" id=\"1_10dojo_robot_initRobot\">\n<span class=\"functionIcon\">initRobot</span><span class=\"parameters\">(url)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"robotx\" class=\"jsdoc-link\">dojo/robotx</a> </p> <p>Opens the application at the specified URL for testing, redirecting dojo to point to the application environment instead of the test environment.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">url</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>URL to open. Any of the test's dojo.doc calls (e.g. dojo.byId()), and any dijit.registry calls (e.g. dijit.byId()) will point to elements and widgets inside this application.</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_robot_keyDown\">\n<span class=\"functionIcon\">keyDown</span><span class=\"parameters\">(charOrCode,delay)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"http://dojotoolkit.org/api/1.10/doh/robot\" class=\"jsdoc-link\">doh/robot</a> </p> <p>Holds down a single key, like SHIFT or 'a'.</p>  <p>Holds down a single key, like SHIFT or 'a'.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">charOrCode</td> <td class=\"jsdoc-param-type\">Integer</td> <td class=\"jsdoc-param-description\">\n<p>char/JS keyCode/dojo.keys.* constant for the key you want to hold down Warning: holding down a shifted key, like 'A', can have unpredictable results.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">delay</td> <td class=\"jsdoc-param-type\">Integer</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Delay, in milliseconds, to wait before firing. The delay is a delta with respect to the previous automation call. For example, the following code ends after 600ms: </p> <pre><code>robot.mouseClick({left: true}, 100) // first call; wait 100ms\nrobot.typeKeys(\"dij\", 500) // 500ms AFTER previous call; 600ms in all</code></pre> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>to hold down the 'a' key immediately, call robot.keyDown('a')</p> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_robot_keyPress\">\n<span class=\"functionIcon\">keyPress</span><span class=\"parameters\">(charOrCode,delay,modifiers,asynchronous)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"http://dojotoolkit.org/api/1.10/doh/robot\" class=\"jsdoc-link\">doh/robot</a> </p> <p>Types a key combination, like SHIFT-TAB.</p>  <p>Types a key combination, like SHIFT-TAB.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">charOrCode</td> <td class=\"jsdoc-param-type\">Integer</td> <td class=\"jsdoc-param-description\">\n<p>char/JS keyCode/dojo.keys.* constant for the key you want to press</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">delay</td> <td class=\"jsdoc-param-type\">Integer</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Delay, in milliseconds, to wait before firing. The delay is a delta with respect to the previous automation call. For example, the following code ends after 600ms: </p> <pre><code>robot.mouseClick({left: true}, 100) // first call; wait 100ms\nrobot.typeKeys(\"dij\", 500) // 500ms AFTER previous call; 600ms in all</code></pre> </td> </tr> <tr> <td class=\"jsdoc-param-name\">modifiers</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>JSON object that represents all of the modifier keys being pressed. It takes the following Boolean attributes: </p> <ul> <li>shift</li> <li>alt</li> <li>ctrl</li> <li>meta</li> </ul> </td> </tr> <tr> <td class=\"jsdoc-param-name\">asynchronous</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\">\n<p>If true, the delay happens asynchronously and immediately, outside of the browser's JavaScript thread and any previous calls. This is useful for interacting with the browser's modal dialogs.</p> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>to press shift-tab immediately, call robot.keyPress(dojo.keys.TAB, 0, {shift: true})</p> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_robot_keyUp\">\n<span class=\"functionIcon\">keyUp</span><span class=\"parameters\">(charOrCode,delay)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"http://dojotoolkit.org/api/1.10/doh/robot\" class=\"jsdoc-link\">doh/robot</a> </p> <p>Releases a single key, like SHIFT or 'a'.</p>  <p>Releases a single key, like SHIFT or 'a'.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">charOrCode</td> <td class=\"jsdoc-param-type\">Integer</td> <td class=\"jsdoc-param-description\">\n<p>char/JS keyCode/dojo.keys.* constant for the key you want to release Warning: releasing a shifted key, like 'A', can have unpredictable results.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">delay</td> <td class=\"jsdoc-param-type\">Integer</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Delay, in milliseconds, to wait before firing. The delay is a delta with respect to the previous automation call. For example, the following code ends after 600ms: </p> <pre><code>robot.mouseClick({left: true}, 100) // first call; wait 100ms\nrobot.typeKeys(\"dij\", 500) // 500ms AFTER previous call; 600ms in all</code></pre> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>to release the 'a' key immediately, call robot.keyUp('a')</p> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_robot_killRobot\">\n<span class=\"functionIcon\">killRobot</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"http://dojotoolkit.org/api/1.10/doh/robot\" class=\"jsdoc-link\">doh/robot</a> </p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_robot_mouseClick\">\n<span class=\"functionIcon\">mouseClick</span><span class=\"parameters\">(buttons,delay)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"http://dojotoolkit.org/api/1.10/doh/robot\" class=\"jsdoc-link\">doh/robot</a> </p> <p>Convenience function to do a press/release. See robot.mousePress for more info.</p>  <p>Convenience function to do a press/release. See robot.mousePress for more info.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">buttons</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">delay</td> <td class=\"jsdoc-param-type\">Integer</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_robot_mouseMove\">\n<span class=\"functionIcon\">mouseMove</span><span class=\"parameters\">(x,y,delay,duration,absolute)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"http://dojotoolkit.org/api/1.10/doh/robot\" class=\"jsdoc-link\">doh/robot</a> </p> <p>Moves the mouse to the specified x,y offset relative to the viewport.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">x</td> <td class=\"jsdoc-param-type\">Number</td> <td class=\"jsdoc-param-description\">\n<p>x offset relative to the viewport, in pixels, to move the mouse.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">y</td> <td class=\"jsdoc-param-type\">Number</td> <td class=\"jsdoc-param-description\">\n<p>y offset relative to the viewport, in pixels, to move the mouse.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">delay</td> <td class=\"jsdoc-param-type\">Integer</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Delay, in milliseconds, to wait before firing. The delay is a delta with respect to the previous automation call. For example, the following code ends after 600ms: </p> <pre><code>robot.mouseClick({left: true}, 100) // first call; wait 100ms\nrobot.typeKeys(\"dij\", 500) // 500ms AFTER previous call; 600ms in all</code></pre> </td> </tr> <tr> <td class=\"jsdoc-param-name\">duration</td> <td class=\"jsdoc-param-type\">Integer</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Approximate time Robot will spend moving the mouse The default is 100ms. This also affects how many mousemove events will be generated, which is the log of the duration.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">absolute</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\">\n<p>Boolean indicating whether the x and y values are absolute coordinates. If false, then mouseMove expects that the x,y will be relative to the window. (clientX/Y) If true, then mouseMove expects that the x,y will be absolute. (pageX/Y)</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_robot_mouseMoveAt\">\n<span class=\"functionIcon\">mouseMoveAt</span><span class=\"parameters\">(node,delay,duration,offsetX,offsetY)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"robot\" class=\"jsdoc-link\">dojo/robot</a> </p> <p>Moves the mouse over the specified node at the specified relative x,y offset.</p>  <p>Moves the mouse over the specified node at the specified relative x,y offset. If you do not specify an offset, mouseMove will default to move to the middle of the node. Example: to move the mouse over a ComboBox's down arrow node, call doh.mouseMoveAt(dijit.byId('setvaluetest').downArrowNode);</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">String | DOMNode | Function</td> <td class=\"jsdoc-param-description\">\n<p>The id of the node, or the node itself, to move the mouse to. If you pass an id or a function that returns a node, the node will not be evaluated until the movement executes. This is useful if you need to move the mouse to an node that is not yet present.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">delay</td> <td class=\"jsdoc-param-type\">Integer, optional</td> <td class=\"jsdoc-param-description\">\n<p>Delay, in milliseconds, to wait before firing. The delay is a delta with respect to the previous automation call. For example, the following code ends after 600ms: </p> <pre><code>robot.mouseClick({left:true}, 100) // first call; wait 100ms\nrobot.typeKeys(\"dij\", 500) // 500ms AFTER previous call; 600ms in all</code></pre> </td> </tr> <tr> <td class=\"jsdoc-param-name\">duration</td> <td class=\"jsdoc-param-type\">Integer, optional</td> <td class=\"jsdoc-param-description\">\n<p>Approximate time Robot will spend moving the mouse The default is 100ms.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">offsetX</td> <td class=\"jsdoc-param-type\">Number, optional</td> <td class=\"jsdoc-param-description\">\n<p>x offset relative to the node, in pixels, to move the mouse. The default is half the node's width.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">offsetY</td> <td class=\"jsdoc-param-type\">Number, optional</td> <td class=\"jsdoc-param-description\">\n<p>y offset relative to the node, in pixels, to move the mouse. The default is half the node's height.</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_robot_mouseMoveTo\">\n<span class=\"functionIcon\">mouseMoveTo</span><span class=\"parameters\">(point,delay,duration,absolute)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"http://dojotoolkit.org/api/1.10/doh/robot\" class=\"jsdoc-link\">doh/robot</a> </p> <p>Move the mouse from the current position to the specified point. Delays reading contents point until queued command starts running. See mouseMove() for details.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">point</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>x, y position relative to viewport, or if absolute == true, to document</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">delay</td> <td class=\"jsdoc-param-type\">Integer</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> <tr> <td class=\"jsdoc-param-name\">duration</td> <td class=\"jsdoc-param-type\">Integer</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> <tr> <td class=\"jsdoc-param-name\">absolute</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_robot_mousePress\">\n<span class=\"functionIcon\">mousePress</span><span class=\"parameters\">(buttons,delay)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"http://dojotoolkit.org/api/1.10/doh/robot\" class=\"jsdoc-link\">doh/robot</a> </p> <p>Presses mouse buttons.</p>  <p>Presses the mouse buttons you pass as true. Example: to press the left mouse button, pass {left: true}. Mouse buttons you don't specify keep their previous pressed state.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">buttons</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>JSON object that represents all of the mouse buttons being pressed. It takes the following Boolean attributes: </p> <ul> <li>left</li> <li>middle</li> <li>right</li> </ul> </td> </tr> <tr> <td class=\"jsdoc-param-name\">delay</td> <td class=\"jsdoc-param-type\">Integer</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Delay, in milliseconds, to wait before firing. The delay is a delta with respect to the previous automation call. For example, the following code ends after 600ms: </p> <pre><code>robot.mouseClick({left: true}, 100) // first call; wait 100ms\nrobot.typeKeys(\"dij\", 500) // 500ms AFTER previous call; 600ms in all</code></pre> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_robot_mouseRelease\">\n<span class=\"functionIcon\">mouseRelease</span><span class=\"parameters\">(buttons,delay)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"http://dojotoolkit.org/api/1.10/doh/robot\" class=\"jsdoc-link\">doh/robot</a> </p> <p>Releases mouse buttons.</p>  <p>Releases the mouse buttons you pass as true. Example: to release the left mouse button, pass {left: true}. Mouse buttons you don't specify keep their previous pressed state. See robot.mousePress for more info.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">buttons</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">delay</td> <td class=\"jsdoc-param-type\">Integer</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_robot_mouseWheel\">\n<span class=\"functionIcon\">mouseWheel</span><span class=\"parameters\">(wheelAmt,delay,duration)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"http://dojotoolkit.org/api/1.10/doh/robot\" class=\"jsdoc-link\">doh/robot</a> </p> <p>Spins the mouse wheel.</p>  <p>Spins the wheel wheelAmt \"notches.\" Negative wheelAmt scrolls up/away from the user. Positive wheelAmt scrolls down/toward the user. Note: this will all happen in one event. Warning: the size of one mouse wheel notch is an OS setting. You can access this size from robot.mouseWheelSize</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">wheelAmt</td> <td class=\"jsdoc-param-type\">Number</td> <td class=\"jsdoc-param-description\">\n<p>Number of notches to spin the wheel. Negative wheelAmt scrolls up/away from the user. Positive wheelAmt scrolls down/toward the user.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">delay</td> <td class=\"jsdoc-param-type\">Integer</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Delay, in milliseconds, to wait before firing. The delay is a delta with respect to the previous automation call. For example, the following code ends after 600ms: robot.mouseClick({left: true}, 100) // first call; wait 100ms robot.typeKeys(\"dij\", 500) // 500ms AFTER previous call; 600ms in all</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">duration</td> <td class=\"jsdoc-param-type\">Integer</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Approximate time Robot will spend moving the mouse By default, the Robot will wheel the mouse as fast as possible.</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_robot_scrollIntoView\">\n<span class=\"functionIcon\">scrollIntoView</span><span class=\"parameters\">(node,delay)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"robot\" class=\"jsdoc-link\">dojo/robot</a> </p> <p>Scroll the passed node into view, if it is not.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">String | DOMNode | Function</td> <td class=\"jsdoc-param-description\">\n<p>The id of the node, or the node itself, to move the mouse to. If you pass an id or a function that returns a node, the node will not be evaluated until the movement executes. This is useful if you need to move the mouse to an node that is not yet present.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">delay</td> <td class=\"jsdoc-param-type\">Number, optional</td> <td class=\"jsdoc-param-description\">\n<p>Delay, in milliseconds, to wait before firing. The delay is a delta with respect to the previous automation call.</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_robot_sequence\">\n<span class=\"functionIcon\">sequence</span><span class=\"parameters\">(f,delay,duration)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"http://dojotoolkit.org/api/1.10/doh/robot\" class=\"jsdoc-link\">doh/robot</a> </p> <p>Defer an action by adding it to the robot's incrementally delayed queue of actions to execute.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">f</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\">\n<p>A function containing actions you want to defer. It can return a Promise to delay further actions.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">delay</td> <td class=\"jsdoc-param-type\">Integer</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Delay, in milliseconds, to wait before firing. The delay is a delta with respect to the previous automation call. For example, the following code ends after 600ms: </p> <pre><code>robot.mouseClick({left: true}, 100) // first call; wait 100ms\nrobot.typeKeys(\"dij\", 500) // 500ms AFTER previous call; 600ms in all</code></pre> </td> </tr> <tr> <td class=\"jsdoc-param-name\">duration</td> <td class=\"jsdoc-param-type\">Integer</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Delay to wait after firing.</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_robot_setClipboard\">\n<span class=\"functionIcon\">setClipboard</span><span class=\"parameters\">(data,format)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"http://dojotoolkit.org/api/1.10/doh/robot\" class=\"jsdoc-link\">doh/robot</a> </p> <p>Set clipboard content.</p>  <p>Set data as clipboard content, overriding anything already there. The data will be put to the clipboard using the given format.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">data</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>New clipboard content to set</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">format</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Set this to \"text/html\" to put richtext to the clipboard. Otherwise, data is treated as plaintext. By default, plaintext is used.</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_robot_startRobot\">\n<span class=\"functionIcon\">startRobot</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"http://dojotoolkit.org/api/1.10/doh/robot\" class=\"jsdoc-link\">doh/robot</a> </p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_robot_typeKeys\">\n<span class=\"functionIcon\">typeKeys</span><span class=\"parameters\">(chars,delay,duration)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"http://dojotoolkit.org/api/1.10/doh/robot\" class=\"jsdoc-link\">doh/robot</a> </p> <p>Types a string of characters in order, or types a dojo.keys.* constant.</p>  <p>Types a string of characters in order, or types a dojo.keys.* constant.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">chars</td> <td class=\"jsdoc-param-type\">String | Number</td> <td class=\"jsdoc-param-description\">\n<p>String of characters to type, or a dojo.keys.* constant</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">delay</td> <td class=\"jsdoc-param-type\">Integer</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Delay, in milliseconds, to wait before firing. The delay is a delta with respect to the previous automation call. For example, the following code ends after 600ms: </p> <pre><code>robot.mouseClick({left: true}, 100) // first call; wait 100ms\nrobot.typeKeys(\"dij\", 500) // 500ms AFTER previous call; 600ms in all</code></pre> </td> </tr> <tr> <td class=\"jsdoc-param-name\">duration</td> <td class=\"jsdoc-param-type\">Integer</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Time, in milliseconds, to spend pressing all of the keys. The default is (string length)*50 ms.</p> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>robot.typeKeys(\"dijit.ed\", 500);</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_robot_waitForPageToLoad\">\n<span class=\"functionIcon\">waitForPageToLoad</span><span class=\"parameters\">(submitActions)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"robotx\" class=\"jsdoc-link\">dojo/robotx</a> </p> <p>Notifies DOH that the doh.robot is about to make a page change in the application it is driving, returning a doh.Deferred object the user should return in their runTest function as part of a DOH test.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">submitActions</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\">\n<p>The doh.robot will execute the actions the test passes into the submitActions argument (like clicking the submit button), expecting these actions to create a page change (like a form submit). After these actions execute and the resulting page loads, the next test will start.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">instance</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>runTest: function(){\n    return waitForPageLoad(function(){ doh.robot.keyPress(keys.ENTER, 500); });\n}</code></pre> </div> </div>    <h2 id=\"events\">Events</h2><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/robot.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/robot.html</a>\n  </p>\n</div>\n","dojo/robotx":"<h1>dojo/robotx</h1>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/robotx.html\" target=\"_blank\">dojo/robotx reference documentation</a> for more information.</p>              <h2 id=\"properties\">Properties</h2>            <h3 class=\"jsdoc-title\" id=\"1_10dojo_robotx_doc\">\n<span class=\"objectIcon\">doc</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"robotx\" class=\"jsdoc-link\">dojo/robotx</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_robotx_mouseWheelSize\">\n<span class=\"numberIcon\">mouseWheelSize</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"http://dojotoolkit.org/api/1.10/doh/robot\" class=\"jsdoc-link\">doh/robot</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_robotx_window\">\n<span class=\"objectIcon\">window</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"robotx\" class=\"jsdoc-link\">dojo/robotx</a> </p>    <h2 id=\"methods\">Methods</h2>                  <h3 class=\"jsdoc-title\" id=\"1_10dojo_robotx_initRobot\">\n<span class=\"functionIcon\">initRobot</span><span class=\"parameters\">(url)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"robotx\" class=\"jsdoc-link\">dojo/robotx</a> </p> <p>Opens the application at the specified URL for testing, redirecting dojo to point to the application environment instead of the test environment.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">url</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>URL to open. Any of the test's dojo.doc calls (e.g. dojo.byId()), and any dijit.registry calls (e.g. dijit.byId()) will point to elements and widgets inside this application.</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_robotx_keyDown\">\n<span class=\"functionIcon\">keyDown</span><span class=\"parameters\">(charOrCode,delay)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"http://dojotoolkit.org/api/1.10/doh/robot\" class=\"jsdoc-link\">doh/robot</a> </p> <p>Holds down a single key, like SHIFT or 'a'.</p>  <p>Holds down a single key, like SHIFT or 'a'.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">charOrCode</td> <td class=\"jsdoc-param-type\">Integer</td> <td class=\"jsdoc-param-description\">\n<p>char/JS keyCode/dojo.keys.* constant for the key you want to hold down Warning: holding down a shifted key, like 'A', can have unpredictable results.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">delay</td> <td class=\"jsdoc-param-type\">Integer</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Delay, in milliseconds, to wait before firing. The delay is a delta with respect to the previous automation call. For example, the following code ends after 600ms: </p> <pre><code>robot.mouseClick({left: true}, 100) // first call; wait 100ms\nrobot.typeKeys(\"dij\", 500) // 500ms AFTER previous call; 600ms in all</code></pre> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>to hold down the 'a' key immediately, call robot.keyDown('a')</p> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_robotx_keyPress\">\n<span class=\"functionIcon\">keyPress</span><span class=\"parameters\">(charOrCode,delay,modifiers,asynchronous)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"http://dojotoolkit.org/api/1.10/doh/robot\" class=\"jsdoc-link\">doh/robot</a> </p> <p>Types a key combination, like SHIFT-TAB.</p>  <p>Types a key combination, like SHIFT-TAB.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">charOrCode</td> <td class=\"jsdoc-param-type\">Integer</td> <td class=\"jsdoc-param-description\">\n<p>char/JS keyCode/dojo.keys.* constant for the key you want to press</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">delay</td> <td class=\"jsdoc-param-type\">Integer</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Delay, in milliseconds, to wait before firing. The delay is a delta with respect to the previous automation call. For example, the following code ends after 600ms: </p> <pre><code>robot.mouseClick({left: true}, 100) // first call; wait 100ms\nrobot.typeKeys(\"dij\", 500) // 500ms AFTER previous call; 600ms in all</code></pre> </td> </tr> <tr> <td class=\"jsdoc-param-name\">modifiers</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>JSON object that represents all of the modifier keys being pressed. It takes the following Boolean attributes: </p> <ul> <li>shift</li> <li>alt</li> <li>ctrl</li> <li>meta</li> </ul> </td> </tr> <tr> <td class=\"jsdoc-param-name\">asynchronous</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\">\n<p>If true, the delay happens asynchronously and immediately, outside of the browser's JavaScript thread and any previous calls. This is useful for interacting with the browser's modal dialogs.</p> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>to press shift-tab immediately, call robot.keyPress(dojo.keys.TAB, 0, {shift: true})</p> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_robotx_keyUp\">\n<span class=\"functionIcon\">keyUp</span><span class=\"parameters\">(charOrCode,delay)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"http://dojotoolkit.org/api/1.10/doh/robot\" class=\"jsdoc-link\">doh/robot</a> </p> <p>Releases a single key, like SHIFT or 'a'.</p>  <p>Releases a single key, like SHIFT or 'a'.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">charOrCode</td> <td class=\"jsdoc-param-type\">Integer</td> <td class=\"jsdoc-param-description\">\n<p>char/JS keyCode/dojo.keys.* constant for the key you want to release Warning: releasing a shifted key, like 'A', can have unpredictable results.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">delay</td> <td class=\"jsdoc-param-type\">Integer</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Delay, in milliseconds, to wait before firing. The delay is a delta with respect to the previous automation call. For example, the following code ends after 600ms: </p> <pre><code>robot.mouseClick({left: true}, 100) // first call; wait 100ms\nrobot.typeKeys(\"dij\", 500) // 500ms AFTER previous call; 600ms in all</code></pre> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>to release the 'a' key immediately, call robot.keyUp('a')</p> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_robotx_killRobot\">\n<span class=\"functionIcon\">killRobot</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"http://dojotoolkit.org/api/1.10/doh/robot\" class=\"jsdoc-link\">doh/robot</a> </p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_robotx_mouseClick\">\n<span class=\"functionIcon\">mouseClick</span><span class=\"parameters\">(buttons,delay)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"http://dojotoolkit.org/api/1.10/doh/robot\" class=\"jsdoc-link\">doh/robot</a> </p> <p>Convenience function to do a press/release. See robot.mousePress for more info.</p>  <p>Convenience function to do a press/release. See robot.mousePress for more info.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">buttons</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">delay</td> <td class=\"jsdoc-param-type\">Integer</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_robotx_mouseMove\">\n<span class=\"functionIcon\">mouseMove</span><span class=\"parameters\">(x,y,delay,duration,absolute)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"http://dojotoolkit.org/api/1.10/doh/robot\" class=\"jsdoc-link\">doh/robot</a> </p> <p>Moves the mouse to the specified x,y offset relative to the viewport.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">x</td> <td class=\"jsdoc-param-type\">Number</td> <td class=\"jsdoc-param-description\">\n<p>x offset relative to the viewport, in pixels, to move the mouse.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">y</td> <td class=\"jsdoc-param-type\">Number</td> <td class=\"jsdoc-param-description\">\n<p>y offset relative to the viewport, in pixels, to move the mouse.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">delay</td> <td class=\"jsdoc-param-type\">Integer</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Delay, in milliseconds, to wait before firing. The delay is a delta with respect to the previous automation call. For example, the following code ends after 600ms: </p> <pre><code>robot.mouseClick({left: true}, 100) // first call; wait 100ms\nrobot.typeKeys(\"dij\", 500) // 500ms AFTER previous call; 600ms in all</code></pre> </td> </tr> <tr> <td class=\"jsdoc-param-name\">duration</td> <td class=\"jsdoc-param-type\">Integer</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Approximate time Robot will spend moving the mouse The default is 100ms. This also affects how many mousemove events will be generated, which is the log of the duration.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">absolute</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\">\n<p>Boolean indicating whether the x and y values are absolute coordinates. If false, then mouseMove expects that the x,y will be relative to the window. (clientX/Y) If true, then mouseMove expects that the x,y will be absolute. (pageX/Y)</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_robotx_mouseMoveAt\">\n<span class=\"functionIcon\">mouseMoveAt</span><span class=\"parameters\">(node,delay,duration,offsetX,offsetY)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"robot\" class=\"jsdoc-link\">dojo/robot</a> </p> <p>Moves the mouse over the specified node at the specified relative x,y offset.</p>  <p>Moves the mouse over the specified node at the specified relative x,y offset. If you do not specify an offset, mouseMove will default to move to the middle of the node. Example: to move the mouse over a ComboBox's down arrow node, call doh.mouseMoveAt(dijit.byId('setvaluetest').downArrowNode);</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">String | DOMNode | Function</td> <td class=\"jsdoc-param-description\">\n<p>The id of the node, or the node itself, to move the mouse to. If you pass an id or a function that returns a node, the node will not be evaluated until the movement executes. This is useful if you need to move the mouse to an node that is not yet present.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">delay</td> <td class=\"jsdoc-param-type\">Integer, optional</td> <td class=\"jsdoc-param-description\">\n<p>Delay, in milliseconds, to wait before firing. The delay is a delta with respect to the previous automation call. For example, the following code ends after 600ms: </p> <pre><code>robot.mouseClick({left:true}, 100) // first call; wait 100ms\nrobot.typeKeys(\"dij\", 500) // 500ms AFTER previous call; 600ms in all</code></pre> </td> </tr> <tr> <td class=\"jsdoc-param-name\">duration</td> <td class=\"jsdoc-param-type\">Integer, optional</td> <td class=\"jsdoc-param-description\">\n<p>Approximate time Robot will spend moving the mouse The default is 100ms.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">offsetX</td> <td class=\"jsdoc-param-type\">Number, optional</td> <td class=\"jsdoc-param-description\">\n<p>x offset relative to the node, in pixels, to move the mouse. The default is half the node's width.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">offsetY</td> <td class=\"jsdoc-param-type\">Number, optional</td> <td class=\"jsdoc-param-description\">\n<p>y offset relative to the node, in pixels, to move the mouse. The default is half the node's height.</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_robotx_mouseMoveTo\">\n<span class=\"functionIcon\">mouseMoveTo</span><span class=\"parameters\">(point,delay,duration,absolute)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"http://dojotoolkit.org/api/1.10/doh/robot\" class=\"jsdoc-link\">doh/robot</a> </p> <p>Move the mouse from the current position to the specified point. Delays reading contents point until queued command starts running. See mouseMove() for details.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">point</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>x, y position relative to viewport, or if absolute == true, to document</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">delay</td> <td class=\"jsdoc-param-type\">Integer</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> <tr> <td class=\"jsdoc-param-name\">duration</td> <td class=\"jsdoc-param-type\">Integer</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> <tr> <td class=\"jsdoc-param-name\">absolute</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_robotx_mousePress\">\n<span class=\"functionIcon\">mousePress</span><span class=\"parameters\">(buttons,delay)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"http://dojotoolkit.org/api/1.10/doh/robot\" class=\"jsdoc-link\">doh/robot</a> </p> <p>Presses mouse buttons.</p>  <p>Presses the mouse buttons you pass as true. Example: to press the left mouse button, pass {left: true}. Mouse buttons you don't specify keep their previous pressed state.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">buttons</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>JSON object that represents all of the mouse buttons being pressed. It takes the following Boolean attributes: </p> <ul> <li>left</li> <li>middle</li> <li>right</li> </ul> </td> </tr> <tr> <td class=\"jsdoc-param-name\">delay</td> <td class=\"jsdoc-param-type\">Integer</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Delay, in milliseconds, to wait before firing. The delay is a delta with respect to the previous automation call. For example, the following code ends after 600ms: </p> <pre><code>robot.mouseClick({left: true}, 100) // first call; wait 100ms\nrobot.typeKeys(\"dij\", 500) // 500ms AFTER previous call; 600ms in all</code></pre> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_robotx_mouseRelease\">\n<span class=\"functionIcon\">mouseRelease</span><span class=\"parameters\">(buttons,delay)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"http://dojotoolkit.org/api/1.10/doh/robot\" class=\"jsdoc-link\">doh/robot</a> </p> <p>Releases mouse buttons.</p>  <p>Releases the mouse buttons you pass as true. Example: to release the left mouse button, pass {left: true}. Mouse buttons you don't specify keep their previous pressed state. See robot.mousePress for more info.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">buttons</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">delay</td> <td class=\"jsdoc-param-type\">Integer</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_robotx_mouseWheel\">\n<span class=\"functionIcon\">mouseWheel</span><span class=\"parameters\">(wheelAmt,delay,duration)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"http://dojotoolkit.org/api/1.10/doh/robot\" class=\"jsdoc-link\">doh/robot</a> </p> <p>Spins the mouse wheel.</p>  <p>Spins the wheel wheelAmt \"notches.\" Negative wheelAmt scrolls up/away from the user. Positive wheelAmt scrolls down/toward the user. Note: this will all happen in one event. Warning: the size of one mouse wheel notch is an OS setting. You can access this size from robot.mouseWheelSize</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">wheelAmt</td> <td class=\"jsdoc-param-type\">Number</td> <td class=\"jsdoc-param-description\">\n<p>Number of notches to spin the wheel. Negative wheelAmt scrolls up/away from the user. Positive wheelAmt scrolls down/toward the user.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">delay</td> <td class=\"jsdoc-param-type\">Integer</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Delay, in milliseconds, to wait before firing. The delay is a delta with respect to the previous automation call. For example, the following code ends after 600ms: robot.mouseClick({left: true}, 100) // first call; wait 100ms robot.typeKeys(\"dij\", 500) // 500ms AFTER previous call; 600ms in all</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">duration</td> <td class=\"jsdoc-param-type\">Integer</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Approximate time Robot will spend moving the mouse By default, the Robot will wheel the mouse as fast as possible.</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_robotx_scrollIntoView\">\n<span class=\"functionIcon\">scrollIntoView</span><span class=\"parameters\">(node,delay)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"robot\" class=\"jsdoc-link\">dojo/robot</a> </p> <p>Scroll the passed node into view, if it is not.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">String | DOMNode | Function</td> <td class=\"jsdoc-param-description\">\n<p>The id of the node, or the node itself, to move the mouse to. If you pass an id or a function that returns a node, the node will not be evaluated until the movement executes. This is useful if you need to move the mouse to an node that is not yet present.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">delay</td> <td class=\"jsdoc-param-type\">Number, optional</td> <td class=\"jsdoc-param-description\">\n<p>Delay, in milliseconds, to wait before firing. The delay is a delta with respect to the previous automation call.</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_robotx_sequence\">\n<span class=\"functionIcon\">sequence</span><span class=\"parameters\">(f,delay,duration)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"http://dojotoolkit.org/api/1.10/doh/robot\" class=\"jsdoc-link\">doh/robot</a> </p> <p>Defer an action by adding it to the robot's incrementally delayed queue of actions to execute.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">f</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\">\n<p>A function containing actions you want to defer. It can return a Promise to delay further actions.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">delay</td> <td class=\"jsdoc-param-type\">Integer</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Delay, in milliseconds, to wait before firing. The delay is a delta with respect to the previous automation call. For example, the following code ends after 600ms: </p> <pre><code>robot.mouseClick({left: true}, 100) // first call; wait 100ms\nrobot.typeKeys(\"dij\", 500) // 500ms AFTER previous call; 600ms in all</code></pre> </td> </tr> <tr> <td class=\"jsdoc-param-name\">duration</td> <td class=\"jsdoc-param-type\">Integer</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Delay to wait after firing.</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_robotx_setClipboard\">\n<span class=\"functionIcon\">setClipboard</span><span class=\"parameters\">(data,format)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"http://dojotoolkit.org/api/1.10/doh/robot\" class=\"jsdoc-link\">doh/robot</a> </p> <p>Set clipboard content.</p>  <p>Set data as clipboard content, overriding anything already there. The data will be put to the clipboard using the given format.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">data</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>New clipboard content to set</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">format</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Set this to \"text/html\" to put richtext to the clipboard. Otherwise, data is treated as plaintext. By default, plaintext is used.</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_robotx_startRobot\">\n<span class=\"functionIcon\">startRobot</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"http://dojotoolkit.org/api/1.10/doh/robot\" class=\"jsdoc-link\">doh/robot</a> </p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_robotx_typeKeys\">\n<span class=\"functionIcon\">typeKeys</span><span class=\"parameters\">(chars,delay,duration)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"http://dojotoolkit.org/api/1.10/doh/robot\" class=\"jsdoc-link\">doh/robot</a> </p> <p>Types a string of characters in order, or types a dojo.keys.* constant.</p>  <p>Types a string of characters in order, or types a dojo.keys.* constant.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">chars</td> <td class=\"jsdoc-param-type\">String | Number</td> <td class=\"jsdoc-param-description\">\n<p>String of characters to type, or a dojo.keys.* constant</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">delay</td> <td class=\"jsdoc-param-type\">Integer</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Delay, in milliseconds, to wait before firing. The delay is a delta with respect to the previous automation call. For example, the following code ends after 600ms: </p> <pre><code>robot.mouseClick({left: true}, 100) // first call; wait 100ms\nrobot.typeKeys(\"dij\", 500) // 500ms AFTER previous call; 600ms in all</code></pre> </td> </tr> <tr> <td class=\"jsdoc-param-name\">duration</td> <td class=\"jsdoc-param-type\">Integer</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Time, in milliseconds, to spend pressing all of the keys. The default is (string length)*50 ms.</p> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>robot.typeKeys(\"dijit.ed\", 500);</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_robotx_waitForPageToLoad\">\n<span class=\"functionIcon\">waitForPageToLoad</span><span class=\"parameters\">(submitActions)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"robotx\" class=\"jsdoc-link\">dojo/robotx</a> </p> <p>Notifies DOH that the doh.robot is about to make a page change in the application it is driving, returning a doh.Deferred object the user should return in their runTest function as part of a DOH test.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">submitActions</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\">\n<p>The doh.robot will execute the actions the test passes into the submitActions argument (like clicking the submit button), expecting these actions to create a page change (like a form submit). After these actions execute and the resulting page loads, the next test will start.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">instance</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>runTest: function(){\n    return waitForPageLoad(function(){ doh.robot.keyPress(keys.ENTER, 500); });\n}</code></pre> </div> </div>    <h2 id=\"events\">Events</h2><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/robotx.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/robotx.html</a>\n  </p>\n</div>\n","dojo/store/cache":"<h1>dojo/store/Cache</h1> <div class=\"jsdoc-mixins\"> <label>Extends</label><a href=\"api/store\" class=\"jsdoc-link\">dojo/store/api/Store</a> </div>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>The Cache store wrapper takes a master store and a caching store, caches data from the master into the caching store for faster lookup. Normally one would use a memory store for the caching store and a server store like JsonRest for the master store.</p>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">\n<span class=\"sig\"><span class=\"keyword\">var </span><span class=\"var\">foo </span><span class=\"eq\">= </span><span class=\"new\">new </span><span class=\"args\">Cache</span></span><span class=\"parameters\"><span class=\"paren\">(</span><span class=\"args\">masterStore,cachingStore,options</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <p class=\"jsdoc-inheritance\"> <label>Defined by </label><span><a class=\"jsdoc-link\" href=\"cache\">dojo/store/Cache</a></span> </p> <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">masterStore</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\">\n<p>This is the authoritative store, all uncached requests or non-safe requests will be made against this store.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">cachingStore</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\">\n<p>This is the caching store that will be used to store responses for quick access. Typically this should be a local store.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">options</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>These are additional options for how caching is handled.</p> </td> </tr> </table> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/store/Cache.html\" target=\"_blank\">dojo/store/Cache reference documentation</a> for more information.</p>    <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>var master = new Memory(data);\nvar cacher = new Memory();\nvar store = new Cache(master, cacher);</code></pre> </div> </div>         <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_Cache_idProperty\">\n<span class=\"stringIcon\">idProperty</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"api/store\" class=\"jsdoc-link\">dojo/store/api/Store</a> </p> <div class=\"jsdoc-summary\">\n<p>If the store has a single primary key, this indicates the property to use as the identity property. The values of this property should be unique.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_Cache_queryEngine\">\n<span class=\"functionIcon\">queryEngine</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"api/store\" class=\"jsdoc-link\">dojo/store/api/Store</a> </p> <div class=\"jsdoc-summary\">\n<p>If the store can be queried locally (on the client side in JS), this defines the query engine to use for querying the data store. This takes a query and query options and returns a function that can execute the provided query on a JavaScript array. The queryEngine may be replace to provide more sophisticated querying capabilities. For example: </p> <pre><code>var query = store.queryEngine({foo:\"bar\"}, {count:10});\nquery(someArray) -&gt; filtered array</code></pre> <p>The returned query function may have a \"matches\" property that can be </p> <p>used to determine if an object matches the query. For example: </p> <pre><code>query.matches({id:\"some-object\", foo:\"bar\"}) -&gt; true\nquery.matches({id:\"some-object\", foo:\"something else\"}) -&gt; false</code></pre> </div>    <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_Cache_add\">\n<span class=\"functionIcon\">add</span><span class=\"parameters\">(object,directives)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"cache\" class=\"jsdoc-link\">dojo/store/Cache</a> </p> <p>Add the given object to the store.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">object</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>The object to add to the store.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">directives</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"api/store#AddOptions\">dojo/store/api/Store.AddOptions</a></td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Any additional parameters needed to describe how the add should be performed.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Number</span></p> <p>The new id for the object.</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_Cache_evict\">\n<span class=\"functionIcon\">evict</span><span class=\"parameters\">(id)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"cache\" class=\"jsdoc-link\">dojo/store/Cache</a> </p> <p>Remove the object with the given id from the underlying caching store.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">id</td> <td class=\"jsdoc-param-type\">Number</td> <td class=\"jsdoc-param-description\">\n<p>The identifier for the object in question.</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_Cache_get\">\n<span class=\"functionIcon\">get</span><span class=\"parameters\">(id,directives)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"cache\" class=\"jsdoc-link\">dojo/store/Cache</a> </p> <p>Get the object with the specific id.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">id</td> <td class=\"jsdoc-param-type\">Number</td> <td class=\"jsdoc-param-description\">\n<p>The identifier for the object in question.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">directives</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Any additional parameters needed to describe how the get should be performed.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\"><a class=\"jsdoc-link\" href=\"api/store.queryresults\">dojo/store/api/Store.QueryResults</a></span></p> <p>A QueryResults object.</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_Cache_getChildren\">\n<span class=\"functionIcon\">getChildren</span><span class=\"parameters\">(parent,options)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"api/store\" class=\"jsdoc-link\">dojo/store/api/Store</a> </p> <p>Retrieves the children of an object.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">parent</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>The object to find the children of.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">options</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"api/store.queryoptions\">dojo/store/api/Store.QueryOptions</a></td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Additional options to apply to the retrieval of the children.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\"><a class=\"jsdoc-link\" href=\"api/store.queryresults\">dojo/store/api/Store.QueryResults</a></span></p> <p>A result set of the children of the parent object.</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_Cache_getIdentity\">\n<span class=\"functionIcon\">getIdentity</span><span class=\"parameters\">(object)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"api/store\" class=\"jsdoc-link\">dojo/store/api/Store</a> </p> <p>Returns an object's identity</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">object</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>The object to get the identity from</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">String|Number</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_Cache_getMetadata\">\n<span class=\"functionIcon\">getMetadata</span><span class=\"parameters\">(object)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"api/store\" class=\"jsdoc-link\">dojo/store/api/Store</a> </p> <p>Returns any metadata about the object. This may include attribution, cache directives, history, or version information.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">object</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>The object to return metadata for.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Object</span></p> <p>An object containing metadata.</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_Cache_put\">\n<span class=\"functionIcon\">put</span><span class=\"parameters\">(object,directives)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"cache\" class=\"jsdoc-link\">dojo/store/Cache</a> </p> <p>Put the object into the store (similar to an HTTP PUT).</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">object</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>The object to put to the store.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">directives</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"api/store.putdirectives\">dojo/store/api/Store.PutDirectives</a></td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Any additional parameters needed to describe how the put should be performed.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Number</span></p> <p>The new id for the object.</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_Cache_query\">\n<span class=\"functionIcon\">query</span><span class=\"parameters\">(query,directives)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"cache\" class=\"jsdoc-link\">dojo/store/Cache</a> </p> <p>Query the underlying master store and cache any results.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">query</td> <td class=\"jsdoc-param-type\">Object | String</td> <td class=\"jsdoc-param-description\">\n<p>The object or string containing query information. Dependent on the query engine used.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">directives</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"api/store.queryoptions\">dojo/store/api/Store.QueryOptions</a></td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>An optional keyword arguments object with additional parameters describing the query.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\"><a class=\"jsdoc-link\" href=\"api/store.queryresults\">dojo/store/api/Store.QueryResults</a></span></p> <p>A QueryResults object that can be used to iterate over.</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_Cache_remove\">\n<span class=\"functionIcon\">remove</span><span class=\"parameters\">(id)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"cache\" class=\"jsdoc-link\">dojo/store/Cache</a> </p> <p>Remove the object with the specific id.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">id</td> <td class=\"jsdoc-param-type\">Number</td> <td class=\"jsdoc-param-description\">\n<p>The identifier for the object in question.</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_Cache_transaction\">\n<span class=\"functionIcon\">transaction</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"api/store\" class=\"jsdoc-link\">dojo/store/api/Store</a> </p> <p>Starts a new transaction. Note that a store user might not call transaction() prior to using put, delete, etc. in which case these operations effectively could be thought of as \"auto-commit\" style actions.</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\"><a class=\"jsdoc-link\" href=\"api/store.transaction\">dojo/store/api/Store.Transaction</a></span></p> <p>This represents the new current transaction.</p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/store/Cache.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/store/Cache.html</a>\n  </p>\n</div>\n","dojo/store/datastore":"<h1>dojo/store/DataStore</h1> <div class=\"jsdoc-mixins\"> <label>Extends</label><a href=\"api/store\" class=\"jsdoc-link\">dojo/store/api/Store</a> </div>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>This is an adapter for using Dojo Data stores with an object store consumer. You can provide a Dojo data store and use this adapter to interact with it through the Dojo object store API</p>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">\n<span class=\"sig\"><span class=\"keyword\">var </span><span class=\"var\">foo </span><span class=\"eq\">= </span><span class=\"new\">new </span><span class=\"args\">DataStore</span></span><span class=\"parameters\"><span class=\"paren\">(</span><span class=\"args\">options</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <p class=\"jsdoc-inheritance\"> <label>Defined by </label><span><a class=\"jsdoc-link\" href=\"datastore\">dojo/store/DataStore</a></span> </p> <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">options</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>This provides any configuration information that will be mixed into the store, including a reference to the Dojo data store under the property \"store\".</p> </td> </tr> </table> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/store/DataStore.html\" target=\"_blank\">dojo/store/DataStore reference documentation</a> for more information.</p>            <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_DataStore_idProperty\">\n<span class=\"stringIcon\">idProperty</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"datastore\" class=\"jsdoc-link\">dojo/store/DataStore</a> </p> <div class=\"jsdoc-summary\">\n<p>The object property to use to store the identity of the store items.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_DataStore_store\">\n<span class=\"objectIcon\">store</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"datastore\" class=\"jsdoc-link\">dojo/store/DataStore</a> </p> <div class=\"jsdoc-summary\">\n<p>The object store to convert to a data store</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_DataStore_target\">\n<span class=\"stringIcon\">target</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"datastore\" class=\"jsdoc-link\">dojo/store/DataStore</a> </p>    <h2 id=\"methods\">Methods</h2>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_DataStore_add\">\n<span class=\"functionIcon\">add</span><span class=\"parameters\">(object,options)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"datastore\" class=\"jsdoc-link\">dojo/store/DataStore</a> </p> <p>Creates an object, throws an error if the object already exists</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">object</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>The object to store.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">options</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"api/store.putdirectives\">dojo/store/api/Store.PutDirectives</a></td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Additional metadata for storing the data. Includes an \"id\" property if a specific id is to be used.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Number | undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_DataStore_get\">\n<span class=\"functionIcon\">get</span><span class=\"parameters\">(id,options)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"datastore\" class=\"jsdoc-link\">dojo/store/DataStore</a> </p> <p>Retrieves an object by it's identity. This will trigger a fetchItemByIdentity</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">id</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>The identity to use to lookup the object</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">options</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_DataStore_getChildren\">\n<span class=\"functionIcon\">getChildren</span><span class=\"parameters\">(parent,options)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"api/store\" class=\"jsdoc-link\">dojo/store/api/Store</a> </p> <p>Retrieves the children of an object.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">parent</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>The object to find the children of.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">options</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"api/store.queryoptions\">dojo/store/api/Store.QueryOptions</a></td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Additional options to apply to the retrieval of the children.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\"><a class=\"jsdoc-link\" href=\"api/store.queryresults\">dojo/store/api/Store.QueryResults</a></span></p> <p>A result set of the children of the parent object.</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_DataStore_getIdentity\">\n<span class=\"functionIcon\">getIdentity</span><span class=\"parameters\">(object)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"datastore\" class=\"jsdoc-link\">dojo/store/DataStore</a> </p> <p>Fetch the identity for the given object.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">object</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>The data object to get the identity from.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Number | undefined</span></p> <p>The id of the given object.</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_DataStore_getMetadata\">\n<span class=\"functionIcon\">getMetadata</span><span class=\"parameters\">(object)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"api/store\" class=\"jsdoc-link\">dojo/store/api/Store</a> </p> <p>Returns any metadata about the object. This may include attribution, cache directives, history, or version information.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">object</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>The object to return metadata for.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Object</span></p> <p>An object containing metadata.</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_DataStore_put\">\n<span class=\"functionIcon\">put</span><span class=\"parameters\">(object,options)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"datastore\" class=\"jsdoc-link\">dojo/store/DataStore</a> </p> <p>Stores an object by its identity.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">object</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>The object to store.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">options</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Additional metadata for storing the data. Includes a reference to an id that the object may be stored with (i.e. { id: \"foo\" }).</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_DataStore_query\">\n<span class=\"functionIcon\">query</span><span class=\"parameters\">(query,options)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"datastore\" class=\"jsdoc-link\">dojo/store/DataStore</a> </p> <p>Queries the store for objects.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">query</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>The query to use for retrieving objects from the store</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">options</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Optional options object as used by the underlying dojo.data Store.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\"><a class=\"jsdoc-link\" href=\"api/store.queryresults\">dojo/store/api/Store.QueryResults</a> | undefined</span></p> <p>A query results object that can be used to iterate over results.</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_DataStore_queryEngine\">\n<span class=\"functionIcon\">queryEngine</span><span class=\"parameters\">(query,options)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"datastore\" class=\"jsdoc-link\">dojo/store/DataStore</a> </p> <p>Defines the query engine to use for querying the data store</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">query</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>An object hash with fields that may match fields of items in the store. Values in the hash will be compared by normal == operator, but regular expressions or any object that provides a test() method are also supported and can be used to match strings by more complex expressions (and then the regex's or object's test() method will be used to match values). </p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">options</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"api/store.queryoptions\">dojo/store/api/Store.QueryOptions</a></td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>An object that contains optional information such as sort, start, and count. </p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Function | function</span></p> <p>A function that caches the passed query under the field \"matches\". See any of the \"query\" methods on dojo.stores. </p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_DataStore_remove\">\n<span class=\"functionIcon\">remove</span><span class=\"parameters\">(id)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"datastore\" class=\"jsdoc-link\">dojo/store/DataStore</a> </p> <p>Deletes an object by its identity.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">id</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>The identity to use to delete the object</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_DataStore_transaction\">\n<span class=\"functionIcon\">transaction</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"api/store\" class=\"jsdoc-link\">dojo/store/api/Store</a> </p> <p>Starts a new transaction. Note that a store user might not call transaction() prior to using put, delete, etc. in which case these operations effectively could be thought of as \"auto-commit\" style actions.</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\"><a class=\"jsdoc-link\" href=\"api/store.transaction\">dojo/store/api/Store.Transaction</a></span></p> <p>This represents the new current transaction.</p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/store/DataStore.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/store/DataStore.html</a>\n  </p>\n</div>\n","dojo/store/observable":"<h1>dojo/store/Observable</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>The Observable store wrapper takes a store and sets an observe method on query() results that can be used to monitor results for changes. </p>  <p>Observable wraps an existing store so that notifications can be made when a query is performed. </p>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">Observable<span class=\"parameters\"><span class=\"paren\">(</span><span class=\"args\">store</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">store</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"api/store\">dojo/store/api/Store</a></td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/store/Observable.html\" target=\"_blank\">dojo/store/Observable reference documentation</a> for more information.</p>    <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Create a Memory store that returns an observable query, and then log some information about that query. </p> <pre><code>var store = Observable(new Memory({\n    data: [\n        {id: 1, name: \"one\", prime: false},\n        {id: 2, name: \"two\", even: true, prime: true},\n        {id: 3, name: \"three\", prime: true},\n        {id: 4, name: \"four\", even: true, prime: false},\n        {id: 5, name: \"five\", prime: true}\n    ]\n}));\nvar changes = [], results = store.query({ prime: true });\nvar observer = results.observe(function(object, previousIndex, newIndex){\n    changes.push({previousIndex:previousIndex, newIndex:newIndex, object:object});\n});</code></pre> <p>See the Observable tests for more information.</p> </div> </div>       <h2 id=\"methods\">Methods</h2><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/store/Observable.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/store/Observable.html</a>\n  </p>\n</div>\n","dojo/store/util/queryresults":"<h1>dojo/store/util/QueryResults</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>A function that wraps the results of a store query with additional methods.</p>  <p>QueryResults is a basic wrapper that allows for array-like iteration over any kind of returned data from a query. While the simplest store will return a plain array of data, other stores may return deferreds or promises; this wrapper makes sure that <em>all</em> results can be treated the same. </p> <p>Additional methods include <code>forEach</code>, <code>filter</code> and <code>map</code>.</p>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">QueryResults<span class=\"parameters\"><span class=\"paren\">(</span><span class=\"args\">results</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">results</td> <td class=\"jsdoc-param-type\">Array | <a class=\"jsdoc-link\" href=\"../../promise/promise\">dojo/promise/Promise</a>\n</td> <td class=\"jsdoc-param-description\">\n<p>The result set as an array, or a promise for an array.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | Array|<a class=\"jsdoc-link\" href=\"../../promise/promise\">dojo/promise/Promise</a> | undefined</span></p> <p>An array-like object that can be used for iterating over.</p>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/store/util/QueryResults.html\" target=\"_blank\">dojo/store/util/QueryResults reference documentation</a> for more information.</p>    <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Query a store and iterate over the results. </p> <pre><code>store.query({ prime: true }).forEach(function(item){\n    //  do something\n});</code></pre> </div> </div>       <h2 id=\"methods\">Methods</h2><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/store/util/QueryResults.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/store/util/QueryResults.html</a>\n  </p>\n</div>\n","dojo/store/util/simplequeryengine":"<h1>dojo/store/util/SimpleQueryEngine</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>Simple query engine that matches using filter functions, named filter functions or objects by name-value on a query object hash </p>  <p>The SimpleQueryEngine provides a way of getting a QueryResults through the use of a simple object hash as a filter. The hash will be used to match properties on data objects with the corresponding value given. In other words, only exact matches will be returned. </p> <p>This function can be used as a template for more complex query engines; for example, an engine can be created that accepts an object hash that contains filtering functions, or a string that gets evaluated, etc. </p> <p>When creating a new dojo.store, simply set the store's queryEngine field as a reference to this function. </p>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">SimpleQueryEngine<span class=\"parameters\"><span class=\"paren\">(</span><span class=\"args\">query,options</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">query</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>An object hash with fields that may match fields of items in the store. Values in the hash will be compared by normal == operator, but regular expressions or any object that provides a test() method are also supported and can be used to match strings by more complex expressions (and then the regex's or object's test() method will be used to match values). </p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">options</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"../api/store.queryoptions\">dojo/store/api/Store.QueryOptions</a></td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>An object that contains optional information such as sort, start, and count. </p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Function | function</span></p> <p>A function that caches the passed query under the field \"matches\". See any of the \"query\" methods on dojo.stores. </p>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/store/util/SimpleQueryEngine.html\" target=\"_blank\">dojo/store/util/SimpleQueryEngine reference documentation</a> for more information.</p>    <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Define a store with a reference to this engine, and set up a query method. </p> <pre><code>var myStore = function(options){\n    //  ...more properties here\n    this.queryEngine = SimpleQueryEngine;\n    //  define our query method\n    this.query = function(query, options){\n        return QueryResults(this.queryEngine(query, options)(this.data));\n    };\n};</code></pre> </div> </div>       <h2 id=\"methods\">Methods</h2><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/store/util/SimpleQueryEngine.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/store/util/SimpleQueryEngine.html</a>\n  </p>\n</div>\n","dojo/string":"<h1>dojo/string</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>String utilities for Dojo</p>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/string.html\" target=\"_blank\">dojo/string reference documentation</a> for more information.</p>          <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_string_escape\">\n<span class=\"functionIcon\">escape</span><span class=\"parameters\">(str)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"string\" class=\"jsdoc-link\">dojo/string</a> </p> <p>Efficiently escape a string for insertion into HTML (innerHTML or attributes), replacing &amp;, &lt;, &gt;, \", ', and / characters.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">str</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>the string to escape</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_string_pad\">\n<span class=\"functionIcon\">pad</span><span class=\"parameters\">(text,size,ch,end)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"string\" class=\"jsdoc-link\">dojo/string</a> </p> <p>Pad a string to guarantee that it is at least <code>size</code> length by filling with the character <code>ch</code> at either the start or end of the string. Pads at the start, by default.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">text</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>the string to pad</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">size</td> <td class=\"jsdoc-param-type\">Integer</td> <td class=\"jsdoc-param-description\">\n<p>length to provide padding</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">ch</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>character to pad, defaults to '0'</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">end</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>adds padding at the end if true, otherwise pads at start</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">number</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>// Fill the string to length 10 with \"+\" characters on the right.  Yields \"Dojo++++++\".\nstring.pad(\"Dojo\", 10, \"+\", true);</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_string_rep\">\n<span class=\"functionIcon\">rep</span><span class=\"parameters\">(str,num)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"string\" class=\"jsdoc-link\">dojo/string</a> </p> <p>Efficiently replicate a string <code>n</code> times.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">str</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>the string to replicate</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">num</td> <td class=\"jsdoc-param-type\">Integer</td> <td class=\"jsdoc-param-description\">\n<p>number of times to replicate the string</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">string | undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_string_substitute\">\n<span class=\"functionIcon\">substitute</span><span class=\"parameters\">(template,map,transform,thisObject)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"string\" class=\"jsdoc-link\">dojo/string</a> </p> <p>Performs parameterized substitutions on a string. Throws an exception if any parameter is unmatched.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">template</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>a string with expressions in the form <code>${key}</code> to be replaced or <code>${key:format}</code> which specifies a format function. keys are case-sensitive.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">map</td> <td class=\"jsdoc-param-type\">Object | Array</td> <td class=\"jsdoc-param-description\">\n<p>hash to search for substitutions</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">transform</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>a function to process all parameters before substitution takes place, e.g. mylib.encodeXML</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">thisObject</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>where to look for optional format function; default to the global namespace</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Substitutes two expressions in a string from an Array or Object </p> <pre><code>// returns \"File 'foo.html' is not found in directory '/temp'.\"\n// by providing substitution data in an Array\nstring.substitute(\n    \"File '${0}' is not found in directory '${1}'.\",\n    [\"foo.html\",\"/temp\"]\n);\n\n// also returns \"File 'foo.html' is not found in directory '/temp'.\"\n// but provides substitution data in an Object structure.  Dotted\n// notation may be used to traverse the structure.\nstring.substitute(\n    \"File '${name}' is not found in directory '${info.dir}'.\",\n    { name: \"foo.html\", info: { dir: \"/temp\" } }\n);</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>Use a transform function to modify the values: </p> <pre><code>// returns \"file 'foo.html' is not found in directory '/temp'.\"\nstring.substitute(\n    \"${0} is not found in ${1}.\",\n    [\"foo.html\",\"/temp\"],\n    function(str){\n        // try to figure out the type\n        var prefix = (str.charAt(0) == \"/\") ? \"directory\": \"file\";\n        return prefix + \" '\" + str + \"'\";\n    }\n);</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<p>Use a formatter </p> <pre><code>// returns \"thinger -- howdy\"\nstring.substitute(\n    \"${0:postfix}\", [\"thinger\"], null, {\n        postfix: function(value, key){\n            return value + \" -- howdy\";\n        }\n    }\n);</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_string_trim\">\n<span class=\"functionIcon\">trim</span><span class=\"parameters\">(str)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"string\" class=\"jsdoc-link\">dojo/string</a> </p> <p>Trims whitespace from both sides of the string</p>  <p>This version of trim() was taken from <a href=\"http://blog.stevenlevithan.com/archives/faster-trim-javascript\">Steven Levithan's blog</a>. The short yet performant version of this function is <a class=\"jsdoc-link\" href=\"_base/lang#trim\">dojo/_base/lang.trim()</a>, which is part of Dojo base. Uses String.prototype.trim instead, if available.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">str</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>String to be trimmed</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">String | string</span></p> <p>Returns the trimmed string</p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/string.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/string.html</a>\n  </p>\n</div>\n","dojo/text":"<h1>dojo/text</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>This module implements the <a class=\"jsdoc-link\" href=\"text\">dojo/text</a>! plugin and the dojo.cache API.</p>  <p>We choose to include our own plugin to leverage functionality already contained in dojo and thereby reduce the size of the plugin compared to various foreign loader implementations. Also, this allows foreign AMD loaders to be used without their plugins. </p> <p>CAUTION: this module is designed to optionally function synchronously to support the dojo v1.x synchronous loader. This feature is outside the scope of the CommonJS plugins specification.</p>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/text.html\" target=\"_blank\">dojo/text reference documentation</a> for more information.</p>            <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_text_dynamic\">\n<span class=\"booleanIcon\">dynamic</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"text\" class=\"jsdoc-link\">dojo/text</a> </p>    <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_text_load\">\n<span class=\"functionIcon\">load</span><span class=\"parameters\">(id,require,load)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"text\" class=\"jsdoc-link\">dojo/text</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">id</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>Path to the resource.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">require</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\">\n<p>Object that include the function toUrl with given id returns a valid URL from which to load the text.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">load</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\">\n<p>Callback function which will be called, when the loading finished.</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_text_normalize\">\n<span class=\"functionIcon\">normalize</span><span class=\"parameters\">(id,toAbsMid)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"text\" class=\"jsdoc-link\">dojo/text</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">id</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">toAbsMid</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">string</span></p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/text.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/text.html</a>\n  </p>\n</div>\n","dojo/store/jsonrest":"<h1>dojo/store/JsonRest</h1> <div class=\"jsdoc-mixins\"> <label>Extends</label><a href=\"api/store\" class=\"jsdoc-link\">dojo/store/api/Store</a> </div>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>This is a basic store for RESTful communicating with a server through JSON formatted data. It implements <a class=\"jsdoc-link\" href=\"api/store\">dojo/store/api/Store</a>.</p>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">\n<span class=\"sig\"><span class=\"keyword\">var </span><span class=\"var\">foo </span><span class=\"eq\">= </span><span class=\"new\">new </span><span class=\"args\">JsonRest</span></span><span class=\"parameters\"><span class=\"paren\">(</span><span class=\"args\">options</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <p class=\"jsdoc-inheritance\"> <label>Defined by </label><span><a class=\"jsdoc-link\" href=\"jsonrest\">dojo/store/JsonRest</a></span> </p> <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">options</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"jsonrest\">dojo/store/JsonRest</a></td> <td class=\"jsdoc-param-description\">\n<p>This provides any configuration information that will be mixed into the store</p> </td> </tr> </table> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/store/JsonRest.html\" target=\"_blank\">dojo/store/JsonRest reference documentation</a> for more information.</p>            <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_JsonRest_accepts\">\n<span class=\"stringIcon\">accepts</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"jsonrest\" class=\"jsdoc-link\">dojo/store/JsonRest</a> </p> <div class=\"jsdoc-summary\">\n<p>Defines the Accept header to use on HTTP requests</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_JsonRest_ascendingPrefix\">\n<span class=\"stringIcon\">ascendingPrefix</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"jsonrest\" class=\"jsdoc-link\">dojo/store/JsonRest</a> </p> <div class=\"jsdoc-summary\">\n<p>The prefix to apply to sort attribute names that are ascending</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_JsonRest_descendingPrefix\">\n<span class=\"stringIcon\">descendingPrefix</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"jsonrest\" class=\"jsdoc-link\">dojo/store/JsonRest</a> </p> <div class=\"jsdoc-summary\">\n<p>The prefix to apply to sort attribute names that are ascending</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_JsonRest_headers\">\n<span class=\"objectIcon\">headers</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"jsonrest\" class=\"jsdoc-link\">dojo/store/JsonRest</a> </p> <div class=\"jsdoc-summary\">\n<p>Additional headers to pass in all requests to the server. These can be overridden by passing additional headers to calls to the store.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_JsonRest_idProperty\">\n<span class=\"stringIcon\">idProperty</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"jsonrest\" class=\"jsdoc-link\">dojo/store/JsonRest</a> </p> <div class=\"jsdoc-summary\">\n<p>Indicates the property to use as the identity property. The values of this property should be unique.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_JsonRest_queryEngine\">\n<span class=\"functionIcon\">queryEngine</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"api/store\" class=\"jsdoc-link\">dojo/store/api/Store</a> </p> <div class=\"jsdoc-summary\">\n<p>If the store can be queried locally (on the client side in JS), this defines the query engine to use for querying the data store. This takes a query and query options and returns a function that can execute the provided query on a JavaScript array. The queryEngine may be replace to provide more sophisticated querying capabilities. For example: </p> <pre><code>var query = store.queryEngine({foo:\"bar\"}, {count:10});\nquery(someArray) -&gt; filtered array</code></pre> <p>The returned query function may have a \"matches\" property that can be </p> <p>used to determine if an object matches the query. For example: </p> <pre><code>query.matches({id:\"some-object\", foo:\"bar\"}) -&gt; true\nquery.matches({id:\"some-object\", foo:\"something else\"}) -&gt; false</code></pre> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_JsonRest_target\">\n<span class=\"stringIcon\">target</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"jsonrest\" class=\"jsdoc-link\">dojo/store/JsonRest</a> </p> <div class=\"jsdoc-summary\">\n<p>The target base URL to use for all requests to the server. This string will be prepended to the id to generate the URL (relative or absolute) for requests sent to the server</p> </div>    <h2 id=\"methods\">Methods</h2>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_JsonRest_add\">\n<span class=\"functionIcon\">add</span><span class=\"parameters\">(object,options)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"jsonrest\" class=\"jsdoc-link\">dojo/store/JsonRest</a> </p> <p>Adds an object. This will trigger a PUT request to the server if the object has an id, otherwise it will trigger a POST request.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">object</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>The object to store.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">options</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Additional metadata for storing the data. Includes an \"id\" property if a specific id is to be used.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_JsonRest_get\">\n<span class=\"functionIcon\">get</span><span class=\"parameters\">(id,options)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"jsonrest\" class=\"jsdoc-link\">dojo/store/JsonRest</a> </p> <p>Retrieves an object by its identity. This will trigger a GET request to the server using the url <code>this.target + id</code>.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">id</td> <td class=\"jsdoc-param-type\">Number</td> <td class=\"jsdoc-param-description\">\n<p>The identity to use to lookup the object</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">options</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>HTTP headers. For consistency with other methods, if a <code>headers</code> key exists on this object, it will be used to provide HTTP headers instead.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Object | undefined</span></p> <p>The object in the store that matches the given id.</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_JsonRest_getChildren\">\n<span class=\"functionIcon\">getChildren</span><span class=\"parameters\">(parent,options)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"api/store\" class=\"jsdoc-link\">dojo/store/api/Store</a> </p> <p>Retrieves the children of an object.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">parent</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>The object to find the children of.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">options</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"api/store.queryoptions\">dojo/store/api/Store.QueryOptions</a></td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Additional options to apply to the retrieval of the children.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\"><a class=\"jsdoc-link\" href=\"api/store.queryresults\">dojo/store/api/Store.QueryResults</a></span></p> <p>A result set of the children of the parent object.</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_JsonRest_getIdentity\">\n<span class=\"functionIcon\">getIdentity</span><span class=\"parameters\">(object)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"jsonrest\" class=\"jsdoc-link\">dojo/store/JsonRest</a> </p> <p>Returns an object's identity</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">object</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>The object to get the identity from</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Number | undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_JsonRest_getMetadata\">\n<span class=\"functionIcon\">getMetadata</span><span class=\"parameters\">(object)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"api/store\" class=\"jsdoc-link\">dojo/store/api/Store</a> </p> <p>Returns any metadata about the object. This may include attribution, cache directives, history, or version information.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">object</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>The object to return metadata for.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Object</span></p> <p>An object containing metadata.</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_JsonRest_put\">\n<span class=\"functionIcon\">put</span><span class=\"parameters\">(object,options)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"jsonrest\" class=\"jsdoc-link\">dojo/store/JsonRest</a> </p> <p>Stores an object. This will trigger a PUT request to the server if the object has an id, otherwise it will trigger a POST request.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">object</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>The object to store.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">options</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Additional metadata for storing the data. Includes an \"id\" property if a specific id is to be used.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\"><a class=\"jsdoc-link\" href=\"../_base/deferred\">dojo/_base/Deferred</a> | undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_JsonRest_query\">\n<span class=\"functionIcon\">query</span><span class=\"parameters\">(query,options)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"jsonrest\" class=\"jsdoc-link\">dojo/store/JsonRest</a> </p> <p>Queries the store for objects. This will trigger a GET request to the server, with the query added as a query string.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">query</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>The query to use for retrieving objects from the store.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">options</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>The optional arguments to apply to the resultset.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\"><a class=\"jsdoc-link\" href=\"api/store.queryresults\">dojo/store/api/Store.QueryResults</a> | undefined</span></p> <p>The results of the query, extended with iterative methods.</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_JsonRest_remove\">\n<span class=\"functionIcon\">remove</span><span class=\"parameters\">(id,options)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"jsonrest\" class=\"jsdoc-link\">dojo/store/JsonRest</a> </p> <p>Deletes an object by its identity. This will trigger a DELETE request to the server.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">id</td> <td class=\"jsdoc-param-type\">Number</td> <td class=\"jsdoc-param-description\">\n<p>The identity to use to delete the object</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">options</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>HTTP headers.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_JsonRest_transaction\">\n<span class=\"functionIcon\">transaction</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"api/store\" class=\"jsdoc-link\">dojo/store/api/Store</a> </p> <p>Starts a new transaction. Note that a store user might not call transaction() prior to using put, delete, etc. in which case these operations effectively could be thought of as \"auto-commit\" style actions.</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\"><a class=\"jsdoc-link\" href=\"api/store.transaction\">dojo/store/api/Store.Transaction</a></span></p> <p>This represents the new current transaction.</p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/store/JsonRest.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/store/JsonRest.html</a>\n  </p>\n</div>\n","dojo/store/memory":"<h1>dojo/store/Memory</h1> <div class=\"jsdoc-mixins\"> <label>Extends</label><a href=\"api/store\" class=\"jsdoc-link\">dojo/store/api/Store</a> </div>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>This is a basic in-memory object store. It implements <a class=\"jsdoc-link\" href=\"api/store\">dojo/store/api/Store</a>.</p>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">\n<span class=\"sig\"><span class=\"keyword\">var </span><span class=\"var\">foo </span><span class=\"eq\">= </span><span class=\"new\">new </span><span class=\"args\">Memory</span></span><span class=\"parameters\"><span class=\"paren\">(</span><span class=\"args\">options</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <p class=\"jsdoc-inheritance\"> <label>Defined by </label><span><a class=\"jsdoc-link\" href=\"memory\">dojo/store/Memory</a></span> </p> <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">options</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"memory\">dojo/store/Memory</a></td> <td class=\"jsdoc-param-description\">\n<p>This provides any configuration information that will be mixed into the store. This should generally include the data property to provide the starting set of data.</p> </td> </tr> </table> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/store/Memory.html\" target=\"_blank\">dojo/store/Memory reference documentation</a> for more information.</p>            <h2 id=\"properties\">Properties</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_Memory_data\">\n<span class=\"arrayIcon\">data</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"memory\" class=\"jsdoc-link\">dojo/store/Memory</a> </p> <div class=\"jsdoc-summary\">\n<p>The array of all the objects in the memory store</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_Memory_idProperty\">\n<span class=\"stringIcon\">idProperty</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"memory\" class=\"jsdoc-link\">dojo/store/Memory</a> </p> <div class=\"jsdoc-summary\">\n<p>Indicates the property to use as the identity property. The values of this property should be unique.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_Memory_index\">\n<span class=\"objectIcon\">index</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"memory\" class=\"jsdoc-link\">dojo/store/Memory</a> </p> <div class=\"jsdoc-summary\">\n<p>An index of data indices into the data array by id</p> </div>    <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_Memory_add\">\n<span class=\"functionIcon\">add</span><span class=\"parameters\">(object,options)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"memory\" class=\"jsdoc-link\">dojo/store/Memory</a> </p> <p>Creates an object, throws an error if the object already exists</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">object</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>The object to store.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">options</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"api/store.putdirectives\">dojo/store/api/Store.PutDirectives</a></td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Additional metadata for storing the data. Includes an \"id\" property if a specific id is to be used.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Number | undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_Memory_get\">\n<span class=\"functionIcon\">get</span><span class=\"parameters\">(id)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"memory\" class=\"jsdoc-link\">dojo/store/Memory</a> </p> <p>Retrieves an object by its identity</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">id</td> <td class=\"jsdoc-param-type\">Number</td> <td class=\"jsdoc-param-description\">\n<p>The identity to use to lookup the object</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Object | undefined</span></p> <p>The object in the store that matches the given id.</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_Memory_getChildren\">\n<span class=\"functionIcon\">getChildren</span><span class=\"parameters\">(parent,options)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"api/store\" class=\"jsdoc-link\">dojo/store/api/Store</a> </p> <p>Retrieves the children of an object.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">parent</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>The object to find the children of.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">options</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"api/store.queryoptions\">dojo/store/api/Store.QueryOptions</a></td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Additional options to apply to the retrieval of the children.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\"><a class=\"jsdoc-link\" href=\"api/store.queryresults\">dojo/store/api/Store.QueryResults</a></span></p> <p>A result set of the children of the parent object.</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_Memory_getIdentity\">\n<span class=\"functionIcon\">getIdentity</span><span class=\"parameters\">(object)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"memory\" class=\"jsdoc-link\">dojo/store/Memory</a> </p> <p>Returns an object's identity</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">object</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>The object to get the identity from</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Number | undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_Memory_getMetadata\">\n<span class=\"functionIcon\">getMetadata</span><span class=\"parameters\">(object)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"api/store\" class=\"jsdoc-link\">dojo/store/api/Store</a> </p> <p>Returns any metadata about the object. This may include attribution, cache directives, history, or version information.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">object</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>The object to return metadata for.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Object</span></p> <p>An object containing metadata.</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_Memory_put\">\n<span class=\"functionIcon\">put</span><span class=\"parameters\">(object,options)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"memory\" class=\"jsdoc-link\">dojo/store/Memory</a> </p> <p>Stores an object</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">object</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>The object to store.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">options</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"api/store.putdirectives\">dojo/store/api/Store.PutDirectives</a></td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Additional metadata for storing the data. Includes an \"id\" property if a specific id is to be used.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Number | undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_Memory_query\">\n<span class=\"functionIcon\">query</span><span class=\"parameters\">(query,options)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"memory\" class=\"jsdoc-link\">dojo/store/Memory</a> </p> <p>Queries the store for objects.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">query</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>The query to use for retrieving objects from the store.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">options</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"api/store.queryoptions\">dojo/store/api/Store.QueryOptions</a></td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>The optional arguments to apply to the resultset.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\"><a class=\"jsdoc-link\" href=\"api/store.queryresults\">dojo/store/api/Store.QueryResults</a> | undefined</span></p> <p>The results of the query, extended with iterative methods. </p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Given the following store: </p> <pre><code>var store = new Memory({\n    data: [\n        {id: 1, name: \"one\", prime: false },\n        {id: 2, name: \"two\", even: true, prime: true},\n        {id: 3, name: \"three\", prime: true},\n        {id: 4, name: \"four\", even: true, prime: false},\n        {id: 5, name: \"five\", prime: true}\n    ]\n});</code></pre> <p>...find all items where \"prime\" is true: </p> <pre><code>var results = store.query({ prime: true });</code></pre> <p>...or find all items where \"even\" is true: </p> <pre><code>var results = store.query({ even: true });</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_Memory_queryEngine\">\n<span class=\"functionIcon\">queryEngine</span><span class=\"parameters\">(query,options)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"memory\" class=\"jsdoc-link\">dojo/store/Memory</a> </p> <p>Defines the query engine to use for querying the data store</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">query</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>An object hash with fields that may match fields of items in the store. Values in the hash will be compared by normal == operator, but regular expressions or any object that provides a test() method are also supported and can be used to match strings by more complex expressions (and then the regex's or object's test() method will be used to match values). </p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">options</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"api/store.queryoptions\">dojo/store/api/Store.QueryOptions</a></td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>An object that contains optional information such as sort, start, and count. </p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Function | function</span></p> <p>A function that caches the passed query under the field \"matches\". See any of the \"query\" methods on dojo.stores. </p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_Memory_remove\">\n<span class=\"functionIcon\">remove</span><span class=\"parameters\">(id)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"memory\" class=\"jsdoc-link\">dojo/store/Memory</a> </p> <p>Deletes an object by its identity</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">id</td> <td class=\"jsdoc-param-type\">Number</td> <td class=\"jsdoc-param-description\">\n<p>The identity to use to delete the object</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Boolean | boolean</span></p> <p>Returns true if an object was removed, falsy (undefined) if no object matched the id</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_Memory_setData\">\n<span class=\"functionIcon\">setData</span><span class=\"parameters\">(data)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"memory\" class=\"jsdoc-link\">dojo/store/Memory</a> </p> <p>Sets the given data as the source for this store, and indexes it</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">data</td> <td class=\"jsdoc-param-type\">Object[]</td> <td class=\"jsdoc-param-description\">\n<p>An array of objects to use as the source of data.</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_store_Memory_transaction\">\n<span class=\"functionIcon\">transaction</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"api/store\" class=\"jsdoc-link\">dojo/store/api/Store</a> </p> <p>Starts a new transaction. Note that a store user might not call transaction() prior to using put, delete, etc. in which case these operations effectively could be thought of as \"auto-commit\" style actions.</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\"><a class=\"jsdoc-link\" href=\"api/store.transaction\">dojo/store/api/Store.Transaction</a></span></p> <p>This represents the new current transaction.</p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/store/Memory.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/store/Memory.html</a>\n  </p>\n</div>\n","dojo/throttle":"<h1>dojo/throttle</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>Create a function that will only execute once per <code>wait</code> periods.</p>  <p>Create a function that will only execute once per <code>wait</code> periods from last execution when called repeatedly. Useful for preventing excessive calculations in rapidly firing events, such as window.resize, node.mousemove and so on.</p>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">throttle<span class=\"parameters\"><span class=\"paren\">(</span><span class=\"args\">cb,wait</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">cb</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\">\n<p>The callback to fire.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">wait</td> <td class=\"jsdoc-param-type\">Integer</td> <td class=\"jsdoc-param-description\">\n<p>time to delay before allowing cb to call again.</p> </td> </tr> </table>          <h2 id=\"methods\">Methods</h2><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/throttle.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/throttle.html</a>\n  </p>\n</div>\n","dojo/topic":"<h1>dojo/topic</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>Pubsub hub.</p>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/topic.html\" target=\"_blank\">dojo/topic reference documentation</a> for more information.</p>    <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>topic.subscribe(\"some/topic\", function(event){\n... do something with event\n});\ntopic.publish(\"some/topic\", {name:\"some event\", ...});</code></pre> </div> </div>       <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_topic_publish\">\n<span class=\"functionIcon\">publish</span><span class=\"parameters\">(topic,event)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"topic\" class=\"jsdoc-link\">dojo/topic</a> </p> <p>Publishes a message to a topic on the pub/sub hub. All arguments after the first will be passed to the subscribers, so any number of arguments can be provided (not just event).</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">topic</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>The name of the topic to publish to</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">event</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>An event to distribute to the topic listeners</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_topic_subscribe\">\n<span class=\"functionIcon\">subscribe</span><span class=\"parameters\">(topic,listener)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"topic\" class=\"jsdoc-link\">dojo/topic</a> </p> <p>Subscribes to a topic on the pub/sub hub</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">topic</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>The topic to subscribe to</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">listener</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\">\n<p>A function to call when a message is published to the given topic</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/topic.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/topic.html</a>\n  </p>\n</div>\n","dojo/uacss":"<h1>dojo/uacss</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>Applies pre-set CSS classes to the top-level HTML node, based on: </p> <ul> <li>browser (ex: dj_ie)</li> <li>browser version (ex: dj_ie6)</li> <li>box model (ex: dj_contentBox)</li> <li>text direction (ex: dijitRtl)</li> </ul> <p>In addition, browser, browser version, and box model are combined with an RTL flag when browser text is RTL. ex: dj_ie-rtl. </p> <p>Returns the has() method.</p>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/uacss.html\" target=\"_blank\">dojo/uacss reference documentation</a> for more information.</p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/uacss.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/uacss.html</a>\n  </p>\n</div>\n","dojo/when":"<h1>dojo/when</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>Transparently applies callbacks to values and/or promises.</p>  <p>Accepts promises but also transparently handles non-promises. If no callbacks are provided returns a promise, regardless of the initial value. Foreign promises are converted. </p> <p>If callbacks are provided and the initial value is not a promise, the callback is executed immediately with no error handling. Returns a promise if the initial value is a promise, or the result of the callback otherwise.</p>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">when<span class=\"parameters\"><span class=\"paren\">(</span><span class=\"args\">valueOrPromise,callback,errback,progback</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">valueOrPromise</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\">\n<p>Either a regular value or an object with a <code>then()</code> method that follows the Promises/A specification.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">callback</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Callback to be invoked when the promise is resolved, or a non-promise is received.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">errback</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Callback to be invoked when the promise is rejected.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">progback</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Callback to be invoked when the promise emits a progress update.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\"><a class=\"jsdoc-link\" href=\"promise/promise\">dojo/promise/Promise</a> | summary: | name:</span></p> <p>Promise, or if a callback is provided, the result of the callback.</p>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/when.html\" target=\"_blank\">dojo/when reference documentation</a> for more information.</p>          <h2 id=\"methods\">Methods</h2><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/when.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/when.html</a>\n  </p>\n</div>\n","dojo/window":"<h1>dojo/window</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>TODOC</p>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/window.html\" target=\"_blank\">dojo/window reference documentation</a> for more information.</p>          <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_window_get\">\n<span class=\"functionIcon\">get</span><span class=\"parameters\">(doc)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"window\" class=\"jsdoc-link\">dojo/window</a> </p> <p>Get window object associated with document doc.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">doc</td> <td class=\"jsdoc-param-type\">Document</td> <td class=\"jsdoc-param-description\">\n<p>The document to get the associated window for.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_window_getBox\">\n<span class=\"functionIcon\">getBox</span><span class=\"parameters\">(doc)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"window\" class=\"jsdoc-link\">dojo/window</a> </p> <p>Returns the dimensions and scroll position of the viewable area of a browser window</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">doc</td> <td class=\"jsdoc-param-type\">Document</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">object</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_window_scrollIntoView\">\n<span class=\"functionIcon\">scrollIntoView</span><span class=\"parameters\">(node,pos)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"window\" class=\"jsdoc-link\">dojo/window</a> </p> <p>Scroll the passed node into view using minimal movement, if it is not already.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DomNode</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">pos</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/window.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/window.html</a>\n  </p>\n</div>\n","dojo/touch":"<h1>dojo/touch</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>This module provides unified touch event handlers by exporting press, move, release and cancel which can also run well on desktop. Based on <a href=\"http://dvcs.w3.org/hg/webevents/raw-file/tip/touchevents.html\">http://dvcs.w3.org/hg/webevents/raw-file/tip/touchevents.html</a> Also, if the dojoClick property is set to truthy on a DOM node, <a class=\"jsdoc-link\" href=\"touch\">dojo/touch</a> generates click events immediately for this node and its descendants (except for descendants that have a dojoClick property set to falsy), to avoid the delay before native browser click events, and regardless of whether evt.preventDefault() was called in a touch.press event listener. </p>  <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/touch.html\" target=\"_blank\">dojo/touch reference documentation</a> for more information.</p>    <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Used with dojo/on </p> <pre><code>define([\"dojo/on\", \"dojo/touch\"], function(on, touch){\n    on(node, touch.press, function(e){});\n    on(node, touch.move, function(e){});\n    on(node, touch.release, function(e){});\n    on(node, touch.cancel, function(e){});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>Used with touch.* directly </p> <pre><code>touch.press(node, function(e){});\ntouch.move(node, function(e){});\ntouch.release(node, function(e){});\ntouch.cancel(node, function(e){});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<p>Have dojo/touch generate clicks without delay, with a default move threshold of 4 pixels </p> <pre><code>node.dojoClick = true;</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 4</h3>\n<p>Have dojo/touch generate clicks without delay, with a move threshold of 10 pixels horizontally and vertically </p> <pre><code>node.dojoClick = 10;</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 5</h3>\n<p>Have dojo/touch generate clicks without delay, with a move threshold of 50 pixels horizontally and 10 pixels vertically </p> <pre><code>node.dojoClick = {x:50, y:5};</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 6</h3>\n<p>Disable clicks without delay generated by dojo/touch on a node that has an ancestor with property dojoClick set to truthy </p> <pre><code>node.dojoClick = false;</code></pre> </div> </div>       <h2 id=\"methods\">Methods</h2>    <h3 class=\"jsdoc-title\" id=\"1_10dojo_touch_cancel\">\n<span class=\"functionIcon\">cancel</span><span class=\"parameters\">(node,listener)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"touch\" class=\"jsdoc-link\">dojo/touch</a> </p> <p>Register a listener to 'touchcancel'|'mouseleave' for the given node</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">Dom</td> <td class=\"jsdoc-param-description\">\n<p>Target node to listen to</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">listener</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\">\n<p>Callback function</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any</span></p> <p>A handle which will be used to remove the listener by handle.remove()</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_touch_enter\">\n<span class=\"functionIcon\">enter</span><span class=\"parameters\">(node,listener)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"touch\" class=\"jsdoc-link\">dojo/touch</a> </p> <p>Register a listener to mouse.enter or touch equivalent for the given node</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">Dom</td> <td class=\"jsdoc-param-description\">\n<p>Target node to listen to</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">listener</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\">\n<p>Callback function</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any</span></p> <p>A handle which will be used to remove the listener by handle.remove()</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_touch_leave\">\n<span class=\"functionIcon\">leave</span><span class=\"parameters\">(node,listener)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"touch\" class=\"jsdoc-link\">dojo/touch</a> </p> <p>Register a listener to mouse.leave or touch equivalent for the given node</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">Dom</td> <td class=\"jsdoc-param-description\">\n<p>Target node to listen to</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">listener</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\">\n<p>Callback function</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any</span></p> <p>A handle which will be used to remove the listener by handle.remove()</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_touch_move\">\n<span class=\"functionIcon\">move</span><span class=\"parameters\">(node,listener)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"touch\" class=\"jsdoc-link\">dojo/touch</a> </p> <p>Register a listener that fires when the mouse cursor or a finger is dragged over the given node.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">Dom</td> <td class=\"jsdoc-param-description\">\n<p>Target node to listen to</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">listener</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\">\n<p>Callback function</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any</span></p> <p>A handle which will be used to remove the listener by handle.remove()</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_touch_out\">\n<span class=\"functionIcon\">out</span><span class=\"parameters\">(node,listener)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"touch\" class=\"jsdoc-link\">dojo/touch</a> </p> <p>Register a listener to 'mouseout' or touch equivalent for the given node</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">Dom</td> <td class=\"jsdoc-param-description\">\n<p>Target node to listen to</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">listener</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\">\n<p>Callback function</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any</span></p> <p>A handle which will be used to remove the listener by handle.remove()</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_touch_over\">\n<span class=\"functionIcon\">over</span><span class=\"parameters\">(node,listener)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"touch\" class=\"jsdoc-link\">dojo/touch</a> </p> <p>Register a listener to 'mouseover' or touch equivalent for the given node</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">Dom</td> <td class=\"jsdoc-param-description\">\n<p>Target node to listen to</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">listener</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\">\n<p>Callback function</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any</span></p> <p>A handle which will be used to remove the listener by handle.remove()</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_touch_press\">\n<span class=\"functionIcon\">press</span><span class=\"parameters\">(node,listener)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"touch\" class=\"jsdoc-link\">dojo/touch</a> </p> <p>Register a listener to 'touchstart'|'mousedown' for the given node</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">Dom</td> <td class=\"jsdoc-param-description\">\n<p>Target node to listen to</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">listener</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\">\n<p>Callback function</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any</span></p> <p>A handle which will be used to remove the listener by handle.remove()</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_touch_release\">\n<span class=\"functionIcon\">release</span><span class=\"parameters\">(node,listener)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"touch\" class=\"jsdoc-link\">dojo/touch</a> </p> <p>Register a listener to releasing the mouse button while the cursor is over the given node (i.e. \"mouseup\") or for removing the finger from the screen while touching the given node.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">Dom</td> <td class=\"jsdoc-param-description\">\n<p>Target node to listen to</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">listener</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\">\n<p>Callback function</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any</span></p> <p>A handle which will be used to remove the listener by handle.remove()</p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/touch.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/touch.html</a>\n  </p>\n</div>\n","dojo/nodelist":"<h1>dojo/NodeList</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>Array-like object which adds syntactic sugar for chaining, common iteration operations, animation, and node manipulation. NodeLists are most often returned as the result of <a class=\"jsdoc-link\" href=\"query\">dojo/query()</a> calls.</p>  <p>NodeList instances provide many utilities that reflect core Dojo APIs for Array iteration and manipulation, DOM manipulation, and event handling. Instead of needing to dig up functions in the dojo package, NodeLists generally make the full power of Dojo available for DOM manipulation tasks in a simple, chainable way.</p>  <div class=\"jsdoc-function-information\"> <h2 class=\"usage\">Usage</h2> <div class=\"function-signature\">NodeList<span class=\"parameters\"><span class=\"paren\">(</span><span class=\"args\">array</span><span class=\"paren\">)</span><span class=\"semi\">;</span></span> </div> </div> <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">array</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Array</span></p> <p>See the <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/NodeList.html\" target=\"_blank\">dojo/NodeList reference documentation</a> for more information.</p>    <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>create a node list from a node </p> <pre><code>require([\"dojo/query\", \"dojo/dom\"\n], function(query, dom){\n    query.NodeList(dom.byId(\"foo\"));\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>get a NodeList from a CSS query and iterate on it </p> <pre><code>require([\"dojo/on\", \"dojo/dom\"\n], function(on, dom){\n    var l = query(\".thinger\");\n    l.forEach(function(node, index, nodeList){\n        console.log(index, node.innerHTML);\n    });\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<p>use native and Dojo-provided array methods to manipulate a NodeList without needing to use dojo.* functions explicitly: </p> <pre><code>require([\"dojo/query\", \"dojo/dom-construct\", \"dojo/dom\"\n], function(query, domConstruct, dom){\n    var l = query(\".thinger\");\n    // since NodeLists are real arrays, they have a length\n    // property that is both readable and writable and\n    // push/pop/shift/unshift methods\n    console.log(l.length);\n    l.push(domConstruct.create(\"span\"));\n\n    // dojo's normalized array methods work too:\n    console.log( l.indexOf(dom.byId(\"foo\")) );\n    // ...including the special \"function as string\" shorthand\n    console.log( l.every(\"item.nodeType == 1\") );\n\n    // NodeLists can be [..] indexed, or you can use the at()\n    // function to get specific items wrapped in a new NodeList:\n    var node = l[3]; // the 4th element\n    var newList = l.at(1, 3); // the 2nd and 4th elements\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 4</h3>\n<p>chainability is a key advantage of NodeLists: </p> <pre><code>require([\"dojo/query\", \"dojo/NodeList-dom\"\n], function(query){\n    query(\".thinger\")\n        .onclick(function(e){ /* ... */ })\n        .at(1, 3, 8) // get a subset\n            .style(\"padding\", \"5px\")\n            .forEach(console.log);\n});</code></pre> </div> </div>         <h2 id=\"properties\">Properties</h2>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_events\">\n<span class=\"arrayIcon\">events</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/nodelist\" class=\"jsdoc-link\">dojo/_base/NodeList</a> </p>    <h2 id=\"methods\">Methods</h2>                      <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_addClass\">\n<span class=\"functionIcon\">addClass</span><span class=\"parameters\">(className)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"nodelist-dom\" class=\"jsdoc-link\">dojo/NodeList-dom</a> </p> <p>adds the specified class to every node in the list</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">className</td> <td class=\"jsdoc-param-type\">String | Array</td> <td class=\"jsdoc-param-description\">\n<p>A String class name to add, or several space-separated class names, or an array of class names.</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_addClassFx\">\n<span class=\"functionIcon\">addClassFx</span><span class=\"parameters\">(cssClass,args)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"http://dojotoolkit.org/api/1.10/dojox/fx/ext-dojo/NodeList-style\" class=\"jsdoc-link\">dojox/fx/ext-dojo/NodeList-style</a> </p> <p>Animate the effects of adding a class to all nodes in this list. see <code>dojox.fx.addClass</code></p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">cssClass</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">args</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">[object Value(type: function, value: undefined)]</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>// fade all elements with class \"bar\" to to 50% opacity\ndojo.query(\".bar\").addClassFx(\"bar\").play();</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_addContent\">\n<span class=\"functionIcon\">addContent</span><span class=\"parameters\">(content,position)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"nodelist-dom\" class=\"jsdoc-link\">dojo/NodeList-dom</a> </p> <p>add a node, NodeList or some HTML as a string to every item in the list. Returns the original list.</p>  <p>a copy of the HTML content is added to each item in the list, with an optional position argument. If no position argument is provided, the content is appended to the end of each item.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">content</td> <td class=\"jsdoc-param-type\">String | DomNode | Object | <a class=\"jsdoc-link\" href=\"nodelist\">dojo/NodeList</a>\n</td> <td class=\"jsdoc-param-description\">\n<p>the content to be set on the parent element. This can be an html string, a node reference or a NodeList, dojo/NodeList, Array or other enumerable list of nodes</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">position</td> <td class=\"jsdoc-param-type\">String | Integer</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>can be one of: </p> <ul> <li>\"last\"||\"end\" (default)</li> <li>\"first||\"start\"</li> <li>\"before\"</li> <li>\"after\"</li> <li>\"replace\" (replaces nodes in this NodeList with new content)</li> <li>\"only\" (removes other children of the nodes so new content is the only child)</li> </ul> <p>or an offset in the childNodes property</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">function</span></p> <p>add a node, NodeList or some HTML as a string to every item in the list. Returns the original list.</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>appends content to the end if the position is omitted </p> <pre><code>require([\"dojo/query\", \"dojo/NodeList-dom\"\n], function(query){\n    query(\"h3 &gt; p\").addContent(\"hey there!\");\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>add something to the front of each element that has a \"thinger\" property: </p> <pre><code>require([\"dojo/query\", \"dojo/NodeList-dom\"\n], function(query){\n    query(\"[thinger]\").addContent(\"...\", \"first\");\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<p>adds a header before each element of the list </p> <pre><code>require([\"dojo/query\", \"dojo/NodeList-dom\"\n], function(query){\n    query(\".note\").addContent(\"&lt;h4&gt;NOTE:&lt;/h4&gt;\", \"before\");\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 4</h3>\n<p>add a clone of a DOM node to the end of every element in the list, removing it from its existing parent. </p> <pre><code>require([\"dojo/dom\", \"dojo/query\", \"dojo/NodeList-dom\"\n], function(dom, query){\n    query(\".note\").addContent(dom.byId(\"foo\"));\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 5</h3>\n<p>Append nodes from a templatized string. </p> <pre><code>require([\"dojo/string\", \"dojo/query\", \"dojo/NodeList-dom\"\n], function(string, query){\n    query(\".note\").addContent({\n        template: '&lt;b&gt;${id}: &lt;/b&gt;&lt;span&gt;${name}&lt;/span&gt;',\n        id: \"user332\",\n        name: \"Mr. Anderson\"\n    });\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 6</h3>\n<p>Append nodes from a templatized string that also has widgets parsed. </p> <pre><code>require([\"dojo/string\", \"dojo/parser\", \"dojo/query\", \"dojo/NodeList-dom\"\n], function(string, parser, query){\n    var notes = query(\".note\").addContent({\n        template: '&lt;button dojoType=\"dijit/form/Button\"&gt;${text}&lt;/button&gt;',\n        parse: true,\n        text: \"Send\"\n    });\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_adopt\">\n<span class=\"functionIcon\">adopt</span><span class=\"parameters\">(queryOrListOrNode,position)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"nodelist-dom\" class=\"jsdoc-link\">dojo/NodeList-dom</a> </p> <p>places any/all elements in queryOrListOrNode at a position relative to the first element in this list. Returns a dojo/NodeList of the adopted elements.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">queryOrListOrNode</td> <td class=\"jsdoc-param-type\">String | Array | DomNode</td> <td class=\"jsdoc-param-description\">\n<p>a DOM node or a query string or a query result. Represents the nodes to be adopted relative to the first element of this NodeList.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">position</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>can be one of: </p> <ul> <li>\"last\" (default)</li> <li>\"first\"</li> <li>\"before\"</li> <li>\"after\"</li> <li>\"only\"</li> <li>\"replace\"</li> </ul> <p>or an offset in the childNodes property</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_after\">\n<span class=\"functionIcon\">after</span><span class=\"parameters\">(content)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"nodelist-manipulate\" class=\"jsdoc-link\">dojo/NodeList-manipulate</a> </p> <p>Places the content after every node in the NodeList.</p>  <p>The content will be cloned if the length of NodeList is greater than 1. Only the DOM nodes are cloned, not any attached event handlers.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">content</td> <td class=\"jsdoc-param-type\">String | Element | NodeList</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | undefined</span></p> <p>dojo/NodeList, the nodes currently in this NodeList will be returned, not the appended content.</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>assume a DOM created by this markup: </p> <pre><code>&lt;div id=\"foo\"&gt;&lt;p&gt;Hello Mars&lt;/p&gt;&lt;/div&gt;\n&lt;div id=\"bar\"&gt;&lt;p&gt;Hello World&lt;/p&gt;&lt;/div&gt;</code></pre> <p>Running this code: </p> <pre><code>require([\"dojo/query\", \"dojo/NodeList-manipulate\"\n], function(query){\n    query(\"div\").after(\"&lt;span&gt;after&lt;/span&gt;\");\n});</code></pre> <p>Results in this DOM structure: </p> <pre><code>&lt;div id=\"foo\"&gt;&lt;p&gt;Hello Mars&lt;/p&gt;&lt;/div&gt;&lt;span&gt;after&lt;/span&gt;\n&lt;div id=\"bar\"&gt;&lt;p&gt;Hello World&lt;/p&gt;&lt;/div&gt;&lt;span&gt;after&lt;/span&gt;</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_andSelf\">\n<span class=\"functionIcon\">andSelf</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"nodelist-traverse\" class=\"jsdoc-link\">dojo/NodeList-traverse</a> </p> <p>Adds the nodes from the previous dojo/NodeList to the current dojo/NodeList.</p>  <p>.end() can be used on the returned <a class=\"jsdoc-link\" href=\"nodelist\">dojo/NodeList</a> to get back to the original <a class=\"jsdoc-link\" href=\"nodelist\">dojo/NodeList</a>.</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>assume a DOM created by this markup: </p> <pre><code>&lt;div class=\"container\"&gt;\n    &lt;div class=\"red prev\"&gt;Red One&lt;/div&gt;\n    Some Text\n    &lt;div class=\"blue prev\"&gt;Blue One&lt;/div&gt;\n    &lt;div class=\"red second\"&gt;Red Two&lt;/div&gt;\n    &lt;div class=\"blue\"&gt;Blue Two&lt;/div&gt;\n&lt;/div&gt;</code></pre> <p>Running this code: </p> <pre><code>require([\"dojo/query\", \"dojo/NodeList-traverse\"\n], function(query){\n    query(\".second\").prevAll().andSelf();\n});</code></pre> <p>returns the two divs with class of \"prev\", as well as the div with class \"second\". </p> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_anim\">\n<span class=\"functionIcon\">anim</span><span class=\"parameters\">(properties,duration,easing,onEnd,delay)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"nodelist-fx\" class=\"jsdoc-link\">dojo/NodeList-fx</a> </p> <p>Animate one or more CSS properties for all nodes in this list. The returned animation object will already be playing when it is returned. See the docs for <code>dojo.anim</code> for full details.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">properties</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>the properties to animate. does NOT support the <code>auto</code> parameter like other NodeList-fx methods.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">duration</td> <td class=\"jsdoc-param-type\">Integer</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Optional. The time to run the animations for</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">easing</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Optional. The easing function to use.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">onEnd</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>A function to be called when the animation ends</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">delay</td> <td class=\"jsdoc-param-type\">Integer</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>how long to delay playing the returned animation</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Another way to fade out: </p> <pre><code>require([\"dojo/query\", \"dojo/NodeList-fx\"\n], function(query){\n    query(\".thinger\").anim({ opacity: 0 });\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>animate all elements with the \"thigner\" class to a width of 500 pixels over half a second </p> <pre><code>require([\"dojo/query\", \"dojo/NodeList-fx\"\n], function(query){\n    query(\".thinger\").anim({ width: 500 }, 700);\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_animateProperty\">\n<span class=\"functionIcon\">animateProperty</span><span class=\"parameters\">(args)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"nodelist-fx\" class=\"jsdoc-link\">dojo/NodeList-fx</a> </p> <p>Animate all elements of this NodeList across the properties specified. syntax identical to <code>dojo.animateProperty</code> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">args</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Additional dojo/_base/fx.Animation arguments to mix into this set with the addition of an <code>auto</code> parameter. </p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\"><a class=\"jsdoc-link\" href=\"_base/fx#Animation\">dojo/_base/fx.Animation</a>|<a class=\"jsdoc-link\" href=\"nodelist\">dojo/NodeList</a> | undefined</span></p> <p>A special args member <code>auto</code> can be passed to automatically play the animation. If args.auto is present, the original dojo/NodeList will be returned for further chaining. Otherwise the dojo/_base/fx.Animation instance is returned and must be .play()'ed </p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>require([\"dojo/query\", \"dojo/NodeList-fx\"\n], function(query){\n    query(\".zork\").animateProperty({\n        duration: 500,\n        properties: {\n            color:      { start: \"black\", end: \"white\" },\n            left:       { end: 300 }\n        }\n    }).play();\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<pre><code>require([\"dojo/query\", \"dojo/NodeList-fx\"\n], function(query){\n    query(\".grue\").animateProperty({\n        auto:true,\n        properties: {\n            height:240\n        }\n    }).onclick(handler);\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_append\">\n<span class=\"functionIcon\">append</span><span class=\"parameters\">(content)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"nodelist-manipulate\" class=\"jsdoc-link\">dojo/NodeList-manipulate</a> </p> <p>appends the content to every node in the NodeList.</p>  <p>The content will be cloned if the length of NodeList is greater than 1. Only the DOM nodes are cloned, not any attached event handlers.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">content</td> <td class=\"jsdoc-param-type\">String | DOMNode | NodeList</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | undefined</span></p> <p>dojo/NodeList, the nodes currently in this NodeList will be returned, not the appended content.</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>assume a DOM created by this markup: </p> <pre><code>&lt;div id=\"foo\"&gt;&lt;p&gt;Hello Mars&lt;/p&gt;&lt;/div&gt;\n&lt;div id=\"bar\"&gt;&lt;p&gt;Hello World&lt;/p&gt;&lt;/div&gt;</code></pre> <p>Running this code: </p> <pre><code>require([\"dojo/query\", \"dojo/NodeList-manipulate\"\n], function(query){\n    query(\"div\").append(\"&lt;span&gt;append&lt;/span&gt;\");\n});</code></pre> <p>Results in this DOM structure: </p> <pre><code>&lt;div id=\"foo\"&gt;&lt;p&gt;Hello Mars&lt;/p&gt;&lt;span&gt;append&lt;/span&gt;&lt;/div&gt;\n&lt;div id=\"bar\"&gt;&lt;p&gt;Hello World&lt;/p&gt;&lt;span&gt;append&lt;/span&gt;&lt;/div&gt;</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_appendTo\">\n<span class=\"functionIcon\">appendTo</span><span class=\"parameters\">(query)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"nodelist-manipulate\" class=\"jsdoc-link\">dojo/NodeList-manipulate</a> </p> <p>appends nodes in this NodeList to the nodes matched by the query passed to appendTo.</p>  <p>The nodes in this NodeList will be cloned if the query matches more than one element. Only the DOM nodes are cloned, not any attached event handlers.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">query</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | undefined</span></p> <p>dojo/NodeList, the nodes currently in this NodeList will be returned, not the matched nodes from the query.</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>assume a DOM created by this markup: </p> <pre><code>&lt;span&gt;append&lt;/span&gt;\n&lt;p&gt;Hello Mars&lt;/p&gt;\n&lt;p&gt;Hello World&lt;/p&gt;</code></pre> <p>Running this code: </p> <pre><code>require([\"dojo/query\", \"dojo/NodeList-manipulate\"\n], function(query){\n    query(\"span\").appendTo(\"p\");\n});</code></pre> <p>Results in this DOM structure: </p> <pre><code>&lt;p&gt;Hello Mars&lt;span&gt;append&lt;/span&gt;&lt;/p&gt;\n&lt;p&gt;Hello World&lt;span&gt;append&lt;/span&gt;&lt;/p&gt;</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_at\">\n<span class=\"functionIcon\">at</span><span class=\"parameters\">(index)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"query\" class=\"jsdoc-link\">dojo/query</a> </p> <p>Returns a new NodeList comprised of items in this NodeList at the given index or indices. </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">index</td> <td class=\"jsdoc-param-type\">Integer...</td> <td class=\"jsdoc-param-description\">\n<p>One or more 0-based indices of items in the current NodeList. A negative index will start at the end of the list and go backwards. </p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Shorten the list to the first, second, and third elements </p> <pre><code>require([\"dojo/query\"\n], function(query){\n    query(\"a\").at(0, 1, 2).forEach(fn);\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>Retrieve the first and last elements of a unordered list: </p> <pre><code>require([\"dojo/query\"\n], function(query){\n    query(\"ul &gt; li\").at(0, -1).forEach(cb);\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<p>Do something for the first element only, but end() out back to the original list and continue chaining: </p> <pre><code>require([\"dojo/query\"\n], function(query){\n    query(\"a\").at(0).onclick(fn).end().forEach(function(n){\n        console.log(n); // all anchors on the page.\n})\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_attr\">\n<span class=\"functionIcon\">attr</span><span class=\"parameters\">(property,value)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"nodelist-dom\" class=\"jsdoc-link\">dojo/NodeList-dom</a> </p> <p>gets or sets the DOM attribute for every element in the NodeList. See also <code>dojo/dom-attr</code></p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">property</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>the attribute to get/set</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">value</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>optional. The value to set the property to</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any</span></p> <p>if no value is passed, the result is an array of attribute values If a value is passed, the return is this NodeList</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Make all nodes with a particular class focusable: </p> <pre><code>require([\"dojo/query\", \"dojo/NodeList-dom\"], function(query){\n    query(\".focusable\").attr(\"tabIndex\", -1);\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>Disable a group of buttons: </p> <pre><code>require([\"dojo/query\", \"dojo/NodeList-dom\"], function(query){\n    query(\"button.group\").attr(\"disabled\", true);\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<p>innerHTML can be assigned or retrieved as well: </p> <pre><code>// get the innerHTML (as an array) for each list item\nrequire([\"dojo/query\", \"dojo/NodeList-dom\"], function(query){\n    var ih = query(\"li.replaceable\").attr(\"innerHTML\");\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_before\">\n<span class=\"functionIcon\">before</span><span class=\"parameters\">(content)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"nodelist-manipulate\" class=\"jsdoc-link\">dojo/NodeList-manipulate</a> </p> <p>Places the content before every node in the NodeList.</p>  <p>The content will be cloned if the length of NodeList is greater than 1. Only the DOM nodes are cloned, not any attached event handlers.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">content</td> <td class=\"jsdoc-param-type\">String | DOMNode | NodeList</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | undefined</span></p> <p>dojo/NodeList, the nodes currently in this NodeList will be returned, not the appended content.</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>assume a DOM created by this markup: </p> <pre><code>&lt;div id=\"foo\"&gt;&lt;p&gt;Hello Mars&lt;/p&gt;&lt;/div&gt;\n&lt;div id=\"bar\"&gt;&lt;p&gt;Hello World&lt;/p&gt;&lt;/div&gt;</code></pre> <p>Running this code: </p> <pre><code>require([\"dojo/query\", \"dojo/NodeList-manipulate\"\n], function(query){\n    query(\"div\").before(\"&lt;span&gt;before&lt;/span&gt;\");\n});</code></pre> <p>Results in this DOM structure: </p> <pre><code>&lt;span&gt;before&lt;/span&gt;&lt;div id=\"foo\"&gt;&lt;p&gt;Hello Mars&lt;/p&gt;&lt;/div&gt;\n&lt;span&gt;before&lt;/span&gt;&lt;div id=\"bar\"&gt;&lt;p&gt;Hello World&lt;/p&gt;&lt;/div&gt;</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_children\">\n<span class=\"functionIcon\">children</span><span class=\"parameters\">(query)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"nodelist-traverse\" class=\"jsdoc-link\">dojo/NodeList-traverse</a> </p> <p>Returns all immediate child elements for nodes in this dojo/NodeList. Optionally takes a query to filter the child elements.</p>  <p>.end() can be used on the returned <a class=\"jsdoc-link\" href=\"nodelist\">dojo/NodeList</a> to get back to the original <a class=\"jsdoc-link\" href=\"nodelist\">dojo/NodeList</a>.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">query</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>a CSS selector.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | undefined</span></p> <p>all immediate child elements for the nodes in this dojo/NodeList.</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>assume a DOM created by this markup: </p> <pre><code>&lt;div class=\"container\"&gt;\n    &lt;div class=\"red\"&gt;Red One&lt;/div&gt;\n    Some Text\n    &lt;div class=\"blue\"&gt;Blue One&lt;/div&gt;\n    &lt;div class=\"red\"&gt;Red Two&lt;/div&gt;\n    &lt;div class=\"blue\"&gt;Blue Two&lt;/div&gt;\n&lt;/div&gt;</code></pre> <p>Running this code: </p> <pre><code>require([\"dojo/query\", \"dojo/NodeList-traverse\"\n], function(query){\n    query(\".container\").children();\n});</code></pre> <p>returns the four divs that are children of the container div. </p> <p>Running this code: </p> <pre><code>dojo.query(\".container\").children(\".red\");</code></pre> <p>returns the two divs that have the class \"red\". </p> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_clone\">\n<span class=\"functionIcon\">clone</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"nodelist-manipulate\" class=\"jsdoc-link\">dojo/NodeList-manipulate</a> </p> <p>Clones all the nodes in this NodeList and returns them as a new NodeList.</p>  <p>Only the DOM nodes are cloned, not any attached event handlers.</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | undefined</span></p> <p>a cloned set of the original nodes.</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>assume a DOM created by this markup: </p> <pre><code>&lt;div class=\"container\"&gt;\n    &lt;div class=\"red\"&gt;Red One&lt;/div&gt;\n    &lt;div class=\"blue\"&gt;Blue One&lt;/div&gt;\n    &lt;div class=\"red\"&gt;Red Two&lt;/div&gt;\n    &lt;div class=\"blue\"&gt;Blue Two&lt;/div&gt;\n&lt;/div&gt;</code></pre> <p>Running this code: </p> <pre><code>require([\"dojo/query\", \"dojo/NodeList-manipulate\"\n], function(query){\n    query(\".red\").clone().appendTo(\".container\");\n});</code></pre> <p>Results in this DOM structure: </p> <pre><code>&lt;div class=\"container\"&gt;\n    &lt;div class=\"red\"&gt;Red One&lt;/div&gt;\n    &lt;div class=\"blue\"&gt;Blue One&lt;/div&gt;\n    &lt;div class=\"red\"&gt;Red Two&lt;/div&gt;\n    &lt;div class=\"blue\"&gt;Blue Two&lt;/div&gt;\n    &lt;div class=\"red\"&gt;Red One&lt;/div&gt;\n    &lt;div class=\"red\"&gt;Red Two&lt;/div&gt;\n&lt;/div&gt;</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_closest\">\n<span class=\"functionIcon\">closest</span><span class=\"parameters\">(query,root)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"nodelist-traverse\" class=\"jsdoc-link\">dojo/NodeList-traverse</a> </p> <p>Returns closest parent that matches query, including current node in this dojo/NodeList if it matches the query.</p>  <p>.end() can be used on the returned <a class=\"jsdoc-link\" href=\"nodelist\">dojo/NodeList</a> to get back to the original <a class=\"jsdoc-link\" href=\"nodelist\">dojo/NodeList</a>.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">query</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>a CSS selector.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">root</td> <td class=\"jsdoc-param-type\">String | DOMNode</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>If specified, query is relative to \"root\" rather than document body.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | undefined</span></p> <p>the closest parent that matches the query, including the current node in this dojo/NodeList if it matches the query.</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>assume a DOM created by this markup: </p> <pre><code>&lt;div class=\"container\"&gt;\n    &lt;div class=\"red\"&gt;Red One&lt;/div&gt;\n    Some Text\n    &lt;div class=\"blue\"&gt;Blue One&lt;/div&gt;\n    &lt;div class=\"red\"&gt;Red Two&lt;/div&gt;\n    &lt;div class=\"blue\"&gt;Blue Two&lt;/div&gt;\n&lt;/div&gt;</code></pre> <p>Running this code: </p> <pre><code>require([\"dojo/query\", \"dojo/NodeList-traverse\"\n], function(query){\n    query(\".red\").closest(\".container\");\n});</code></pre> <p>returns the div with class \"container\". </p> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_concat\">\n<span class=\"functionIcon\">concat</span><span class=\"parameters\">(item)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"query\" class=\"jsdoc-link\">dojo/query</a> </p> <p>Returns a new NodeList comprised of items in this NodeList as well as items passed in as parameters</p>  <p>This method behaves exactly like the Array.concat method with the caveat that it returns a <code>NodeList</code> and not a raw Array. For more details, see the <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/concat\">Array.concat docs</a></p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Any number of optional parameters may be passed in to be spliced into the NodeList</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_connect\">\n<span class=\"functionIcon\">connect</span><span class=\"parameters\">(methodName,objOrFunc,funcName)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/nodelist\" class=\"jsdoc-link\">dojo/_base/NodeList</a> </p> <p>Attach event handlers to every item of the NodeList. Uses dojo.connect() so event properties are normalized. </p> <p>Application must manually require() \"dojo/_base/connect\" before using this method.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">methodName</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>the name of the method to attach to. For DOM events, this should be the lower-case name of the event</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">objOrFunc</td> <td class=\"jsdoc-param-type\">Object | Function | String</td> <td class=\"jsdoc-param-description\">\n<p>if 2 arguments are passed (methodName, objOrFunc), objOrFunc should reference a function or be the name of the function in the global namespace to attach. If 3 arguments are provided (methodName, objOrFunc, funcName), objOrFunc must be the scope to locate the bound function in</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">funcName</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>optional. A string naming the function in objOrFunc to bind to the event. May also be a function reference.</p> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>add an onclick handler to every button on the page </p> <pre><code>query(\"div:nth-child(odd)\").connect(\"onclick\", function(e){\n    console.log(\"clicked!\");\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>attach foo.bar() to every odd div's onmouseover </p> <pre><code>query(\"div:nth-child(odd)\").connect(\"onmouseover\", foo, \"bar\");</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_coords\">\n<span class=\"functionIcon\">coords</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/nodelist\" class=\"jsdoc-link\">dojo/_base/NodeList</a> </p> <p>Deprecated: Use position() for border-box x/y/w/h or marginBox() for margin-box w/h/l/t. Returns the box objects of all elements in a node list as an Array (<em>not</em> a NodeList). Acts like <code>domGeom.coords</code>, though assumes the node passed is each node in this list.</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_data\">\n<span class=\"functionIcon\">data</span><span class=\"parameters\">(key,value)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"nodelist-data\" class=\"jsdoc-link\">dojo/NodeList-data</a> </p> <p>stash or get some arbitrary data on/from these nodes. </p>  <p>Stash or get some arbitrary data on/from these nodes. This private _data function is exposed publicly on <a class=\"jsdoc-link\" href=\"nodelist\">dojo/NodeList</a>, eg: as the result of a <a class=\"jsdoc-link\" href=\"query\">dojo/query</a> call. DIFFERS from jQuery.data in that when used as a getter, the entire list is ALWAYS returned. EVEN WHEN THE LIST IS length == 1. </p> <p>A single-node version of this function is provided as <code>dojo._nodeData</code>, which follows the same signature, though expects a String ID or DomNode reference in the first position, before key/value arguments. </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">key</td> <td class=\"jsdoc-param-type\">Object | String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>If an object, act as a setter and iterate over said object setting data items as defined. If a string, and <code>value</code> present, set the data for defined <code>key</code> to <code>value</code> If a string, and <code>value</code> absent, act as a getter, returning the data associated with said <code>key</code> </p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">value</td> <td class=\"jsdoc-param-type\">Anything</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>The value to set for said <code>key</code>, provided <code>key</code> is a string (and not an object) </p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Object|Anything|Nothing</span></p> <p>When used as a setter via <code>dojo/NodeList</code>, a NodeList instance is returned for further chaining. When used as a getter via <code>dojo/NodeList</code> an ARRAY of items is returned. The items in the array correspond to the elements in the original list. This is true even when the list length is 1, eg: when looking up a node by ID (#foo)</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Set a key <code>bar</code> to some data, then retrieve it. </p> <pre><code>require([\"dojo/query\", \"dojo/NodeList-data\"], function(query){\n    query(\".foo\").data(\"bar\", \"touched\");\n    var touched = query(\".foo\").data(\"bar\");\n    if(touched[0] == \"touched\"){ alert('win'); }\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>Get all the data items for a given node. </p> <pre><code>require([\"dojo/query\", \"dojo/NodeList-data\"], function(query){\n    var list = query(\".foo\").data();\n    var first = list[0];\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<p>Set the data to a complex hash. Overwrites existing keys with new value </p> <pre><code>require([\"dojo/query\", \"dojo/NodeList-data\"], function(query){\n    query(\".foo\").data({ bar:\"baz\", foo:\"bar\" });</code></pre> <p>Then get some random key: </p> <pre><code>query(\".foo\").data(\"foo\"); // returns [`bar`]\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_delegate\">\n<span class=\"functionIcon\">delegate</span><span class=\"parameters\">(selector,eventName,fn)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"http://dojotoolkit.org/api/1.10/dojox/NodeList/delegate\" class=\"jsdoc-link\">dojox/NodeList/delegate</a> </p> <p>Monitor nodes in this NodeList for [bubbled] events on nodes that match selector. Calls fn(evt) for those events, where (inside of fn()), this == the node that matches the selector.</p>  <p>Sets up event handlers that can catch events on any subnodes matching a given selector, including nodes created after delegate() has been called. </p> <p>This allows an app to setup a single event handler on a high level node, rather than many event handlers on subnodes. For example, one onclick handler for a Tree widget, rather than separate handlers for each node in the tree. Since setting up many event handlers is expensive, this can increase performance. </p> <p>Note that delegate() will not work for events that don't bubble, like focus. onmouseenter/onmouseleave also don't currently work.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">selector</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>CSS selector valid to <code>dojo.query</code>, like \".foo\" or \"div &gt; span\". The selector is relative to the nodes in this NodeList, not the document root. For example myNodeList.delegate(\"&gt; a\", \"onclick\", ...) will catch events on anchor nodes which are (immediate) children of the nodes in myNodeList.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">eventName</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>Standard event name used as an argument to <code>dojo.connect</code>, like \"onclick\".</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">fn</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\">\n<p>Callback function passed the event object, and where this == the node that matches the selector. That means that for example, after setting up a handler via </p> <pre><code>dojo.query(\"body\").delegate(\"fieldset\", \"onclick\", ...)</code></pre> <p>clicking on a fieldset or <em>any nodes inside of a fieldset</em> will be reported </p> <p>as a click on the fieldset itself.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>dojo.query(\"navbar\").delegate(\"a\", \"onclick\", function(evt){\n        console.log(\"user clicked anchor \", this.node);\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_dtl\">\n<span class=\"functionIcon\">dtl</span><span class=\"parameters\">(template,context)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"http://dojotoolkit.org/api/1.10/dojox/dtl/ext-dojo/NodeList\" class=\"jsdoc-link\">dojox/dtl/ext-dojo/NodeList</a> </p> <p>Renders the specified template in each of the NodeList entries.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">template</td> <td class=\"jsdoc-param-type\">dojox/dtl/__StringArgs | String</td> <td class=\"jsdoc-param-description\">\n<p>The template string or location</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">context</td> <td class=\"jsdoc-param-type\">dojox/dtl/__ObjectArgs | Object</td> <td class=\"jsdoc-param-description\">\n<p>The context object or location</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">function</span></p> <p>Renders the specified template in each of the NodeList entries.</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_empty\">\n<span class=\"functionIcon\">empty</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"nodelist-dom\" class=\"jsdoc-link\">dojo/NodeList-dom</a> </p> <p>clears all content from each node in the list. Effectively equivalent to removing all child nodes from every item in the list.</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_end\">\n<span class=\"functionIcon\">end</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"query\" class=\"jsdoc-link\">dojo/query</a> </p> <p>Ends use of the current <code>NodeList</code> by returning the previous NodeList that generated the current NodeList.</p>  <p>Returns the <code>NodeList</code> that generated the current <code>NodeList</code>. If there is no parent NodeList, an empty NodeList is returned.</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined | instance</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>require([\"dojo/query\", \"dojo/NodeList-dom\"\n], function(query){\n    query(\"a\")\n        .filter(\".disabled\")\n            // operate on the anchors that only have a disabled class\n            .style(\"color\", \"grey\")\n        .end()\n        // jump back to the list of anchors\n        .style(...)\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_even\">\n<span class=\"functionIcon\">even</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"nodelist-traverse\" class=\"jsdoc-link\">dojo/NodeList-traverse</a> </p> <p>Returns the even nodes in this dojo/NodeList as a dojo/NodeList.</p>  <p>.end() can be used on the returned <a class=\"jsdoc-link\" href=\"nodelist\">dojo/NodeList</a> to get back to the original <a class=\"jsdoc-link\" href=\"nodelist\">dojo/NodeList</a>.</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | undefined</span></p> <p>the even nodes in this dojo/NodeList</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>assume a DOM created by this markup: </p> <pre><code>&lt;div class=\"container\"&gt;\n    &lt;div class=\"interior red\"&gt;Red One&lt;/div&gt;\n    &lt;div class=\"interior blue\"&gt;Blue One&lt;/div&gt;\n    &lt;div class=\"interior red\"&gt;Red Two&lt;/div&gt;\n    &lt;div class=\"interior blue\"&gt;Blue Two&lt;/div&gt;\n&lt;/div&gt;</code></pre> <p>Running this code: </p> <pre><code>require([\"dojo/query\", \"dojo/NodeList-traverse\"\n], function(query){\n    query(\".interior\").even();\n});</code></pre> <p>returns the two divs with class \"blue\" </p> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_every\">\n<span class=\"functionIcon\">every</span><span class=\"parameters\">(callback,thisObject)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"query\" class=\"jsdoc-link\">dojo/query</a> </p> <p>see <code>dojo/_base/array.every()</code> and the <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/every\">Array.every docs</a>. Takes the same structure of arguments and returns as dojo/_base/array.every() with the caveat that the passed array is implicitly this NodeList</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">callback</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\">\n<p>the callback</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">thisObject</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>the context</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_fadeIn\">\n<span class=\"functionIcon\">fadeIn</span><span class=\"parameters\">(args)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"nodelist-fx\" class=\"jsdoc-link\">dojo/NodeList-fx</a> </p> <p>fade in all elements of this NodeList via <code>dojo.fadeIn</code> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">args</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Additional dojo/_base/fx.Animation arguments to mix into this set with the addition of an <code>auto</code> parameter. </p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\"><a class=\"jsdoc-link\" href=\"_base/fx#Animation\">dojo/_base/fx.Animation</a>|<a class=\"jsdoc-link\" href=\"nodelist\">dojo/NodeList</a> | undefined</span></p> <p>A special args member <code>auto</code> can be passed to automatically play the animation. If args.auto is present, the original dojo/NodeList will be returned for further chaining. Otherwise the dojo/_base/fx.Animation instance is returned and must be .play()'ed </p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Fade in all tables with class \"blah\": </p> <pre><code>require([\"dojo/query\", \"dojo/NodeList-fx\"\n], function(query){\n    query(\"table.blah\").fadeIn().play();\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_fadeOut\">\n<span class=\"functionIcon\">fadeOut</span><span class=\"parameters\">(args)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"nodelist-fx\" class=\"jsdoc-link\">dojo/NodeList-fx</a> </p> <p>fade out all elements of this NodeList via <code>dojo.fadeOut</code> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">args</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Additional dojo/_base/fx.Animation arguments to mix into this set with the addition of an <code>auto</code> parameter. </p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\"><a class=\"jsdoc-link\" href=\"_base/fx#Animation\">dojo/_base/fx.Animation</a>|<a class=\"jsdoc-link\" href=\"nodelist\">dojo/NodeList</a> | undefined</span></p> <p>A special args member <code>auto</code> can be passed to automatically play the animation. If args.auto is present, the original dojo/NodeList will be returned for further chaining. Otherwise the dojo/_base/fx.Animation instance is returned and must be .play()'ed </p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Fade out all elements with class \"zork\": </p> <pre><code>require([\"dojo/query\", \"dojo/NodeList-fx\"\n], function(query){\n    query(\".zork\").fadeOut().play();\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>Fade them on a delay and do something at the end: </p> <pre><code>require([\"dojo/query\", \"dojo/aspect\", \"dojo/NodeList-fx\"\n], function(query, aspect){\n    var fo = query(\".zork\").fadeOut();\n    aspect.after(fo, \"onEnd\", function(){ /*...*/ }, true);\n    fo.play();\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<p>Using <code>auto</code>: </p> <pre><code>require([\"dojo/query\", \"dojo/NodeList-fx\"\n], function(query){\n    query(\"li\").fadeOut({ auto:true }).filter(filterFn).forEach(doit);\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_filter\">\n<span class=\"functionIcon\">filter</span><span class=\"parameters\">(filter)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"nodelist-dom\" class=\"jsdoc-link\">dojo/NodeList-dom</a> </p> <p>\"masks\" the built-in javascript filter() method (supported in Dojo via <code>dojo.filter</code>) to support passing a simple string filter in addition to supporting filtering function objects.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">filter</td> <td class=\"jsdoc-param-type\">String | Function</td> <td class=\"jsdoc-param-description\">\n<p>If a string, a CSS rule like \".thinger\" or \"div &gt; span\".</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>\"regular\" JS filter syntax as exposed in dojo.filter: </p> <pre><code>require([\"dojo/query\", \"dojo/NodeList-dom\"\n], function(query){\n    query(\"*\").filter(function(item){\n        // highlight every paragraph\n        return (item.nodeName == \"p\");\n    }).style(\"backgroundColor\", \"yellow\");\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>the same filtering using a CSS selector </p> <pre><code>require([\"dojo/query\", \"dojo/NodeList-dom\"\n], function(query){\n    query(\"*\").filter(\"p\").styles(\"backgroundColor\", \"yellow\");\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_first\">\n<span class=\"functionIcon\">first</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"nodelist-traverse\" class=\"jsdoc-link\">dojo/NodeList-traverse</a> </p> <p>Returns the first node in this dojo/NodeList as a dojo/NodeList.</p>  <p>.end() can be used on the returned <a class=\"jsdoc-link\" href=\"nodelist\">dojo/NodeList</a> to get back to the original <a class=\"jsdoc-link\" href=\"nodelist\">dojo/NodeList</a>.</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | undefined</span></p> <p>the first node in this dojo/NodeList</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>assume a DOM created by this markup: </p> <pre><code>&lt;div class=\"container\"&gt;\n    &lt;div class=\"red\"&gt;Red One&lt;/div&gt;\n    &lt;div class=\"blue first\"&gt;Blue One&lt;/div&gt;\n    &lt;div class=\"red\"&gt;Red Two&lt;/div&gt;\n    &lt;div class=\"blue last\"&gt;Blue Two&lt;/div&gt;\n&lt;/div&gt;</code></pre> <p>Running this code: </p> <pre><code>require([\"dojo/query\", \"dojo/NodeList-traverse\"\n], function(query){\n    query(\".blue\").first();\n});</code></pre> <p>returns the div with class \"blue\" and \"first\". </p> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_forEach\">\n<span class=\"functionIcon\">forEach</span><span class=\"parameters\">(callback,thisObj)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"query\" class=\"jsdoc-link\">dojo/query</a> </p> <p>see <code>dojo/_base/array.forEach()</code>. The primary difference is that the acted-on array is implicitly this NodeList. If you want the option to break out of the forEach loop, use every() or some() instead.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">callback</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">thisObj</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">function</span></p> <p>see <code>dojo/_base/array.forEach()</code>. The primary difference is that the acted-on array is implicitly this NodeList. If you want the option to break out of the forEach loop, use every() or some() instead.</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_html\">\n<span class=\"functionIcon\">html</span><span class=\"parameters\">(value)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"nodelist-manipulate\" class=\"jsdoc-link\">dojo/NodeList-manipulate</a> </p> <p>allows setting the innerHTML of each node in the NodeList, if there is a value passed in, otherwise, reads the innerHTML value of the first node.</p>  <p>This method is simpler than the <a class=\"jsdoc-link\" href=\"nodelist#html\">dojo/NodeList.html()</a> method provided by <a class=\"jsdoc-link\" href=\"nodelist-html\">dojo/NodeList-html</a>. This method just does proper innerHTML insertion of HTML fragments, and it allows for the innerHTML to be read for the first node in the node list. Since <a class=\"jsdoc-link\" href=\"nodelist-html\">dojo/NodeList-html</a> already took the \"html\" name, this method is called \"innerHTML\". However, if <a class=\"jsdoc-link\" href=\"nodelist-html\">dojo/NodeList-html</a> has not been loaded yet, this module will define an \"html\" method that can be used instead. Be careful if you are working in an environment where it is possible that <a class=\"jsdoc-link\" href=\"nodelist-html\">dojo/NodeList-html</a> could have been loaded, since its definition of \"html\" will take precedence. The nodes represented by the value argument will be cloned if more than one node is in this NodeList. The nodes in this NodeList are returned in the \"set\" usage of this method, not the HTML that was inserted.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">value</td> <td class=\"jsdoc-param-type\">String | DOMNode | NodeList</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | undefined</span></p> <p>if no value is passed, the result is String, the innerHTML of the first node. If a value is passed, the return is this dojo/NodeList</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>assume a DOM created by this markup: </p> <pre><code>&lt;div id=\"foo\"&gt;&lt;/div&gt;\n&lt;div id=\"bar\"&gt;&lt;/div&gt;</code></pre> <p>This code inserts <code>&lt;p&gt;Hello World&lt;/p&gt;</code> into both divs: </p> <pre><code>require([\"dojo/query\", \"dojo/NodeList-manipulate\"\n], function(query){\n    query(\"div\").innerHTML(\"&lt;p&gt;Hello World&lt;/p&gt;\");\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>assume a DOM created by this markup: </p> <pre><code>&lt;div id=\"foo\"&gt;&lt;p&gt;Hello Mars&lt;/p&gt;&lt;/div&gt;\n&lt;div id=\"bar\"&gt;&lt;p&gt;Hello World&lt;/p&gt;&lt;/div&gt;</code></pre> <p>This code returns <code>&lt;p&gt;Hello Mars&lt;/p&gt;</code>: </p> <pre><code>require([\"dojo/query\", \"dojo/NodeList-manipulate\"\n], function(query){\n    var message = query(\"div\").innerHTML();\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_indexOf\">\n<span class=\"functionIcon\">indexOf</span><span class=\"parameters\">(value,fromIndex)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"query\" class=\"jsdoc-link\">dojo/query</a> </p> <p>see <code>dojo/_base/array.indexOf()</code>. The primary difference is that the acted-on array is implicitly this NodeList</p>  <p>For more details on the behavior of indexOf, see Mozilla's <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/indexOf\">indexOf docs</a></p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">value</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>The value to search for.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">fromIndex</td> <td class=\"jsdoc-param-type\">Integer</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>The location to start searching from. Optional. Defaults to 0.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | undefined</span></p> <p>Positive Integer or 0 for a match, -1 of not found.</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_innerHTML\">\n<span class=\"functionIcon\">innerHTML</span><span class=\"parameters\">(value)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"nodelist-manipulate\" class=\"jsdoc-link\">dojo/NodeList-manipulate</a> </p> <p>allows setting the innerHTML of each node in the NodeList, if there is a value passed in, otherwise, reads the innerHTML value of the first node.</p>  <p>This method is simpler than the <a class=\"jsdoc-link\" href=\"nodelist#html\">dojo/NodeList.html()</a> method provided by <a class=\"jsdoc-link\" href=\"nodelist-html\">dojo/NodeList-html</a>. This method just does proper innerHTML insertion of HTML fragments, and it allows for the innerHTML to be read for the first node in the node list. Since <a class=\"jsdoc-link\" href=\"nodelist-html\">dojo/NodeList-html</a> already took the \"html\" name, this method is called \"innerHTML\". However, if <a class=\"jsdoc-link\" href=\"nodelist-html\">dojo/NodeList-html</a> has not been loaded yet, this module will define an \"html\" method that can be used instead. Be careful if you are working in an environment where it is possible that <a class=\"jsdoc-link\" href=\"nodelist-html\">dojo/NodeList-html</a> could have been loaded, since its definition of \"html\" will take precedence. The nodes represented by the value argument will be cloned if more than one node is in this NodeList. The nodes in this NodeList are returned in the \"set\" usage of this method, not the HTML that was inserted.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">value</td> <td class=\"jsdoc-param-type\">String | DOMNode | NodeList</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | undefined</span></p> <p>if no value is passed, the result is String, the innerHTML of the first node. If a value is passed, the return is this dojo/NodeList</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>assume a DOM created by this markup: </p> <pre><code>&lt;div id=\"foo\"&gt;&lt;/div&gt;\n&lt;div id=\"bar\"&gt;&lt;/div&gt;</code></pre> <p>This code inserts <code>&lt;p&gt;Hello World&lt;/p&gt;</code> into both divs: </p> <pre><code>require([\"dojo/query\", \"dojo/NodeList-manipulate\"\n], function(query){\n    query(\"div\").innerHTML(\"&lt;p&gt;Hello World&lt;/p&gt;\");\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>assume a DOM created by this markup: </p> <pre><code>&lt;div id=\"foo\"&gt;&lt;p&gt;Hello Mars&lt;/p&gt;&lt;/div&gt;\n&lt;div id=\"bar\"&gt;&lt;p&gt;Hello World&lt;/p&gt;&lt;/div&gt;</code></pre> <p>This code returns <code>&lt;p&gt;Hello Mars&lt;/p&gt;</code>: </p> <pre><code>require([\"dojo/query\", \"dojo/NodeList-manipulate\"\n], function(query){\n    var message = query(\"div\").innerHTML();\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_insertAfter\">\n<span class=\"functionIcon\">insertAfter</span><span class=\"parameters\">(query)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"nodelist-manipulate\" class=\"jsdoc-link\">dojo/NodeList-manipulate</a> </p> <p>The nodes in this NodeList will be placed after the nodes matched by the query passed to insertAfter.</p>  <p>The nodes in this NodeList will be cloned if the query matches more than one element. Only the DOM nodes are cloned, not any attached event handlers.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">query</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | undefined</span></p> <p>dojo/NodeList, the nodes currently in this NodeList will be returned, not the matched nodes from the query.</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>assume a DOM created by this markup: </p> <pre><code>&lt;span&gt;after&lt;/span&gt;\n&lt;p&gt;Hello Mars&lt;/p&gt;\n&lt;p&gt;Hello World&lt;/p&gt;</code></pre> <p>Running this code: </p> <pre><code>require([\"dojo/query\", \"dojo/NodeList-manipulate\"\n], function(query){\n    query(\"span\").insertAfter(\"p\");\n});</code></pre> <p>Results in this DOM structure: </p> <pre><code>&lt;p&gt;Hello Mars&lt;/p&gt;&lt;span&gt;after&lt;/span&gt;\n&lt;p&gt;Hello World&lt;/p&gt;&lt;span&gt;after&lt;/span&gt;</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_insertBefore\">\n<span class=\"functionIcon\">insertBefore</span><span class=\"parameters\">(query)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"nodelist-manipulate\" class=\"jsdoc-link\">dojo/NodeList-manipulate</a> </p> <p>The nodes in this NodeList will be placed after the nodes matched by the query passed to insertAfter.</p>  <p>The nodes in this NodeList will be cloned if the query matches more than one element. Only the DOM nodes are cloned, not any attached event handlers.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">query</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | undefined</span></p> <p>dojo/NodeList, the nodes currently in this NodeList will be returned, not the matched nodes from the query.</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>assume a DOM created by this markup: </p> <pre><code>&lt;span&gt;before&lt;/span&gt;\n&lt;p&gt;Hello Mars&lt;/p&gt;\n&lt;p&gt;Hello World&lt;/p&gt;</code></pre> <p>Running this code: </p> <pre><code>require([\"dojo/query\", \"dojo/NodeList-manipulate\"\n], function(query){\n    query(\"span\").insertBefore(\"p\");\n});</code></pre> <p>Results in this DOM structure: </p> <pre><code>&lt;span&gt;before&lt;/span&gt;&lt;p&gt;Hello Mars&lt;/p&gt;\n&lt;span&gt;before&lt;/span&gt;&lt;p&gt;Hello World&lt;/p&gt;</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_instantiate\">\n<span class=\"functionIcon\">instantiate</span><span class=\"parameters\">(declaredClass,properties)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"query\" class=\"jsdoc-link\">dojo/query</a> </p> <p>Create a new instance of a specified class, using the specified properties and each node in the NodeList as a srcNodeRef.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">declaredClass</td> <td class=\"jsdoc-param-type\">String | Object</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">properties</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Grabs all buttons in the page and converts them to dijit/form/Button's. </p> <pre><code>var buttons = query(\"button\").instantiate(Button, {showLabel: true});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_last\">\n<span class=\"functionIcon\">last</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"nodelist-traverse\" class=\"jsdoc-link\">dojo/NodeList-traverse</a> </p> <p>Returns the last node in this dojo/NodeList as a dojo/NodeList.</p>  <p>.end() can be used on the returned <a class=\"jsdoc-link\" href=\"nodelist\">dojo/NodeList</a> to get back to the original <a class=\"jsdoc-link\" href=\"nodelist\">dojo/NodeList</a>.</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | undefined</span></p> <p>the last node in this dojo/NodeList</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>assume a DOM created by this markup: </p> <pre><code>&lt;div class=\"container\"&gt;\n    &lt;div class=\"red\"&gt;Red One&lt;/div&gt;\n    &lt;div class=\"blue first\"&gt;Blue One&lt;/div&gt;\n    &lt;div class=\"red\"&gt;Red Two&lt;/div&gt;\n    &lt;div class=\"blue last\"&gt;Blue Two&lt;/div&gt;\n&lt;/div&gt;</code></pre> <p>Running this code: </p> <pre><code>require([\"dojo/query\", \"dojo/NodeList-traverse\"\n], function(query){\nquery(\".blue\").last();\n});</code></pre> <p>returns the last div with class \"blue\", </p> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_lastIndexOf\">\n<span class=\"functionIcon\">lastIndexOf</span><span class=\"parameters\">(value,fromIndex)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"query\" class=\"jsdoc-link\">dojo/query</a> </p> <p>see <code>dojo/_base/array.lastIndexOf()</code>. The primary difference is that the acted-on array is implicitly this NodeList</p>  <p>For more details on the behavior of lastIndexOf, see Mozilla's <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/lastIndexOf\">lastIndexOf docs</a></p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">value</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>The value to search for.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">fromIndex</td> <td class=\"jsdoc-param-type\">Integer</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>The location to start searching from. Optional. Defaults to 0.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | undefined</span></p> <p>Positive Integer or 0 for a match, -1 of not found.</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_map\">\n<span class=\"functionIcon\">map</span><span class=\"parameters\">(func,obj)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"query\" class=\"jsdoc-link\">dojo/query</a> </p> <p>see <code>dojo/_base/array.map()</code>. The primary difference is that the acted-on array is implicitly this NodeList and the return is a NodeList (a subclass of Array)</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">func</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">obj</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_marginBox\">\n<span class=\"functionIcon\">marginBox</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"nodelist-dom\" class=\"jsdoc-link\">dojo/NodeList-dom</a> </p> <p>Returns margin-box size of nodes</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_next\">\n<span class=\"functionIcon\">next</span><span class=\"parameters\">(query)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"nodelist-traverse\" class=\"jsdoc-link\">dojo/NodeList-traverse</a> </p> <p>Returns the next element for nodes in this dojo/NodeList. Optionally takes a query to filter the next elements.</p>  <p>.end() can be used on the returned <a class=\"jsdoc-link\" href=\"nodelist\">dojo/NodeList</a> to get back to the original <a class=\"jsdoc-link\" href=\"nodelist\">dojo/NodeList</a>.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">query</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>a CSS selector.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | undefined</span></p> <p>the next element for nodes in this dojo/NodeList.</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>assume a DOM created by this markup: </p> <pre><code>&lt;div class=\"container\"&gt;\n    &lt;div class=\"red\"&gt;Red One&lt;/div&gt;\n    Some Text\n    &lt;div class=\"blue first\"&gt;Blue One&lt;/div&gt;\n    &lt;div class=\"red\"&gt;Red Two&lt;/div&gt;\n    &lt;div class=\"blue last\"&gt;Blue Two&lt;/div&gt;\n&lt;/div&gt;</code></pre> <p>Running this code: </p> <pre><code>require([\"dojo/query\", \"dojo/NodeList-traverse\"\n], function(query){\n    query(\".first\").next();\n});</code></pre> <p>returns the div with class \"red\" and has innerHTML of \"Red Two\". </p> <p>Running this code: </p> <pre><code>dojo.query(\".last\").next(\".red\");</code></pre> <p>does not return any elements. </p> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_nextAll\">\n<span class=\"functionIcon\">nextAll</span><span class=\"parameters\">(query)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"nodelist-traverse\" class=\"jsdoc-link\">dojo/NodeList-traverse</a> </p> <p>Returns all sibling elements that come after the nodes in this dojo/NodeList. Optionally takes a query to filter the sibling elements.</p>  <p>.end() can be used on the returned <a class=\"jsdoc-link\" href=\"nodelist\">dojo/NodeList</a> to get back to the original <a class=\"jsdoc-link\" href=\"nodelist\">dojo/NodeList</a>.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">query</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>a CSS selector.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | undefined</span></p> <p>all sibling elements that come after the nodes in this dojo/NodeList.</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>assume a DOM created by this markup: </p> <pre><code>&lt;div class=\"container\"&gt;\n    &lt;div class=\"red\"&gt;Red One&lt;/div&gt;\n    Some Text\n    &lt;div class=\"blue first\"&gt;Blue One&lt;/div&gt;\n    &lt;div class=\"red next\"&gt;Red Two&lt;/div&gt;\n    &lt;div class=\"blue next\"&gt;Blue Two&lt;/div&gt;\n&lt;/div&gt;</code></pre> <p>Running this code: </p> <pre><code>require([\"dojo/query\", \"dojo/NodeList-traverse\"\n], function(query){\n    query(\".first\").nextAll();\n});</code></pre> <p>returns the two divs with class of \"next\". </p> <p>Running this code: </p> <pre><code>query(\".first\").nextAll(\".red\");</code></pre> <p>returns the one div with class \"red\" and innerHTML \"Red Two\". </p> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_odd\">\n<span class=\"functionIcon\">odd</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"nodelist-traverse\" class=\"jsdoc-link\">dojo/NodeList-traverse</a> </p> <p>Returns the odd nodes in this dojo/NodeList as a dojo/NodeList.</p>  <p>.end() can be used on the returned <a class=\"jsdoc-link\" href=\"nodelist\">dojo/NodeList</a> to get back to the original <a class=\"jsdoc-link\" href=\"nodelist\">dojo/NodeList</a>.</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | undefined</span></p> <p>the odd nodes in this dojo/NodeList</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>assume a DOM created by this markup: </p> <pre><code>&lt;div class=\"container\"&gt;\n    &lt;div class=\"interior red\"&gt;Red One&lt;/div&gt;\n    &lt;div class=\"interior blue\"&gt;Blue One&lt;/div&gt;\n    &lt;div class=\"interior red\"&gt;Red Two&lt;/div&gt;\n    &lt;div class=\"interior blue\"&gt;Blue Two&lt;/div&gt;\n&lt;/div&gt;</code></pre> <p>Running this code: </p> <pre><code>require([\"dojo/query\", \"dojo/NodeList-traverse\"\n], function(query){\n    query(\".interior\").odd();\n});</code></pre> <p>returns the two divs with class \"red\" </p> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_on\">\n<span class=\"functionIcon\">on</span><span class=\"parameters\">(eventName,listener)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"query\" class=\"jsdoc-link\">dojo/query</a> </p> <p>Listen for events on the nodes in the NodeList. Basic usage is: </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">eventName</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">listener</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>require([\"dojo/query\"\n], function(query){\n    query(\".my-class\").on(\"click\", listener);</code></pre> <p>This supports event delegation by using selectors as the first argument with the event names as </p> <p>pseudo selectors. For example: </p> <pre><code>query(\"#my-list\").on(\"li:click\", listener);</code></pre> <p>This will listen for click events within <code>&lt;li&gt;</code> elements that are inside the <code>#my-list</code> element. </p> <p>Because on supports CSS selector syntax, we can use comma-delimited events as well: </p> <pre><code>query(\"#my-list\").on(\"li button:mouseover, li:click\", listener);\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_orphan\">\n<span class=\"functionIcon\">orphan</span><span class=\"parameters\">(filter)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"nodelist-dom\" class=\"jsdoc-link\">dojo/NodeList-dom</a> </p> <p>removes elements in this list that match the filter from their parents and returns them as a new NodeList.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">filter</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>CSS selector like \".foo\" or \"div &gt; span\"</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | undefined</span></p> <p>NodeList containing the orphaned elements</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_parent\">\n<span class=\"functionIcon\">parent</span><span class=\"parameters\">(query)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"nodelist-traverse\" class=\"jsdoc-link\">dojo/NodeList-traverse</a> </p> <p>Returns immediate parent elements for nodes in this dojo/NodeList. Optionally takes a query to filter the parent elements.</p>  <p>.end() can be used on the returned <a class=\"jsdoc-link\" href=\"nodelist\">dojo/NodeList</a> to get back to the original <a class=\"jsdoc-link\" href=\"nodelist\">dojo/NodeList</a>.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">query</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>a CSS selector.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | undefined</span></p> <p>immediate parent elements for nodes in this dojo/NodeList.</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>assume a DOM created by this markup: </p> <pre><code>&lt;div class=\"container\"&gt;\n    &lt;div class=\"red\"&gt;Red One&lt;/div&gt;\n    &lt;div class=\"blue first\"&gt;&lt;span class=\"text\"&gt;Blue One&lt;/span&gt;&lt;/div&gt;\n    &lt;div class=\"red\"&gt;Red Two&lt;/div&gt;\n    &lt;div class=\"blue\"&gt;&lt;span class=\"text\"&gt;Blue Two&lt;/span&gt;&lt;/div&gt;\n&lt;/div&gt;</code></pre> <p>Running this code: </p> <pre><code>require([\"dojo/query\", \"dojo/NodeList-traverse\"\n], function(query){\n    query(\".text\").parent();\n});</code></pre> <p>returns the two divs with class \"blue\". </p> <p>Running this code: </p> <pre><code>query(\".text\").parent(\".first\");</code></pre> <p>returns the one div with class \"blue\" and \"first\". </p> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_parents\">\n<span class=\"functionIcon\">parents</span><span class=\"parameters\">(query)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"nodelist-traverse\" class=\"jsdoc-link\">dojo/NodeList-traverse</a> </p> <p>Returns all parent elements for nodes in this dojo/NodeList. Optionally takes a query to filter the child elements.</p>  <p>.end() can be used on the returned <a class=\"jsdoc-link\" href=\"nodelist\">dojo/NodeList</a> to get back to the original <a class=\"jsdoc-link\" href=\"nodelist\">dojo/NodeList</a>.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">query</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>a CSS selector.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | undefined</span></p> <p>all parent elements for nodes in this dojo/NodeList.</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>assume a DOM created by this markup: </p> <pre><code>&lt;div class=\"container\"&gt;\n    &lt;div class=\"red\"&gt;Red One&lt;/div&gt;\n    &lt;div class=\"blue first\"&gt;&lt;span class=\"text\"&gt;Blue One&lt;/span&gt;&lt;/div&gt;\n    &lt;div class=\"red\"&gt;Red Two&lt;/div&gt;\n    &lt;div class=\"blue\"&gt;&lt;span class=\"text\"&gt;Blue Two&lt;/span&gt;&lt;/div&gt;\n&lt;/div&gt;</code></pre> <p>Running this code: </p> <pre><code>require([\"dojo/query\", \"dojo/NodeList-traverse\"\n], function(query){\n    query(\".text\").parents();\n});</code></pre> <p>returns the two divs with class \"blue\", the div with class \"container\", </p> <pre><code>the body element and the html element.</code></pre> <p>Running this code: </p> <pre><code>query(\".text\").parents(\".container\");</code></pre> <p>returns the one div with class \"container\". </p> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_place\">\n<span class=\"functionIcon\">place</span><span class=\"parameters\">(queryOrNode,position)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"nodelist-dom\" class=\"jsdoc-link\">dojo/NodeList-dom</a> </p> <p>places elements of this node list relative to the first element matched by queryOrNode. Returns the original NodeList. See: <code>dojo/dom-construct.place</code></p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">queryOrNode</td> <td class=\"jsdoc-param-type\">String | Node</td> <td class=\"jsdoc-param-description\">\n<p>may be a string representing any valid CSS3 selector or a DOM node. In the selector case, only the first matching element will be used for relative positioning.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">position</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>can be one of: </p> <ul> <li>\"last\" (default)</li> <li>\"first\"</li> <li>\"before\"</li> <li>\"after\"</li> <li>\"only\"</li> <li>\"replace\"</li> </ul> <p>or an offset in the childNodes property</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_position\">\n<span class=\"functionIcon\">position</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"nodelist-dom\" class=\"jsdoc-link\">dojo/NodeList-dom</a> </p> <p>Returns border-box objects (x/y/w/h) of all elements in a node list as an Array (<em>not</em> a NodeList). Acts like <code>dojo/dom-geometry-position</code>, though assumes the node passed is each node in this list.</p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_prepend\">\n<span class=\"functionIcon\">prepend</span><span class=\"parameters\">(content)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"nodelist-manipulate\" class=\"jsdoc-link\">dojo/NodeList-manipulate</a> </p> <p>prepends the content to every node in the NodeList.</p>  <p>The content will be cloned if the length of NodeList is greater than 1. Only the DOM nodes are cloned, not any attached event handlers.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">content</td> <td class=\"jsdoc-param-type\">String | DOMNode | NodeList</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | undefined</span></p> <p>dojo/NodeList, the nodes currently in this NodeList will be returned, not the appended content. assume a DOM created by this markup: </p> <pre><code>&lt;div id=\"foo\"&gt;&lt;p&gt;Hello Mars&lt;/p&gt;&lt;/div&gt;\n&lt;div id=\"bar\"&gt;&lt;p&gt;Hello World&lt;/p&gt;&lt;/div&gt;</code></pre> <p>Running this code: </p> <pre><code>require([\"dojo/query\", \"dojo/NodeList-manipulate\"\n], function(query){\n    query(\"div\").prepend(\"&lt;span&gt;prepend&lt;/span&gt;\");\n});</code></pre> <p>Results in this DOM structure: </p> <pre><code>&lt;div id=\"foo\"&gt;&lt;span&gt;prepend&lt;/span&gt;&lt;p&gt;Hello Mars&lt;/p&gt;&lt;/div&gt;\n&lt;div id=\"bar\"&gt;&lt;span&gt;prepend&lt;/span&gt;&lt;p&gt;Hello World&lt;/p&gt;&lt;/div&gt;</code></pre>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_prependTo\">\n<span class=\"functionIcon\">prependTo</span><span class=\"parameters\">(query)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"nodelist-manipulate\" class=\"jsdoc-link\">dojo/NodeList-manipulate</a> </p> <p>prepends nodes in this NodeList to the nodes matched by the query passed to prependTo.</p>  <p>The nodes in this NodeList will be cloned if the query matches more than one element. Only the DOM nodes are cloned, not any attached event handlers.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">query</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | undefined</span></p> <p>dojo/NodeList, the nodes currently in this NodeList will be returned, not the matched nodes from the query.</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>assume a DOM created by this markup: </p> <pre><code>&lt;span&gt;prepend&lt;/span&gt;\n&lt;p&gt;Hello Mars&lt;/p&gt;\n&lt;p&gt;Hello World&lt;/p&gt;</code></pre> <p>Running this code: </p> <pre><code>require([\"dojo/query\", \"dojo/NodeList-manipulate\"\n], function(query){\n    query(\"span\").prependTo(\"p\");\n});</code></pre> <p>Results in this DOM structure: </p> <pre><code>&lt;p&gt;&lt;span&gt;prepend&lt;/span&gt;Hello Mars&lt;/p&gt;\n&lt;p&gt;&lt;span&gt;prepend&lt;/span&gt;Hello World&lt;/p&gt;</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_prev\">\n<span class=\"functionIcon\">prev</span><span class=\"parameters\">(query)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"nodelist-traverse\" class=\"jsdoc-link\">dojo/NodeList-traverse</a> </p> <p>Returns the previous element for nodes in this dojo/NodeList. Optionally takes a query to filter the previous elements.</p>  <p>.end() can be used on the returned <a class=\"jsdoc-link\" href=\"nodelist\">dojo/NodeList</a> to get back to the original <a class=\"jsdoc-link\" href=\"nodelist\">dojo/NodeList</a>.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">query</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>a CSS selector.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | undefined</span></p> <p>the previous element for nodes in this dojo/NodeList.</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>assume a DOM created by this markup: </p> <pre><code>&lt;div class=\"container\"&gt;\n    &lt;div class=\"red\"&gt;Red One&lt;/div&gt;\n    Some Text\n    &lt;div class=\"blue first\"&gt;Blue One&lt;/div&gt;\n    &lt;div class=\"red\"&gt;Red Two&lt;/div&gt;\n    &lt;div class=\"blue\"&gt;Blue Two&lt;/div&gt;\n&lt;/div&gt;</code></pre> <p>Running this code: </p> <pre><code>require([\"dojo/query\", \"dojo/NodeList-traverse\"\n], function(query){\n    query(\".first\").prev();\n});</code></pre> <p>returns the div with class \"red\" and has innerHTML of \"Red One\". </p> <p>Running this code: </p> <pre><code>query(\".first\").prev(\".blue\");</code></pre> <p>does not return any elements. </p> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_prevAll\">\n<span class=\"functionIcon\">prevAll</span><span class=\"parameters\">(query)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"nodelist-traverse\" class=\"jsdoc-link\">dojo/NodeList-traverse</a> </p> <p>Returns all sibling elements that come before the nodes in this dojo/NodeList. Optionally takes a query to filter the sibling elements.</p>  <p>The returned nodes will be in reverse DOM order -- the first node in the list will be the node closest to the original node/NodeList. .end() can be used on the returned <a class=\"jsdoc-link\" href=\"nodelist\">dojo/NodeList</a> to get back to the original <a class=\"jsdoc-link\" href=\"nodelist\">dojo/NodeList</a>.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">query</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>a CSS selector.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | undefined</span></p> <p>all sibling elements that come before the nodes in this dojo/NodeList.</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>assume a DOM created by this markup: </p> <pre><code>&lt;div class=\"container\"&gt;\n    &lt;div class=\"red prev\"&gt;Red One&lt;/div&gt;\n    Some Text\n    &lt;div class=\"blue prev\"&gt;Blue One&lt;/div&gt;\n    &lt;div class=\"red second\"&gt;Red Two&lt;/div&gt;\n    &lt;div class=\"blue\"&gt;Blue Two&lt;/div&gt;\n&lt;/div&gt;</code></pre> <p>Running this code: </p> <pre><code>require([\"dojo/query\", \"dojo/NodeList-traverse\"\n], function(query){\n    query(\".second\").prevAll();\n});</code></pre> <p>returns the two divs with class of \"prev\". </p> <p>Running this code: </p> <pre><code>query(\".first\").prevAll(\".red\");</code></pre> <p>returns the one div with class \"red prev\" and innerHTML \"Red One\". </p> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_query\">\n<span class=\"functionIcon\">query</span><span class=\"parameters\">(queryStr)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"nodelist-dom\" class=\"jsdoc-link\">dojo/NodeList-dom</a> </p> <p>Returns a new list whose members match the passed query, assuming elements of the current NodeList as the root for each search.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">queryStr</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">function | undefined</span></p> <p>Returns a new list whose members match the passed query, assuming elements of the current NodeList as the root for each search.</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>assume a DOM created by this markup: </p> <pre><code>&lt;div id=\"foo\"&gt;\n    &lt;p&gt;\n        bacon is tasty, &lt;span&gt;dontcha think?&lt;/span&gt;\n    &lt;/p&gt;\n&lt;/div&gt;\n&lt;div id=\"bar\"&gt;\n    &lt;p&gt;great comedians may not be funny &lt;span&gt;in person&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;</code></pre> <p>If we are presented with the following definition for a NodeList: </p> <pre><code>require([\"dojo/dom\", \"dojo/query\", \"dojo/NodeList-dom\"\n], function(dom, query){\n    var l = new NodeList(dom.byId(\"foo\"), dom.byId(\"bar\"));</code></pre> <p>it's possible to find all span elements under paragraphs </p> <p>contained by these elements with this sub-query: </p> <pre><code>var spans = l.query(\"p span\");\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_remove\">\n<span class=\"functionIcon\">remove</span><span class=\"parameters\">(filter)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"nodelist-manipulate\" class=\"jsdoc-link\">dojo/NodeList-manipulate</a> </p> <p>removes elements in this list that match the filter from their parents and returns them as a new NodeList.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">filter</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>CSS selector like \".foo\" or \"div &gt; span\"</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | undefined</span></p> <p>NodeList containing the orphaned elements</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_removeAttr\">\n<span class=\"functionIcon\">removeAttr</span><span class=\"parameters\">(name)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"nodelist-dom\" class=\"jsdoc-link\">dojo/NodeList-dom</a> </p> <p>Removes an attribute from each node in the list.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">name</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>the name of the attribute to remove</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_removeClass\">\n<span class=\"functionIcon\">removeClass</span><span class=\"parameters\">(className)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"nodelist-dom\" class=\"jsdoc-link\">dojo/NodeList-dom</a> </p> <p>removes the specified class from every node in the list</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">className</td> <td class=\"jsdoc-param-type\">String | Array</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>An optional String class name to remove, or several space-separated class names, or an array of class names. If omitted, all class names will be deleted.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any</span></p> <p>this list</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_removeClassFx\">\n<span class=\"functionIcon\">removeClassFx</span><span class=\"parameters\">(cssClass,args)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"http://dojotoolkit.org/api/1.10/dojox/fx/ext-dojo/NodeList-style\" class=\"jsdoc-link\">dojox/fx/ext-dojo/NodeList-style</a> </p> <p>Animate the effect of removing a class to all nodes in this list. see <code>dojox.fx.removeClass</code></p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">cssClass</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">args</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">[object Value(type: function, value: undefined)]</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>dojo.query(\".box\").removeClassFx(\"bar\").play();</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_removeData\">\n<span class=\"functionIcon\">removeData</span><span class=\"parameters\">(key)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"nodelist-data\" class=\"jsdoc-link\">dojo/NodeList-data</a> </p> <p>Remove the data associated with these nodes.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">key</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>If omitted, clean all data for this node. If passed, remove the data item found at <code>key</code></p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_replaceAll\">\n<span class=\"functionIcon\">replaceAll</span><span class=\"parameters\">(query)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"nodelist-manipulate\" class=\"jsdoc-link\">dojo/NodeList-manipulate</a> </p> <p>replaces nodes matched by the query passed to replaceAll with the nodes in this NodeList.</p>  <p>The nodes in this NodeList will be cloned if the query matches more than one element. Only the DOM nodes are cloned, not any attached event handlers.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">query</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | function</span></p> <p>The nodes currently in this NodeList will be returned, not the matched nodes from the query. The nodes currently in this NodeLIst could have been cloned, so the returned NodeList will include the cloned nodes.</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>assume a DOM created by this markup: </p> <pre><code>&lt;div class=\"container\"&gt;\n    &lt;div class=\"spacer\"&gt;___&lt;/div&gt;\n    &lt;div class=\"red\"&gt;Red One&lt;/div&gt;\n    &lt;div class=\"spacer\"&gt;___&lt;/div&gt;\n    &lt;div class=\"blue\"&gt;Blue One&lt;/div&gt;\n    &lt;div class=\"spacer\"&gt;___&lt;/div&gt;\n    &lt;div class=\"red\"&gt;Red Two&lt;/div&gt;\n    &lt;div class=\"spacer\"&gt;___&lt;/div&gt;\n    &lt;div class=\"blue\"&gt;Blue Two&lt;/div&gt;\n&lt;/div&gt;</code></pre> <p>Running this code: </p> <pre><code>require([\"dojo/query\", \"dojo/NodeList-manipulate\"\n], function(query){\n    query(\".red\").replaceAll(\".blue\");\n});</code></pre> <p>Results in this DOM structure: </p> <pre><code>&lt;div class=\"container\"&gt;\n    &lt;div class=\"spacer\"&gt;___&lt;/div&gt;\n    &lt;div class=\"spacer\"&gt;___&lt;/div&gt;\n    &lt;div class=\"red\"&gt;Red One&lt;/div&gt;\n    &lt;div class=\"red\"&gt;Red Two&lt;/div&gt;\n    &lt;div class=\"spacer\"&gt;___&lt;/div&gt;\n    &lt;div class=\"spacer\"&gt;___&lt;/div&gt;\n    &lt;div class=\"red\"&gt;Red One&lt;/div&gt;\n    &lt;div class=\"red\"&gt;Red Two&lt;/div&gt;\n&lt;/div&gt;</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_replaceClass\">\n<span class=\"functionIcon\">replaceClass</span><span class=\"parameters\">(addClassStr,removeClassStr)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"nodelist-dom\" class=\"jsdoc-link\">dojo/NodeList-dom</a> </p> <p>Replaces one or more classes on a node if not present. Operates more quickly than calling <code>removeClass()</code> and <code>addClass()</code></p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">addClassStr</td> <td class=\"jsdoc-param-type\">String | Array</td> <td class=\"jsdoc-param-description\">\n<p>A String class name to add, or several space-separated class names, or an array of class names.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">removeClassStr</td> <td class=\"jsdoc-param-type\">String | Array</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>A String class name to remove, or several space-separated class names, or an array of class names.</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_replaceWith\">\n<span class=\"functionIcon\">replaceWith</span><span class=\"parameters\">(content)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"nodelist-manipulate\" class=\"jsdoc-link\">dojo/NodeList-manipulate</a> </p> <p>Replaces each node in ths NodeList with the content passed to replaceWith.</p>  <p>The content will be cloned if the length of NodeList is greater than 1. Only the DOM nodes are cloned, not any attached event handlers.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">content</td> <td class=\"jsdoc-param-type\">String | DOMNode | NodeList</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | function</span></p> <p>The nodes currently in this NodeList will be returned, not the replacing content. Note that the returned nodes have been removed from the DOM.</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>assume a DOM created by this markup: </p> <pre><code>&lt;div class=\"container\"&gt;\n    &lt;div class=\"red\"&gt;Red One&lt;/div&gt;\n    &lt;div class=\"blue\"&gt;Blue One&lt;/div&gt;\n    &lt;div class=\"red\"&gt;Red Two&lt;/div&gt;\n    &lt;div class=\"blue\"&gt;Blue Two&lt;/div&gt;\n&lt;/div&gt;</code></pre> <p>Running this code: </p> <pre><code>require([\"dojo/query\", \"dojo/NodeList-manipulate\"\n], function(query){\n    query(\".red\").replaceWith('&lt;div class=\"green\"&gt;Green&lt;/div&gt;');\n});</code></pre> <p>Results in this DOM structure: </p> <pre><code>&lt;div class=\"container\"&gt;\n    &lt;div class=\"green\"&gt;Green&lt;/div&gt;\n    &lt;div class=\"blue\"&gt;Blue One&lt;/div&gt;\n    &lt;div class=\"green\"&gt;Green&lt;/div&gt;\n    &lt;div class=\"blue\"&gt;Blue Two&lt;/div&gt;\n&lt;/div&gt;</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_siblings\">\n<span class=\"functionIcon\">siblings</span><span class=\"parameters\">(query)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"nodelist-traverse\" class=\"jsdoc-link\">dojo/NodeList-traverse</a> </p> <p>Returns all sibling elements for nodes in this dojo/NodeList. Optionally takes a query to filter the sibling elements.</p>  <p>.end() can be used on the returned <a class=\"jsdoc-link\" href=\"nodelist\">dojo/NodeList</a> to get back to the original <a class=\"jsdoc-link\" href=\"nodelist\">dojo/NodeList</a>.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">query</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>a CSS selector.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | undefined</span></p> <p>all sibling elements for nodes in this dojo/NodeList.</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>assume a DOM created by this markup: </p> <pre><code>&lt;div class=\"container\"&gt;\n    &lt;div class=\"red\"&gt;Red One&lt;/div&gt;\n    Some Text\n    &lt;div class=\"blue first\"&gt;Blue One&lt;/div&gt;\n    &lt;div class=\"red\"&gt;Red Two&lt;/div&gt;\n    &lt;div class=\"blue\"&gt;Blue Two&lt;/div&gt;\n&lt;/div&gt;</code></pre> <p>Running this code: </p> <pre><code>require([\"dojo/query\", \"dojo/NodeList-traverse\"\n], function(query){\n    query(\".first\").siblings();\n});</code></pre> <p>returns the two divs with class \"red\" and the other div </p> <pre><code>with class \"blue\" that does not have \"first\".</code></pre> <p>Running this code: </p> <pre><code>query(\".first\").siblings(\".red\");</code></pre> <p>returns the two div with class \"red\". </p> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_slice\">\n<span class=\"functionIcon\">slice</span><span class=\"parameters\">(begin,end)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"query\" class=\"jsdoc-link\">dojo/query</a> </p> <p>Returns a new NodeList, maintaining this one in place</p>  <p>This method behaves exactly like the Array.slice method with the caveat that it returns a <a class=\"jsdoc-link\" href=\"nodelist\">dojo/NodeList</a> and not a raw Array. For more details, see Mozilla's <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/slice\">slice documentation</a></p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">begin</td> <td class=\"jsdoc-param-type\">Integer</td> <td class=\"jsdoc-param-description\">\n<p>Can be a positive or negative integer, with positive integers noting the offset to begin at, and negative integers denoting an offset from the end (i.e., to the left of the end)</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">end</td> <td class=\"jsdoc-param-type\">Integer</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Optional parameter to describe what position relative to the NodeList's zero index to end the slice at. Like begin, can be positive or negative.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_slideTo\">\n<span class=\"functionIcon\">slideTo</span><span class=\"parameters\">(args)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"nodelist-fx\" class=\"jsdoc-link\">dojo/NodeList-fx</a> </p> <p>slide all elements of the node list to the specified place via <code>dojo/fx.slideTo()</code> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">args</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Additional dojo/_base/fx.Animation arguments to mix into this set with the addition of an <code>auto</code> parameter. </p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\"><a class=\"jsdoc-link\" href=\"_base/fx#Animation\">dojo/_base/fx.Animation</a>|<a class=\"jsdoc-link\" href=\"nodelist\">dojo/NodeList</a> | undefined</span></p> <p>A special args member <code>auto</code> can be passed to automatically play the animation. If args.auto is present, the original dojo/NodeList will be returned for further chaining. Otherwise the dojo/_base/fx.Animation instance is returned and must be .play()'ed </p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>Move all tables with class \"blah\" to 300/300:\nrequire([\"dojo/query\", \"dojo/NodeList-fx\"\n], function(query){\n    query(\"table.blah\").slideTo({\n        left: 40,\n        top: 50\n    }).play();\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_some\">\n<span class=\"functionIcon\">some</span><span class=\"parameters\">(callback,thisObject)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"query\" class=\"jsdoc-link\">dojo/query</a> </p> <p>Takes the same structure of arguments and returns as <code>dojo/_base/array.some()</code> with the caveat that the passed array is implicitly this NodeList. See <code>dojo/_base/array.some()</code> and Mozilla's <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/some\">Array.some documentation</a>.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">callback</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\">\n<p>the callback</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">thisObject</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>the context</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_splice\">\n<span class=\"functionIcon\">splice</span><span class=\"parameters\">(index,howmany,item)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"query\" class=\"jsdoc-link\">dojo/query</a> </p> <p>Returns a new NodeList, manipulating this NodeList based on the arguments passed, potentially splicing in new elements at an offset, optionally deleting elements</p>  <p>This method behaves exactly like the Array.splice method with the caveat that it returns a <a class=\"jsdoc-link\" href=\"nodelist\">dojo/NodeList</a> and not a raw Array. For more details, see Mozilla's <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/splice\">splice documentation</a> For backwards compatibility, calling .end() on the spliced NodeList does not return the original NodeList -- splice alters the NodeList in place.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">index</td> <td class=\"jsdoc-param-type\">Integer</td> <td class=\"jsdoc-param-description\">\n<p>begin can be a positive or negative integer, with positive integers noting the offset to begin at, and negative integers denoting an offset from the end (i.e., to the left of the end)</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">howmany</td> <td class=\"jsdoc-param-type\">Integer</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Optional parameter to describe what position relative to the NodeList's zero index to end the slice at. Like begin, can be positive or negative.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">item</td> <td class=\"jsdoc-param-type\">Object...</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Any number of optional parameters may be passed in to be spliced into the NodeList</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_style\">\n<span class=\"functionIcon\">style</span><span class=\"parameters\">(property,value)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"nodelist-dom\" class=\"jsdoc-link\">dojo/NodeList-dom</a> </p> <p>gets or sets the CSS property for every element in the NodeList</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">property</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>the CSS property to get/set, in JavaScript notation (\"lineHieght\" instead of \"line-height\")</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">value</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>optional. The value to set the property to</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any</span></p> <p>if no value is passed, the result is an array of strings. If a value is passed, the return is this NodeList</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_text\">\n<span class=\"functionIcon\">text</span><span class=\"parameters\">(value)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"nodelist-manipulate\" class=\"jsdoc-link\">dojo/NodeList-manipulate</a> </p> <p>allows setting the text value of each node in the NodeList, if there is a value passed in, otherwise, returns the text value for all the nodes in the NodeList in one string.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">value</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | function | string</span></p> <p>if no value is passed, the result is String, the text value of the first node. If a value is passed, the return is this dojo/NodeList</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>assume a DOM created by this markup: </p> <pre><code>&lt;div id=\"foo\"&gt;&lt;/div&gt;\n&lt;div id=\"bar\"&gt;&lt;/div&gt;</code></pre> <p>This code inserts \"Hello World\" into both divs: </p> <pre><code>require([\"dojo/query\", \"dojo/NodeList-manipulate\"\n], function(query){\n    query(\"div\").text(\"Hello World\");\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>assume a DOM created by this markup: </p> <pre><code>&lt;div id=\"foo\"&gt;&lt;p&gt;Hello Mars &lt;span&gt;today&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;\n&lt;div id=\"bar\"&gt;&lt;p&gt;Hello World&lt;/p&gt;&lt;/div&gt;</code></pre> <p>This code returns \"Hello Mars today\": </p> <pre><code>require([\"dojo/query\", \"dojo/NodeList-manipulate\"\n], function(query){\n    var message = query(\"div\").text();\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_toggleClass\">\n<span class=\"functionIcon\">toggleClass</span><span class=\"parameters\">(className,condition)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"nodelist-dom\" class=\"jsdoc-link\">dojo/NodeList-dom</a> </p> <p>Adds a class to node if not present, or removes if present. Pass a boolean condition if you want to explicitly add or remove.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">className</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>the CSS class to add</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">condition</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>If passed, true means to add the class, false means to remove.</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_toggleClassFx\">\n<span class=\"functionIcon\">toggleClassFx</span><span class=\"parameters\">(cssClass,force,args)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"http://dojotoolkit.org/api/1.10/dojox/fx/ext-dojo/NodeList-style\" class=\"jsdoc-link\">dojox/fx/ext-dojo/NodeList-style</a> </p> <p>Animate the effect of adding or removing a class to all nodes in this list. see <code>dojox.fx.toggleClass</code></p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">cssClass</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">force</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">args</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">[object Value(type: function, value: undefined)]</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>dojo.query(\".box\").toggleClass(\"bar\").play();</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_toString\">\n<span class=\"functionIcon\">toString</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"query\" class=\"jsdoc-link\">dojo/query</a> </p>  <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_val\">\n<span class=\"functionIcon\">val</span><span class=\"parameters\">(value)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"nodelist-manipulate\" class=\"jsdoc-link\">dojo/NodeList-manipulate</a> </p> <p>If a value is passed, allows seting the value property of form elements in this NodeList, or properly selecting/checking the right value for radio/checkbox/select elements. If no value is passed, the value of the first node in this NodeList is returned.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">value</td> <td class=\"jsdoc-param-type\">String | Array</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | function | undefined | null</span></p> <p>if no value is passed, the result is String or an Array, for the value of the first node. If a value is passed, the return is this dojo/NodeList</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>assume a DOM created by this markup: </p> <pre><code>&lt;input type=\"text\" value=\"foo\"&gt;\n&lt;select multiple&gt;\n    &lt;option value=\"red\" selected&gt;Red&lt;/option&gt;\n    &lt;option value=\"blue\"&gt;Blue&lt;/option&gt;\n    &lt;option value=\"yellow\" selected&gt;Yellow&lt;/option&gt;\n&lt;/select&gt;</code></pre> <p>This code gets and sets the values for the form fields above: </p> <pre><code>require([\"dojo/query\", \"dojo/NodeList-manipulate\"\n], function(query){\n    query('[type=\"text\"]').val(); //gets value foo\n    query('[type=\"text\"]').val(\"bar\"); //sets the input's value to \"bar\"\n    query(\"select\").val() //gets array value [\"red\", \"yellow\"]\n    query(\"select\").val([\"blue\", \"yellow\"]) //Sets the blue and yellow options to selected.\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_wipeIn\">\n<span class=\"functionIcon\">wipeIn</span><span class=\"parameters\">(args)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"nodelist-fx\" class=\"jsdoc-link\">dojo/NodeList-fx</a> </p> <p>wipe in all elements of this NodeList via <code>dojo/fx.wipeIn()</code> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">args</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Additional dojo/_base/fx.Animation arguments to mix into this set with the addition of an <code>auto</code> parameter. </p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\"><a class=\"jsdoc-link\" href=\"_base/fx#Animation\">dojo/_base/fx.Animation</a>|<a class=\"jsdoc-link\" href=\"nodelist\">dojo/NodeList</a> | undefined</span></p> <p>A special args member <code>auto</code> can be passed to automatically play the animation. If args.auto is present, the original dojo/NodeList will be returned for further chaining. Otherwise the dojo/_base/fx.Animation instance is returned and must be .play()'ed </p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Fade in all tables with class \"blah\": </p> <pre><code>require([\"dojo/query\", \"dojo/NodeList-fx\"\n], function(query){\n    query(\"table.blah\").wipeIn().play();\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>Utilizing <code>auto</code> to get the NodeList back: </p> <pre><code>require([\"dojo/query\", \"dojo/NodeList-fx\"\n], function(query){\n    query(\".titles\").wipeIn({ auto:true }).onclick(someFunction);\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_wipeOut\">\n<span class=\"functionIcon\">wipeOut</span><span class=\"parameters\">(args)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"nodelist-fx\" class=\"jsdoc-link\">dojo/NodeList-fx</a> </p> <p>wipe out all elements of this NodeList via <code>dojo/fx.wipeOut()</code> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">args</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Additional dojo/_base/fx.Animation arguments to mix into this set with the addition of an <code>auto</code> parameter. </p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\"><a class=\"jsdoc-link\" href=\"_base/fx#Animation\">dojo/_base/fx.Animation</a>|<a class=\"jsdoc-link\" href=\"nodelist\">dojo/NodeList</a> | undefined</span></p> <p>A special args member <code>auto</code> can be passed to automatically play the animation. If args.auto is present, the original dojo/NodeList will be returned for further chaining. Otherwise the dojo/_base/fx.Animation instance is returned and must be .play()'ed </p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Wipe out all tables with class \"blah\": </p> <pre><code>require([\"dojo/query\", \"dojo/NodeList-fx\"\n], function(query){\n    query(\"table.blah\").wipeOut().play();\n});     </code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_wrap\">\n<span class=\"functionIcon\">wrap</span><span class=\"parameters\">(html)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"nodelist-manipulate\" class=\"jsdoc-link\">dojo/NodeList-manipulate</a> </p> <p>Wrap each node in the NodeList with html passed to wrap.</p>  <p>html will be cloned if the NodeList has more than one element. Only DOM nodes are cloned, not any attached event handlers.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">html</td> <td class=\"jsdoc-param-type\">String | DOMNode</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | function</span></p> <p>the nodes in the current NodeList will be returned, not the nodes from html argument.</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>assume a DOM created by this markup: </p> <pre><code>&lt;b&gt;one&lt;/b&gt;\n&lt;b&gt;two&lt;/b&gt;</code></pre> <p>Running this code: </p> <pre><code>require([\"dojo/query\", \"dojo/NodeList-manipulate\"\n], function(query){\n    query(\"b\").wrap(\"&lt;div&gt;&lt;span&gt;&lt;/span&gt;&lt;/div&gt;\");\n});</code></pre> <p>Results in this DOM structure: </p> <pre><code>&lt;div&gt;&lt;span&gt;&lt;b&gt;one&lt;/b&gt;&lt;/span&gt;&lt;/div&gt;\n&lt;div&gt;&lt;span&gt;&lt;b&gt;two&lt;/b&gt;&lt;/span&gt;&lt;/div&gt;</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_wrapAll\">\n<span class=\"functionIcon\">wrapAll</span><span class=\"parameters\">(html)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"nodelist-manipulate\" class=\"jsdoc-link\">dojo/NodeList-manipulate</a> </p> <p>Insert html where the first node in this NodeList lives, then place all nodes in this NodeList as the child of the html.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">html</td> <td class=\"jsdoc-param-type\">String | DOMNode</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | function</span></p> <p>the nodes in the current NodeList will be returned, not the nodes from html argument.</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>assume a DOM created by this markup: </p> <pre><code>&lt;div class=\"container\"&gt;\n    &lt;div class=\"red\"&gt;Red One&lt;/div&gt;\n    &lt;div class=\"blue\"&gt;Blue One&lt;/div&gt;\n    &lt;div class=\"red\"&gt;Red Two&lt;/div&gt;\n    &lt;div class=\"blue\"&gt;Blue Two&lt;/div&gt;\n&lt;/div&gt;</code></pre> <p>Running this code: </p> <pre><code>require([\"dojo/query\", \"dojo/NodeList-manipulate\"\n], function(query){\n    query(\".red\").wrapAll('&lt;div class=\"allRed\"&gt;&lt;/div&gt;');\n});</code></pre> <p>Results in this DOM structure: </p> <pre><code>&lt;div class=\"container\"&gt;\n    &lt;div class=\"allRed\"&gt;\n        &lt;div class=\"red\"&gt;Red One&lt;/div&gt;\n        &lt;div class=\"red\"&gt;Red Two&lt;/div&gt;\n    &lt;/div&gt;\n    &lt;div class=\"blue\"&gt;Blue One&lt;/div&gt;\n    &lt;div class=\"blue\"&gt;Blue Two&lt;/div&gt;\n&lt;/div&gt;</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_NodeList_wrapInner\">\n<span class=\"functionIcon\">wrapInner</span><span class=\"parameters\">(html)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"nodelist-manipulate\" class=\"jsdoc-link\">dojo/NodeList-manipulate</a> </p> <p>For each node in the NodeList, wrap all its children with the passed in html.</p>  <p>html will be cloned if the NodeList has more than one element. Only DOM nodes are cloned, not any attached event handlers.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">html</td> <td class=\"jsdoc-param-type\">String | DOMNode</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | function</span></p> <p>the nodes in the current NodeList will be returned, not the nodes from html argument.</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>assume a DOM created by this markup: </p> <pre><code>&lt;div class=\"container\"&gt;\n    &lt;div class=\"red\"&gt;Red One&lt;/div&gt;\n    &lt;div class=\"blue\"&gt;Blue One&lt;/div&gt;\n    &lt;div class=\"red\"&gt;Red Two&lt;/div&gt;\n    &lt;div class=\"blue\"&gt;Blue Two&lt;/div&gt;\n&lt;/div&gt;</code></pre> <p>Running this code: </p> <pre><code>require([\"dojo/query\", \"dojo/NodeList-manipulate\"\n], function(query){\n    query(\".red\").wrapInner('&lt;span class=\"special\"&gt;&lt;/span&gt;');\n});</code></pre> <p>Results in this DOM structure: </p> <pre><code>&lt;div class=\"container\"&gt;\n    &lt;div class=\"red\"&gt;&lt;span class=\"special\"&gt;Red One&lt;/span&gt;&lt;/div&gt;\n    &lt;div class=\"blue\"&gt;Blue One&lt;/div&gt;\n    &lt;div class=\"red\"&gt;&lt;span class=\"special\"&gt;Red Two&lt;/span&gt;&lt;/div&gt;\n    &lt;div class=\"blue\"&gt;Blue Two&lt;/div&gt;\n&lt;/div&gt;</code></pre> </div> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/NodeList.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/NodeList.html</a>\n  </p>\n</div>\n","dojo/main":"<h1>dojo/main</h1>  <h2 id=\"summary\" class=\"summary\">Summary</h2> <p>This module is the foundational module of the dojo boot sequence; it defines the dojo object.</p>             <h2 id=\"properties\">Properties</h2>              <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_back\">\n<span class=\"objectIcon\">back</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"back\" class=\"jsdoc-link\">dojo/back</a> </p> <div class=\"jsdoc-summary\">\n<p>Browser history management resources</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_baseUrl\">\n<span class=\"stringIcon\">baseUrl</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/configspidermonkey\" class=\"jsdoc-link\">dojo/_base/configSpidermonkey</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_behavior\">\n<span class=\"objectIcon\">behavior</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"behavior\" class=\"jsdoc-link\">dojo/behavior</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_cldr\">\n<span class=\"objectIcon\">cldr</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"cldr/monetary\" class=\"jsdoc-link\">dojo/cldr/monetary</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_colors\">\n<span class=\"objectIcon\">colors</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"colors\" class=\"jsdoc-link\">dojo/colors</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_config\">\n<span class=\"objectIcon\">config</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/kernel\" class=\"jsdoc-link\">dojo/_base/kernel</a> </p> <div class=\"jsdoc-summary\">\n<p>This module defines the user configuration during bootstrap.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_connectPublisher\">\n<span class=\"objectIcon\">connectPublisher</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"robotx\" class=\"jsdoc-link\">dojo/robotx</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_contentHandlers\">\n<span class=\"objectIcon\">contentHandlers</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <div class=\"jsdoc-summary\">\n<p>A map of available XHR transport handle types. Name matches the <code>handleAs</code> attribute passed to XHR calls.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_currency\">\n<span class=\"objectIcon\">currency</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"currency\" class=\"jsdoc-link\">dojo/currency</a> </p> <div class=\"jsdoc-summary\">\n<p>localized formatting and parsing routines for currencies</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_data\">\n<span class=\"objectIcon\">data</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"data/util/filter\" class=\"jsdoc-link\">dojo/data/util/filter</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_date\">\n<span class=\"objectIcon\">date</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"date/stamp\" class=\"jsdoc-link\">dojo/date/stamp</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_dijit\">\n<span class=\"objectIcon\">dijit</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/kernel\" class=\"jsdoc-link\">dojo/_base/kernel</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_dnd\">\n<span class=\"objectIcon\">dnd</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"dnd/common\" class=\"jsdoc-link\">dojo/dnd/common</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_doc\">\n<span class=\"objectIcon\">doc</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/window\" class=\"jsdoc-link\">dojo/_base/window</a> </p> <div class=\"jsdoc-summary\">\n<p>Alias for the current document. 'doc' can be modified for temporary context shifting. See also withDoc().</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_dojox\">\n<span class=\"objectIcon\">dojox</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/kernel\" class=\"jsdoc-link\">dojo/_base/kernel</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_fx\">\n<span class=\"objectIcon\">fx</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"fx\" class=\"jsdoc-link\">dojo/fx</a> </p> <div class=\"jsdoc-summary\">\n<p>Effects library on top of Base animations</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_gears\">\n<span class=\"objectIcon\">gears</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"gears\" class=\"jsdoc-link\">dojo/gears</a> </p> <div class=\"jsdoc-summary\">\n<p>TODOC</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_global\">\n<span class=\"objectIcon\">global</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/window\" class=\"jsdoc-link\">dojo/_base/window</a> </p> <div class=\"jsdoc-summary\">\n<p>Alias for the current window. 'global' can be modified for temporary context shifting. See also withGlobal().</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_html\">\n<span class=\"objectIcon\">html</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"html\" class=\"jsdoc-link\">dojo/html</a> </p> <div class=\"jsdoc-summary\">\n<p>TODOC</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_i18n\">\n<span class=\"objectIcon\">i18n</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"i18n\" class=\"jsdoc-link\">dojo/i18n</a> </p> <div class=\"jsdoc-summary\">\n<p>This module implements the <a class=\"jsdoc-link\" href=\"i18n\">dojo/i18n</a>! plugin and the v1.6- i18n API</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_io\">\n<span class=\"objectIcon\">io</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"io/iframe\" class=\"jsdoc-link\">dojo/io/iframe</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_isAir\">\n<span class=\"booleanIcon\">isAir</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/sniff\" class=\"jsdoc-link\">dojo/_base/sniff</a> </p> <div class=\"jsdoc-summary\">\n<p>True if client is Adobe Air</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_isAndroid\">\n<span class=\"numberIcon\">isAndroid</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/sniff\" class=\"jsdoc-link\">dojo/_base/sniff</a> </p> <div class=\"jsdoc-summary\">\n<p>Version as a Number if client is android browser. undefined otherwise.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_isAsync\">\n<span class=\"booleanIcon\">isAsync</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/kernel\" class=\"jsdoc-link\">dojo/_base/kernel</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_isBrowser\">\n<span class=\"booleanIcon\">isBrowser</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/configfirefoxextension\" class=\"jsdoc-link\">dojo/_base/configFirefoxExtension</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_isChrome\">\n<span class=\"numberIcon\">isChrome</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/sniff\" class=\"jsdoc-link\">dojo/_base/sniff</a> </p> <div class=\"jsdoc-summary\">\n<p>Version as a Number if client is Chrome browser. undefined otherwise.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_isCopyKey\">\n<span class=\"objectIcon\">isCopyKey</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"http://dojotoolkit.org/api/1.10/dojox/grid/_Grid\" class=\"jsdoc-link\">dojox/grid/_Grid</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_isFF\">\n<span class=\"objectIcon\">isFF</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/configfirefoxextension\" class=\"jsdoc-link\">dojo/_base/configFirefoxExtension</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_isIE\">\n<span class=\"numberIcon\">isIE</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/sniff\" class=\"jsdoc-link\">dojo/_base/sniff</a> </p> <div class=\"jsdoc-summary\">\n<p>Version as a Number if client is MSIE(PC). undefined otherwise. Corresponds to major detected IE version (6, 7, 8, etc.)</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_isIos\">\n<span class=\"numberIcon\">isIos</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/sniff\" class=\"jsdoc-link\">dojo/_base/sniff</a> </p> <div class=\"jsdoc-summary\">\n<p>Version as a Number if client is iPhone, iPod, or iPad. undefined otherwise.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_isKhtml\">\n<span class=\"numberIcon\">isKhtml</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/sniff\" class=\"jsdoc-link\">dojo/_base/sniff</a> </p> <div class=\"jsdoc-summary\">\n<p>Version as a Number if client is a KHTML browser. undefined otherwise. Corresponds to major detected version.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_isMac\">\n<span class=\"booleanIcon\">isMac</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/sniff\" class=\"jsdoc-link\">dojo/_base/sniff</a> </p> <div class=\"jsdoc-summary\">\n<p>True if the client runs on Mac</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_isMoz\">\n<span class=\"objectIcon\">isMoz</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/configfirefoxextension\" class=\"jsdoc-link\">dojo/_base/configFirefoxExtension</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_isMozilla\">\n<span class=\"objectIcon\">isMozilla</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/configfirefoxextension\" class=\"jsdoc-link\">dojo/_base/configFirefoxExtension</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_isOpera\">\n<span class=\"numberIcon\">isOpera</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/sniff\" class=\"jsdoc-link\">dojo/_base/sniff</a> </p> <div class=\"jsdoc-summary\">\n<p>Version as a Number if client is Opera. undefined otherwise. Corresponds to major detected version.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_isQuirks\">\n<span class=\"booleanIcon\">isQuirks</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/configfirefoxextension\" class=\"jsdoc-link\">dojo/_base/configFirefoxExtension</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_isSafari\">\n<span class=\"numberIcon\">isSafari</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/sniff\" class=\"jsdoc-link\">dojo/_base/sniff</a> </p> <div class=\"jsdoc-summary\">\n<p>Version as a Number if client is Safari or iPhone. undefined otherwise.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_isSpidermonkey\">\n<span class=\"booleanIcon\">isSpidermonkey</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/configspidermonkey\" class=\"jsdoc-link\">dojo/_base/configSpidermonkey</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_isWebKit\">\n<span class=\"numberIcon\">isWebKit</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/sniff\" class=\"jsdoc-link\">dojo/_base/sniff</a> </p> <div class=\"jsdoc-summary\">\n<p>Version as a Number if client is a WebKit-derived browser (Konqueror, Safari, Chrome, etc.). undefined otherwise.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_isWii\">\n<span class=\"booleanIcon\">isWii</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/sniff\" class=\"jsdoc-link\">dojo/_base/sniff</a> </p> <div class=\"jsdoc-summary\">\n<p>True if client is Wii</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_keys\">\n<span class=\"objectIcon\">keys</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"keys\" class=\"jsdoc-link\">dojo/keys</a> </p> <div class=\"jsdoc-summary\">\n<p>Definitions for common key values. Client code should test keyCode against these named constants, as the actual codes can vary by browser.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_locale\">\n<span class=\"objectIcon\">locale</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/configfirefoxextension\" class=\"jsdoc-link\">dojo/_base/configFirefoxExtension</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_mouseButtons\">\n<span class=\"objectIcon\">mouseButtons</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"mouse\" class=\"jsdoc-link\">dojo/mouse</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_number\">\n<span class=\"objectIcon\">number</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"number\" class=\"jsdoc-link\">dojo/number</a> </p> <div class=\"jsdoc-summary\">\n<p>localized formatting and parsing routines for Number</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_parser\">\n<span class=\"stringIcon\">parser</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"http://dojotoolkit.org/api/1.10/dojox/mobile/parser\" class=\"jsdoc-link\">dojox/mobile/parser</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_publish\">\n<span class=\"objectIcon\">publish</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"robotx\" class=\"jsdoc-link\">dojo/robotx</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_query\">\n<span class=\"objectIcon\">query</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"query\" class=\"jsdoc-link\">dojo/query</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_regexp\">\n<span class=\"objectIcon\">regexp</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"regexp\" class=\"jsdoc-link\">dojo/regexp</a> </p> <div class=\"jsdoc-summary\">\n<p>Regular expressions and Builder resources</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_rpc\">\n<span class=\"objectIcon\">rpc</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"rpc/rpcservice\" class=\"jsdoc-link\">dojo/rpc/RpcService</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_scopeMap\">\n<span class=\"objectIcon\">scopeMap</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/kernel\" class=\"jsdoc-link\">dojo/_base/kernel</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_store\">\n<span class=\"objectIcon\">store</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"store/cache\" class=\"jsdoc-link\">dojo/store/Cache</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_string\">\n<span class=\"objectIcon\">string</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"string\" class=\"jsdoc-link\">dojo/string</a> </p> <div class=\"jsdoc-summary\">\n<p>String utilities for Dojo</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_subscribe\">\n<span class=\"objectIcon\">subscribe</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"robotx\" class=\"jsdoc-link\">dojo/robotx</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_tests\">\n<span class=\"objectIcon\">tests</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"tests\" class=\"jsdoc-link\">dojo/tests</a> </p> <div class=\"jsdoc-summary\">\n<p>D.O.H. Test files for Dojo unit testing.</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_toJsonIndentStr\">\n<span class=\"stringIcon\">toJsonIndentStr</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/json\" class=\"jsdoc-link\">dojo/_base/json</a> </p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_touch\">\n<span class=\"objectIcon\">touch</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"touch\" class=\"jsdoc-link\">dojo/touch</a> </p> <div class=\"jsdoc-summary\">\n<p>This module provides unified touch event handlers by exporting press, move, release and cancel which can also run well on desktop. Based on <a href=\"http://dvcs.w3.org/hg/webevents/raw-file/tip/touchevents.html\">http://dvcs.w3.org/hg/webevents/raw-file/tip/touchevents.html</a> Also, if the dojoClick property is set to truthy on a DOM node, <a class=\"jsdoc-link\" href=\"touch\">dojo/touch</a> generates click events immediately for this node and its descendants (except for descendants that have a dojoClick property set to falsy), to avoid the delay before native browser click events, and regardless of whether evt.preventDefault() was called in a touch.press event listener. </p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_version\">\n<span class=\"objectIcon\">version</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"_base/kernel\" class=\"jsdoc-link\">dojo/_base/kernel</a> </p> <div class=\"jsdoc-summary\">\n<p>Version number of the Dojo Toolkit</p> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_window\">\n<span class=\"objectIcon\">window</span> </h3> <p class=\"jsdoc-inheritance\">Defined by: <a href=\"window\" class=\"jsdoc-link\">dojo/window</a> </p> <div class=\"jsdoc-summary\">\n<p>TODOC</p> </div>    <h2 id=\"methods\">Methods</h2>                                              <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_AdapterRegistry\">\n<span class=\"functionIcon\">AdapterRegistry</span><span class=\"parameters\">(returnWrappers)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"adapterregistry\" class=\"jsdoc-link\">dojo/AdapterRegistry</a> </p> <p>A registry to make contextual calling/searching easier.</p>  <p>Objects of this class keep list of arrays in the form [name, check, wrap, directReturn] that are used to determine what the contextual result of a set of checked arguments is. All check/wrap functions in this registry should be of the same arity.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">returnWrappers</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>// create a new registry\nrequire([\"dojo/AdapterRegistry\"],\nfunction(AdapterRegistry){\n    var reg = new AdapterRegistry();\n    reg.register(\"handleString\",\n        function(str){\n            return typeof val == \"string\"\n        },\n        function(str){\n            // do something with the string here\n        }\n    );\n    reg.register(\"handleArr\",\n        dojo.isArray,\n        function(arr){\n            // do something with the array here\n        }\n    );\n\n    // now we can pass reg.match() *either* an array or a string and\n    // the value we pass will get handled by the right function\n    reg.match(\"someValue\"); // will call the first function\n    reg.match([\"someValue\"]); // will call the second\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_addClass\">\n<span class=\"functionIcon\">addClass</span><span class=\"parameters\">(node,classStr)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom-class\" class=\"jsdoc-link\">dojo/dom-class</a> </p> <p>Adds the specified classes to the end of the class list on the passed node. Will not re-apply duplicate classes. </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">String | DOMNode</td> <td class=\"jsdoc-param-description\">\n<p>String ID or DomNode reference to add a class string too </p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">classStr</td> <td class=\"jsdoc-param-type\">String | Array</td> <td class=\"jsdoc-param-description\">\n<p>A String class name to add, or several space-separated class names, or an array of class names. </p> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Add a class to some node: </p> <pre><code>require([\"dojo/dom-class\"], function(domClass){\n    domClass.add(\"someNode\", \"anewClass\");\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>Add two classes at once: </p> <pre><code>require([\"dojo/dom-class\"], function(domClass){\n    domClass.add(\"someNode\", \"firstClass secondClass\");\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<p>Add two classes at once (using array): </p> <pre><code>require([\"dojo/dom-class\"], function(domClass){\n    domClass.add(\"someNode\", [\"firstClass\", \"secondClass\"]);\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 4</h3>\n<p>Available in <code>dojo/NodeList</code> for multiple additions </p> <pre><code>require([\"dojo/query\"], function(query){\n    query(\"ul &gt; li\").addClass(\"firstLevel\");\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_addOnLoad\">\n<span class=\"functionIcon\">addOnLoad</span><span class=\"parameters\">(priority,context,callback)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"ready\" class=\"jsdoc-link\">dojo/ready</a> </p> <p>Add a function to execute on DOM content loaded and all requested modules have arrived and been evaluated. In most cases, the <code>domReady</code> plug-in should suffice and this method should not be needed. </p> <p>When called in a non-browser environment, just checks that all requested modules have arrived and been evaluated.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">priority</td> <td class=\"jsdoc-param-type\">Integer</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>The order in which to exec this callback relative to other callbacks, defaults to 1000</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">context</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\">\n<p>The context in which to run execute callback, or a callback if not using context</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">callback</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>The function to execute. </p> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Simple DOM and Modules ready syntax </p> <pre><code>require([\"dojo/ready\"], function(ready){\n    ready(function(){ alert(\"Dom ready!\"); });\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>Using a priority </p> <pre><code>require([\"dojo/ready\"], function(ready){\n    ready(2, function(){ alert(\"low priority ready!\"); })\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<p>Using context </p> <pre><code>require([\"dojo/ready\"], function(ready){\n    ready(foo, function(){\n        // in here, this == foo\n    });\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 4</h3>\n<p>Using dojo/hitch style args: </p> <pre><code>require([\"dojo/ready\"], function(ready){\n    var foo = { dojoReady: function(){ console.warn(this, \"dojo dom and modules ready.\"); } };\n    ready(foo, \"dojoReady\");\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_addOnUnload\">\n<span class=\"functionIcon\">addOnUnload</span><span class=\"parameters\">(obj,functionName)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/unload\" class=\"jsdoc-link\">dojo/_base/unload</a> </p> <p>Registers a function to be triggered when the page unloads. Deprecated, use on(window, \"beforeunload\", lang.hitch(obj, functionName)) instead.</p>  <p>The first time that addOnUnload is called Dojo will register a page listener to trigger your unload handler with. </p> <p>In a browser environment, the functions will be triggered during the window.onbeforeunload event. Be careful of doing too much work in an unload handler. onbeforeunload can be triggered if a link to download a file is clicked, or if the link is a javascript: link. In these cases, the onbeforeunload event fires, but the document is not actually destroyed. So be careful about doing destructive operations in a dojo.addOnUnload callback. </p> <p>Further note that calling dojo.addOnUnload will prevent browsers from using a \"fast back\" cache to make page loading via back button instantaneous.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">obj</td> <td class=\"jsdoc-param-type\">Object? | Function</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> <tr> <td class=\"jsdoc-param-name\">functionName</td> <td class=\"jsdoc-param-type\">String | Function</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>var afunc = function() {console.log(\"global function\");};\nrequire([\"dojo/_base/unload\"], function(unload) {\n    var foo = {bar: function(){ console.log(\"bar unloading...\");}, \n               data: \"mydata\"};\n    unload.addOnUnload(afunc);\n    unload.addOnUnload(foo, \"bar\");\n    unload.addOnUnload(foo, function(){console.log(\"\", this.data);});\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_addOnWindowUnload\">\n<span class=\"functionIcon\">addOnWindowUnload</span><span class=\"parameters\">(obj,functionName)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/configfirefoxextension\" class=\"jsdoc-link\">dojo/_base/configFirefoxExtension</a> </p> <p>registers a function to be triggered when window.onunload fires. Be careful trying to modify the DOM or access JavaScript properties during this phase of page unloading: they may not always be available. Consider dojo.addOnUnload() if you need to modify the DOM or do heavy JavaScript work.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">obj</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> <tr> <td class=\"jsdoc-param-name\">functionName</td> <td class=\"jsdoc-param-type\">String | Function</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>dojo.addOnWindowUnload(functionPointer)\ndojo.addOnWindowUnload(object, \"functionName\")\ndojo.addOnWindowUnload(object, function(){ /* ... */});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_anim\">\n<span class=\"functionIcon\">anim</span><span class=\"parameters\">(node,properties,duration,easing,onEnd,delay)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/fx\" class=\"jsdoc-link\">dojo/_base/fx</a> </p> <p>A simpler interface to <code>animateProperty()</code>, also returns an instance of <code>Animation</code> but begins the animation immediately, unlike nearly every other Dojo animation API.</p>  <p>Simpler (but somewhat less powerful) version of <code>animateProperty</code>. It uses defaults for many basic properties and allows for positional parameters to be used in place of the packed \"property bag\" which is used for other Dojo animation methods. </p> <p>The <code>Animation</code> object returned will be already playing, so calling play() on it again is (usually) a no-op.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode | String</td> <td class=\"jsdoc-param-description\">\n<p>a DOM node or the id of a node to animate CSS properties on</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">properties</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">duration</td> <td class=\"jsdoc-param-type\">Integer</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>The number of milliseconds over which the animation should run. Defaults to the global animation default duration (350ms).</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">easing</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>An easing function over which to calculate acceleration and deceleration of the animation through its duration. A default easing algorithm is provided, but you may plug in any you wish. A large selection of easing algorithms are available in <code>dojo/fx/easing</code>.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">onEnd</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>A function to be called when the animation finishes running.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">delay</td> <td class=\"jsdoc-param-type\">Integer</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>The number of milliseconds to delay beginning the animation by. The default is 0.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Fade out a node </p> <pre><code>basefx.anim(\"id\", { opacity: 0 });</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>Fade out a node over a full second </p> <pre><code>basefx.anim(\"id\", { opacity: 0 }, 1000);</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_animateProperty\">\n<span class=\"functionIcon\">animateProperty</span><span class=\"parameters\">(args)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/fx\" class=\"jsdoc-link\">dojo/_base/fx</a> </p> <p>Returns an animation that will transition the properties of node defined in <code>args</code> depending how they are defined in <code>args.properties</code> </p>  <p>Foundation of most <a class=\"jsdoc-link\" href=\"_base/fx\">dojo/_base/fx</a> animations. It takes an object of \"properties\" corresponding to style properties, and animates them in parallel over a set duration. </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">args</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>An object with the following properties:</p>\n<ul>\n<li>properties (Object, optional): <p>A hash map of style properties to Objects describing the transition, such as the properties of _Line with an additional 'units' property</p> </li>\n<li>node (DOMNode|String): <p>The node referenced in the animation</p> </li>\n<li>duration (Integer, optional): <p>Duration of the animation in milliseconds.</p> </li>\n<li>easing (Function, optional): <p>An easing function.</p> </li>\n</ul> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">instance</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>A simple animation that changes the width of the specified node. </p> <pre><code>basefx.animateProperty({\n    node: \"nodeId\",\n    properties: { width: 400 },\n}).play();</code></pre> <p>Dojo figures out the start value for the width and converts the </p> <p>integer specified for the width to the more expressive but verbose form <code>{ width: { end: '400', units: 'px' } }</code> which you can also specify directly. Defaults to 'px' if omitted. </p> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>Animate width, height, and padding over 2 seconds... the pedantic way: </p> <pre><code>basefx.animateProperty({ node: node, duration:2000,\n    properties: {\n        width: { start: '200', end: '400', units:\"px\" },\n        height: { start:'200', end: '400', units:\"px\" },\n        paddingTop: { start:'5', end:'50', units:\"px\" }\n    }\n}).play();</code></pre> <p>Note 'paddingTop' is used over 'padding-top'. Multi-name CSS properties </p> <p>are written using \"mixed case\", as the hyphen is illegal as an object key. </p> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<p>Plug in a different easing function and register a callback for when the animation ends. Easing functions accept values between zero and one and return a value on that basis. In this case, an exponential-in curve. </p> <pre><code>basefx.animateProperty({\n    node: \"nodeId\",\n    // dojo figures out the start value\n    properties: { width: { end: 400 } },\n    easing: function(n){\n        return (n==0) ? 0 : Math.pow(2, 10 * (n - 1));\n    },\n    onEnd: function(node){\n        // called when the animation finishes. The animation\n        // target is passed to this function\n    }\n}).play(500); // delay playing half a second</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 4</h3>\n<p>Like all <code>Animation</code>s, animateProperty returns a handle to the Animation instance, which fires the events common to Dojo FX. Use <code>aspect.after</code> to access these events outside of the Animation definition: </p> <pre><code>var anim = basefx.animateProperty({\n    node:\"someId\",\n    properties:{\n        width:400, height:500\n    }\n});\naspect.after(anim, \"onEnd\", function(){\n    console.log(\"animation ended\");\n}, true);\n// play the animation now:\nanim.play();</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 5</h3>\n<p>Each property can be a function whose return value is substituted along. Additionally, each measurement (eg: start, end) can be a function. The node reference is passed directly to callbacks. </p> <pre><code>basefx.animateProperty({\n    node:\"mine\",\n    properties:{\n        height:function(node){\n            // shrink this node by 50%\n            return domGeom.position(node).h / 2\n        },\n        width:{\n            start:function(node){ return 100; },\n            end:function(node){ return 200; }\n        }\n    }\n}).play();</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_Animation\">\n<span class=\"functionIcon\">Animation</span><span class=\"parameters\">(args)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/fx\" class=\"jsdoc-link\">dojo/_base/fx</a> </p> <p>A generic animation class that fires callbacks into its handlers object at various states.</p>  <p>A generic animation class that fires callbacks into its handlers object at various states. Nearly all dojo animation functions return an instance of this method, usually without calling the .play() method beforehand. Therefore, you will likely need to call .play() on instances of <code>Animation</code> when one is returned.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">args</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>The 'magic argument', mixing all the properties into this animation instance.</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_attr\">\n<span class=\"functionIcon\">attr</span><span class=\"parameters\">(node,name,value)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/html\" class=\"jsdoc-link\">dojo/_base/html</a> </p> <p>Gets or sets an attribute on an HTML element.</p>  <p>Handles normalized getting and setting of attributes on DOM Nodes. If 2 arguments are passed, and a the second argument is a string, acts as a getter. </p> <p>If a third argument is passed, or if the second argument is a map of attributes, acts as a setter. </p> <p>When passing functions as values, note that they will not be directly assigned to slots on the node, but rather the default behavior will be removed and the new behavior will be added using <code>dojo.connect()</code>, meaning that event handler properties will be normalized and that some caveats with regards to non-standard behaviors for onsubmit apply. Namely that you should cancel form submission using <code>dojo.stopEvent()</code> on the passed event object instead of returning a boolean value from the handler itself.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode | String</td> <td class=\"jsdoc-param-description\">\n<p>id or reference to the element to get or set the attribute on</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">name</td> <td class=\"jsdoc-param-type\">String | Object</td> <td class=\"jsdoc-param-description\">\n<p>the name of the attribute to get or set.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">value</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>The value to set for the attribute</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | undefined</span></p> <p>when used as a getter, the value of the requested attribute or null if that attribute does not have a specified or default value; </p> <p>when used as a setter, the DOM node </p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>// get the current value of the \"foo\" attribute on a node\ndojo.attr(dojo.byId(\"nodeId\"), \"foo\");\n// or we can just pass the id:\ndojo.attr(\"nodeId\", \"foo\");</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<pre><code>// use attr() to set the tab index\ndojo.attr(\"nodeId\", \"tabIndex\", 3);</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<p>Set multiple values at once, including event handlers: </p> <pre><code>dojo.attr(\"formId\", {\n    \"foo\": \"bar\",\n    \"tabIndex\": -1,\n    \"method\": \"POST\",\n    \"onsubmit\": function(e){\n        // stop submitting the form. Note that the IE behavior\n        // of returning true or false will have no effect here\n        // since our handler is connect()ed to the built-in\n        // onsubmit behavior and so we need to use\n        // dojo.stopEvent() to ensure that the submission\n        // doesn't proceed.\n        dojo.stopEvent(e);\n\n        // submit the form with Ajax\n        dojo.xhrPost({ form: \"formId\" });\n    }\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 4</h3>\n<p>Style is s special case: Only set with an object hash of styles </p> <pre><code>dojo.attr(\"someNode\",{\n    id:\"bar\",\n    style:{\n        width:\"200px\", height:\"100px\", color:\"#000\"\n    }\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 5</h3>\n<p>Again, only set style as an object hash of styles: </p> <pre><code>var obj = { color:\"#fff\", backgroundColor:\"#000\" };\ndojo.attr(\"someNode\", \"style\", obj);\n\n// though shorter to use `dojo.style()` in this case:\ndojo.style(\"someNode\", obj);</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_blendColors\">\n<span class=\"functionIcon\">blendColors</span><span class=\"parameters\">(start,end,weight,obj)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/color\" class=\"jsdoc-link\">dojo/_base/Color</a> </p> <p>Blend colors end and start with weight from 0 to 1, 0.5 being a 50/50 blend, can reuse a previously allocated Color object for the result</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">start</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"_base/color\">dojo/_base/Color</a></td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">end</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"_base/color\">dojo/_base/Color</a></td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">weight</td> <td class=\"jsdoc-param-type\">Number</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">obj</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"_base/color\">dojo/_base/Color</a></td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_body\">\n<span class=\"functionIcon\">body</span><span class=\"parameters\">(doc)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/window\" class=\"jsdoc-link\">dojo/_base/window</a> </p> <p>Return the body element of the specified document or of dojo/_base/window::doc.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">doc</td> <td class=\"jsdoc-param-type\">Document</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>win.body().appendChild(dojo.doc.createElement('div'));</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_byId\">\n<span class=\"functionIcon\">byId</span><span class=\"parameters\">(id,doc)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom\" class=\"jsdoc-link\">dojo/dom</a> </p> <p>Returns DOM node with matching <code>id</code> attribute or falsy value (ex: null or undefined) if not found. If <code>id</code> is a DomNode, this function is a no-op. </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">id</td> <td class=\"jsdoc-param-type\">String | DOMNode</td> <td class=\"jsdoc-param-description\">\n<p>A string to match an HTML id attribute or a reference to a DOM Node </p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">doc</td> <td class=\"jsdoc-param-type\">Document</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Document to work in. Defaults to the current value of dojo/_base/window.doc. Can be used to retrieve node references from other documents. </p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">instance</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Look up a node by ID: </p> <pre><code>require([\"dojo/dom\"], function(dom){\n    var n = dom.byId(\"foo\");\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>Check if a node exists, and use it. </p> <pre><code>require([\"dojo/dom\"], function(dom){\n    var n = dom.byId(\"bar\");\n    if(n){ doStuff() ... }\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<p>Allow string or DomNode references to be passed to a custom function: </p> <pre><code>require([\"dojo/dom\"], function(dom){\n    var foo = function(nodeOrId){\n        nodeOrId = dom.byId(nodeOrId);\n        // ... more stuff\n    }\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_cache\">\n<span class=\"functionIcon\">cache</span><span class=\"parameters\">(module,url,value)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"text\" class=\"jsdoc-link\">dojo/text</a> </p> <p>A getter and setter for storing the string content associated with the module and url arguments.</p>  <p>If module is a string that contains slashes, then it is interpretted as a fully resolved path (typically a result returned by require.toUrl), and url should not be provided. This is the preferred signature. If module is a string that does not contain slashes, then url must also be provided and module and url are used to call <code>dojo.moduleUrl()</code> to generate a module URL. This signature is deprecated. If value is specified, the cache value for the moduleUrl will be set to that value. Otherwise, dojo.cache will fetch the moduleUrl and store it in its internal cache and return that cached value for the URL. To clear a cache value pass null for value. Since XMLHttpRequest (XHR) is used to fetch the the URL contents, only modules on the same domain of the page can use this capability. The build system can inline the cache values though, to allow for xdomain hosting.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">module</td> <td class=\"jsdoc-param-type\">String | Object</td> <td class=\"jsdoc-param-description\">\n<p>dojo/cldr/supplemental</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">url</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>The rest of the path to append to the path derived from the module argument. If module is an object, then this second argument should be the \"value\" argument instead.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">value</td> <td class=\"jsdoc-param-type\">String | Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>If a String, the value to use in the cache for the module/url combination. If an Object, it can have two properties: value and sanitize. The value property should be the value to use in the cache, and sanitize can be set to true or false, to indicate if XML declarations should be removed from the value and if the HTML inside a body tag in the value should be extracted as the real value. The value argument or the value property on the value argument are usually only used by the build system as it inlines cache content.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined | null</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>To ask dojo.cache to fetch content and store it in the cache (the dojo[\"cache\"] style of call is used to avoid an issue with the build system erroneously trying to intern this example. To get the build system to intern your dojo.cache calls, use the \"dojo.cache\" style of call): </p> <pre><code>//If template.html contains \"&lt;h1&gt;Hello&lt;/h1&gt;\" that will be\n//the value for the text variable.\n//Note: This is pre-AMD, deprecated syntax\nvar text = dojo[\"cache\"](\"my.module\", \"template.html\");</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>To ask dojo.cache to fetch content and store it in the cache, and sanitize the input (the dojo[\"cache\"] style of call is used to avoid an issue with the build system erroneously trying to intern this example. To get the build system to intern your dojo.cache calls, use the \"dojo.cache\" style of call): </p> <pre><code>//If template.html contains \"&lt;html&gt;&lt;body&gt;&lt;h1&gt;Hello&lt;/h1&gt;&lt;/body&gt;&lt;/html&gt;\", the\n//text variable will contain just \"&lt;h1&gt;Hello&lt;/h1&gt;\".\n//Note: This is pre-AMD, deprecated syntax\nvar text = dojo[\"cache\"](\"my.module\", \"template.html\", {sanitize: true});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<p>Same example as previous, but demonstrates how an object can be passed in as the first argument, then the value argument can then be the second argument. </p> <pre><code>//If template.html contains \"&lt;html&gt;&lt;body&gt;&lt;h1&gt;Hello&lt;/h1&gt;&lt;/body&gt;&lt;/html&gt;\", the\n//text variable will contain just \"&lt;h1&gt;Hello&lt;/h1&gt;\".\n//Note: This is pre-AMD, deprecated syntax\nvar text = dojo[\"cache\"](new dojo._Url(\"my/module/template.html\"), {sanitize: true});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_clearCache\">\n<span class=\"functionIcon\">clearCache</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/array\" class=\"jsdoc-link\">dojo/_base/array</a> </p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_Color\">\n<span class=\"functionIcon\">Color</span><span class=\"parameters\">(color)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/color\" class=\"jsdoc-link\">dojo/_base/Color</a> </p> <p>Takes a named string, hex string, array of rgb or rgba values, an object with r, g, b, and a properties, or another <code>Color</code> object and creates a new Color instance to work from. </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">color</td> <td class=\"jsdoc-param-type\">Array | String | Object</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Work with a Color instance: </p> <pre><code>require([\"dojo/_base/color\"], function(Color){\n    var c = new Color();\n    c.setColor([0,0,0]); // black\n    var hex = c.toHex(); // #000000\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>Work with a node's color: </p> <pre><code>  require([\"dojo/_base/color\", \"dojo/dom-style\"], function(Color, domStyle){\n      var color = domStyle(\"someNode\", \"backgroundColor\");\n      var n = new Color(color);\n      // adjust the color some\n      n.r *= .5;\n      console.log(n.toString()); // rgb(128, 255, 255);\n  });</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_colorFromArray\">\n<span class=\"functionIcon\">colorFromArray</span><span class=\"parameters\">(a,obj)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/color\" class=\"jsdoc-link\">dojo/_base/Color</a> </p> <p>Builds a <code>Color</code> from a 3 or 4 element array, mapping each element in sequence to the rgb(a) values of the color.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">a</td> <td class=\"jsdoc-param-type\">Array</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">obj</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"_base/color\">dojo/_base/Color</a></td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | undefined</span></p> <p>A Color object. If obj is passed, it will be the return value.</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>require([\"dojo/_base/color\"], function(Color){\n    var myColor = new Color().fromArray([237,237,237,0.5]); // grey, 50% alpha\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_colorFromHex\">\n<span class=\"functionIcon\">colorFromHex</span><span class=\"parameters\">(color,obj)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/color\" class=\"jsdoc-link\">dojo/_base/Color</a> </p> <p>Converts a hex string with a '#' prefix to a color object. Supports 12-bit #rgb shorthand. Optionally accepts a <code>Color</code> object to update with the parsed value. </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">color</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">obj</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"_base/color\">dojo/_base/Color</a></td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any</span></p> <p>A Color object. If obj is passed, it will be the return value. </p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>require([\"dojo/_base/color\"], function(Color){\n    var thing = new Color().fromHex(\"#ededed\"); // grey, longhand\n    var thing2 = new Color().fromHex(\"#000\"); // black, shorthand\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_colorFromRgb\">\n<span class=\"functionIcon\">colorFromRgb</span><span class=\"parameters\">(color,obj)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"colors\" class=\"jsdoc-link\">dojo/colors</a> </p> <p>get rgb(a) array from css-style color declarations</p>  <p>this function can handle all 4 CSS3 Color Module formats: rgb, rgba, hsl, hsla, including rgb(a) with percentage values.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">color</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">obj</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"_base/color\">dojo/_base/Color</a></td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">null</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_colorFromString\">\n<span class=\"functionIcon\">colorFromString</span><span class=\"parameters\">(str,obj)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/color\" class=\"jsdoc-link\">dojo/_base/Color</a> </p> <p>Parses <code>str</code> for a color value. Accepts hex, rgb, and rgba style color values.</p>  <p>Acceptable input values for str may include arrays of any form accepted by dojo.colorFromArray, hex strings such as \"#aaaaaa\", or rgb or rgba strings such as \"rgb(133, 200, 16)\" or \"rgba(10, 10, 10, 50)\"</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">str</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">obj</td> <td class=\"jsdoc-param-type\"><a class=\"jsdoc-link\" href=\"_base/color\">dojo/_base/Color</a></td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any</span></p> <p>A Color object. If obj is passed, it will be the return value.</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_connect\">\n<span class=\"functionIcon\">connect</span><span class=\"parameters\">(obj,event,context,method,dontFix)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/connect\" class=\"jsdoc-link\">dojo/_base/connect</a> </p> <p><code>dojo.connect</code> is a deprecated event handling and delegation method in Dojo. It allows one function to \"listen in\" on the execution of any other, triggering the second whenever the first is called. Many listeners may be attached to a function, and source functions may be either regular function calls or DOM events. </p>  <p>Connects listeners to actions, so that after event fires, a listener is called with the same arguments passed to the original function. </p> <p>Since <code>dojo.connect</code> allows the source of events to be either a \"regular\" JavaScript function or a DOM event, it provides a uniform interface for listening to all the types of events that an application is likely to deal with though a single, unified interface. DOM programmers may want to think of it as \"addEventListener for everything and anything\". </p> <p>When setting up a connection, the <code>event</code> parameter must be a string that is the name of the method/event to be listened for. If <code>obj</code> is null, <code>kernel.global</code> is assumed, meaning that connections to global methods are supported but also that you may inadvertently connect to a global by passing an incorrect object name or invalid reference. </p> <p><code>dojo.connect</code> generally is forgiving. If you pass the name of a function or method that does not yet exist on <code>obj</code>, connect will not fail, but will instead set up a stub method. Similarly, null arguments may simply be omitted such that fewer than 4 arguments may be required to set up a connection See the examples for details. </p> <p>The return value is a handle that is needed to remove this connection with <code>dojo.disconnect</code>. </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">obj</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>The source object for the event function. Defaults to <code>kernel.global</code> if null. If obj is a DOM node, the connection is delegated to the DOM event manager (unless dontFix is true). </p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">event</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>String name of the event function in obj. I.e. identifies a property <code>obj[event]</code>. </p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">context</td> <td class=\"jsdoc-param-type\">Object | null</td> <td class=\"jsdoc-param-description\">\n<p>The object that method will receive as \"this\". </p> <p>If context is null and method is a function, then method inherits the context of event. </p> <p>If method is a string then context must be the source object object for method (context[method]). If context is null, kernel.global is used. </p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">method</td> <td class=\"jsdoc-param-type\">String | Function</td> <td class=\"jsdoc-param-description\">\n<p>A function reference, or name of a function in context. The function identified by method fires after event does. method receives the same arguments as the event. See context argument comments for information on method's scope. </p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">dontFix</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>If obj is a DOM node, set dontFix to true to prevent delegation of this connection to the DOM event manager. </p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>When obj.onchange(), do ui.update(): </p> <pre><code>dojo.connect(obj, \"onchange\", ui, \"update\");\ndojo.connect(obj, \"onchange\", ui, ui.update); // same</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>Using return value for disconnect: </p> <pre><code>var link = dojo.connect(obj, \"onchange\", ui, \"update\");\n...\ndojo.disconnect(link);</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<p>When onglobalevent executes, watcher.handler is invoked: </p> <pre><code>dojo.connect(null, \"onglobalevent\", watcher, \"handler\");</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 4</h3>\n<p>When ob.onCustomEvent executes, customEventHandler is invoked: </p> <pre><code>dojo.connect(ob, \"onCustomEvent\", null, \"customEventHandler\");\ndojo.connect(ob, \"onCustomEvent\", \"customEventHandler\"); // same</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 5</h3>\n<p>When ob.onCustomEvent executes, customEventHandler is invoked with the same scope (this): </p> <pre><code>dojo.connect(ob, \"onCustomEvent\", null, customEventHandler);\ndojo.connect(ob, \"onCustomEvent\", customEventHandler); // same</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 6</h3>\n<p>When globalEvent executes, globalHandler is invoked with the same scope (this): </p> <pre><code>dojo.connect(null, \"globalEvent\", null, globalHandler);\ndojo.connect(\"globalEvent\", globalHandler); // same</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_contentBox\">\n<span class=\"functionIcon\">contentBox</span><span class=\"parameters\">(node,box)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/html\" class=\"jsdoc-link\">dojo/_base/html</a> </p> <p>Getter/setter for the content-box of node.</p>  <p>Returns an object in the expected format of box (regardless if box is passed). The object might look like: <code>{ l: 50, t: 200, w: 300: h: 150 }</code> for a node offset from its parent 50px to the left, 200px from the top with a content width of 300px and a content-height of 150px. Note that the content box may have a much larger border or margin box, depending on the box model currently in use and CSS values set/inherited for node. While the getter will return top and left values, the setter only accepts setting the width and height.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DomNode | String</td> <td class=\"jsdoc-param-description\">\n<p>id or reference to DOM Node to get/set box for</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">box</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>If passed, denotes that dojo.contentBox() should update/set the content box for node. Box is an object in the above format, but only w (width) and h (height) are supported. All properties are optional if passed.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_cookie\">\n<span class=\"functionIcon\">cookie</span><span class=\"parameters\">(name,value,props)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"cookie\" class=\"jsdoc-link\">dojo/cookie</a> </p> <p>Get or set a cookie.</p>  <p>If one argument is passed, returns the value of the cookie For two or more arguments, acts as a setter.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">name</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>Name of the cookie</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">value</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Value for the cookie</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">props</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Properties for the cookie</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>set a cookie with the JSON-serialized contents of an object which will expire 5 days from now: </p> <pre><code>require([\"dojo/cookie\", \"dojo/json\"], function(cookie, json){\n    cookie(\"configObj\", json.stringify(config, {expires: 5 }));\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>de-serialize a cookie back into a JavaScript object: </p> <pre><code>require([\"dojo/cookie\", \"dojo/json\"], function(cookie, json){\n    config = json.parse(cookie(\"configObj\"));\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<p>delete a cookie: </p> <pre><code>require([\"dojo/cookie\"], function(cookie){\n    cookie(\"configObj\", null, {expires: -1});\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_coords\">\n<span class=\"functionIcon\">coords</span><span class=\"parameters\">(node,includeScroll)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/html\" class=\"jsdoc-link\">dojo/_base/html</a> </p> <p>Deprecated: Use position() for border-box x/y/w/h or marginBox() for margin-box w/h/l/t. </p> <p>Returns an object that measures margin-box (w)idth/(h)eight and absolute position x/y of the border-box. Also returned is computed (l)eft and (t)op values in pixels from the node's offsetParent as returned from marginBox(). Return value will be in the form: </p> <pre><code>{ l: 50, t: 200, w: 300: h: 150, x: 100, y: 300 }</code></pre> <p>Does not act as a setter. If includeScroll is passed, the x and </p> <p>y params are affected as one would expect in dojo.position().</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DomNode | String</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">includeScroll</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_create\">\n<span class=\"functionIcon\">create</span><span class=\"parameters\">(tag,attrs,refNode,pos)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom-construct\" class=\"jsdoc-link\">dojo/dom-construct</a> </p> <p>Create an element, allowing for optional attribute decoration and placement.</p>  <p>A DOM Element creation function. A shorthand method for creating a node or a fragment, and allowing for a convenient optional attribute setting step, as well as an optional DOM placement reference. </p> <p>Attributes are set by passing the optional object through <code>dojo.setAttr</code>. See <code>dojo.setAttr</code> for noted caveats and nuances, and API if applicable. </p> <p>Placement is done via <code>dojo.place</code>, assuming the new node to be the action node, passing along the optional reference node and position.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">tag</td> <td class=\"jsdoc-param-type\">DOMNode | String</td> <td class=\"jsdoc-param-description\">\n<p>A string of the element to create (eg: \"div\", \"a\", \"p\", \"li\", \"script\", \"br\"), or an existing DOM node to process.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">attrs</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>An object-hash of attributes to set on the newly created node. Can be null, if you don't want to set any attributes/styles. See: <code>dojo.setAttr</code> for a description of available attributes.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">refNode</td> <td class=\"jsdoc-param-type\">DOMNode | String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Optional reference node. Used by <code>dojo.place</code> to place the newly created node somewhere in the dom relative to refNode. Can be a DomNode reference or String ID of a node.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">pos</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Optional positional reference. Defaults to \"last\" by way of <code>dojo.place</code>, though can be set to \"first\",\"after\",\"before\",\"last\", \"replace\" or \"only\" to further control the placement of the new node relative to the refNode. 'refNode' is required if a 'pos' is specified.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Create a DIV: </p> <pre><code>require([\"dojo/dom-construct\"], function(domConstruct){\n    var n = domConstruct.create(\"div\");\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>Create a DIV with content: </p> <pre><code>require([\"dojo/dom-construct\"], function(domConstruct){\n    var n = domConstruct.create(\"div\", { innerHTML:\"&lt;p&gt;hi&lt;/p&gt;\" });\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<p>Place a new DIV in the BODY, with no attributes set </p> <pre><code>require([\"dojo/dom-construct\"], function(domConstruct){\n    var n = domConstruct.create(\"div\", null, dojo.body());\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 4</h3>\n<p>Create an UL, and populate it with LI's. Place the list as the first-child of a node with id=\"someId\": </p> <pre><code>require([\"dojo/dom-construct\", \"dojo/_base/array\"],\nfunction(domConstruct, arrayUtil){\n    var ul = domConstruct.create(\"ul\", null, \"someId\", \"first\");\n    var items = [\"one\", \"two\", \"three\", \"four\"];\n    arrayUtil.forEach(items, function(data){\n        domConstruct.create(\"li\", { innerHTML: data }, ul);\n    });\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 5</h3>\n<p>Create an anchor, with an href. Place in BODY: </p> <pre><code>require([\"dojo/dom-construct\"], function(domConstruct){\n    domConstruct.create(\"a\", { href:\"foo.html\", title:\"Goto FOO!\" }, dojo.body());\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_declare\">\n<span class=\"functionIcon\">declare</span><span class=\"parameters\">(className,superclass,props)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/declare\" class=\"jsdoc-link\">dojo/_base/declare</a> </p> <p>Create a feature-rich constructor from compact notation.</p>  <p>Create a constructor using a compact notation for inheritance and prototype extension. </p> <p>Mixin ancestors provide a type of multiple inheritance. Prototypes of mixin ancestors are copied to the new class: changes to mixin prototypes will not affect classes to which they have been mixed in. </p> <p>Ancestors can be compound classes created by this version of declare(). In complex cases all base classes are going to be linearized according to C3 MRO algorithm (see <a href=\"http://www.python.org/download/releases/2.3/mro/\">http://www.python.org/download/releases/2.3/mro/</a> for more details). </p> <p>\"className\" is cached in \"declaredClass\" property of the new class, if it was supplied. The immediate super class will be cached in \"superclass\" property of the new class. </p> <p>Methods in \"props\" will be copied and modified: \"nom\" property (the declared name of the method) will be added to all copied functions to help identify them for the internal machinery. Be very careful, while reusing methods: if you use the same function under different names, it can produce errors in some cases. </p> <p>It is possible to use constructors created \"manually\" (without declare()) as bases. They will be called as usual during the creation of an instance, their methods will be chained, and even called by \"this.inherited()\". </p> <p>Special property \"-chains-\" governs how to chain methods. It is a dictionary, which uses method names as keys, and hint strings as values. If a hint string is \"after\", this method will be called after methods of its base classes. If a hint string is \"before\", this method will be called before methods of its base classes. </p> <p>If \"constructor\" is not mentioned in \"-chains-\" property, it will be chained using the legacy mode: using \"after\" chaining, calling preamble() method before each constructor, if available, and calling postscript() after all constructors were executed. If the hint is \"after\", it is chained as a regular method, but postscript() will be called after the chain of constructors. \"constructor\" cannot be chained \"before\", but it allows a special hint string: \"manual\", which means that constructors are not going to be chained in any way, and programmer will call them manually using this.inherited(). In the latter case postscript() will be called after the construction. </p> <p>All chaining hints are \"inherited\" from base classes and potentially can be overridden. Be very careful when overriding hints! Make sure that all chained methods can work in a proposed manner of chaining. </p> <p>Once a method was chained, it is impossible to unchain it. The only exception is \"constructor\". You don't need to define a method in order to supply a chaining hint. </p> <p>If a method is chained, it cannot use this.inherited() because all other methods in the hierarchy will be called automatically. </p> <p>Usually constructors and initializers of any kind are chained using \"after\" and destructors of any kind are chained as \"before\". Note that chaining assumes that chained methods do not return any value: any returned value will be discarded. </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">className</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>The optional name of the constructor (loosely, a \"class\") stored in the \"declaredClass\" property in the created prototype. It will be used as a global name for a created constructor.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">superclass</td> <td class=\"jsdoc-param-type\">Function | Function[]</td> <td class=\"jsdoc-param-description\">\n<p>May be null, a Function, or an Array of Functions. This argument specifies a list of bases (the left-most one is the most deepest base).</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">props</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>An object whose properties are copied to the created prototype. Add an instance-initialization function by making it a property named \"constructor\".</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\"><a class=\"jsdoc-link\" href=\"_base/declare.__declarecreatedobject\">dojo/_base/declare.__DeclareCreatedObject</a> | undefined</span></p> <p>New constructor function.</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>declare(\"my.classes.bar\", my.classes.foo, {\n    // properties to be added to the class prototype\n    someValue: 2,\n    // initialization function\n    constructor: function(){\n        this.myComplicatedObject = new ReallyComplicatedObject();\n    },\n    // other functions\n    someMethod: function(){\n        doStuff();\n    }\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<pre><code>var MyBase = declare(null, {\n    // constructor, properties, and methods go here\n    // ...\n});\nvar MyClass1 = declare(MyBase, {\n    // constructor, properties, and methods go here\n    // ...\n});\nvar MyClass2 = declare(MyBase, {\n    // constructor, properties, and methods go here\n    // ...\n});\nvar MyDiamond = declare([MyClass1, MyClass2], {\n    // constructor, properties, and methods go here\n    // ...\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<pre><code>var F = function(){ console.log(\"raw constructor\"); };\nF.prototype.method = function(){\n    console.log(\"raw method\");\n};\nvar A = declare(F, {\n    constructor: function(){\n        console.log(\"A.constructor\");\n    },\n    method: function(){\n        console.log(\"before calling F.method...\");\n        this.inherited(arguments);\n        console.log(\"...back in A\");\n    }\n});\nnew A().method();\n// will print:\n// raw constructor\n// A.constructor\n// before calling F.method...\n// raw method\n// ...back in A</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 4</h3>\n<pre><code>var A = declare(null, {\n    \"-chains-\": {\n        destroy: \"before\"\n    }\n});\nvar B = declare(A, {\n    constructor: function(){\n        console.log(\"B.constructor\");\n    },\n    destroy: function(){\n        console.log(\"B.destroy\");\n    }\n});\nvar C = declare(B, {\n    constructor: function(){\n        console.log(\"C.constructor\");\n    },\n    destroy: function(){\n        console.log(\"C.destroy\");\n    }\n});\nnew C().destroy();\n// prints:\n// B.constructor\n// C.constructor\n// C.destroy\n// B.destroy</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 5</h3>\n<pre><code>var A = declare(null, {\n    \"-chains-\": {\n        constructor: \"manual\"\n    }\n});\nvar B = declare(A, {\n    constructor: function(){\n        // ...\n        // call the base constructor with new parameters\n        this.inherited(arguments, [1, 2, 3]);\n        // ...\n    }\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 6</h3>\n<pre><code>var A = declare(null, {\n    \"-chains-\": {\n        m1: \"before\"\n    },\n    m1: function(){\n        console.log(\"A.m1\");\n    },\n    m2: function(){\n        console.log(\"A.m2\");\n    }\n});\nvar B = declare(A, {\n    \"-chains-\": {\n        m2: \"after\"\n    },\n    m1: function(){\n        console.log(\"B.m1\");\n    },\n    m2: function(){\n        console.log(\"B.m2\");\n    }\n});\nvar x = new B();\nx.m1();\n// prints:\n// B.m1\n// A.m1\nx.m2();\n// prints:\n// A.m2\n// B.m2</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_Deferred\">\n<span class=\"functionIcon\">Deferred</span><span class=\"parameters\">(canceller)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/deferred\" class=\"jsdoc-link\">dojo/_base/Deferred</a> </p> <p>Deprecated. This module defines the legacy dojo/_base/Deferred API. New code should use dojo/Deferred instead.</p>  <p>The Deferred API is based on the concept of promises that provide a generic interface into the eventual completion of an asynchronous action. The motivation for promises fundamentally is about creating a separation of concerns that allows one to achieve the same type of call patterns and logical data flow in asynchronous code as can be achieved in synchronous code. Promises allows one to be able to call a function purely with arguments needed for execution, without conflating the call with concerns of whether it is sync or async. One shouldn't need to alter a call's arguments if the implementation switches from sync to async (or vice versa). By having async functions return promises, the concerns of making the call are separated from the concerns of asynchronous interaction (which are handled by the promise). </p> <p>The Deferred is a type of promise that provides methods for fulfilling the promise with a successful result or an error. The most important method for working with Dojo's promises is the then() method, which follows the CommonJS proposed promise API. An example of using a Dojo promise: </p> <pre><code>var resultingPromise = someAsyncOperation.then(function(result){\n    ... handle result ...\n},\nfunction(error){\n    ... handle error ...\n});</code></pre> <p>The .then() call returns a new promise that represents the result of the execution of the callback. The callbacks will never affect the original promises value. </p> <p>The Deferred instances also provide the following functions for backwards compatibility: </p> <ul> <li>addCallback(handler)</li> <li>addErrback(handler)</li> <li>callback(result)</li> <li>errback(result)</li> </ul> <p>Callbacks are allowed to return promises themselves, so you can build complicated sequences of events with ease. </p> <p>The creator of the Deferred may specify a canceller. The canceller is a function that will be called if Deferred.cancel is called before the Deferred fires. You can use this to implement clean aborting of an XMLHttpRequest, etc. Note that cancel will fire the deferred with a CancelledError (unless your canceller returns another kind of error), so the errbacks should be prepared to handle that error for cancellable Deferreds.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">canceller</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>var deferred = new Deferred();\nsetTimeout(function(){ deferred.callback({success: true}); }, 1000);\nreturn deferred;</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>Deferred objects are often used when making code asynchronous. It may be easiest to write functions in a synchronous manner and then split code using a deferred to trigger a response to a long-lived operation. For example, instead of register a callback function to denote when a rendering operation completes, the function can simply return a deferred: </p> <pre><code>// callback style:\nfunction renderLotsOfData(data, callback){\n    var success = false\n    try{\n        for(var x in data){\n            renderDataitem(data[x]);\n        }\n        success = true;\n    }catch(e){ }\n    if(callback){\n        callback(success);\n    }\n}\n\n\n// using callback style\nrenderLotsOfData(someDataObj, function(success){\n    // handles success or failure\n    if(!success){\n        promptUserToRecover();\n    }\n});\n// NOTE: no way to add another callback here!!</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<p>Using a Deferred doesn't simplify the sending code any, but it provides a standard interface for callers and senders alike, providing both with a simple way to service multiple callbacks for an operation and freeing both sides from worrying about details such as \"did this get called already?\". With Deferreds, new callbacks can be added at any time. </p> <pre><code>// Deferred style:\nfunction renderLotsOfData(data){\n    var d = new Deferred();\n    try{\n        for(var x in data){\n            renderDataitem(data[x]);\n        }\n        d.callback(true);\n    }catch(e){\n        d.errback(new Error(\"rendering failed\"));\n    }\n    return d;\n}\n\n\n// using Deferred style\nrenderLotsOfData(someDataObj).then(null, function(){\n    promptUserToRecover();\n});\n// NOTE: addErrback and addCallback both return the Deferred\n// again, so we could chain adding callbacks or save the\n// deferred for later should we need to be notified again.</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 4</h3>\n<p>In this example, renderLotsOfData is synchronous and so both versions are pretty artificial. Putting the data display on a timeout helps show why Deferreds rock: </p> <pre><code>// Deferred style and async func\nfunction renderLotsOfData(data){\n    var d = new Deferred();\n    setTimeout(function(){\n        try{\n            for(var x in data){\n                renderDataitem(data[x]);\n            }\n            d.callback(true);\n        }catch(e){\n            d.errback(new Error(\"rendering failed\"));\n        }\n    }, 100);\n    return d;\n}\n\n\n// using Deferred style\nrenderLotsOfData(someDataObj).then(null, function(){\n    promptUserToRecover();\n});</code></pre> <p>Note that the caller doesn't have to change his code at all to handle the asynchronous case.</p> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_DeferredList\">\n<span class=\"functionIcon\">DeferredList</span><span class=\"parameters\">(list,fireOnOneCallback,fireOnOneErrback,consumeErrors,canceller)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"deferredlist\" class=\"jsdoc-link\">dojo/DeferredList</a> </p> <p>Deprecated, use dojo/promise/all instead. Provides event handling for a group of Deferred objects.</p>  <p>DeferredList takes an array of existing deferreds and returns a new deferred of its own this new deferred will typically have its callback fired when all of the deferreds in the given list have fired their own deferreds. The parameters <code>fireOnOneCallback</code> and fireOnOneErrback, will fire before all the deferreds as appropriate</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">list</td> <td class=\"jsdoc-param-type\">Array</td> <td class=\"jsdoc-param-description\">\n<p>The list of deferreds to be synchronizied with this DeferredList</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">fireOnOneCallback</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Will cause the DeferredLists callback to be fired as soon as any of the deferreds in its list have been fired instead of waiting until the entire list has finished</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">fireOnOneErrback</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> <tr> <td class=\"jsdoc-param-name\">consumeErrors</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> <tr> <td class=\"jsdoc-param-name\">canceller</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>A deferred canceller function, see dojo.Deferred</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_deprecated\">\n<span class=\"functionIcon\">deprecated</span><span class=\"parameters\">(behaviour,extra,removal)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/kernel\" class=\"jsdoc-link\">dojo/_base/kernel</a> </p> <p>Log a debug message to indicate that a behavior has been deprecated.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">behaviour</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>The API or behavior being deprecated. Usually in the form of \"myApp.someFunction()\".</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">extra</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Text to append to the message. Often provides advice on a new function or facility to achieve the same goal during the deprecation period.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">removal</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Text to indicate when in the future the behavior will be removed. Usually a version number.</p> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>dojo.deprecated(\"myApp.getTemp()\", \"use myApp.getLocaleTemp() instead\", \"1.0\");</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_destroy\">\n<span class=\"functionIcon\">destroy</span><span class=\"parameters\">(node)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/html\" class=\"jsdoc-link\">dojo/_base/html</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_disconnect\">\n<span class=\"functionIcon\">disconnect</span><span class=\"parameters\">(handle)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/connect\" class=\"jsdoc-link\">dojo/_base/connect</a> </p> <p>Remove a link created by dojo.connect.</p>  <p>Removes the connection between event and the method referenced by handle.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">handle</td> <td class=\"jsdoc-param-type\">Handle</td> <td class=\"jsdoc-param-description\">\n<p>the return value of the dojo.connect call that created the connection.</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_docScroll\">\n<span class=\"functionIcon\">docScroll</span><span class=\"parameters\">(doc)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom-geometry\" class=\"jsdoc-link\">dojo/dom-geometry</a> </p> <p>Returns an object with {node, x, y} with corresponding offsets.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">doc</td> <td class=\"jsdoc-param-type\">Document</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Optional document to query. If unspecified, use win.doc.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Object | undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_empty\">\n<span class=\"functionIcon\">empty</span><span class=\"parameters\">(node)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/html\" class=\"jsdoc-link\">dojo/_base/html</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_eval\">\n<span class=\"functionIcon\">eval</span><span class=\"parameters\">(scriptText)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/kernel\" class=\"jsdoc-link\">dojo/_base/kernel</a> </p> <p>A legacy method created for use exclusively by internal Dojo methods. Do not use this method directly unless you understand its possibly-different implications on the platforms your are targeting.</p>  <p>Makes an attempt to evaluate scriptText in the global scope. The function works correctly for browsers that support indirect eval. </p> <p>As usual, IE does not. On IE, the only way to implement global eval is to use execScript. Unfortunately, execScript does not return a value and breaks some current usages of dojo.eval. This implementation uses the technique of executing eval in the scope of a function that is a single scope frame below the global scope; thereby coming close to the global scope. Note carefully that </p> <p>dojo.eval(\"var pi = 3.14;\"); </p> <p>will define global pi in non-IE environments, but define pi only in a temporary local scope for IE. If you want to define a global variable using dojo.eval, write something like </p> <p>dojo.eval(\"window.pi = 3.14;\")</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">scriptText</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\">\n<p>The text to evaluation.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any</span></p> <p>The result of the evaluation. Often <code>undefined</code></p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_every\">\n<span class=\"functionIcon\">every</span><span class=\"parameters\">(arr,callback,thisObject)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/array\" class=\"jsdoc-link\">dojo/_base/array</a> </p> <p>Determines whether or not every item in arr satisfies the condition implemented by callback.</p>  <p>This function corresponds to the JavaScript 1.6 Array.every() method, with one difference: when run over sparse arrays, this implementation passes the \"holes\" in the sparse array to the callback function with a value of undefined. JavaScript 1.6's every skips the holes in the sparse array. For more details, see: <a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/every\">https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/every</a></p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">arr</td> <td class=\"jsdoc-param-type\">Array | String</td> <td class=\"jsdoc-param-description\">\n<p>the array to iterate on. If a string, operates on individual characters.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">callback</td> <td class=\"jsdoc-param-type\">Function | String</td> <td class=\"jsdoc-param-description\">\n<p>a function is invoked with three arguments: item, index, and array and returns true if the condition is met.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">thisObject</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>may be used to scope the call to callback</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Boolean</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>// returns false\narray.every([1, 2, 3, 4], function(item){ return item&gt;1; });</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<pre><code>// returns true\narray.every([1, 2, 3, 4], function(item){ return item&gt;0; });</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_exit\">\n<span class=\"functionIcon\">exit</span><span class=\"parameters\">(exitcode)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/configspidermonkey\" class=\"jsdoc-link\">dojo/_base/configSpidermonkey</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">exitcode</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_experimental\">\n<span class=\"functionIcon\">experimental</span><span class=\"parameters\">(moduleName,extra)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/kernel\" class=\"jsdoc-link\">dojo/_base/kernel</a> </p> <p>Marks code as experimental.</p>  <p>This can be used to mark a function, file, or module as experimental. Experimental code is not ready to be used, and the APIs are subject to change without notice. Experimental code may be completed deleted without going through the normal deprecation process.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">moduleName</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>The name of a module, or the name of a module file or a specific function</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">extra</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>some additional message for the user</p> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>dojo.experimental(\"dojo.data.Result\");</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<pre><code>dojo.experimental(\"dojo.weather.toKelvin()\", \"PENDING approval from NOAA\");</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_fadeIn\">\n<span class=\"functionIcon\">fadeIn</span><span class=\"parameters\">(args)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/fx\" class=\"jsdoc-link\">dojo/_base/fx</a> </p> <p>Returns an animation that will fade node defined in 'args' from its current opacity to fully opaque.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">args</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>An object with the following properties:</p>\n<ul>\n<li>node (DOMNode|String): <p>The node referenced in the animation</p> </li>\n<li>duration (Integer, optional): <p>Duration of the animation in milliseconds.</p> </li>\n<li>easing (Function, optional): <p>An easing function.</p> </li>\n</ul> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_fadeOut\">\n<span class=\"functionIcon\">fadeOut</span><span class=\"parameters\">(args)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/fx\" class=\"jsdoc-link\">dojo/_base/fx</a> </p> <p>Returns an animation that will fade node defined in 'args' from its current opacity to fully transparent.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">args</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>An object with the following properties:</p>\n<ul>\n<li>node (DOMNode|String): <p>The node referenced in the animation</p> </li>\n<li>duration (Integer, optional): <p>Duration of the animation in milliseconds.</p> </li>\n<li>easing (Function, optional): <p>An easing function.</p> </li>\n</ul> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_fieldToObject\">\n<span class=\"functionIcon\">fieldToObject</span><span class=\"parameters\">(inputNode)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom-form\" class=\"jsdoc-link\">dojo/dom-form</a> </p> <p>Serialize a form field to a JavaScript object.</p>  <p>Returns the value encoded in a form field as as a string or an array of strings. Disabled form elements and unchecked radio and checkboxes are skipped. Multi-select elements are returned as an array of string values.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">inputNode</td> <td class=\"jsdoc-param-type\">DOMNode | String</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Object | undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_filter\">\n<span class=\"functionIcon\">filter</span><span class=\"parameters\">(arr,callback,thisObject)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/array\" class=\"jsdoc-link\">dojo/_base/array</a> </p> <p>Returns a new Array with those items from arr that match the condition implemented by callback.</p>  <p>This function corresponds to the JavaScript 1.6 Array.filter() method, with one difference: when run over sparse arrays, this implementation passes the \"holes\" in the sparse array to the callback function with a value of undefined. JavaScript 1.6's filter skips the holes in the sparse array. For more details, see: <a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/filter\">https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/filter</a></p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">arr</td> <td class=\"jsdoc-param-type\">Array</td> <td class=\"jsdoc-param-description\">\n<p>the array to iterate over.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">callback</td> <td class=\"jsdoc-param-type\">Function | String</td> <td class=\"jsdoc-param-description\">\n<p>a function that is invoked with three arguments (item, index, array). The return of this function is expected to be a boolean which determines whether the passed-in item will be included in the returned array.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">thisObject</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>may be used to scope the call to callback</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Array</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>// returns [2, 3, 4]\narray.filter([1, 2, 3, 4], function(item){ return item&gt;1; });</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_fixEvent\">\n<span class=\"functionIcon\">fixEvent</span><span class=\"parameters\">(evt,sender)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/event\" class=\"jsdoc-link\">dojo/_base/event</a> </p> <p>normalizes properties on the event object including event bubbling methods, keystroke normalization, and x/y positions</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">evt</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\">\n<p>native event object</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">sender</td> <td class=\"jsdoc-param-type\">DOMNode</td> <td class=\"jsdoc-param-description\">\n<p>node to treat as \"currentTarget\"</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Event</span></p> <p>native event object</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_fixIeBiDiScrollLeft\">\n<span class=\"functionIcon\">fixIeBiDiScrollLeft</span><span class=\"parameters\">(scrollLeft,doc)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom-geometry\" class=\"jsdoc-link\">dojo/dom-geometry</a> </p> <p>In RTL direction, scrollLeft should be a negative value, but IE returns a positive one. All codes using documentElement.scrollLeft must call this function to fix this error, otherwise the position will offset to right when there is a horizontal scrollbar.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">scrollLeft</td> <td class=\"jsdoc-param-type\">Number</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">doc</td> <td class=\"jsdoc-param-type\">Document</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Optional document to query. If unspecified, use win.doc.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Number | number</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_forEach\">\n<span class=\"functionIcon\">forEach</span><span class=\"parameters\">(arr,callback,thisObject)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/array\" class=\"jsdoc-link\">dojo/_base/array</a> </p> <p>for every item in arr, callback is invoked. Return values are ignored. If you want to break out of the loop, consider using array.every() or array.some(). forEach does not allow breaking out of the loop over the items in arr.</p>  <p>This function corresponds to the JavaScript 1.6 Array.forEach() method, with one difference: when run over sparse arrays, this implementation passes the \"holes\" in the sparse array to the callback function with a value of undefined. JavaScript 1.6's forEach skips the holes in the sparse array. For more details, see: <a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/forEach\">https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/forEach</a></p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">arr</td> <td class=\"jsdoc-param-type\">Array | String</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">callback</td> <td class=\"jsdoc-param-type\">Function | String</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">thisObject</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>// log out all members of the array:\narray.forEach(\n      [ \"thinger\", \"blah\", \"howdy\", 10 ],\n      function(item){\n          console.log(item);\n      }\n);</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<pre><code>// log out the members and their indexes\narray.forEach(\n      [ \"thinger\", \"blah\", \"howdy\", 10 ],\n      function(item, idx, arr){\n          console.log(item, \"at index:\", idx);\n      }\n);</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<pre><code>// use a scoped object member as the callback\n\nvar obj = {\n      prefix: \"logged via obj.callback:\",\n      callback: function(item){\n          console.log(this.prefix, item);\n      }\n};\n\n// specifying the scope function executes the callback in that scope\narray.forEach(\n      [ \"thinger\", \"blah\", \"howdy\", 10 ],\n      obj.callback,\n      obj\n);\n\n// alternately, we can accomplish the same thing with lang.hitch()\narray.forEach(\n      [ \"thinger\", \"blah\", \"howdy\", 10 ],\n      lang.hitch(obj, \"callback\")\n);</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_formToJson\">\n<span class=\"functionIcon\">formToJson</span><span class=\"parameters\">(formNode,prettyPrint)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom-form\" class=\"jsdoc-link\">dojo/dom-form</a> </p> <p>Create a serialized JSON string from a form node or string ID identifying the form to serialize</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">formNode</td> <td class=\"jsdoc-param-type\">DOMNode | String</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">prettyPrint</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">String | undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_formToObject\">\n<span class=\"functionIcon\">formToObject</span><span class=\"parameters\">(formNode)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom-form\" class=\"jsdoc-link\">dojo/dom-form</a> </p> <p>Serialize a form node to a JavaScript object.</p>  <p>Returns the values encoded in an HTML form as string properties in an object which it then returns. Disabled form elements, buttons, and other non-value form elements are skipped. Multi-select elements are returned as an array of string values.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">formNode</td> <td class=\"jsdoc-param-type\">DOMNode | String</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">object</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>This form: </p> <pre><code>&lt;form id=\"test_form\"&gt;\n    &lt;input type=\"text\" name=\"blah\" value=\"blah\"&gt;\n    &lt;input type=\"text\" name=\"no_value\" value=\"blah\" disabled&gt;\n    &lt;input type=\"button\" name=\"no_value2\" value=\"blah\"&gt;\n    &lt;select type=\"select\" multiple name=\"multi\" size=\"5\"&gt;\n        &lt;option value=\"blah\"&gt;blah&lt;/option&gt;\n        &lt;option value=\"thud\" selected&gt;thud&lt;/option&gt;\n        &lt;option value=\"thonk\" selected&gt;thonk&lt;/option&gt;\n    &lt;/select&gt;\n&lt;/form&gt;</code></pre> <p>yields this object structure as the result of a call to formToObject(): </p> <pre><code>{\n    blah: \"blah\",\n    multi: [\n        \"thud\",\n        \"thonk\"\n    ]\n};</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_formToQuery\">\n<span class=\"functionIcon\">formToQuery</span><span class=\"parameters\">(formNode)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom-form\" class=\"jsdoc-link\">dojo/dom-form</a> </p> <p>Returns a URL-encoded string representing the form passed as either a node or string ID identifying the form to serialize</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">formNode</td> <td class=\"jsdoc-param-type\">DOMNode | String</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">String | undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_fromJson\">\n<span class=\"functionIcon\">fromJson</span><span class=\"parameters\">(js)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/json\" class=\"jsdoc-link\">dojo/_base/json</a> </p> <p>Parses a JavaScript expression and returns a JavaScript value.</p>  <p>Throws for invalid JavaScript expressions. It does not use a strict JSON parser. It always delegates to eval(). The content passed to this method must therefore come from a trusted source. It is recommend that you use <a class=\"jsdoc-link\" href=\"json\">dojo/json</a>'s parse function for an implementation uses the (faster) native JSON parse when available.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">js</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>a string literal of a JavaScript expression, for instance: <code>'{ \"foo\": [ \"bar\", 1, { \"baz\": \"thud\" } ] }'</code></p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_getAttr\">\n<span class=\"functionIcon\">getAttr</span><span class=\"parameters\">(node,name)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom-attr\" class=\"jsdoc-link\">dojo/dom-attr</a> </p> <p>Gets an attribute on an HTML element.</p>  <p>Handles normalized getting of attributes on DOM Nodes.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode | String</td> <td class=\"jsdoc-param-description\">\n<p>id or reference to the element to get the attribute on</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">name</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>the name of the attribute to get.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | undefined | null</span></p> <p>the value of the requested attribute or null if that attribute does not have a specified or default value; </p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>// get the current value of the \"foo\" attribute on a node\nrequire([\"dojo/dom-attr\", \"dojo/dom\"], function(domAttr, dom){\n    domAttr.get(dom.byId(\"nodeId\"), \"foo\");\n    // or we can just pass the id:\n    domAttr.get(\"nodeId\", \"foo\");\n}); </code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_getBorderExtents\">\n<span class=\"functionIcon\">getBorderExtents</span><span class=\"parameters\">(node,computedStyle)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom-geometry\" class=\"jsdoc-link\">dojo/dom-geometry</a> </p> <p>returns an object with properties useful for noting the border dimensions.</p>  <ul> <li>l/t/r/b = the sum of left/top/right/bottom border (respectively)</li> <li>w = the sum of the left and right border</li> <li>h = the sum of the top and bottom border</li> </ul> <p>The w/h are used for calculating boxes. Normally application code will not need to invoke this directly, and will use the ...box... functions instead.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">computedStyle</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>This parameter accepts computed styles object. If this parameter is omitted, the functions will call dojo/dom-style.getComputedStyle to get one. It is a better way, calling dojo/dom-style.getComputedStyle once, and then pass the reference to this computedStyle parameter. Wherever possible, reuse the returned object of dojo/dom-style.getComputedStyle().</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">object</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_getComputedStyle\">\n<span class=\"functionIcon\">getComputedStyle</span><span class=\"parameters\">(node)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom-style\" class=\"jsdoc-link\">dojo/dom-style</a> </p> <p>Returns a \"computed style\" object. </p>  <p>Gets a \"computed style\" object which can be used to gather information about the current state of the rendered node. </p> <p>Note that this may behave differently on different browsers. Values may have different formats and value encodings across browsers. </p> <p>Note also that this method is expensive. Wherever possible, reuse the returned object. </p> <p>Use the <a class=\"jsdoc-link\" href=\"dom-style#get\">dojo/dom-style.get()</a> method for more consistent (pixelized) return values. </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode</td> <td class=\"jsdoc-param-description\">\n<p>A reference to a DOM node. Does NOT support taking an ID string for speed reasons.</p> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>require([\"dojo/dom-style\", \"dojo/dom\"], function(domStyle, dom){\n    domStyle.getComputedStyle(dom.byId('foo')).borderWidth;\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>Reusing the returned object, avoiding multiple lookups: </p> <pre><code>require([\"dojo/dom-style\", \"dojo/dom\"], function(domStyle, dom){\n    var cs = domStyle.getComputedStyle(dom.byId(\"someNode\"));\n    var w = cs.width, h = cs.height;\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_getContentBox\">\n<span class=\"functionIcon\">getContentBox</span><span class=\"parameters\">(node,computedStyle)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom-geometry\" class=\"jsdoc-link\">dojo/dom-geometry</a> </p> <p>Returns an object that encodes the width, height, left and top positions of the node's content box, irrespective of the current box model.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">computedStyle</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>This parameter accepts computed styles object. If this parameter is omitted, the functions will call dojo/dom-style.getComputedStyle to get one. It is a better way, calling dojo/dom-style.getComputedStyle once, and then pass the reference to this computedStyle parameter. Wherever possible, reuse the returned object of dojo/dom-style.getComputedStyle().</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">object</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_getIeDocumentElementOffset\">\n<span class=\"functionIcon\">getIeDocumentElementOffset</span><span class=\"parameters\">(doc)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom-geometry\" class=\"jsdoc-link\">dojo/dom-geometry</a> </p> <p>returns the offset in x and y from the document body to the visual edge of the page for IE</p>  <p>The following values in IE contain an offset: </p> <pre><code>event.clientX\nevent.clientY\nnode.getBoundingClientRect().left\nnode.getBoundingClientRect().top</code></pre> <p>But other position related values do not contain this offset, </p> <p>such as node.offsetLeft, node.offsetTop, node.style.left and node.style.top. The offset is always (2, 2) in LTR direction. When the body is in RTL direction, the offset counts the width of left scroll bar's width. This function computes the actual offset.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">doc</td> <td class=\"jsdoc-param-type\">Document</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Optional document to query. If unspecified, use win.doc.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">object</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_getL10nName\">\n<span class=\"functionIcon\">getL10nName</span><span class=\"parameters\">(moduleName,bundleName,locale)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"i18n\" class=\"jsdoc-link\">dojo/i18n</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">moduleName</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">bundleName</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">locale</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">string</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_getMarginBox\">\n<span class=\"functionIcon\">getMarginBox</span><span class=\"parameters\">(node,computedStyle)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom-geometry\" class=\"jsdoc-link\">dojo/dom-geometry</a> </p> <p>returns an object that encodes the width, height, left and top positions of the node's margin box.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">computedStyle</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>This parameter accepts computed styles object. If this parameter is omitted, the functions will call dojo/dom-style.getComputedStyle to get one. It is a better way, calling dojo/dom-style.getComputedStyle once, and then pass the reference to this computedStyle parameter. Wherever possible, reuse the returned object of dojo/dom-style.getComputedStyle().</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">object</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_getMarginExtents\">\n<span class=\"functionIcon\">getMarginExtents</span><span class=\"parameters\">(node,computedStyle)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom-geometry\" class=\"jsdoc-link\">dojo/dom-geometry</a> </p> <p>returns object with properties useful for box fitting with regards to box margins (i.e., the outer-box). </p> <ul> <li>l/t = marginLeft, marginTop, respectively</li> <li>w = total width, margin inclusive</li> <li>h = total height, margin inclusive</li> </ul> <p>The w/h are used for calculating boxes. Normally application code will not need to invoke this directly, and will use the ...box... functions instead.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">computedStyle</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>This parameter accepts computed styles object. If this parameter is omitted, the functions will call dojo/dom-style.getComputedStyle to get one. It is a better way, calling dojo/dom-style.getComputedStyle once, and then pass the reference to this computedStyle parameter. Wherever possible, reuse the returned object of dojo/dom-style.getComputedStyle().</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">object</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_getMarginSize\">\n<span class=\"functionIcon\">getMarginSize</span><span class=\"parameters\">(node,computedStyle)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom-geometry\" class=\"jsdoc-link\">dojo/dom-geometry</a> </p> <p>returns an object that encodes the width and height of the node's margin box</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode | String</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">computedStyle</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>This parameter accepts computed styles object. If this parameter is omitted, the functions will call dojo/dom-style.getComputedStyle to get one. It is a better way, calling dojo/dom-style.getComputedStyle once, and then pass the reference to this computedStyle parameter. Wherever possible, reuse the returned object of dojo/dom-style.getComputedStyle().</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">object</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_getNodeProp\">\n<span class=\"functionIcon\">getNodeProp</span><span class=\"parameters\">(node,name)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom-attr\" class=\"jsdoc-link\">dojo/dom-attr</a> </p> <p>Returns an effective value of a property or an attribute.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode | String</td> <td class=\"jsdoc-param-description\">\n<p>id or reference to the element to remove the attribute from</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">name</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>the name of the attribute</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any</span></p> <p>the value of the attribute</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_getPadBorderExtents\">\n<span class=\"functionIcon\">getPadBorderExtents</span><span class=\"parameters\">(node,computedStyle)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom-geometry\" class=\"jsdoc-link\">dojo/dom-geometry</a> </p> <p>Returns object with properties useful for box fitting with regards to padding.</p>  <ul> <li>l/t/r/b = the sum of left/top/right/bottom padding and left/top/right/bottom border (respectively)</li> <li>w = the sum of the left and right padding and border</li> <li>h = the sum of the top and bottom padding and border</li> </ul> <p>The w/h are used for calculating boxes. Normally application code will not need to invoke this directly, and will use the ...box... functions instead.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">computedStyle</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>This parameter accepts computed styles object. If this parameter is omitted, the functions will call dojo/dom-style.getComputedStyle to get one. It is a better way, calling dojo/dom-style.getComputedStyle once, and then pass the reference to this computedStyle parameter. Wherever possible, reuse the returned object of dojo/dom-style.getComputedStyle().</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">object</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_getPadExtents\">\n<span class=\"functionIcon\">getPadExtents</span><span class=\"parameters\">(node,computedStyle)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom-geometry\" class=\"jsdoc-link\">dojo/dom-geometry</a> </p> <p>Returns object with special values specifically useful for node fitting.</p>  <p>Returns an object with <code>w</code>, <code>h</code>, <code>l</code>, <code>t</code> properties: </p> <pre><code>l/t/r/b = left/top/right/bottom padding (respectively)\nw = the total of the left and right padding\nh = the total of the top and bottom padding</code></pre> <p>If 'node' has position, l/t forms the origin for child nodes. </p> <p>The w/h are used for calculating boxes. Normally application code will not need to invoke this directly, and will use the ...box... functions instead.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">computedStyle</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>This parameter accepts computed styles object. If this parameter is omitted, the functions will call dojo/dom-style.getComputedStyle to get one. It is a better way, calling dojo/dom-style.getComputedStyle once, and then pass the reference to this computedStyle parameter. Wherever possible, reuse the returned object of dojo/dom-style.getComputedStyle().</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">object</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_getProp\">\n<span class=\"functionIcon\">getProp</span><span class=\"parameters\">(node,name)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom-prop\" class=\"jsdoc-link\">dojo/dom-prop</a> </p> <p>Gets a property on an HTML element.</p>  <p>Handles normalized getting of properties on DOM nodes. </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode | String</td> <td class=\"jsdoc-param-description\">\n<p>id or reference to the element to get the property on</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">name</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>the name of the property to get.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | undefined</span></p> <p>the value of the requested property or its default value </p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>// get the current value of the \"foo\" property on a node\nrequire([\"dojo/dom-prop\", \"dojo/dom\"], function(domProp, dom){\n    domProp.get(dom.byId(\"nodeId\"), \"foo\");\n    // or we can just pass the id:\n    domProp.get(\"nodeId\", \"foo\");\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_getStyle\">\n<span class=\"functionIcon\">getStyle</span><span class=\"parameters\">(node,name)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom-style\" class=\"jsdoc-link\">dojo/dom-style</a> </p> <p>Accesses styles on a node.</p>  <p>Getting the style value uses the computed style for the node, so the value will be a calculated value, not just the immediate node.style value. Also when getting values, use specific style names, like \"borderBottomWidth\" instead of \"border\" since compound values like \"border\" are not necessarily reflected as expected. If you want to get node dimensions, use <a class=\"jsdoc-link\" href=\"dom-geometry#getMarginBox\">dojo/dom-geometry.getMarginBox()</a>, <a class=\"jsdoc-link\" href=\"dom-geometry#getContentBox\">dojo/dom-geometry.getContentBox()</a> or <a class=\"jsdoc-link\" href=\"dom-geometry#getPosition\">dojo/dom-geometry.getPosition()</a>.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode | String</td> <td class=\"jsdoc-param-description\">\n<p>id or reference to node to get style for</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">name</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>the style property to get</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Passing only an ID or node returns the computed style object of the node: </p> <pre><code>require([\"dojo/dom-style\", \"dojo/dom\"], function(domStyle, dom){\n    domStyle.get(\"thinger\");\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>Passing a node and a style property returns the current normalized, computed value for that property: </p> <pre><code>require([\"dojo/dom-style\", \"dojo/dom\"], function(domStyle, dom){\n    domStyle.get(\"thinger\", \"opacity\"); // 1 by default\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_hasAttr\">\n<span class=\"functionIcon\">hasAttr</span><span class=\"parameters\">(node,name)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom-attr\" class=\"jsdoc-link\">dojo/dom-attr</a> </p> <p>Returns true if the requested attribute is specified on the given element, and false otherwise.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode | String</td> <td class=\"jsdoc-param-description\">\n<p>id or reference to the element to check</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">name</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>the name of the attribute</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Boolean | contentWindow.document isn't accessible within IE7/8</span></p> <p>true if the requested attribute is specified on the given element, and false otherwise</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_hasClass\">\n<span class=\"functionIcon\">hasClass</span><span class=\"parameters\">(node,classStr)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom-class\" class=\"jsdoc-link\">dojo/dom-class</a> </p> <p>Returns whether or not the specified classes are a portion of the class list currently applied to the node.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">String | DOMNode</td> <td class=\"jsdoc-param-description\">\n<p>String ID or DomNode reference to check the class for.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">classStr</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>A string class name to look for.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">boolean</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Do something if a node with id=\"someNode\" has class=\"aSillyClassName\" present </p> <pre><code>if(dojo.hasClass(\"someNode\",\"aSillyClassName\")){ ... }</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_hash\">\n<span class=\"functionIcon\">hash</span><span class=\"parameters\">(hash,replace)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"hash\" class=\"jsdoc-link\">dojo/hash</a> </p> <p>Gets or sets the hash string in the browser URL.</p>  <p>Handles getting and setting of location.hash. </p> <ul> <li>If no arguments are passed, acts as a getter.</li> <li>If a string is passed, acts as a setter.</li> </ul>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">hash</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>the hash is set - #string.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">replace</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>If true, updates the hash value in the current history state instead of creating a new history state.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | undefined</span></p> <p>when used as a getter, returns the current hash string. when used as a setter, returns the new hash string.</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>topic.subscribe(\"/dojo/hashchange\", context, callback);\n\nfunction callback (hashValue){\n    // do something based on the hash value.\n}</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_indexOf\">\n<span class=\"functionIcon\">indexOf</span><span class=\"parameters\">(arr,value,fromIndex,findLast)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/array\" class=\"jsdoc-link\">dojo/_base/array</a> </p> <p>locates the first index of the provided value in the passed array. If the value is not found, -1 is returned.</p>  <p>This method corresponds to the JavaScript 1.6 Array.indexOf method, with two differences: </p> <ol> <li>when run over sparse arrays, the Dojo function invokes the callback for every index whereas JavaScript 1.6's indexOf skips the holes in the sparse array.</li> <li>uses equality (==) rather than strict equality (===)</li> </ol> <p>For details on this method, see: <a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/indexOf\">https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/indexOf</a></p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">arr</td> <td class=\"jsdoc-param-type\">Array</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">value</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">fromIndex</td> <td class=\"jsdoc-param-type\">Integer</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> <tr> <td class=\"jsdoc-param-name\">findLast</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Makes indexOf() work like lastIndexOf(). Used internally; not meant for external usage.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Number</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_isBodyLtr\">\n<span class=\"functionIcon\">isBodyLtr</span><span class=\"parameters\">(doc)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom-geometry\" class=\"jsdoc-link\">dojo/dom-geometry</a> </p> <p>Returns true if the current language is left-to-right, and false otherwise.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">doc</td> <td class=\"jsdoc-param-type\">Document</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Optional document to query. If unspecified, use win.doc.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Boolean | boolean</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_isDescendant\">\n<span class=\"functionIcon\">isDescendant</span><span class=\"parameters\">(node,ancestor)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom\" class=\"jsdoc-link\">dojo/dom</a> </p> <p>Returns true if node is a descendant of ancestor</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode | String</td> <td class=\"jsdoc-param-description\">\n<p>string id or node reference to test</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">ancestor</td> <td class=\"jsdoc-param-type\">DOMNode | String</td> <td class=\"jsdoc-param-description\">\n<p>string id or node reference of potential parent to test against </p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">boolean</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Test is node id=\"bar\" is a descendant of node id=\"foo\" </p> <pre><code>require([\"dojo/dom\"], function(dom){\n    if(dom.isDescendant(\"bar\", \"foo\")){ ... }\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_lastIndexOf\">\n<span class=\"functionIcon\">lastIndexOf</span><span class=\"parameters\">(arr,value,fromIndex)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/array\" class=\"jsdoc-link\">dojo/_base/array</a> </p> <p>locates the last index of the provided value in the passed array. If the value is not found, -1 is returned.</p>  <p>This method corresponds to the JavaScript 1.6 Array.lastIndexOf method, with two differences: </p> <ol> <li>when run over sparse arrays, the Dojo function invokes the callback for every index whereas JavaScript 1.6's lasIndexOf skips the holes in the sparse array.</li> <li>uses equality (==) rather than strict equality (===)</li> </ol> <p>For details on this method, see: <a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/lastIndexOf\">https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/lastIndexOf</a></p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">arr</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">value</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">fromIndex</td> <td class=\"jsdoc-param-type\">Integer</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Number</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_loadInit\">\n<span class=\"functionIcon\">loadInit</span><span class=\"parameters\">(f)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/loader\" class=\"jsdoc-link\">dojo/_base/loader</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">f</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_map\">\n<span class=\"functionIcon\">map</span><span class=\"parameters\">(arr,callback,thisObject,Ctr)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/array\" class=\"jsdoc-link\">dojo/_base/array</a> </p> <p>applies callback to each element of arr and returns an Array with the results</p>  <p>This function corresponds to the JavaScript 1.6 Array.map() method, with one difference: when run over sparse arrays, this implementation passes the \"holes\" in the sparse array to the callback function with a value of undefined. JavaScript 1.6's map skips the holes in the sparse array. For more details, see: <a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/map\">https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/map</a></p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">arr</td> <td class=\"jsdoc-param-type\">Array | String</td> <td class=\"jsdoc-param-description\">\n<p>the array to iterate on. If a string, operates on individual characters.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">callback</td> <td class=\"jsdoc-param-type\">Function | String</td> <td class=\"jsdoc-param-description\">\n<p>a function is invoked with three arguments, (item, index, array), and returns a value</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">thisObject</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>may be used to scope the call to callback</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">Ctr</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Array | instance</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>// returns [2, 3, 4, 5]\narray.map([1, 2, 3, 4], function(item){ return item+1 });</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_marginBox\">\n<span class=\"functionIcon\">marginBox</span><span class=\"parameters\">(node,box)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/html\" class=\"jsdoc-link\">dojo/_base/html</a> </p> <p>Getter/setter for the margin-box of node.</p>  <p>Getter/setter for the margin-box of node. Returns an object in the expected format of box (regardless if box is passed). The object might look like: <code>{ l: 50, t: 200, w: 300: h: 150 }</code> for a node offset from its parent 50px to the left, 200px from the top with a margin width of 300px and a margin-height of 150px.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DomNode | String</td> <td class=\"jsdoc-param-description\">\n<p>id or reference to DOM Node to get/set box for</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">box</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>If passed, denotes that dojo.marginBox() should update/set the margin box for node. Box is an object in the above format. All properties are optional if passed.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Retrieve the margin box of a passed node </p> <pre><code>var box = dojo.marginBox(\"someNodeId\");\nconsole.dir(box);</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>Set a node's margin box to the size of another node </p> <pre><code>var box = dojo.marginBox(\"someNodeId\");\ndojo.marginBox(\"someOtherNode\", box);</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_moduleUrl\">\n<span class=\"functionIcon\">moduleUrl</span><span class=\"parameters\">(module,url)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/kernel\" class=\"jsdoc-link\">dojo/_base/kernel</a> </p> <p>Returns a URL relative to a module.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">module</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>dojo/dom-class</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">url</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">string</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>var pngPath = dojo.moduleUrl(\"acme\",\"images/small.png\");\nconsole.dir(pngPath); // list the object properties\n// create an image and set it's source to pngPath's value:\nvar img = document.createElement(\"img\");\nimg.src = pngPath;\n// add our image to the document\ndojo.body().appendChild(img);</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>you may de-reference as far as you like down the package hierarchy. This is sometimes handy to avoid lengthy relative urls or for building portable sub-packages. In this example, the <code>acme.widget</code> and <code>acme.util</code> directories may be located under different roots (see <code>dojo.registerModulePath</code>) but the the modules which reference them can be unaware of their relative locations on the filesystem: </p> <pre><code>// somewhere in a configuration block\ndojo.registerModulePath(\"acme.widget\", \"../../acme/widget\");\ndojo.registerModulePath(\"acme.util\", \"../../util\");\n\n// ...\n\n// code in a module using acme resources\nvar tmpltPath = dojo.moduleUrl(\"acme.widget\",\"templates/template.html\");\nvar dataPath = dojo.moduleUrl(\"acme.util\",\"resources/data.json\");</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_NodeList\">\n<span class=\"functionIcon\">NodeList</span><span class=\"parameters\">(array)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"query\" class=\"jsdoc-link\">dojo/query</a> </p> <p>Array-like object which adds syntactic sugar for chaining, common iteration operations, animation, and node manipulation. NodeLists are most often returned as the result of dojo/query() calls.</p>  <p>NodeList instances provide many utilities that reflect core Dojo APIs for Array iteration and manipulation, DOM manipulation, and event handling. Instead of needing to dig up functions in the dojo package, NodeLists generally make the full power of Dojo available for DOM manipulation tasks in a simple, chainable way.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">array</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Array</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>create a node list from a node </p> <pre><code>require([\"dojo/query\", \"dojo/dom\"\n], function(query, dom){\n    query.NodeList(dom.byId(\"foo\"));\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>get a NodeList from a CSS query and iterate on it </p> <pre><code>require([\"dojo/on\", \"dojo/dom\"\n], function(on, dom){\n    var l = query(\".thinger\");\n    l.forEach(function(node, index, nodeList){\n        console.log(index, node.innerHTML);\n    });\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<p>use native and Dojo-provided array methods to manipulate a NodeList without needing to use dojo.* functions explicitly: </p> <pre><code>require([\"dojo/query\", \"dojo/dom-construct\", \"dojo/dom\"\n], function(query, domConstruct, dom){\n    var l = query(\".thinger\");\n    // since NodeLists are real arrays, they have a length\n    // property that is both readable and writable and\n    // push/pop/shift/unshift methods\n    console.log(l.length);\n    l.push(domConstruct.create(\"span\"));\n\n    // dojo's normalized array methods work too:\n    console.log( l.indexOf(dom.byId(\"foo\")) );\n    // ...including the special \"function as string\" shorthand\n    console.log( l.every(\"item.nodeType == 1\") );\n\n    // NodeLists can be [..] indexed, or you can use the at()\n    // function to get specific items wrapped in a new NodeList:\n    var node = l[3]; // the 4th element\n    var newList = l.at(1, 3); // the 2nd and 4th elements\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 4</h3>\n<p>chainability is a key advantage of NodeLists: </p> <pre><code>require([\"dojo/query\", \"dojo/NodeList-dom\"\n], function(query){\n    query(\".thinger\")\n        .onclick(function(e){ /* ... */ })\n        .at(1, 3, 8) // get a subset\n            .style(\"padding\", \"5px\")\n            .forEach(console.log);\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_objectToQuery\">\n<span class=\"functionIcon\">objectToQuery</span><span class=\"parameters\">(map)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"io-query\" class=\"jsdoc-link\">dojo/io-query</a> </p> <p>takes a name/value mapping object and returns a string representing a URL-encoded version of that object.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">map</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>this object: </p> <pre><code>{\n    blah: \"blah\",\n    multi: [\n        \"thud\",\n        \"thonk\"\n    ]\n};</code></pre> <p>yields the following query string: </p> <pre><code>\"blah=blah&amp;multi=thud&amp;multi=thonk\"</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_place\">\n<span class=\"functionIcon\">place</span><span class=\"parameters\">(node,refNode,position)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom-construct\" class=\"jsdoc-link\">dojo/dom-construct</a> </p> <p>Attempt to insert node into the DOM, choosing from various positioning options. Returns the first argument resolved to a DOM node.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode | DocumentFragment | String</td> <td class=\"jsdoc-param-description\">\n<p>id or node reference, or HTML fragment starting with \"&lt;\" to place relative to refNode</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">refNode</td> <td class=\"jsdoc-param-type\">DOMNode | String</td> <td class=\"jsdoc-param-description\">\n<p>id or node reference to use as basis for placement</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">position</td> <td class=\"jsdoc-param-type\">String | Number</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>string noting the position of node relative to refNode or a number indicating the location in the childNodes collection of refNode. Accepted string values are: </p> <ul> <li>before</li> <li>after</li> <li>replace</li> <li>only</li> <li>first</li> <li>last</li> </ul> <p>\"first\" and \"last\" indicate positions as children of refNode, \"replace\" replaces refNode, \"only\" replaces all children. position defaults to \"last\" if not specified</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">DOMNode | undefined</span></p> <p>Returned values is the first argument resolved to a DOM node. </p> <p>.place() is also a method of <code>dojo/NodeList</code>, allowing <code>dojo/query</code> node lookups.</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Place a node by string id as the last child of another node by string id: </p> <pre><code>require([\"dojo/dom-construct\"], function(domConstruct){\n    domConstruct.place(\"someNode\", \"anotherNode\");\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>Place a node by string id before another node by string id </p> <pre><code>require([\"dojo/dom-construct\"], function(domConstruct){\n    domConstruct.place(\"someNode\", \"anotherNode\", \"before\");\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<p>Create a Node, and place it in the body element (last child): </p> <pre><code>require([\"dojo/dom-construct\", \"dojo/_base/window\"\n], function(domConstruct, win){\n    domConstruct.place(\"&lt;div&gt;&lt;/div&gt;\", win.body());\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 4</h3>\n<p>Put a new LI as the first child of a list by id: </p> <pre><code>require([\"dojo/dom-construct\"], function(domConstruct){\n    domConstruct.place(\"&lt;li&gt;&lt;/li&gt;\", \"someUl\", \"first\");\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_platformRequire\">\n<span class=\"functionIcon\">platformRequire</span><span class=\"parameters\">(modMap)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/loader\" class=\"jsdoc-link\">dojo/_base/loader</a> </p> <p>require one or more modules based on which host environment Dojo is currently operating in</p>  <p>This method takes a \"map\" of arrays which one can use to optionally load dojo modules. The map is indexed by the possible dojo.name<em> values, with two additional values: \"default\" and \"common\". The items in the \"default\" array will be loaded if none of the other items have been chosen based on dojo.name</em>, set by your host environment. The items in the \"common\" array will <em>always</em> be loaded, regardless of which list is chosen.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">modMap</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>dojo.platformRequire({\n    browser: [\n        \"foo.sample\", // simple module\n        \"foo.test\",\n        [\"foo.bar.baz\", true] // skip object check in _loadModule (dojo.require)\n    ],\n    default: [ \"foo.sample._base\" ],\n    common: [ \"important.module.common\" ]\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_popContext\">\n<span class=\"functionIcon\">popContext</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/configfirefoxextension\" class=\"jsdoc-link\">dojo/_base/configFirefoxExtension</a> </p> <p>If the context stack contains elements, ensure that subsequent code executes in the <em>previous</em> context to the current context. The current context set ([global, document]) is returned.</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_position\">\n<span class=\"functionIcon\">position</span><span class=\"parameters\">(node,includeScroll)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom-geometry\" class=\"jsdoc-link\">dojo/dom-geometry</a> </p> <p>Gets the position and size of the passed element relative to the viewport (if includeScroll==false), or relative to the document root (if includeScroll==true). </p>  <p>Returns an object of the form: <code>{ x: 100, y: 300, w: 20, h: 15 }</code>. If includeScroll==true, the x and y values will include any document offsets that may affect the position relative to the viewport. Uses the border-box model (inclusive of border and padding but not margin). Does not act as a setter.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode | String</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">includeScroll</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Object | object</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_prop\">\n<span class=\"functionIcon\">prop</span><span class=\"parameters\">(node,name,value)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/html\" class=\"jsdoc-link\">dojo/_base/html</a> </p> <p>Gets or sets a property on an HTML element.</p>  <p>Handles normalized getting and setting of properties on DOM Nodes. If 2 arguments are passed, and a the second argument is a string, acts as a getter. </p> <p>If a third argument is passed, or if the second argument is a map of attributes, acts as a setter. </p> <p>When passing functions as values, note that they will not be directly assigned to slots on the node, but rather the default behavior will be removed and the new behavior will be added using <code>dojo.connect()</code>, meaning that event handler properties will be normalized and that some caveats with regards to non-standard behaviors for onsubmit apply. Namely that you should cancel form submission using <code>dojo.stopEvent()</code> on the passed event object instead of returning a boolean value from the handler itself.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DomNode | String</td> <td class=\"jsdoc-param-description\">\n<p>id or reference to the element to get or set the property on</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">name</td> <td class=\"jsdoc-param-type\">String | Object</td> <td class=\"jsdoc-param-description\">\n<p>the name of the property to get or set.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">value</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>The value to set for the property</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any</span></p> <p>when used as a getter, the value of the requested property or null if that attribute does not have a specified or default value; </p> <p>when used as a setter, the DOM node </p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>// get the current value of the \"foo\" property on a node\ndojo.prop(dojo.byId(\"nodeId\"), \"foo\");\n// or we can just pass the id:\ndojo.prop(\"nodeId\", \"foo\");</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<pre><code>// use prop() to set the tab index\ndojo.prop(\"nodeId\", \"tabIndex\", 3);</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<p>Set multiple values at once, including event handlers: </p> <pre><code>dojo.prop(\"formId\", {\n    \"foo\": \"bar\",\n    \"tabIndex\": -1,\n    \"method\": \"POST\",\n    \"onsubmit\": function(e){\n        // stop submitting the form. Note that the IE behavior\n        // of returning true or false will have no effect here\n        // since our handler is connect()ed to the built-in\n        // onsubmit behavior and so we need to use\n        // dojo.stopEvent() to ensure that the submission\n        // doesn't proceed.\n        dojo.stopEvent(e);\n\n        // submit the form with Ajax\n        dojo.xhrPost({ form: \"formId\" });\n    }\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 4</h3>\n<p>Style is s special case: Only set with an object hash of styles </p> <pre><code>dojo.prop(\"someNode\",{\n    id:\"bar\",\n    style:{\n        width:\"200px\", height:\"100px\", color:\"#000\"\n    }\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 5</h3>\n<p>Again, only set style as an object hash of styles: </p> <pre><code>var obj = { color:\"#fff\", backgroundColor:\"#000\" };\ndojo.prop(\"someNode\", \"style\", obj);\n\n// though shorter to use `dojo.style()` in this case:\ndojo.style(\"someNode\", obj);</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_provide\">\n<span class=\"functionIcon\">provide</span><span class=\"parameters\">(mid)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/loader\" class=\"jsdoc-link\">dojo/_base/loader</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">mid</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_pushContext\">\n<span class=\"functionIcon\">pushContext</span><span class=\"parameters\">(g,d)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/configfirefoxextension\" class=\"jsdoc-link\">dojo/_base/configFirefoxExtension</a> </p> <p>causes subsequent calls to Dojo methods to assume the passed object and, optionally, document as the default scopes to use. A 2-element array of the previous global and document are returned.</p>  <p>dojo.pushContext treats contexts as a stack. The auto-detected contexts which are initially provided using dojo.setContext() require authors to keep state in order to \"return\" to a previous context, whereas the dojo.pushContext and dojo.popContext methods provide a more natural way to augment blocks of code to ensure that they execute in a different window or frame without issue. If called without any arguments, the default context (the context when Dojo is first loaded) is instead pushed into the stack. If only a single string is passed, a node in the intitial context's document is looked up and its contextWindow and contextDocument properties are used as the context to push. This means that iframes can be given an ID and code can be executed in the scope of the iframe's document in subsequent calls easily.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">g</td> <td class=\"jsdoc-param-type\">Object | String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>The global context. If a string, the id of the frame to search for a context and document.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">d</td> <td class=\"jsdoc-param-type\">MDocumentElement</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>The document element to execute subsequent code with.</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_queryToObject\">\n<span class=\"functionIcon\">queryToObject</span><span class=\"parameters\">(str)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"io-query\" class=\"jsdoc-link\">dojo/io-query</a> </p> <p>Create an object representing a de-serialized query section of a URL. Query keys with multiple values are returned in an array. </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">str</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">object</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>This string: </p> <pre><code>\"foo=bar&amp;foo=baz&amp;thinger=%20spaces%20=blah&amp;zonk=blarg&amp;\"</code></pre> <p>results in this object structure: </p> <pre><code>{\n    foo: [ \"bar\", \"baz\" ],\n    thinger: \" spaces =blah\",\n    zonk: \"blarg\"\n}</code></pre> <p>Note that spaces and other urlencoded entities are correctly handled.</p> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_rawXhrPost\">\n<span class=\"functionIcon\">rawXhrPost</span><span class=\"parameters\">(args)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <p>Sends an HTTP POST request to the server. In addition to the properties listed for the dojo.__XhrArgs type, the following property is allowed:</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">args</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>An object with the following properties:</p>\n<ul>\n<li>handleAs (String, optional): <p>Acceptable values are: text (default), json, json-comment-optional, json-comment-filtered, javascript, xml. See <code>dojo/_base/xhr.contentHandlers</code></p> </li>\n<li>sync (Boolean, optional): <p>false is default. Indicates whether the request should be a synchronous (blocking) request.</p> </li>\n<li>headers (Object, optional): <p>Additional HTTP headers to send in the request.</p> </li>\n<li>failOk (Boolean, optional): <p>false is default. Indicates whether a request should be allowed to fail (and therefore no console error message in the event of a failure)</p> </li>\n<li>contentType (String|Boolean): <p>\"application/x-www-form-urlencoded\" is default. Set to false to prevent a Content-Type header from being sent, or to a string to send a different Content-Type.</p> </li>\n<li>load: <p>This function will be called on a successful HTTP response code.</p> </li>\n<li>error: <p>This function will be called when the request fails due to a network or server error, the url is invalid, etc. It will also be called if the load or handle callback throws an exception, unless djConfig.debugAtAllCosts is true. This allows deployed applications to continue to run even when a logic error happens in the callback, while making it easier to troubleshoot while in debug mode.</p> </li>\n<li>handle: <p>This function will be called at the end of every request, whether or not an error occurs.</p> </li>\n<li>url (String): <p>URL to server endpoint.</p> </li>\n<li>content (Object, optional): <p>Contains properties with string values. These properties will be serialized as name1=value2 and passed in the request.</p> </li>\n<li>timeout (Integer, optional): <p>Milliseconds to wait for the response. If this time passes, the then error callbacks are called.</p> </li>\n<li>form (DOMNode, optional): <p>DOM node for a form. Used to extract the form values and send to the server.</p> </li>\n<li>preventCache (Boolean, optional): <p>Default is false. If true, then a \"dojo.preventCache\" parameter is sent in the request with a value that changes with each request (timestamp). Useful only with GET-type requests.</p> </li>\n<li>rawBody (String, optional): <p>Sets the raw body for an HTTP request. If this is used, then the content property is ignored. This is mostly useful for HTTP methods that have a body to their requests, like PUT or POST. This property can be used instead of postData and putData for dojo/_base/xhr.rawXhrPost and dojo/_base/xhr.rawXhrPut respectively.</p> </li>\n<li>ioPublish (Boolean, optional): <p>Set this explicitly to false to prevent publishing of topics related to IO operations. Otherwise, if djConfig.ioPublish is set to true, topics will be published via dojo/topic.publish() for different phases of an IO operation. See dojo/main.__IoPublish for a list of topics that are published.</p> </li>\n</ul> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_rawXhrPut\">\n<span class=\"functionIcon\">rawXhrPut</span><span class=\"parameters\">(args)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <p>Sends an HTTP PUT request to the server. In addition to the properties listed for the dojo.__XhrArgs type, the following property is allowed:</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">args</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>An object with the following properties:</p>\n<ul>\n<li>handleAs (String, optional): <p>Acceptable values are: text (default), json, json-comment-optional, json-comment-filtered, javascript, xml. See <code>dojo/_base/xhr.contentHandlers</code></p> </li>\n<li>sync (Boolean, optional): <p>false is default. Indicates whether the request should be a synchronous (blocking) request.</p> </li>\n<li>headers (Object, optional): <p>Additional HTTP headers to send in the request.</p> </li>\n<li>failOk (Boolean, optional): <p>false is default. Indicates whether a request should be allowed to fail (and therefore no console error message in the event of a failure)</p> </li>\n<li>contentType (String|Boolean): <p>\"application/x-www-form-urlencoded\" is default. Set to false to prevent a Content-Type header from being sent, or to a string to send a different Content-Type.</p> </li>\n<li>load: <p>This function will be called on a successful HTTP response code.</p> </li>\n<li>error: <p>This function will be called when the request fails due to a network or server error, the url is invalid, etc. It will also be called if the load or handle callback throws an exception, unless djConfig.debugAtAllCosts is true. This allows deployed applications to continue to run even when a logic error happens in the callback, while making it easier to troubleshoot while in debug mode.</p> </li>\n<li>handle: <p>This function will be called at the end of every request, whether or not an error occurs.</p> </li>\n<li>url (String): <p>URL to server endpoint.</p> </li>\n<li>content (Object, optional): <p>Contains properties with string values. These properties will be serialized as name1=value2 and passed in the request.</p> </li>\n<li>timeout (Integer, optional): <p>Milliseconds to wait for the response. If this time passes, the then error callbacks are called.</p> </li>\n<li>form (DOMNode, optional): <p>DOM node for a form. Used to extract the form values and send to the server.</p> </li>\n<li>preventCache (Boolean, optional): <p>Default is false. If true, then a \"dojo.preventCache\" parameter is sent in the request with a value that changes with each request (timestamp). Useful only with GET-type requests.</p> </li>\n<li>rawBody (String, optional): <p>Sets the raw body for an HTTP request. If this is used, then the content property is ignored. This is mostly useful for HTTP methods that have a body to their requests, like PUT or POST. This property can be used instead of postData and putData for dojo/_base/xhr.rawXhrPost and dojo/_base/xhr.rawXhrPut respectively.</p> </li>\n<li>ioPublish (Boolean, optional): <p>Set this explicitly to false to prevent publishing of topics related to IO operations. Otherwise, if djConfig.ioPublish is set to true, topics will be published via dojo/topic.publish() for different phases of an IO operation. See dojo/main.__IoPublish for a list of topics that are published.</p> </li>\n</ul> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_ready\">\n<span class=\"functionIcon\">ready</span><span class=\"parameters\">(priority,context,callback)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"ready\" class=\"jsdoc-link\">dojo/ready</a> </p> <p>Add a function to execute on DOM content loaded and all requested modules have arrived and been evaluated. In most cases, the <code>domReady</code> plug-in should suffice and this method should not be needed. </p> <p>When called in a non-browser environment, just checks that all requested modules have arrived and been evaluated.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">priority</td> <td class=\"jsdoc-param-type\">Integer</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>The order in which to exec this callback relative to other callbacks, defaults to 1000</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">context</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\">\n<p>The context in which to run execute callback, or a callback if not using context</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">callback</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>The function to execute. </p> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Simple DOM and Modules ready syntax </p> <pre><code>require([\"dojo/ready\"], function(ready){\n    ready(function(){ alert(\"Dom ready!\"); });\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>Using a priority </p> <pre><code>require([\"dojo/ready\"], function(ready){\n    ready(2, function(){ alert(\"low priority ready!\"); })\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<p>Using context </p> <pre><code>require([\"dojo/ready\"], function(ready){\n    ready(foo, function(){\n        // in here, this == foo\n    });\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 4</h3>\n<p>Using dojo/hitch style args: </p> <pre><code>require([\"dojo/ready\"], function(ready){\n    var foo = { dojoReady: function(){ console.warn(this, \"dojo dom and modules ready.\"); } };\n    ready(foo, \"dojoReady\");\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_registerModulePath\">\n<span class=\"functionIcon\">registerModulePath</span><span class=\"parameters\">(moduleName,prefix)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/loader\" class=\"jsdoc-link\">dojo/_base/loader</a> </p> <p>Maps a module name to a path</p>  <p>An unregistered module is given the default path of ../[module], relative to Dojo root. For example, module acme is mapped to ../acme. If you want to use a different module name, use dojo.registerModulePath.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">moduleName</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">prefix</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>If your dojo.js is located at this location in the web root: </p> <pre><code>/myapp/js/dojo/dojo/dojo.js</code></pre> <p>and your modules are located at: </p> <pre><code>/myapp/js/foo/bar.js\n/myapp/js/foo/baz.js\n/myapp/js/foo/thud/xyzzy.js</code></pre> <p>Your application can tell Dojo to locate the \"foo\" namespace by calling: </p> <pre><code>dojo.registerModulePath(\"foo\", \"../../foo\");</code></pre> <p>At which point you can then use dojo.require() to load the </p> <p>modules (assuming they provide() the same things which are required). The full code might be: </p> <pre><code>&lt;script type=\"text/javascript\"\n    src=\"/myapp/js/dojo/dojo/dojo.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;\n    dojo.registerModulePath(\"foo\", \"../../foo\");\n    dojo.require(\"foo.bar\");\n    dojo.require(\"foo.baz\");\n    dojo.require(\"foo.thud.xyzzy\");\n&lt;/script&gt;</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_removeAttr\">\n<span class=\"functionIcon\">removeAttr</span><span class=\"parameters\">(node,name)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom-attr\" class=\"jsdoc-link\">dojo/dom-attr</a> </p> <p>Removes an attribute from an HTML element.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode | String</td> <td class=\"jsdoc-param-description\">\n<p>id or reference to the element to remove the attribute from</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">name</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>the name of the attribute to remove</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_removeClass\">\n<span class=\"functionIcon\">removeClass</span><span class=\"parameters\">(node,classStr)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom-class\" class=\"jsdoc-link\">dojo/dom-class</a> </p> <p>Removes the specified classes from node. No <code>contains()</code> check is required. </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">String | DOMNode</td> <td class=\"jsdoc-param-description\">\n<p>String ID or DomNode reference to remove the class from. </p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">classStr</td> <td class=\"jsdoc-param-type\">String | Array</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>An optional String class name to remove, or several space-separated class names, or an array of class names. If omitted, all class names will be deleted. </p> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Remove a class from some node: </p> <pre><code>require([\"dojo/dom-class\"], function(domClass){\n    domClass.remove(\"someNode\", \"firstClass\");\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>Remove two classes from some node: </p> <pre><code>require([\"dojo/dom-class\"], function(domClass){\n    domClass.remove(\"someNode\", \"firstClass secondClass\");\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<p>Remove two classes from some node (using array): </p> <pre><code>require([\"dojo/dom-class\"], function(domClass){\n    domClass.remove(\"someNode\", [\"firstClass\", \"secondClass\"]);\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 4</h3>\n<p>Remove all classes from some node: </p> <pre><code>require([\"dojo/dom-class\"], function(domClass){\n    domClass.remove(\"someNode\");\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 5</h3>\n<p>Available in <code>dojo/NodeList</code> for multiple removal </p> <pre><code>require([\"dojo/query\"], function(query){\n    query(\"ul &gt; li\").removeClass(\"foo\");\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_replaceClass\">\n<span class=\"functionIcon\">replaceClass</span><span class=\"parameters\">(node,addClassStr,removeClassStr)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom-class\" class=\"jsdoc-link\">dojo/dom-class</a> </p> <p>Replaces one or more classes on a node if not present. Operates more quickly than calling dojo.removeClass and dojo.addClass </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">String | DOMNode</td> <td class=\"jsdoc-param-description\">\n<p>String ID or DomNode reference to remove the class from. </p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">addClassStr</td> <td class=\"jsdoc-param-type\">String | Array</td> <td class=\"jsdoc-param-description\">\n<p>A String class name to add, or several space-separated class names, or an array of class names. </p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">removeClassStr</td> <td class=\"jsdoc-param-type\">String | Array</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>A String class name to remove, or several space-separated class names, or an array of class names. </p> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>require([\"dojo/dom-class\"], function(domClass){\n    domClass.replace(\"someNode\", \"add1 add2\", \"remove1 remove2\");\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>Replace all classes with addMe </p> <pre><code>require([\"dojo/dom-class\"], function(domClass){\n    domClass.replace(\"someNode\", \"addMe\");\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<p>Available in <code>dojo/NodeList</code> for multiple toggles </p> <pre><code>require([\"dojo/query\"], function(query){\n    query(\".findMe\").replaceClass(\"addMe\", \"removeMe\");\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_require\">\n<span class=\"functionIcon\">require</span><span class=\"parameters\">(moduleName,omitModuleCheck)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/loader\" class=\"jsdoc-link\">dojo/_base/loader</a> </p> <p>loads a Javascript module from the appropriate URI </p>  <p>Modules are loaded via dojo.require by using one of two loaders: the normal loader and the xdomain loader. The xdomain loader is used when dojo was built with a custom build that specified loader=xdomain and the module lives on a modulePath that is a whole URL, with protocol and a domain. The versions of Dojo that are on the Google and AOL CDNs use the xdomain loader. </p> <p>If the module is loaded via the xdomain loader, it is an asynchronous load, since the module is added via a dynamically created script tag. This means that dojo.require() can return before the module has loaded. However, this should only happen in the case where you do dojo.require calls in the top-level HTML page, or if you purposely avoid the loader checking for dojo.require dependencies in your module by using a syntax like dojo[\"require\"] to load the module. </p> <p>Sometimes it is useful to not have the loader detect the dojo.require calls in the module so that you can dynamically load the modules as a result of an action on the page, instead of right at module load time. </p> <p>Also, for script blocks in an HTML page, the loader does not pre-process them, so it does not know to download the modules before the dojo.require calls occur. </p> <p>So, in those two cases, when you want on-the-fly module loading or for script blocks in the HTML page, special care must be taken if the dojo.required code is loaded asynchronously. To make sure you can execute code that depends on the dojo.required modules, be sure to add the code that depends on the modules in a dojo.addOnLoad() callback. dojo.addOnLoad waits for all outstanding modules to finish loading before executing. </p> <p>This type of syntax works with both xdomain and normal loaders, so it is good practice to always use this idiom for on-the-fly code loading and in HTML script blocks. If at some point you change loaders and where the code is loaded from, it will all still work. </p> <p>More on how dojo.require <code>dojo.require(\"A.B\")</code> first checks to see if symbol A.B is defined. If it is, it is simply returned (nothing to do). </p> <p>If it is not defined, it will look for <code>A/B.js</code> in the script root directory. </p> <p><code>dojo.require</code> throws an exception if it cannot find a file to load, or if the symbol <code>A.B</code> is not defined after loading. </p> <p>It returns the object <code>A.B</code>, but note the caveats above about on-the-fly loading and HTML script blocks when the xdomain loader is loading a module. </p> <p><code>dojo.require()</code> does nothing about importing symbols into the current namespace. It is presumed that the caller will take care of that. </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">moduleName</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>module name to load, using periods for separators, e.g. \"dojo.date.locale\". Module paths are de-referenced by dojo's internal mapping of locations to names and are disambiguated by longest prefix. See <code>dojo.registerModulePath()</code> for details on registering new modules. </p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">omitModuleCheck</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>if <code>true</code>, omitModuleCheck skips the step of ensuring that the loaded file actually defines the symbol it is referenced by. For example if it called as <code>dojo.require(\"a.b.c\")</code> and the file located at <code>a/b/c.js</code> does not define an object <code>a.b.c</code>, and exception will be throws whereas no exception is raised when called as <code>dojo.require(\"a.b.c\", true)</code> </p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any</span></p> <p>the required namespace object</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>To use dojo.require in conjunction with dojo.ready: </p> <pre><code>dojo.require(\"foo\");\ndojo.require(\"bar\");\ndojo.addOnLoad(function(){\n    //you can now safely do something with foo and bar\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>For example, to import all symbols into a local block, you might write: </p> <pre><code>with (dojo.require(\"A.B\")) {\n    ...\n}</code></pre> <p>And to import just the leaf symbol to a local variable: </p> <pre><code>var B = dojo.require(\"A.B\");\n...</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_requireAfterIf\">\n<span class=\"functionIcon\">requireAfterIf</span><span class=\"parameters\">(condition,moduleName,omitModuleCheck)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/loader\" class=\"jsdoc-link\">dojo/_base/loader</a> </p> <p>If the condition is true then call <code>dojo.require()</code> for the specified resource </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">condition</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">moduleName</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">omitModuleCheck</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>dojo.requireIf(dojo.isBrowser, \"my.special.Module\");</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_requireIf\">\n<span class=\"functionIcon\">requireIf</span><span class=\"parameters\">(condition,moduleName,omitModuleCheck)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/loader\" class=\"jsdoc-link\">dojo/_base/loader</a> </p> <p>If the condition is true then call <code>dojo.require()</code> for the specified resource </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">condition</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">moduleName</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">omitModuleCheck</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>dojo.requireIf(dojo.isBrowser, \"my.special.Module\");</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_requireLocalization\">\n<span class=\"functionIcon\">requireLocalization</span><span class=\"parameters\">(moduleName,bundleName,locale)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/loader\" class=\"jsdoc-link\">dojo/_base/loader</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">moduleName</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">bundleName</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">locale</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_safeMixin\">\n<span class=\"functionIcon\">safeMixin</span><span class=\"parameters\">(target,source)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/declare\" class=\"jsdoc-link\">dojo/_base/declare</a> </p> <p>Mix in properties skipping a constructor and decorating functions like it is done by declare().</p>  <p>This function is used to mix in properties like lang.mixin does, but it skips a constructor property and decorates functions like declare() does. </p> <p>It is meant to be used with classes and objects produced with declare. Functions mixed in with dojo.safeMixin can use this.inherited() like normal methods. </p> <p>This function is used to implement extend() method of a constructor produced with declare(). </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">target</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>Target object to accept new properties.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">source</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>Source object for new properties.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Object</span></p> <p>Target object to accept new properties.</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>var A = declare(null, {\n    m1: function(){\n        console.log(\"A.m1\");\n    },\n    m2: function(){\n        console.log(\"A.m2\");\n    }\n});\nvar B = declare(A, {\n    m1: function(){\n        this.inherited(arguments);\n        console.log(\"B.m1\");\n    }\n});\nB.extend({\n    m2: function(){\n        this.inherited(arguments);\n        console.log(\"B.m2\");\n    }\n});\nvar x = new B();\ndojo.safeMixin(x, {\n    m1: function(){\n        this.inherited(arguments);\n        console.log(\"X.m1\");\n    },\n    m2: function(){\n        this.inherited(arguments);\n        console.log(\"X.m2\");\n    }\n});\nx.m2();\n// prints:\n// A.m1\n// B.m1\n// X.m1</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_setAttr\">\n<span class=\"functionIcon\">setAttr</span><span class=\"parameters\">(node,name,value)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom-attr\" class=\"jsdoc-link\">dojo/dom-attr</a> </p> <p>Sets an attribute on an HTML element.</p>  <p>Handles normalized setting of attributes on DOM Nodes. </p> <p>When passing functions as values, note that they will not be directly assigned to slots on the node, but rather the default behavior will be removed and the new behavior will be added using <code>dojo.connect()</code>, meaning that event handler properties will be normalized and that some caveats with regards to non-standard behaviors for onsubmit apply. Namely that you should cancel form submission using <code>dojo.stopEvent()</code> on the passed event object instead of returning a boolean value from the handler itself.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode | String</td> <td class=\"jsdoc-param-description\">\n<p>id or reference to the element to set the attribute on</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">name</td> <td class=\"jsdoc-param-type\">String | Object</td> <td class=\"jsdoc-param-description\">\n<p>the name of the attribute to set, or a hash of key-value pairs to set.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">value</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>the value to set for the attribute, if the name is a string.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | undefined</span></p> <p>the DOM node </p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>// use attr() to set the tab index\nrequire([\"dojo/dom-attr\"], function(domAttr){\n    domAttr.set(\"nodeId\", \"tabIndex\", 3);\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>Set multiple values at once, including event handlers: </p> <pre><code>require([\"dojo/dom-attr\"],\nfunction(domAttr){\n    domAttr.set(\"formId\", {\n        \"foo\": \"bar\",\n        \"tabIndex\": -1,\n        \"method\": \"POST\"\n    }\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_setContentSize\">\n<span class=\"functionIcon\">setContentSize</span><span class=\"parameters\">(node,box,computedStyle)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom-geometry\" class=\"jsdoc-link\">dojo/dom-geometry</a> </p> <p>Sets the size of the node's contents, irrespective of margins, padding, or borders.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">box</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>hash with optional \"w\", and \"h\" properties for \"width\", and \"height\" respectively. All specified properties should have numeric values in whole pixels.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">computedStyle</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>This parameter accepts computed styles object. If this parameter is omitted, the functions will call dojo/dom-style.getComputedStyle to get one. It is a better way, calling dojo/dom-style.getComputedStyle once, and then pass the reference to this computedStyle parameter. Wherever possible, reuse the returned object of dojo/dom-style.getComputedStyle().</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_setContext\">\n<span class=\"functionIcon\">setContext</span><span class=\"parameters\">(globalObject,globalDocument)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/window\" class=\"jsdoc-link\">dojo/_base/window</a> </p> <p>changes the behavior of many core Dojo functions that deal with namespace and DOM lookup, changing them to work in a new global context (e.g., an iframe). The varibles dojo.global and dojo.doc are modified as a result of calling this function and the result of <code>dojo.body()</code> likewise differs.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">globalObject</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">globalDocument</td> <td class=\"jsdoc-param-type\">DocumentElement</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_setMarginBox\">\n<span class=\"functionIcon\">setMarginBox</span><span class=\"parameters\">(node,box,computedStyle)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom-geometry\" class=\"jsdoc-link\">dojo/dom-geometry</a> </p> <p>sets the size of the node's margin box and placement (left/top), irrespective of box model. Think of it as a passthrough to setBox that handles box-model vagaries for you.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">box</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>hash with optional \"l\", \"t\", \"w\", and \"h\" properties for \"left\", \"right\", \"width\", and \"height\" respectively. All specified properties should have numeric values in whole pixels.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">computedStyle</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>This parameter accepts computed styles object. If this parameter is omitted, the functions will call dojo/dom-style.getComputedStyle to get one. It is a better way, calling dojo/dom-style.getComputedStyle once, and then pass the reference to this computedStyle parameter. Wherever possible, reuse the returned object of dojo/dom-style.getComputedStyle().</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_setProp\">\n<span class=\"functionIcon\">setProp</span><span class=\"parameters\">(node,name,value)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom-prop\" class=\"jsdoc-link\">dojo/dom-prop</a> </p> <p>Sets a property on an HTML element.</p>  <p>Handles normalized setting of properties on DOM nodes. </p> <p>When passing functions as values, note that they will not be directly assigned to slots on the node, but rather the default behavior will be removed and the new behavior will be added using <code>dojo.connect()</code>, meaning that event handler properties will be normalized and that some caveats with regards to non-standard behaviors for onsubmit apply. Namely that you should cancel form submission using <code>dojo.stopEvent()</code> on the passed event object instead of returning a boolean value from the handler itself.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode | String</td> <td class=\"jsdoc-param-description\">\n<p>id or reference to the element to set the property on</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">name</td> <td class=\"jsdoc-param-type\">String | Object</td> <td class=\"jsdoc-param-description\">\n<p>the name of the property to set, or a hash object to set multiple properties at once.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">value</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>The value to set for the property</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | undefined</span></p> <p>the DOM node </p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>// use prop() to set the tab index\nrequire([\"dojo/dom-prop\"], function(domProp){\n    domProp.set(\"nodeId\", \"tabIndex\", 3);\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>Set multiple values at once, including event handlers: </p> <pre><code>require([\"dojo/dom-prop\"], function(domProp){\n    domProp.set(\"formId\", {\n        \"foo\": \"bar\",\n        \"tabIndex\": -1,\n        \"method\": \"POST\",\n    });\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_setSelectable\">\n<span class=\"functionIcon\">setSelectable</span><span class=\"parameters\">(node,selectable)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom\" class=\"jsdoc-link\">dojo/dom</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">selectable</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_setStyle\">\n<span class=\"functionIcon\">setStyle</span><span class=\"parameters\">(node,name,value)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom-style\" class=\"jsdoc-link\">dojo/dom-style</a> </p> <p>Sets styles on a node.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode | String</td> <td class=\"jsdoc-param-description\">\n<p>id or reference to node to set style for</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">name</td> <td class=\"jsdoc-param-type\">String | Object</td> <td class=\"jsdoc-param-description\">\n<p>the style property to set in DOM-accessor format (\"borderWidth\", not \"border-width\") or an object with key/value pairs suitable for setting each property.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">value</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>If passed, sets value on the node for style, handling cross-browser concerns. When setting a pixel value, be sure to include \"px\" in the value. For instance, top: \"200px\". Otherwise, in some cases, some browsers will not apply the style. </p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">String | undefined</span></p> <p>If passed, sets value on the node for style, handling cross-browser concerns. When setting a pixel value, be sure to include \"px\" in the value. For instance, top: \"200px\". Otherwise, in some cases, some browsers will not apply the style. </p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Passing a node, a style property, and a value changes the current display of the node and returns the new computed value </p> <pre><code>require([\"dojo/dom-style\"], function(domStyle){\n    domStyle.set(\"thinger\", \"opacity\", 0.5); // == 0.5\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>Passing a node, an object-style style property sets each of the values in turn and returns the computed style object of the node: </p> <pre><code>require([\"dojo/dom-style\"], function(domStyle){\n    domStyle.set(\"thinger\", {\n        \"opacity\": 0.5,\n        \"border\": \"3px solid black\",\n        \"height\": \"300px\"\n    });\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<p>When the CSS style property is hyphenated, the JavaScript property is camelCased. font-size becomes fontSize, and so on. </p> <pre><code>require([\"dojo/dom-style\", \"dojo/dom\"], function(domStyle, dom){\n    domStyle.set(\"thinger\",{\n        fontSize:\"14pt\",\n        letterSpacing:\"1.2em\"\n    });\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 4</h3>\n<p>dojo/NodeList implements .style() using the same syntax, omitting the \"node\" parameter, calling dojo/dom-style.get() on every element of the list. See: <code>dojo/query</code> and <code>dojo/NodeList</code> </p> <pre><code>require([\"dojo/dom-style\", \"dojo/query\", \"dojo/NodeList-dom\"],\nfunction(domStyle, query){\n    query(\".someClassName\").style(\"visibility\",\"hidden\");\n    // or\n    query(\"#baz &gt; div\").style({\n        opacity:0.75,\n        fontSize:\"13pt\"\n    });\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_some\">\n<span class=\"functionIcon\">some</span><span class=\"parameters\">(arr,callback,thisObject)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/array\" class=\"jsdoc-link\">dojo/_base/array</a> </p> <p>Determines whether or not any item in arr satisfies the condition implemented by callback.</p>  <p>This function corresponds to the JavaScript 1.6 Array.some() method, with one difference: when run over sparse arrays, this implementation passes the \"holes\" in the sparse array to the callback function with a value of undefined. JavaScript 1.6's some skips the holes in the sparse array. For more details, see: <a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/some\">https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/some</a></p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">arr</td> <td class=\"jsdoc-param-type\">Array | String</td> <td class=\"jsdoc-param-description\">\n<p>the array to iterate over. If a string, operates on individual characters.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">callback</td> <td class=\"jsdoc-param-type\">Function | String</td> <td class=\"jsdoc-param-description\">\n<p>a function is invoked with three arguments: item, index, and array and returns true if the condition is met.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">thisObject</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>may be used to scope the call to callback</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Boolean</span></p> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>// is true\narray.some([1, 2, 3, 4], function(item){ return item&gt;1; });</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<pre><code>// is false\narray.some([1, 2, 3, 4], function(item){ return item&lt;1; });</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_Stateful\">\n<span class=\"functionIcon\">Stateful</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"stateful\" class=\"jsdoc-link\">dojo/Stateful</a> </p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_stopEvent\">\n<span class=\"functionIcon\">stopEvent</span><span class=\"parameters\">(evt)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/event\" class=\"jsdoc-link\">dojo/_base/event</a> </p> <p>prevents propagation and clobbers the default action of the passed event</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">evt</td> <td class=\"jsdoc-param-type\">Event</td> <td class=\"jsdoc-param-description\">\n<p>The event object. If omitted, window.event is used on IE.</p> </td> </tr> </table>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_style\">\n<span class=\"functionIcon\">style</span><span class=\"parameters\">(node,name,value)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/html\" class=\"jsdoc-link\">dojo/_base/html</a> </p> <p>Accesses styles on a node. If 2 arguments are passed, acts as a getter. If 3 arguments are passed, acts as a setter.</p>  <p>Getting the style value uses the computed style for the node, so the value will be a calculated value, not just the immediate node.style value. Also when getting values, use specific style names, like \"borderBottomWidth\" instead of \"border\" since compound values like \"border\" are not necessarily reflected as expected. If you want to get node dimensions, use <code>dojo.marginBox()</code>, <code>dojo.contentBox()</code> or <code>dojo.position()</code>.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode | String</td> <td class=\"jsdoc-param-description\">\n<p>id or reference to node to get/set style for</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">name</td> <td class=\"jsdoc-param-type\">String | Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>the style property to set in DOM-accessor format (\"borderWidth\", not \"border-width\") or an object with key/value pairs suitable for setting each property.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">value</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>If passed, sets value on the node for style, handling cross-browser concerns. When setting a pixel value, be sure to include \"px\" in the value. For instance, top: \"200px\". Otherwise, in some cases, some browsers will not apply the style.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | undefined</span></p> <p>when used as a getter, return the computed style of the node if passing in an ID or node, or return the normalized, computed value for the property when passing in a node and a style property</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Passing only an ID or node returns the computed style object of the node: </p> <pre><code>dojo.style(\"thinger\");</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>Passing a node and a style property returns the current normalized, computed value for that property: </p> <pre><code>dojo.style(\"thinger\", \"opacity\"); // 1 by default</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<p>Passing a node, a style property, and a value changes the current display of the node and returns the new computed value </p> <pre><code>dojo.style(\"thinger\", \"opacity\", 0.5); // == 0.5</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 4</h3>\n<p>Passing a node, an object-style style property sets each of the values in turn and returns the computed style object of the node: </p> <pre><code>dojo.style(\"thinger\", {\n    \"opacity\": 0.5,\n    \"border\": \"3px solid black\",\n    \"height\": \"300px\"\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 5</h3>\n<p>When the CSS style property is hyphenated, the JavaScript property is camelCased. font-size becomes fontSize, and so on. </p> <pre><code>dojo.style(\"thinger\",{\n    fontSize:\"14pt\",\n    letterSpacing:\"1.2em\"\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 6</h3>\n<p>dojo/NodeList implements .style() using the same syntax, omitting the \"node\" parameter, calling dojo.style() on every element of the list. See: <code>dojo/query</code> and <code>dojo/NodeList</code> </p> <pre><code>dojo.query(\".someClassName\").style(\"visibility\",\"hidden\");\n// or\ndojo.query(\"#baz &gt; div\").style({\n    opacity:0.75,\n    fontSize:\"13pt\"\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_toDom\">\n<span class=\"functionIcon\">toDom</span><span class=\"parameters\">(frag,doc)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom-construct\" class=\"jsdoc-link\">dojo/dom-construct</a> </p> <p>instantiates an HTML fragment returning the corresponding DOM.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">frag</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\">\n<p>the HTML fragment</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">doc</td> <td class=\"jsdoc-param-type\">DocumentNode</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>optional document to use when creating DOM nodes, defaults to dojo/_base/window.doc if not specified.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | undefined</span></p> <p>Document fragment, unless it's a single node in which case it returns the node itself</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>Create a table row: </p> <pre><code>require([\"dojo/dom-construct\"], function(domConstruct){\n    var tr = domConstruct.toDom(\"&lt;tr&gt;&lt;td&gt;First!&lt;/td&gt;&lt;/tr&gt;\");\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_toggleClass\">\n<span class=\"functionIcon\">toggleClass</span><span class=\"parameters\">(node,classStr,condition)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom-class\" class=\"jsdoc-link\">dojo/dom-class</a> </p> <p>Adds a class to node if not present, or removes if present. Pass a boolean condition if you want to explicitly add or remove. Returns the condition that was specified directly or indirectly. </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">String | DOMNode</td> <td class=\"jsdoc-param-description\">\n<p>String ID or DomNode reference to toggle a class string </p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">classStr</td> <td class=\"jsdoc-param-type\">String | Array</td> <td class=\"jsdoc-param-description\">\n<p>A String class name to toggle, or several space-separated class names, or an array of class names. </p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">condition</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>If passed, true means to add the class, false means to remove. Otherwise dojo.hasClass(node, classStr) is used to detect the class presence. </p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Boolean</span></p> <p>If passed, true means to add the class, false means to remove. Otherwise dojo.hasClass(node, classStr) is used to detect the class presence. </p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>require([\"dojo/dom-class\"], function(domClass){\n    domClass.toggle(\"someNode\", \"hovered\");\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>Forcefully add a class </p> <pre><code>require([\"dojo/dom-class\"], function(domClass){\n    domClass.toggle(\"someNode\", \"hovered\", true);\n});</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 3</h3>\n<p>Available in <code>dojo/NodeList</code> for multiple toggles </p> <pre><code>require([\"dojo/query\"], function(query){\n    query(\".toggleMe\").toggleClass(\"toggleMe\");\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_toJson\">\n<span class=\"functionIcon\">toJson</span><span class=\"parameters\">(it,prettyPrint)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/json\" class=\"jsdoc-link\">dojo/_base/json</a> </p> <p>Returns a <a href=\"http://json.org\">JSON</a> serialization of an object.</p>  <p>Returns a <a href=\"http://json.org\">JSON</a> serialization of an object. Note that this doesn't check for infinite recursion, so don't do that! It is recommend that you use <a class=\"jsdoc-link\" href=\"json\">dojo/json</a>'s stringify function for an lighter and faster implementation that matches the native JSON API and uses the native JSON serializer when available.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">it</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>an object to be serialized. Objects may define their own serialization via a special \"<strong>json</strong>\" or \"json\" function property. If a specialized serializer has been defined, it will be used as a fallback. Note that in 1.6, toJson would serialize undefined, but this no longer supported since it is not supported by native JSON serializer.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">prettyPrint</td> <td class=\"jsdoc-param-type\">Boolean</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>if true, we indent objects and arrays to make the output prettier. The variable <code>dojo.toJsonIndentStr</code> is used as the indent string -- to use something other than the default (tab), change that variable before calling dojo.toJson(). Note that if native JSON support is available, it will be used for serialization, and native implementations vary on the exact spacing used in pretty printing.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">any | undefined</span></p> <p>A JSON string serialization of the passed-in object.</p>  <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<p>simple serialization of a trivial object </p> <pre><code>var jsonStr = dojo.toJson({ howdy: \"stranger!\", isStrange: true });\ndoh.is('{\"howdy\":\"stranger!\",\"isStrange\":true}', jsonStr);</code></pre> </div> <div class=\"jsdoc-example\"> <h3>Example 2</h3>\n<p>a custom serializer for an objects of a particular class: </p> <pre><code>dojo.declare(\"Furby\", null, {\n    furbies: \"are strange\",\n    furbyCount: 10,\n    __json__: function(){\n    },\n});</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_toPixelValue\">\n<span class=\"functionIcon\">toPixelValue</span><span class=\"parameters\">(node,value)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"dom-style\" class=\"jsdoc-link\">dojo/dom-style</a> </p> <p>converts style value to pixels on IE or return a numeric value.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">node</td> <td class=\"jsdoc-param-type\">DOMNode</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">value</td> <td class=\"jsdoc-param-type\">String</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">Number</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_unsubscribe\">\n<span class=\"functionIcon\">unsubscribe</span><span class=\"parameters\">(handle)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/connect\" class=\"jsdoc-link\">dojo/_base/connect</a> </p> <p>Remove a topic listener.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">handle</td> <td class=\"jsdoc-param-type\">Handle</td> <td class=\"jsdoc-param-description\">\n<p>The handle returned from a call to subscribe.</p> </td> </tr> </table> <div class=\"jsdoc-examples\"> <h2>Examples</h2> <div class=\"jsdoc-example\"> <h3>Example 1</h3>\n<pre><code>var alerter = dojo.subscribe(\"alerts\", null, function(caption, message){ alert(caption + \"\\n\" + message); };\n...\ndojo.unsubscribe(alerter);</code></pre> </div> </div>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_when\">\n<span class=\"functionIcon\">when</span><span class=\"parameters\">(valueOrPromise,callback,errback,progback)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"when\" class=\"jsdoc-link\">dojo/when</a> </p> <p>Transparently applies callbacks to values and/or promises.</p>  <p>Accepts promises but also transparently handles non-promises. If no callbacks are provided returns a promise, regardless of the initial value. Foreign promises are converted. </p> <p>If callbacks are provided and the initial value is not a promise, the callback is executed immediately with no error handling. Returns a promise if the initial value is a promise, or the result of the callback otherwise.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">valueOrPromise</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\">\n<p>Either a regular value or an object with a <code>then()</code> method that follows the Promises/A specification.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">callback</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Callback to be invoked when the promise is resolved, or a non-promise is received.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">errback</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Callback to be invoked when the promise is rejected.</p> </td> </tr> <tr> <td class=\"jsdoc-param-name\">progback</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div>\n<p>Callback to be invoked when the promise emits a progress update.</p> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\"><a class=\"jsdoc-link\" href=\"promise/promise\">dojo/promise/Promise</a> | summary: | name:</span></p> <p>Promise, or if a callback is provided, the result of the callback.</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_windowUnloaded\">\n<span class=\"functionIcon\">windowUnloaded</span><span class=\"parameters\">()</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/configfirefoxextension\" class=\"jsdoc-link\">dojo/_base/configFirefoxExtension</a> </p> <p>signal fired by impending window destruction. You may use dojo.addOnWIndowUnload() or dojo.connect() to this method to perform page/application cleanup methods. See dojo.addOnWindowUnload for more info.</p>      <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_withDoc\">\n<span class=\"functionIcon\">withDoc</span><span class=\"parameters\">(documentObject,callback,thisObject,cbArguments)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/window\" class=\"jsdoc-link\">dojo/_base/window</a> </p> <p>Invoke callback with documentObject as dojo/_base/window::doc.</p>  <p>Invoke callback with documentObject as <a class=\"jsdoc-link\" href=\"_base/window\">dojo/_base/window</a>::doc. If provided, callback will be executed in the context of object thisObject When callback() returns or throws an error, the <a class=\"jsdoc-link\" href=\"_base/window\">dojo/_base/window</a>::doc will be restored to its previous state.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">documentObject</td> <td class=\"jsdoc-param-type\">DocumentElement</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">callback</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">thisObject</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> <tr> <td class=\"jsdoc-param-name\">cbArguments</td> <td class=\"jsdoc-param-type\">Array</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_withGlobal\">\n<span class=\"functionIcon\">withGlobal</span><span class=\"parameters\">(globalObject,callback,thisObject,cbArguments)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/window\" class=\"jsdoc-link\">dojo/_base/window</a> </p> <p>Invoke callback with globalObject as dojo.global and globalObject.document as dojo.doc.</p>  <p>Invoke callback with globalObject as dojo.global and globalObject.document as dojo.doc. If provided, globalObject will be executed in the context of object thisObject When callback() returns or throws an error, the dojo.global and dojo.doc will be restored to its previous state.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">globalObject</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">callback</td> <td class=\"jsdoc-param-type\">Function</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">thisObject</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> <tr> <td class=\"jsdoc-param-name\">cbArguments</td> <td class=\"jsdoc-param-type\">Array</td> <td class=\"jsdoc-param-description\"> <div><em>Optional</em></div> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_xhr\">\n<span class=\"functionIcon\">xhr</span><span class=\"parameters\">(method,args)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"http://dojotoolkit.org/api/1.10/dojox/rpc/Client\" class=\"jsdoc-link\">dojox/rpc/Client</a> </p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">method</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> <tr> <td class=\"jsdoc-param-name\">args</td> <td class=\"jsdoc-param-type\">undefined</td> <td class=\"jsdoc-param-description\"> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_xhrDelete\">\n<span class=\"functionIcon\">xhrDelete</span><span class=\"parameters\">(args)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <p>Sends an HTTP DELETE request to the server.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">args</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>An object with the following properties:</p>\n<ul>\n<li>handleAs (String, optional): <p>Acceptable values are: text (default), json, json-comment-optional, json-comment-filtered, javascript, xml. See <code>dojo/_base/xhr.contentHandlers</code></p> </li>\n<li>sync (Boolean, optional): <p>false is default. Indicates whether the request should be a synchronous (blocking) request.</p> </li>\n<li>headers (Object, optional): <p>Additional HTTP headers to send in the request.</p> </li>\n<li>failOk (Boolean, optional): <p>false is default. Indicates whether a request should be allowed to fail (and therefore no console error message in the event of a failure)</p> </li>\n<li>contentType (String|Boolean): <p>\"application/x-www-form-urlencoded\" is default. Set to false to prevent a Content-Type header from being sent, or to a string to send a different Content-Type.</p> </li>\n<li>load: <p>This function will be called on a successful HTTP response code.</p> </li>\n<li>error: <p>This function will be called when the request fails due to a network or server error, the url is invalid, etc. It will also be called if the load or handle callback throws an exception, unless djConfig.debugAtAllCosts is true. This allows deployed applications to continue to run even when a logic error happens in the callback, while making it easier to troubleshoot while in debug mode.</p> </li>\n<li>handle: <p>This function will be called at the end of every request, whether or not an error occurs.</p> </li>\n<li>url (String): <p>URL to server endpoint.</p> </li>\n<li>content (Object, optional): <p>Contains properties with string values. These properties will be serialized as name1=value2 and passed in the request.</p> </li>\n<li>timeout (Integer, optional): <p>Milliseconds to wait for the response. If this time passes, the then error callbacks are called.</p> </li>\n<li>form (DOMNode, optional): <p>DOM node for a form. Used to extract the form values and send to the server.</p> </li>\n<li>preventCache (Boolean, optional): <p>Default is false. If true, then a \"dojo.preventCache\" parameter is sent in the request with a value that changes with each request (timestamp). Useful only with GET-type requests.</p> </li>\n<li>rawBody (String, optional): <p>Sets the raw body for an HTTP request. If this is used, then the content property is ignored. This is mostly useful for HTTP methods that have a body to their requests, like PUT or POST. This property can be used instead of postData and putData for dojo/_base/xhr.rawXhrPost and dojo/_base/xhr.rawXhrPut respectively.</p> </li>\n<li>ioPublish (Boolean, optional): <p>Set this explicitly to false to prevent publishing of topics related to IO operations. Otherwise, if djConfig.ioPublish is set to true, topics will be published via dojo/topic.publish() for different phases of an IO operation. See dojo/main.__IoPublish for a list of topics that are published.</p> </li>\n</ul> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_xhrGet\">\n<span class=\"functionIcon\">xhrGet</span><span class=\"parameters\">(args)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <p>Sends an HTTP GET request to the server.</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">args</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>An object with the following properties:</p>\n<ul>\n<li>handleAs (String, optional): <p>Acceptable values are: text (default), json, json-comment-optional, json-comment-filtered, javascript, xml. See <code>dojo/_base/xhr.contentHandlers</code></p> </li>\n<li>sync (Boolean, optional): <p>false is default. Indicates whether the request should be a synchronous (blocking) request.</p> </li>\n<li>headers (Object, optional): <p>Additional HTTP headers to send in the request.</p> </li>\n<li>failOk (Boolean, optional): <p>false is default. Indicates whether a request should be allowed to fail (and therefore no console error message in the event of a failure)</p> </li>\n<li>contentType (String|Boolean): <p>\"application/x-www-form-urlencoded\" is default. Set to false to prevent a Content-Type header from being sent, or to a string to send a different Content-Type.</p> </li>\n<li>load: <p>This function will be called on a successful HTTP response code.</p> </li>\n<li>error: <p>This function will be called when the request fails due to a network or server error, the url is invalid, etc. It will also be called if the load or handle callback throws an exception, unless djConfig.debugAtAllCosts is true. This allows deployed applications to continue to run even when a logic error happens in the callback, while making it easier to troubleshoot while in debug mode.</p> </li>\n<li>handle: <p>This function will be called at the end of every request, whether or not an error occurs.</p> </li>\n<li>url (String): <p>URL to server endpoint.</p> </li>\n<li>content (Object, optional): <p>Contains properties with string values. These properties will be serialized as name1=value2 and passed in the request.</p> </li>\n<li>timeout (Integer, optional): <p>Milliseconds to wait for the response. If this time passes, the then error callbacks are called.</p> </li>\n<li>form (DOMNode, optional): <p>DOM node for a form. Used to extract the form values and send to the server.</p> </li>\n<li>preventCache (Boolean, optional): <p>Default is false. If true, then a \"dojo.preventCache\" parameter is sent in the request with a value that changes with each request (timestamp). Useful only with GET-type requests.</p> </li>\n<li>rawBody (String, optional): <p>Sets the raw body for an HTTP request. If this is used, then the content property is ignored. This is mostly useful for HTTP methods that have a body to their requests, like PUT or POST. This property can be used instead of postData and putData for dojo/_base/xhr.rawXhrPost and dojo/_base/xhr.rawXhrPut respectively.</p> </li>\n<li>ioPublish (Boolean, optional): <p>Set this explicitly to false to prevent publishing of topics related to IO operations. Otherwise, if djConfig.ioPublish is set to true, topics will be published via dojo/topic.publish() for different phases of an IO operation. See dojo/main.__IoPublish for a list of topics that are published.</p> </li>\n</ul> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_xhrPost\">\n<span class=\"functionIcon\">xhrPost</span><span class=\"parameters\">(args)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <p>Sends an HTTP POST request to the server. In addition to the properties listed for the dojo.__XhrArgs type, the following property is allowed:</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">args</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>An object with the following properties:</p>\n<ul>\n<li>handleAs (String, optional): <p>Acceptable values are: text (default), json, json-comment-optional, json-comment-filtered, javascript, xml. See <code>dojo/_base/xhr.contentHandlers</code></p> </li>\n<li>sync (Boolean, optional): <p>false is default. Indicates whether the request should be a synchronous (blocking) request.</p> </li>\n<li>headers (Object, optional): <p>Additional HTTP headers to send in the request.</p> </li>\n<li>failOk (Boolean, optional): <p>false is default. Indicates whether a request should be allowed to fail (and therefore no console error message in the event of a failure)</p> </li>\n<li>contentType (String|Boolean): <p>\"application/x-www-form-urlencoded\" is default. Set to false to prevent a Content-Type header from being sent, or to a string to send a different Content-Type.</p> </li>\n<li>load: <p>This function will be called on a successful HTTP response code.</p> </li>\n<li>error: <p>This function will be called when the request fails due to a network or server error, the url is invalid, etc. It will also be called if the load or handle callback throws an exception, unless djConfig.debugAtAllCosts is true. This allows deployed applications to continue to run even when a logic error happens in the callback, while making it easier to troubleshoot while in debug mode.</p> </li>\n<li>handle: <p>This function will be called at the end of every request, whether or not an error occurs.</p> </li>\n<li>url (String): <p>URL to server endpoint.</p> </li>\n<li>content (Object, optional): <p>Contains properties with string values. These properties will be serialized as name1=value2 and passed in the request.</p> </li>\n<li>timeout (Integer, optional): <p>Milliseconds to wait for the response. If this time passes, the then error callbacks are called.</p> </li>\n<li>form (DOMNode, optional): <p>DOM node for a form. Used to extract the form values and send to the server.</p> </li>\n<li>preventCache (Boolean, optional): <p>Default is false. If true, then a \"dojo.preventCache\" parameter is sent in the request with a value that changes with each request (timestamp). Useful only with GET-type requests.</p> </li>\n<li>rawBody (String, optional): <p>Sets the raw body for an HTTP request. If this is used, then the content property is ignored. This is mostly useful for HTTP methods that have a body to their requests, like PUT or POST. This property can be used instead of postData and putData for dojo/_base/xhr.rawXhrPost and dojo/_base/xhr.rawXhrPut respectively.</p> </li>\n<li>ioPublish (Boolean, optional): <p>Set this explicitly to false to prevent publishing of topics related to IO operations. Otherwise, if djConfig.ioPublish is set to true, topics will be published via dojo/topic.publish() for different phases of an IO operation. See dojo/main.__IoPublish for a list of topics that are published.</p> </li>\n</ul> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p>     <h3 class=\"jsdoc-title\" id=\"1_10dojo_main_xhrPut\">\n<span class=\"functionIcon\">xhrPut</span><span class=\"parameters\">(args)</span> </h3> <p class=\"jsdoc-inheritance\">Defined by <a href=\"_base/xhr\" class=\"jsdoc-link\">dojo/_base/xhr</a> </p> <p>Sends an HTTP PUT request to the server. In addition to the properties listed for the dojo.__XhrArgs type, the following property is allowed:</p>  <table class=\"jsdoc-parameters\"> <tr> <th>Parameter</th> <th>Type</th> <th>Description</th> </tr> <tr> <td class=\"jsdoc-param-name\">args</td> <td class=\"jsdoc-param-type\">Object</td> <td class=\"jsdoc-param-description\">\n<p>An object with the following properties:</p>\n<ul>\n<li>handleAs (String, optional): <p>Acceptable values are: text (default), json, json-comment-optional, json-comment-filtered, javascript, xml. See <code>dojo/_base/xhr.contentHandlers</code></p> </li>\n<li>sync (Boolean, optional): <p>false is default. Indicates whether the request should be a synchronous (blocking) request.</p> </li>\n<li>headers (Object, optional): <p>Additional HTTP headers to send in the request.</p> </li>\n<li>failOk (Boolean, optional): <p>false is default. Indicates whether a request should be allowed to fail (and therefore no console error message in the event of a failure)</p> </li>\n<li>contentType (String|Boolean): <p>\"application/x-www-form-urlencoded\" is default. Set to false to prevent a Content-Type header from being sent, or to a string to send a different Content-Type.</p> </li>\n<li>load: <p>This function will be called on a successful HTTP response code.</p> </li>\n<li>error: <p>This function will be called when the request fails due to a network or server error, the url is invalid, etc. It will also be called if the load or handle callback throws an exception, unless djConfig.debugAtAllCosts is true. This allows deployed applications to continue to run even when a logic error happens in the callback, while making it easier to troubleshoot while in debug mode.</p> </li>\n<li>handle: <p>This function will be called at the end of every request, whether or not an error occurs.</p> </li>\n<li>url (String): <p>URL to server endpoint.</p> </li>\n<li>content (Object, optional): <p>Contains properties with string values. These properties will be serialized as name1=value2 and passed in the request.</p> </li>\n<li>timeout (Integer, optional): <p>Milliseconds to wait for the response. If this time passes, the then error callbacks are called.</p> </li>\n<li>form (DOMNode, optional): <p>DOM node for a form. Used to extract the form values and send to the server.</p> </li>\n<li>preventCache (Boolean, optional): <p>Default is false. If true, then a \"dojo.preventCache\" parameter is sent in the request with a value that changes with each request (timestamp). Useful only with GET-type requests.</p> </li>\n<li>rawBody (String, optional): <p>Sets the raw body for an HTTP request. If this is used, then the content property is ignored. This is mostly useful for HTTP methods that have a body to their requests, like PUT or POST. This property can be used instead of postData and putData for dojo/_base/xhr.rawXhrPost and dojo/_base/xhr.rawXhrPut respectively.</p> </li>\n<li>ioPublish (Boolean, optional): <p>Set this explicitly to false to prevent publishing of topics related to IO operations. Otherwise, if djConfig.ioPublish is set to true, topics will be published via dojo/topic.publish() for different phases of an IO operation. See dojo/main.__IoPublish for a list of topics that are published.</p> </li>\n</ul> </td> </tr> </table> <p class=\"returnsInfo\"><strong class=\"returns\">Returns: </strong><span class=\"jsdoc-return-type\">undefined</span></p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2005&ndash;2015 The Dojo Foundation<br>Licensed under the AFL 2.1 and BSD 3-Clause licenses.<br>\n    <a href=\"http://dojotoolkit.org/api/1.10/dojo/main.html\" class=\"_attribution-link\">http://dojotoolkit.org/api/1.10/dojo/main.html</a>\n  </p>\n</div>\n"}